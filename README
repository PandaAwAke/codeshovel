## Create baseline from IntelliJ

Either:
* Select whole method > Right-click > Show history for selection
* Right-click on method > Show history for method (only Java)

Then in the history view: Select all (cmd+a) > Right-click > Copy revision number

The clipboard will contain the revision numbers separated by spaces.

I wrote a command that makes it content as we require it for our JSON object (right in the clipboard):
pbpaste | tr " " "\n" | sed -n '1!G;h;$p' | sed -E "s/^(.*)$/\"\1\",/" | pbcopy

Note that pbpaste and pbcopy are Mac-specific.

To use the command on linux, you can alias the pb commands: `alias pbcopy="xclip -selection c"` and
`alias pbpaste="xclip -selection clipboard -o"`


### Docker Mining Container
To help ensure consistent executions (i.e. fixed versions of git, etc.) and to make it easy to execute mining on different
machines, I containerized the MiningTestJava task.

From the project root:

```
docker build -t codeshovel .
docker run --env REPO_NAME= \
           --env START_COMMIT= \
           --volume "${HOME}/cs-output:/var/opt/codeshovel/output" \
           --volume "${HOME}/cs-repos:/repos" \
           codeshovel
```
You can optionally specify `--env SERACH_PATHS` and `--env FILE_EXT` (see Dockerfile for description).

Note: you may want to name the container (by specifying `--name NAME` in the run command) to make it easier to identify
in case you need to get the log (`docker logs NAME`) or to see what env vars it was called with (`docker inspect NAME`).
You can also run the container in the background by specifying (`--detach` in the run command) and then follow the
progress with `docker logs --follow NAME`.

