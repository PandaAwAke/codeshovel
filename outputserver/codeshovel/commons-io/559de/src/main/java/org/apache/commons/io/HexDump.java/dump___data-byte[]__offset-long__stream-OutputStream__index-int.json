{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "HexDump.java",
  "functionName": "dump",
  "functionId": "dump___data-byte[]__offset-long__stream-OutputStream__index-int",
  "sourceFilePath": "src/main/java/org/apache/commons/io/HexDump.java",
  "functionStartLine": 71,
  "functionEndLine": 116,
  "changeHistory": [
    "493a38aaeacec2a9365e055ffbd7e14bd14b24af",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "1170279dc85c2bbdea594b053c56b379a72a2104",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "6d6a73a689ce734d094f71723752cde23a1d9259",
    "4576857e33fc0aa9682ba77a6e464213ec15b829",
    "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e",
    "4ad59c5ac249ce6e011ac6eb3d0d026274761f43"
  ],
  "changeHistoryShort": {
    "493a38aaeacec2a9365e055ffbd7e14bd14b24af": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "1170279dc85c2bbdea594b053c56b379a72a2104": "Ybodychange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "6d6a73a689ce734d094f71723752cde23a1d9259": "Ybodychange",
    "4576857e33fc0aa9682ba77a6e464213ec15b829": "Ybodychange",
    "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e": "Yparametermetachange",
    "4ad59c5ac249ce6e011ac6eb3d0d026274761f43": "Yintroduced"
  },
  "changeHistoryDetails": {
    "493a38aaeacec2a9365e055ffbd7e14bd14b24af": {
      "type": "Ybodychange",
      "commitMessage": "Make explicit where the default platform encoding is being used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468883 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1366203760000,
      "commitName": "493a38aaeacec2a9365e055ffbd7e14bd14b24af",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1354308699000,
      "commitNameOld": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 137.67,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,46 @@\n     public static void dump(final byte[] data, final long offset,\n                             final OutputStream stream, final int index)\n             throws IOException, ArrayIndexOutOfBoundsException,\n             IllegalArgumentException {\n         \n         if (index \u003c 0 || index \u003e\u003d data.length) {\n             throw new ArrayIndexOutOfBoundsException(\n                     \"illegal index: \" + index + \" into array of length \"\n                     + data.length);\n         }\n         if (stream \u003d\u003d null) {\n             throw new IllegalArgumentException(\"cannot write to nullstream\");\n         }\n         long display_offset \u003d offset + index;\n         final StringBuilder buffer \u003d new StringBuilder(74);\n \n         for (int j \u003d index; j \u003c data.length; j +\u003d 16) {\n             int chars_read \u003d data.length - j;\n \n             if (chars_read \u003e 16) {\n                 chars_read \u003d 16;\n             }\n             dump(buffer, display_offset).append(\u0027 \u0027);\n             for (int k \u003d 0; k \u003c 16; k++) {\n                 if (k \u003c chars_read) {\n                     dump(buffer, data[k + j]);\n                 } else {\n                     buffer.append(\"  \");\n                 }\n                 buffer.append(\u0027 \u0027);\n             }\n             for (int k \u003d 0; k \u003c chars_read; k++) {\n                 if (data[k + j] \u003e\u003d \u0027 \u0027 \u0026\u0026 data[k + j] \u003c 127) {\n                     buffer.append((char) data[k + j]);\n                 } else {\n                     buffer.append(\u0027.\u0027);\n                 }\n             }\n             buffer.append(EOL);\n-            stream.write(buffer.toString().getBytes());\n+            // make explicit the dependency on the default encoding\n+            stream.write(buffer.toString().getBytes(Charset.defaultCharset()));\n             stream.flush();\n             buffer.setLength(0);\n             display_offset +\u003d chars_read;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1332207332000,
          "commitNameOld": "1170279dc85c2bbdea594b053c56b379a72a2104",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 255.8,
          "commitsBetweenForRepo": 191,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,45 +1,45 @@\n-    public static void dump(byte[] data, long offset,\n-                            OutputStream stream, int index)\n+    public static void dump(final byte[] data, final long offset,\n+                            final OutputStream stream, final int index)\n             throws IOException, ArrayIndexOutOfBoundsException,\n             IllegalArgumentException {\n         \n         if (index \u003c 0 || index \u003e\u003d data.length) {\n             throw new ArrayIndexOutOfBoundsException(\n                     \"illegal index: \" + index + \" into array of length \"\n                     + data.length);\n         }\n         if (stream \u003d\u003d null) {\n             throw new IllegalArgumentException(\"cannot write to nullstream\");\n         }\n         long display_offset \u003d offset + index;\n-        StringBuilder buffer \u003d new StringBuilder(74);\n+        final StringBuilder buffer \u003d new StringBuilder(74);\n \n         for (int j \u003d index; j \u003c data.length; j +\u003d 16) {\n             int chars_read \u003d data.length - j;\n \n             if (chars_read \u003e 16) {\n                 chars_read \u003d 16;\n             }\n             dump(buffer, display_offset).append(\u0027 \u0027);\n             for (int k \u003d 0; k \u003c 16; k++) {\n                 if (k \u003c chars_read) {\n                     dump(buffer, data[k + j]);\n                 } else {\n                     buffer.append(\"  \");\n                 }\n                 buffer.append(\u0027 \u0027);\n             }\n             for (int k \u003d 0; k \u003c chars_read; k++) {\n                 if (data[k + j] \u003e\u003d \u0027 \u0027 \u0026\u0026 data[k + j] \u003c 127) {\n                     buffer.append((char) data[k + j]);\n                 } else {\n                     buffer.append(\u0027.\u0027);\n                 }\n             }\n             buffer.append(EOL);\n             stream.write(buffer.toString().getBytes());\n             stream.flush();\n             buffer.setLength(0);\n             display_offset +\u003d chars_read;\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1332207332000,
          "commitNameOld": "1170279dc85c2bbdea594b053c56b379a72a2104",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 255.8,
          "commitsBetweenForRepo": 191,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,45 +1,45 @@\n-    public static void dump(byte[] data, long offset,\n-                            OutputStream stream, int index)\n+    public static void dump(final byte[] data, final long offset,\n+                            final OutputStream stream, final int index)\n             throws IOException, ArrayIndexOutOfBoundsException,\n             IllegalArgumentException {\n         \n         if (index \u003c 0 || index \u003e\u003d data.length) {\n             throw new ArrayIndexOutOfBoundsException(\n                     \"illegal index: \" + index + \" into array of length \"\n                     + data.length);\n         }\n         if (stream \u003d\u003d null) {\n             throw new IllegalArgumentException(\"cannot write to nullstream\");\n         }\n         long display_offset \u003d offset + index;\n-        StringBuilder buffer \u003d new StringBuilder(74);\n+        final StringBuilder buffer \u003d new StringBuilder(74);\n \n         for (int j \u003d index; j \u003c data.length; j +\u003d 16) {\n             int chars_read \u003d data.length - j;\n \n             if (chars_read \u003e 16) {\n                 chars_read \u003d 16;\n             }\n             dump(buffer, display_offset).append(\u0027 \u0027);\n             for (int k \u003d 0; k \u003c 16; k++) {\n                 if (k \u003c chars_read) {\n                     dump(buffer, data[k + j]);\n                 } else {\n                     buffer.append(\"  \");\n                 }\n                 buffer.append(\u0027 \u0027);\n             }\n             for (int k \u003d 0; k \u003c chars_read; k++) {\n                 if (data[k + j] \u003e\u003d \u0027 \u0027 \u0026\u0026 data[k + j] \u003c 127) {\n                     buffer.append((char) data[k + j]);\n                 } else {\n                     buffer.append(\u0027.\u0027);\n                 }\n             }\n             buffer.append(EOL);\n             stream.write(buffer.toString().getBytes());\n             stream.flush();\n             buffer.setLength(0);\n             display_offset +\u003d chars_read;\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1170279dc85c2bbdea594b053c56b379a72a2104": {
      "type": "Ybodychange",
      "commitMessage": "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332207332000,
      "commitName": "1170279dc85c2bbdea594b053c56b379a72a2104",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1330924596000,
      "commitNameOld": "b37ba99e8f838e0fb7df77bea2fc774d5c8e893f",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 14.85,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public static void dump(byte[] data, long offset,\n                             OutputStream stream, int index)\n             throws IOException, ArrayIndexOutOfBoundsException,\n             IllegalArgumentException {\n         \n-        if ((index \u003c 0) || (index \u003e\u003d data.length)) {\n+        if (index \u003c 0 || index \u003e\u003d data.length) {\n             throw new ArrayIndexOutOfBoundsException(\n                     \"illegal index: \" + index + \" into array of length \"\n                     + data.length);\n         }\n         if (stream \u003d\u003d null) {\n             throw new IllegalArgumentException(\"cannot write to nullstream\");\n         }\n         long display_offset \u003d offset + index;\n         StringBuilder buffer \u003d new StringBuilder(74);\n \n         for (int j \u003d index; j \u003c data.length; j +\u003d 16) {\n             int chars_read \u003d data.length - j;\n \n             if (chars_read \u003e 16) {\n                 chars_read \u003d 16;\n             }\n             dump(buffer, display_offset).append(\u0027 \u0027);\n             for (int k \u003d 0; k \u003c 16; k++) {\n                 if (k \u003c chars_read) {\n                     dump(buffer, data[k + j]);\n                 } else {\n                     buffer.append(\"  \");\n                 }\n                 buffer.append(\u0027 \u0027);\n             }\n             for (int k \u003d 0; k \u003c chars_read; k++) {\n-                if ((data[k + j] \u003e\u003d \u0027 \u0027) \u0026\u0026 (data[k + j] \u003c 127)) {\n+                if (data[k + j] \u003e\u003d \u0027 \u0027 \u0026\u0026 data[k + j] \u003c 127) {\n                     buffer.append((char) data[k + j]);\n                 } else {\n                     buffer.append(\u0027.\u0027);\n                 }\n             }\n             buffer.append(EOL);\n             stream.write(buffer.toString().getBytes());\n             stream.flush();\n             buffer.setLength(0);\n             display_offset +\u003d chars_read;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/HexDump.java",
        "newPath": "src/main/java/org/apache/commons/io/HexDump.java"
      }
    },
    "6d6a73a689ce734d094f71723752cde23a1d9259": {
      "type": "Ybodychange",
      "commitMessage": "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1202325947000,
      "commitName": "6d6a73a689ce734d094f71723752cde23a1d9259",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1195566614000,
      "commitNameOld": "8a8ec3362a591fe4f419bbede7fd62546a3d46a8",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 78.23,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public static void dump(byte[] data, long offset,\n                             OutputStream stream, int index)\n             throws IOException, ArrayIndexOutOfBoundsException,\n             IllegalArgumentException {\n         \n         if ((index \u003c 0) || (index \u003e\u003d data.length)) {\n             throw new ArrayIndexOutOfBoundsException(\n                     \"illegal index: \" + index + \" into array of length \"\n                     + data.length);\n         }\n         if (stream \u003d\u003d null) {\n             throw new IllegalArgumentException(\"cannot write to nullstream\");\n         }\n         long display_offset \u003d offset + index;\n-        StringBuffer buffer \u003d new StringBuffer(74);\n+        StringBuilder buffer \u003d new StringBuilder(74);\n \n         for (int j \u003d index; j \u003c data.length; j +\u003d 16) {\n             int chars_read \u003d data.length - j;\n \n             if (chars_read \u003e 16) {\n                 chars_read \u003d 16;\n             }\n             dump(buffer, display_offset).append(\u0027 \u0027);\n             for (int k \u003d 0; k \u003c 16; k++) {\n                 if (k \u003c chars_read) {\n                     dump(buffer, data[k + j]);\n                 } else {\n                     buffer.append(\"  \");\n                 }\n                 buffer.append(\u0027 \u0027);\n             }\n             for (int k \u003d 0; k \u003c chars_read; k++) {\n                 if ((data[k + j] \u003e\u003d \u0027 \u0027) \u0026\u0026 (data[k + j] \u003c 127)) {\n                     buffer.append((char) data[k + j]);\n                 } else {\n                     buffer.append(\u0027.\u0027);\n                 }\n             }\n             buffer.append(EOL);\n             stream.write(buffer.toString().getBytes());\n             stream.flush();\n             buffer.setLength(0);\n             display_offset +\u003d chars_read;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4576857e33fc0aa9682ba77a6e464213ec15b829": {
      "type": "Ybodychange",
      "commitMessage": "IO-136 HexDump\u0027s use of static StringBuffers isn\u0027t thread-safe\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596642 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1195560811000,
      "commitName": "4576857e33fc0aa9682ba77a6e464213ec15b829",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1156766220000,
      "commitNameOld": "93910e80b41dfbecca566bda13da7601262f3730",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 449.01,
      "commitsBetweenForRepo": 176,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public static void dump(byte[] data, long offset,\n                             OutputStream stream, int index)\n             throws IOException, ArrayIndexOutOfBoundsException,\n             IllegalArgumentException {\n         \n         if ((index \u003c 0) || (index \u003e\u003d data.length)) {\n             throw new ArrayIndexOutOfBoundsException(\n                     \"illegal index: \" + index + \" into array of length \"\n                     + data.length);\n         }\n         if (stream \u003d\u003d null) {\n             throw new IllegalArgumentException(\"cannot write to nullstream\");\n         }\n         long display_offset \u003d offset + index;\n         StringBuffer buffer \u003d new StringBuffer(74);\n \n         for (int j \u003d index; j \u003c data.length; j +\u003d 16) {\n             int chars_read \u003d data.length - j;\n \n             if (chars_read \u003e 16) {\n                 chars_read \u003d 16;\n             }\n-            buffer.append(dump(display_offset)).append(\u0027 \u0027);\n+            dump(buffer, display_offset).append(\u0027 \u0027);\n             for (int k \u003d 0; k \u003c 16; k++) {\n                 if (k \u003c chars_read) {\n-                    buffer.append(dump(data[k + j]));\n+                    dump(buffer, data[k + j]);\n                 } else {\n                     buffer.append(\"  \");\n                 }\n                 buffer.append(\u0027 \u0027);\n             }\n             for (int k \u003d 0; k \u003c chars_read; k++) {\n                 if ((data[k + j] \u003e\u003d \u0027 \u0027) \u0026\u0026 (data[k + j] \u003c 127)) {\n                     buffer.append((char) data[k + j]);\n                 } else {\n                     buffer.append(\u0027.\u0027);\n                 }\n             }\n             buffer.append(EOL);\n             stream.write(buffer.toString().getBytes());\n             stream.flush();\n             buffer.setLength(0);\n             display_offset +\u003d chars_read;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e": {
      "type": "Yparametermetachange",
      "commitMessage": "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1072767169000,
      "commitName": "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": 1066028782000,
      "commitNameOld": "f3454e26015b9880f596bf26e1c25f461763aae5",
      "commitAuthorOld": "Robert Burrell Donkin",
      "daysBetweenCommits": 77.99,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n-    public static void dump(final byte[] data, final long offset,\n-                            final OutputStream stream, final int index)\n+    public static void dump(byte[] data, long offset,\n+                            OutputStream stream, int index)\n             throws IOException, ArrayIndexOutOfBoundsException,\n             IllegalArgumentException {\n         if ((index \u003c 0) || (index \u003e\u003d data.length)) {\n             throw new ArrayIndexOutOfBoundsException(\n                     \"illegal index: \" + index + \" into array of length \"\n                     + data.length);\n         }\n         if (stream \u003d\u003d null) {\n             throw new IllegalArgumentException(\"cannot write to nullstream\");\n         }\n         long display_offset \u003d offset + index;\n         StringBuffer buffer \u003d new StringBuffer(74);\n \n         for (int j \u003d index; j \u003c data.length; j +\u003d 16) {\n             int chars_read \u003d data.length - j;\n \n             if (chars_read \u003e 16) {\n                 chars_read \u003d 16;\n             }\n             buffer.append(dump(display_offset)).append(\u0027 \u0027);\n             for (int k \u003d 0; k \u003c 16; k++) {\n                 if (k \u003c chars_read) {\n                     buffer.append(dump(data[k + j]));\n                 } else {\n                     buffer.append(\"  \");\n                 }\n                 buffer.append(\u0027 \u0027);\n             }\n             for (int k \u003d 0; k \u003c chars_read; k++) {\n                 if ((data[k + j] \u003e\u003d \u0027 \u0027) \u0026\u0026 (data[k + j] \u003c 127)) {\n                     buffer.append((char) data[k + j]);\n                 } else {\n                     buffer.append(\u0027.\u0027);\n                 }\n             }\n             buffer.append(EOL);\n             stream.write(buffer.toString().getBytes());\n             stream.flush();\n             buffer.setLength(0);\n             display_offset +\u003d chars_read;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4ad59c5ac249ce6e011ac6eb3d0d026274761f43": {
      "type": "Yintroduced",
      "commitMessage": "Moved over from the Commons.Utils project..\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140293 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1014358358000,
      "commitName": "4ad59c5ac249ce6e011ac6eb3d0d026274761f43",
      "commitAuthor": "Henri Yandell"
    }
  }
}