{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "CharSequenceInputStream.java",
  "functionName": "skip",
  "functionId": "skip___n-long",
  "sourceFilePath": "src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
  "functionStartLine": 182,
  "functionEndLine": 193,
  "changeHistory": [
    "cbc5a146154ada255d491d6509497d0d57bad336",
    "9c38fde99627d7d8cd7ffe3c7bd704824bab0960",
    "50a7fdcaf8fb9a684a96568ceeb8643b4941c475"
  ],
  "changeHistoryShort": {
    "cbc5a146154ada255d491d6509497d0d57bad336": "Ybodychange",
    "9c38fde99627d7d8cd7ffe3c7bd704824bab0960": "Ybodychange",
    "50a7fdcaf8fb9a684a96568ceeb8643b4941c475": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cbc5a146154ada255d491d6509497d0d57bad336": {
      "type": "Ybodychange",
      "commitMessage": "IO-356 CharSequenceInputStream#reset() behaves incorrectly in case when buffer size is not dividable by data size.\n       Fix code so skip relates to the encoded bytes; reset now re-encodes the data up to the point of the mark\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1366762246000,
      "commitName": "cbc5a146154ada255d491d6509497d0d57bad336",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1366666255000,
      "commitNameOld": "a1f4d43253ac11abe8cf3ed53876dabc885d7b30",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 1.11,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,12 @@\n     public long skip(long n) throws IOException {\n+        /*\n+         * This could be made more efficient by using position to skip within the current buffer.\n+         */\n         long skipped \u003d 0;\n-        while (n \u003e 0 \u0026\u0026 this.cbuf.hasRemaining()) {\n-            this.cbuf.get();\n+        while (n \u003e 0 \u0026\u0026 available() \u003e 0) {\n+            this.read();\n             n--;\n             skipped++;\n         }\n         return skipped;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9c38fde99627d7d8cd7ffe3c7bd704824bab0960": {
      "type": "Ybodychange",
      "commitMessage": "Should use long variable to return a long!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470625 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1366651451000,
      "commitName": "9c38fde99627d7d8cd7ffe3c7bd704824bab0960",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1366581251000,
      "commitNameOld": "750d338864a92521f4daec993af7ef0aba9d609b",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.81,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public long skip(long n) throws IOException {\n-        int skipped \u003d 0;\n+        long skipped \u003d 0;\n         while (n \u003e 0 \u0026\u0026 this.cbuf.hasRemaining()) {\n             this.cbuf.get();\n             n--;\n             skipped++;\n         }\n         return skipped;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "50a7fdcaf8fb9a684a96568ceeb8643b4941c475": {
      "type": "Yintroduced",
      "commitMessage": "IO-297 CharSequenceInputStream to efficiently stream content of a CharSequence\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295643 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1330617632000,
      "commitName": "50a7fdcaf8fb9a684a96568ceeb8643b4941c475",
      "commitAuthor": "Sebastian Bazley"
    }
  }
}