{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "FileUtils.java",
  "functionName": "contentEquals",
  "functionId": "contentEquals___file1-File__file2-File",
  "sourceFilePath": "src/main/java/org/apache/commons/io/FileUtils.java",
  "functionStartLine": 738,
  "functionEndLine": 768,
  "changeHistory": [
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "960ed15a59586ae84b8b515397f72c6fd19da839",
    "b31de97f620c9c16d54c6b1e145f155744536eeb",
    "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e",
    "418d7a0ac343be700fd251d747bcc2d7ac0056d7",
    "3e4ec2a42b3118266deada58dbee39db2a48677b",
    "7748ed36401ea37104ae313be804f81f2526cd6d",
    "8eeb52fc81c4e65c00839cfeef9f1cde8b1cc613",
    "c360a10db25701f682849e5913d150f13a09f3bb"
  ],
  "changeHistoryShort": {
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "960ed15a59586ae84b8b515397f72c6fd19da839": "Ybodychange",
    "b31de97f620c9c16d54c6b1e145f155744536eeb": "Ybodychange",
    "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "418d7a0ac343be700fd251d747bcc2d7ac0056d7": "Ybodychange",
    "3e4ec2a42b3118266deada58dbee39db2a48677b": "Ybodychange",
    "7748ed36401ea37104ae313be804f81f2526cd6d": "Ybodychange",
    "8eeb52fc81c4e65c00839cfeef9f1cde8b1cc613": "Ymovefromfile",
    "c360a10db25701f682849e5913d150f13a09f3bb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0": {
      "type": "Ybodychange",
      "commitMessage": "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1462579617000,
      "commitName": "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1461715185000,
      "commitNameOld": "6c3a1bb78c3e92fded50c1c1e9f4c3e2e6e9dd4c",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 10.01,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,31 @@\n     public static boolean contentEquals(final File file1, final File file2) throws IOException {\n         final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         if (file1.length() !\u003d file2.length()) {\n             // lengths differ, cannot be equal\n             return false;\n         }\n \n         if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n             // same file\n             return true;\n         }\n \n-        InputStream input1 \u003d null;\n-        InputStream input2 \u003d null;\n-        try {\n-            input1 \u003d new FileInputStream(file1);\n-            input2 \u003d new FileInputStream(file2);\n+        try (InputStream input1 \u003d new FileInputStream(file1);\n+             InputStream input2 \u003d new FileInputStream(file2)) {\n             return IOUtils.contentEquals(input1, input2);\n-\n-        } finally {\n-            IOUtils.closeQuietly(input1);\n-            IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1351082444000,
          "commitNameOld": "965f66687351e0abd445925d0497f96e5656ff13",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 37.34,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,38 @@\n-    public static boolean contentEquals(File file1, File file2) throws IOException {\n-        boolean file1Exists \u003d file1.exists();\n+    public static boolean contentEquals(final File file1, final File file2) throws IOException {\n+        final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         if (file1.length() !\u003d file2.length()) {\n             // lengths differ, cannot be equal\n             return false;\n         }\n \n         if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n             // same file\n             return true;\n         }\n \n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try {\n             input1 \u003d new FileInputStream(file1);\n             input2 \u003d new FileInputStream(file2);\n             return IOUtils.contentEquals(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1351082444000,
          "commitNameOld": "965f66687351e0abd445925d0497f96e5656ff13",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 37.34,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,38 @@\n-    public static boolean contentEquals(File file1, File file2) throws IOException {\n-        boolean file1Exists \u003d file1.exists();\n+    public static boolean contentEquals(final File file1, final File file2) throws IOException {\n+        final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         if (file1.length() !\u003d file2.length()) {\n             // lengths differ, cannot be equal\n             return false;\n         }\n \n         if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n             // same file\n             return true;\n         }\n \n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try {\n             input1 \u003d new FileInputStream(file1);\n             input2 \u003d new FileInputStream(file2);\n             return IOUtils.contentEquals(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/FileUtils.java",
        "newPath": "src/main/java/org/apache/commons/io/FileUtils.java"
      }
    },
    "960ed15a59586ae84b8b515397f72c6fd19da839": {
      "type": "Ybodychange",
      "commitMessage": "FileUtils.contentEquals(File,File)\nPerformance improved by adding length and file location checking\nfrom discussion at The Server Side\nhttp://www.theserverside.com/news/thread.tss?thread_id\u003d37035\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@321245 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1129331958000,
      "commitName": "960ed15a59586ae84b8b515397f72c6fd19da839",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1128196349000,
      "commitNameOld": "f113005bc0470d1608fa836f484097278940ff9c",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 13.14,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,39 @@\n     public static boolean contentEquals(File file1, File file2)\n             throws IOException {\n         boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n+        if (file1.length() !\u003d file2.length()) {\n+            // lengths differ, cannot be equal\n+            return false;\n+        }\n+\n+        if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n+            // same file\n+            return true;\n+        }\n+\n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try {\n             input1 \u003d new FileInputStream(file1);\n             input2 \u003d new FileInputStream(file2);\n             return IOUtils.contentEquals(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b31de97f620c9c16d54c6b1e145f155744536eeb": {
      "type": "Ybodychange",
      "commitMessage": "FileUtils.read/write byte array methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140588 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1089879674000,
      "commitName": "b31de97f620c9c16d54c6b1e145f155744536eeb",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1088853645000,
      "commitNameOld": "2d69b93c5c834715422bbcab1748b56972abe1c2",
      "commitAuthorOld": "Jeremias Maerki",
      "daysBetweenCommits": 11.88,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     public static boolean contentEquals(File file1, File file2)\n             throws IOException {\n         boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try {\n-            input1 \u003d new java.io.FileInputStream(file1);\n-            input2 \u003d new java.io.FileInputStream(file2);\n+            input1 \u003d new FileInputStream(file1);\n+            input2 \u003d new FileInputStream(file2);\n             return IOUtils.contentEquals(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1072767169000,
      "commitName": "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1072767169000,
          "commitName": "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": 1072703692000,
          "commitNameOld": "a330996bf5514705e476d491069b1a4a65794023",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.73,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-    public static boolean contentEquals(final File file1, final File file2)\n+    public static boolean contentEquals(File file1, File file2)\n             throws IOException {\n-        final boolean file1Exists \u003d file1.exists();\n+        boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try {\n             input1 \u003d new java.io.FileInputStream(file1);\n             input2 \u003d new java.io.FileInputStream(file2);\n             return IOUtils.contentEquals(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1072767169000,
          "commitName": "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": 1072703692000,
          "commitNameOld": "a330996bf5514705e476d491069b1a4a65794023",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.73,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-    public static boolean contentEquals(final File file1, final File file2)\n+    public static boolean contentEquals(File file1, File file2)\n             throws IOException {\n-        final boolean file1Exists \u003d file1.exists();\n+        boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try {\n             input1 \u003d new java.io.FileInputStream(file1);\n             input2 \u003d new java.io.FileInputStream(file2);\n             return IOUtils.contentEquals(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "418d7a0ac343be700fd251d747bcc2d7ac0056d7": {
      "type": "Ybodychange",
      "commitMessage": "Renamed shutdownXxx methods to closeQuietly(Xxx).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140449 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1072668533000,
      "commitName": "418d7a0ac343be700fd251d747bcc2d7ac0056d7",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": 1072350359000,
      "commitNameOld": "65b3c8a113786f6fb9ab9a387d9631012395fcf0",
      "commitAuthorOld": "Jeremias Maerki",
      "daysBetweenCommits": 3.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     public static boolean contentEquals(final File file1, final File file2)\n             throws IOException {\n         final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try {\n             input1 \u003d new java.io.FileInputStream(file1);\n             input2 \u003d new java.io.FileInputStream(file2);\n             return IOUtils.contentEquals(input1, input2);\n \n         } finally {\n-            IOUtils.shutdownStream(input1);\n-            IOUtils.shutdownStream(input2);\n+            IOUtils.closeQuietly(input1);\n+            IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3e4ec2a42b3118266deada58dbee39db2a48677b": {
      "type": "Ybodychange",
      "commitMessage": "I\u0027ve moved some methods around while cleaning up, so, sorry for the big diff. I moved up the methods I checked through. There\u0027s a marker in the lower half of the file indicating where I progressed. Everything below that marker still has to be sorted out. I consider the stuff above that marker cleaned up and reviewed to a certain degree.\n\nReal changes are:\n- new method: touch(File)\n- some method signatures rewritten to use java.io.File instead of String, because it\u0027s this class\u0027 policy. This might break dependant projects.\n- updated some javadocs\n- Removed getFilesFromExtension (this method wants to do too much). This might break dependant projects.\n- Replacement for getFilesFromExtension, new method(s): listFiles which is implemented using the filefilter package. The CVS filter functionality of getFilesFromExtension can be achieved by using FileFilterUtils.makeCVSAware.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140405 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1069533888000,
      "commitName": "3e4ec2a42b3118266deada58dbee39db2a48677b",
      "commitAuthor": "Jeremias Maerki",
      "commitDateOld": 1066421778000,
      "commitNameOld": "d9224439fc7c437a665ae4b5d9f91e3676b90496",
      "commitAuthorOld": "Matthew Hawthorne",
      "daysBetweenCommits": 36.02,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     public static boolean contentEquals(final File file1, final File file2)\n-        throws IOException {\n+            throws IOException {\n         final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n-            return false;\n+            throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try {\n-            input1 \u003d new FileInputStream(file1);\n-            input2 \u003d new FileInputStream(file2);\n+            input1 \u003d new java.io.FileInputStream(file1);\n+            input2 \u003d new java.io.FileInputStream(file2);\n             return IOUtils.contentEquals(input1, input2);\n \n         } finally {\n             IOUtils.shutdownStream(input1);\n             IOUtils.shutdownStream(input2);\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7748ed36401ea37104ae313be804f81f2526cd6d": {
      "type": "Ybodychange",
      "commitMessage": "IOUtil to IOUtils and EndianUtil to EndianUtils.\nFix references so dependant classes reference *Utils\nSubmitted by: Matthew Hawthorne \u003cmhawthorne@alumni.pitt.edu\u003e\n\nDeprecate IOUtil and EndianUtil.\nFix some of the license headers (more to do)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140365 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1059119486000,
      "commitName": "7748ed36401ea37104ae313be804f81f2526cd6d",
      "commitAuthor": "Jeremias Maerki",
      "commitDateOld": 1027889326000,
      "commitNameOld": "db7b3426781854f492c1ba2427abe660a4c2b58a",
      "commitAuthorOld": "Daniel Rall",
      "daysBetweenCommits": 361.46,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     public static boolean contentEquals( final File file1, final File file2 )\n         throws IOException\n     {\n         final boolean file1Exists \u003d file1.exists();\n         if( file1Exists !\u003d file2.exists() )\n         {\n             return false;\n         }\n \n         if( !file1Exists )\n         {\n             // two not existing files are equal\n             return true;\n         }\n \n         if( file1.isDirectory() || file2.isDirectory() )\n         {\n             // don\u0027t want to compare directory contents\n             return false;\n         }\n \n         InputStream input1 \u003d null;\n         InputStream input2 \u003d null;\n         try\n         {\n             input1 \u003d new FileInputStream( file1 );\n             input2 \u003d new FileInputStream( file2 );\n-            return IOUtil.contentEquals( input1, input2 );\n+            return IOUtils.contentEquals( input1, input2 );\n \n         }\n         finally\n         {\n-            IOUtil.shutdownStream( input1 );\n-            IOUtil.shutdownStream( input2 );\n+            IOUtils.shutdownStream( input1 );\n+            IOUtils.shutdownStream( input2 );\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8eeb52fc81c4e65c00839cfeef9f1cde8b1cc613": {
      "type": "Ymovefromfile",
      "commitMessage": "FileUtil moved into FileUtils. Oddly enough no methods clash in name.\nHowever there is a lot of clash of functionality, so methods need to be\nconsidered and removed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140314 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1027819689000,
      "commitName": "8eeb52fc81c4e65c00839cfeef9f1cde8b1cc613",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": 1026599866000,
      "commitNameOld": "fcb1f1dc86e216faca4bdb9626200d99a6d9915a",
      "commitAuthorOld": "Nicola Ken Barozzi",
      "daysBetweenCommits": 14.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/FileUtil.java",
        "newPath": "src/java/org/apache/commons/io/FileUtils.java",
        "oldMethodName": "contentEquals",
        "newMethodName": "contentEquals"
      }
    },
    "c360a10db25701f682849e5913d150f13a09f3bb": {
      "type": "Yintroduced",
      "commitMessage": "New io classes from Avalon excalibur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140301 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1026166486000,
      "commitName": "c360a10db25701f682849e5913d150f13a09f3bb",
      "commitAuthor": "Nicola Ken Barozzi"
    }
  }
}