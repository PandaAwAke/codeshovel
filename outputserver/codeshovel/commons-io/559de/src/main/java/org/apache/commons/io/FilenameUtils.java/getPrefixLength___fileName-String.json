{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "FilenameUtils.java",
  "functionName": "getPrefixLength",
  "functionId": "getPrefixLength___fileName-String",
  "sourceFilePath": "src/main/java/org/apache/commons/io/FilenameUtils.java",
  "functionStartLine": 634,
  "functionEndLine": 689,
  "changeHistory": [
    "44c5c5618d924a06fb9adae7856f31e75228d987",
    "2736b6fe0b3fa22ec8e2b4184897ecadb021fc78",
    "e4e03ef4c091f5a35da0d97a6a35224197b8be02",
    "0f98e790a43b17ae1bb60d264931fb4f13300762",
    "a7bd568249f9ec20b69b2a700da6a0648e93a842",
    "63eba2740e08ede085c78b131bc1a9c3f1d5ddb1",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "1170279dc85c2bbdea594b053c56b379a72a2104",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "b39e430b27a666ec6195d9f77b09b3ae2c21f011",
    "1bff1d39fe1d9b6be5d7e6c6c821849eeb3391fe",
    "56104312831c73e13d7ebcd12cbfe50aadb05902",
    "289a56cf5d5c89ad3d85389b9651b0e227ded057",
    "3323d0a8d6167f47aac9b30c36979cd4daf610c8",
    "2e16d85893141e996eef35892ddabc3c2bf19ccc",
    "5964ce6decf3d7ab3efb7e1a9852b2f85a03ec6d"
  ],
  "changeHistoryShort": {
    "44c5c5618d924a06fb9adae7856f31e75228d987": "Ybodychange",
    "2736b6fe0b3fa22ec8e2b4184897ecadb021fc78": "Ybodychange",
    "e4e03ef4c091f5a35da0d97a6a35224197b8be02": "Ymultichange(Yparameterchange,Ybodychange)",
    "0f98e790a43b17ae1bb60d264931fb4f13300762": "Ybodychange",
    "a7bd568249f9ec20b69b2a700da6a0648e93a842": "Ybodychange",
    "63eba2740e08ede085c78b131bc1a9c3f1d5ddb1": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "1170279dc85c2bbdea594b053c56b379a72a2104": "Ybodychange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "b39e430b27a666ec6195d9f77b09b3ae2c21f011": "Ybodychange",
    "1bff1d39fe1d9b6be5d7e6c6c821849eeb3391fe": "Ybodychange",
    "56104312831c73e13d7ebcd12cbfe50aadb05902": "Ybodychange",
    "289a56cf5d5c89ad3d85389b9651b0e227ded057": "Ybodychange",
    "3323d0a8d6167f47aac9b30c36979cd4daf610c8": "Ybodychange",
    "2e16d85893141e996eef35892ddabc3c2bf19ccc": "Ybodychange",
    "5964ce6decf3d7ab3efb7e1a9852b2f85a03ec6d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "44c5c5618d924a06fb9adae7856f31e75228d987": {
      "type": "Ybodychange",
      "commitMessage": "Use final.",
      "commitDate": 1528840970000,
      "commitName": "44c5c5618d924a06fb9adae7856f31e75228d987",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": 1528477423000,
      "commitNameOld": "9ba69d7b9af1ab71e0ca2d0044f464261ae6a199",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 4.21,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,56 @@\n     public static int getPrefixLength(final String fileName) {\n         if (fileName \u003d\u003d null) {\n             return NOT_FOUND;\n         }\n         final int len \u003d fileName.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d fileName.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return NOT_FOUND;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n         }\n         if (ch0 \u003d\u003d \u0027~\u0027) {\n             int posUnix \u003d fileName.indexOf(UNIX_SEPARATOR, 1);\n             int posWin \u003d fileName.indexOf(WINDOWS_SEPARATOR, 1);\n             if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND) {\n                 return len + 1;  // return a length greater than the input\n             }\n             posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n             posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n             return Math.min(posUnix, posWin) + 1;\n         }\n         final char ch1 \u003d fileName.charAt(1);\n         if (ch1 \u003d\u003d \u0027:\u0027) {\n             ch0 \u003d Character.toUpperCase(ch0);\n             if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                 if (len \u003d\u003d 2 || isSeparator(fileName.charAt(2)) \u003d\u003d false) {\n                     return 2;\n                 }\n                 return 3;\n             } else if (ch0 \u003d\u003d UNIX_SEPARATOR) {\n                 return 1;\n             }\n             return NOT_FOUND;\n \n         } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n             int posUnix \u003d fileName.indexOf(UNIX_SEPARATOR, 2);\n             int posWin \u003d fileName.indexOf(WINDOWS_SEPARATOR, 2);\n             if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                 return NOT_FOUND;\n             }\n             posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n             posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n-            int pos \u003d Math.min(posUnix, posWin) + 1;\n-            String hostnamePart \u003d fileName.substring(2, pos - 1);\n+            final int pos \u003d Math.min(posUnix, posWin) + 1;\n+            final String hostnamePart \u003d fileName.substring(2, pos - 1);\n             return isValidHostName(hostnamePart) ? pos : NOT_FOUND;\n         } else {\n             return isSeparator(ch0) ? 1 : 0;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2736b6fe0b3fa22ec8e2b4184897ecadb021fc78": {
      "type": "Ybodychange",
      "commitMessage": "IO-559 verify hostname part of suspected UNC paths in FileNameUtils\n",
      "commitDate": 1527667567000,
      "commitName": "2736b6fe0b3fa22ec8e2b4184897ecadb021fc78",
      "commitAuthor": "Stefan Bodewig",
      "commitDateOld": 1520524295000,
      "commitNameOld": "d24dd1a3abc4624be55c0772ae4432686ee18792",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 82.68,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,56 @@\n     public static int getPrefixLength(final String fileName) {\n         if (fileName \u003d\u003d null) {\n             return NOT_FOUND;\n         }\n         final int len \u003d fileName.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d fileName.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return NOT_FOUND;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n         }\n         if (ch0 \u003d\u003d \u0027~\u0027) {\n             int posUnix \u003d fileName.indexOf(UNIX_SEPARATOR, 1);\n             int posWin \u003d fileName.indexOf(WINDOWS_SEPARATOR, 1);\n             if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND) {\n                 return len + 1;  // return a length greater than the input\n             }\n             posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n             posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n             return Math.min(posUnix, posWin) + 1;\n         }\n         final char ch1 \u003d fileName.charAt(1);\n         if (ch1 \u003d\u003d \u0027:\u0027) {\n             ch0 \u003d Character.toUpperCase(ch0);\n             if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                 if (len \u003d\u003d 2 || isSeparator(fileName.charAt(2)) \u003d\u003d false) {\n                     return 2;\n                 }\n                 return 3;\n             } else if (ch0 \u003d\u003d UNIX_SEPARATOR) {\n                 return 1;\n             }\n             return NOT_FOUND;\n \n         } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n             int posUnix \u003d fileName.indexOf(UNIX_SEPARATOR, 2);\n             int posWin \u003d fileName.indexOf(WINDOWS_SEPARATOR, 2);\n             if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                 return NOT_FOUND;\n             }\n             posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n             posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n-            return Math.min(posUnix, posWin) + 1;\n+            int pos \u003d Math.min(posUnix, posWin) + 1;\n+            String hostnamePart \u003d fileName.substring(2, pos - 1);\n+            return isValidHostName(hostnamePart) ? pos : NOT_FOUND;\n         } else {\n             return isSeparator(ch0) ? 1 : 0;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4e03ef4c091f5a35da0d97a6a35224197b8be02": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fix param names \u0027filename\u0027 -\u003e \u0027fileName\u0027 in code and Javadocs.",
      "commitDate": 1520524225000,
      "commitName": "e4e03ef4c091f5a35da0d97a6a35224197b8be02",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix param names \u0027filename\u0027 -\u003e \u0027fileName\u0027 in code and Javadocs.",
          "commitDate": 1520524225000,
          "commitName": "e4e03ef4c091f5a35da0d97a6a35224197b8be02",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": 1520523160000,
          "commitNameOld": "90b2e46494eea8461523c55fd9cf3fe3d1bf00ce",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,54 +1,54 @@\n-    public static int getPrefixLength(final String filename) {\n-        if (filename \u003d\u003d null) {\n+    public static int getPrefixLength(final String fileName) {\n+        if (fileName \u003d\u003d null) {\n             return NOT_FOUND;\n         }\n-        final int len \u003d filename.length();\n+        final int len \u003d fileName.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n-        char ch0 \u003d filename.charAt(0);\n+        char ch0 \u003d fileName.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return NOT_FOUND;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n         }\n         if (ch0 \u003d\u003d \u0027~\u0027) {\n-            int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n-            int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n+            int posUnix \u003d fileName.indexOf(UNIX_SEPARATOR, 1);\n+            int posWin \u003d fileName.indexOf(WINDOWS_SEPARATOR, 1);\n             if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND) {\n                 return len + 1;  // return a length greater than the input\n             }\n             posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n             posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n             return Math.min(posUnix, posWin) + 1;\n         }\n-        final char ch1 \u003d filename.charAt(1);\n+        final char ch1 \u003d fileName.charAt(1);\n         if (ch1 \u003d\u003d \u0027:\u0027) {\n             ch0 \u003d Character.toUpperCase(ch0);\n             if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n-                if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n+                if (len \u003d\u003d 2 || isSeparator(fileName.charAt(2)) \u003d\u003d false) {\n                     return 2;\n                 }\n                 return 3;\n             } else if (ch0 \u003d\u003d UNIX_SEPARATOR) {\n                 return 1;\n             }\n             return NOT_FOUND;\n \n         } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n-            int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n-            int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n+            int posUnix \u003d fileName.indexOf(UNIX_SEPARATOR, 2);\n+            int posWin \u003d fileName.indexOf(WINDOWS_SEPARATOR, 2);\n             if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                 return NOT_FOUND;\n             }\n             posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n             posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n             return Math.min(posUnix, posWin) + 1;\n         } else {\n             return isSeparator(ch0) ? 1 : 0;\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix param names \u0027filename\u0027 -\u003e \u0027fileName\u0027 in code and Javadocs.",
          "commitDate": 1520524225000,
          "commitName": "e4e03ef4c091f5a35da0d97a6a35224197b8be02",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": 1520523160000,
          "commitNameOld": "90b2e46494eea8461523c55fd9cf3fe3d1bf00ce",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,54 +1,54 @@\n-    public static int getPrefixLength(final String filename) {\n-        if (filename \u003d\u003d null) {\n+    public static int getPrefixLength(final String fileName) {\n+        if (fileName \u003d\u003d null) {\n             return NOT_FOUND;\n         }\n-        final int len \u003d filename.length();\n+        final int len \u003d fileName.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n-        char ch0 \u003d filename.charAt(0);\n+        char ch0 \u003d fileName.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return NOT_FOUND;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n         }\n         if (ch0 \u003d\u003d \u0027~\u0027) {\n-            int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n-            int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n+            int posUnix \u003d fileName.indexOf(UNIX_SEPARATOR, 1);\n+            int posWin \u003d fileName.indexOf(WINDOWS_SEPARATOR, 1);\n             if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND) {\n                 return len + 1;  // return a length greater than the input\n             }\n             posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n             posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n             return Math.min(posUnix, posWin) + 1;\n         }\n-        final char ch1 \u003d filename.charAt(1);\n+        final char ch1 \u003d fileName.charAt(1);\n         if (ch1 \u003d\u003d \u0027:\u0027) {\n             ch0 \u003d Character.toUpperCase(ch0);\n             if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n-                if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n+                if (len \u003d\u003d 2 || isSeparator(fileName.charAt(2)) \u003d\u003d false) {\n                     return 2;\n                 }\n                 return 3;\n             } else if (ch0 \u003d\u003d UNIX_SEPARATOR) {\n                 return 1;\n             }\n             return NOT_FOUND;\n \n         } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n-            int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n-            int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n+            int posUnix \u003d fileName.indexOf(UNIX_SEPARATOR, 2);\n+            int posWin \u003d fileName.indexOf(WINDOWS_SEPARATOR, 2);\n             if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                 return NOT_FOUND;\n             }\n             posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n             posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n             return Math.min(posUnix, posWin) + 1;\n         } else {\n             return isSeparator(ch0) ? 1 : 0;\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "0f98e790a43b17ae1bb60d264931fb4f13300762": {
      "type": "Ybodychange",
      "commitMessage": "Don\u0027t need to nest else clause.",
      "commitDate": 1520354728000,
      "commitName": "0f98e790a43b17ae1bb60d264931fb4f13300762",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": 1520354618000,
      "commitNameOld": "a653a4487774f57a7aff2c9dc1fe40b9b221cb6b",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,54 @@\n     public static int getPrefixLength(final String filename) {\n         if (filename \u003d\u003d null) {\n             return NOT_FOUND;\n         }\n         final int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return NOT_FOUND;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n-        } else {\n-            if (ch0 \u003d\u003d \u0027~\u0027) {\n-                int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n-                int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n-                if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND) {\n-                    return len + 1;  // return a length greater than the input\n-                }\n-                posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n-                posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n-                return Math.min(posUnix, posWin) + 1;\n+        }\n+        if (ch0 \u003d\u003d \u0027~\u0027) {\n+            int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n+            int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n+            if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND) {\n+                return len + 1;  // return a length greater than the input\n             }\n-            final char ch1 \u003d filename.charAt(1);\n-            if (ch1 \u003d\u003d \u0027:\u0027) {\n-                ch0 \u003d Character.toUpperCase(ch0);\n-                if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n-                    if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n-                        return 2;\n-                    }\n-                    return 3;\n-                } else if (ch0 \u003d\u003d UNIX_SEPARATOR) {\n-                    return 1;\n+            posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n+            posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n+            return Math.min(posUnix, posWin) + 1;\n+        }\n+        final char ch1 \u003d filename.charAt(1);\n+        if (ch1 \u003d\u003d \u0027:\u0027) {\n+            ch0 \u003d Character.toUpperCase(ch0);\n+            if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n+                if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n+                    return 2;\n                 }\n-                return NOT_FOUND;\n+                return 3;\n+            } else if (ch0 \u003d\u003d UNIX_SEPARATOR) {\n+                return 1;\n+            }\n+            return NOT_FOUND;\n \n-            } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n-                int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n-                int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n-                if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n-                    return NOT_FOUND;\n-                }\n-                posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n-                posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n-                return Math.min(posUnix, posWin) + 1;\n-            } else {\n-                return isSeparator(ch0) ? 1 : 0;\n+        } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n+            int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n+            int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n+            if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n+                return NOT_FOUND;\n             }\n+            posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n+            posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n+            return Math.min(posUnix, posWin) + 1;\n+        } else {\n+            return isSeparator(ch0) ? 1 : 0;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a7bd568249f9ec20b69b2a700da6a0648e93a842": {
      "type": "Ybodychange",
      "commitMessage": "[IO-483] FilenameUtils.getPrefixLength now works correctly for unix files/folder that are in the root folder and start with colons\n",
      "commitDate": 1474745570000,
      "commitName": "a7bd568249f9ec20b69b2a700da6a0648e93a842",
      "commitAuthor": "Marko Vasic",
      "commitDateOld": 1464881775000,
      "commitNameOld": "51f13c846dae950e1d27693c9e23c1063945210f",
      "commitAuthorOld": "Kristian Rosenvold",
      "daysBetweenCommits": 114.16,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,55 @@\n     public static int getPrefixLength(final String filename) {\n         if (filename \u003d\u003d null) {\n             return NOT_FOUND;\n         }\n         final int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return NOT_FOUND;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND) {\n                     return len + 1;  // return a length greater than the input\n                 }\n                 posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n                 posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             }\n             final char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n                 if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                     if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                         return 2;\n                     }\n                     return 3;\n+                } else if (ch0 \u003d\u003d UNIX_SEPARATOR) {\n+                    return 1;\n                 }\n                 return NOT_FOUND;\n \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n                 if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                     return NOT_FOUND;\n                 }\n                 posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n                 posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return isSeparator(ch0) ? 1 : 0;\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "63eba2740e08ede085c78b131bc1a9c3f1d5ddb1": {
      "type": "Ybodychange",
      "commitMessage": "Refactor magic number into constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586309 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1397138899000,
      "commitName": "63eba2740e08ede085c78b131bc1a9c3f1d5ddb1",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1397138331000,
      "commitNameOld": "c4a7e644a5fc43210fa0a563e9087347e3eef67d",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,53 @@\n     public static int getPrefixLength(final String filename) {\n         if (filename \u003d\u003d null) {\n-            return -1;\n+            return NOT_FOUND;\n         }\n         final int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n-            return -1;\n+            return NOT_FOUND;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n-                if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n+                if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND) {\n                     return len + 1;  // return a length greater than the input\n                 }\n-                posUnix \u003d posUnix \u003d\u003d -1 ? posWin : posUnix;\n-                posWin \u003d posWin \u003d\u003d -1 ? posUnix : posWin;\n+                posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n+                posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             }\n             final char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n                 if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                     if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                         return 2;\n                     }\n                     return 3;\n                 }\n-                return -1;\n+                return NOT_FOUND;\n \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n-                if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1 || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n-                    return -1;\n+                if (posUnix \u003d\u003d NOT_FOUND \u0026\u0026 posWin \u003d\u003d NOT_FOUND || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n+                    return NOT_FOUND;\n                 }\n-                posUnix \u003d posUnix \u003d\u003d -1 ? posWin : posUnix;\n-                posWin \u003d posWin \u003d\u003d -1 ? posUnix : posWin;\n+                posUnix \u003d posUnix \u003d\u003d NOT_FOUND ? posWin : posUnix;\n+                posWin \u003d posWin \u003d\u003d NOT_FOUND ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return isSeparator(ch0) ? 1 : 0;\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1333120391000,
          "commitNameOld": "3ef56378e33ed5ccc296806e4ad6b8c463e5979f",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 245.24,
          "commitsBetweenForRepo": 143,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,53 +1,53 @@\n-    public static int getPrefixLength(String filename) {\n+    public static int getPrefixLength(final String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n-        int len \u003d filename.length();\n+        final int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return -1;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n                     return len + 1;  // return a length greater than the input\n                 }\n                 posUnix \u003d posUnix \u003d\u003d -1 ? posWin : posUnix;\n                 posWin \u003d posWin \u003d\u003d -1 ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             }\n-            char ch1 \u003d filename.charAt(1);\n+            final char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n                 if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                     if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                         return 2;\n                     }\n                     return 3;\n                 }\n                 return -1;\n                 \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1 || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                     return -1;\n                 }\n                 posUnix \u003d posUnix \u003d\u003d -1 ? posWin : posUnix;\n                 posWin \u003d posWin \u003d\u003d -1 ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return isSeparator(ch0) ? 1 : 0;\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1333120391000,
          "commitNameOld": "3ef56378e33ed5ccc296806e4ad6b8c463e5979f",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 245.24,
          "commitsBetweenForRepo": 143,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,53 +1,53 @@\n-    public static int getPrefixLength(String filename) {\n+    public static int getPrefixLength(final String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n-        int len \u003d filename.length();\n+        final int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return -1;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n             return isSeparator(ch0) ? 1 : 0;\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n                     return len + 1;  // return a length greater than the input\n                 }\n                 posUnix \u003d posUnix \u003d\u003d -1 ? posWin : posUnix;\n                 posWin \u003d posWin \u003d\u003d -1 ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             }\n-            char ch1 \u003d filename.charAt(1);\n+            final char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n                 if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                     if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                         return 2;\n                     }\n                     return 3;\n                 }\n                 return -1;\n                 \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1 || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                     return -1;\n                 }\n                 posUnix \u003d posUnix \u003d\u003d -1 ? posWin : posUnix;\n                 posWin \u003d posWin \u003d\u003d -1 ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return isSeparator(ch0) ? 1 : 0;\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1170279dc85c2bbdea594b053c56b379a72a2104": {
      "type": "Ybodychange",
      "commitMessage": "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332207332000,
      "commitName": "1170279dc85c2bbdea594b053c56b379a72a2104",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1330924596000,
      "commitNameOld": "b37ba99e8f838e0fb7df77bea2fc774d5c8e893f",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 14.85,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,53 @@\n     public static int getPrefixLength(String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n         int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return -1;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return 2;  // return a length greater than the input\n             }\n-            return (isSeparator(ch0) ? 1 : 0);\n+            return isSeparator(ch0) ? 1 : 0;\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n                     return len + 1;  // return a length greater than the input\n                 }\n-                posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n-                posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n+                posUnix \u003d posUnix \u003d\u003d -1 ? posWin : posUnix;\n+                posWin \u003d posWin \u003d\u003d -1 ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             }\n             char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n                 if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                     if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                         return 2;\n                     }\n                     return 3;\n                 }\n                 return -1;\n                 \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n-                if ((posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n+                if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1 || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                     return -1;\n                 }\n-                posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n-                posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n+                posUnix \u003d posUnix \u003d\u003d -1 ? posWin : posUnix;\n+                posWin \u003d posWin \u003d\u003d -1 ? posUnix : posWin;\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n-                return (isSeparator(ch0) ? 1 : 0);\n+                return isSeparator(ch0) ? 1 : 0;\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/FilenameUtils.java",
        "newPath": "src/main/java/org/apache/commons/io/FilenameUtils.java"
      }
    },
    "b39e430b27a666ec6195d9f77b09b3ae2c21f011": {
      "type": "Ybodychange",
      "commitMessage": "Treat separator at end of filename as sign of directory\nAdjust other methods to this new definition\nAdjust absolute prefix calculation to always end in separator\nAdd new methods that omit the end separator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@279094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1126039666000,
      "commitName": "b39e430b27a666ec6195d9f77b09b3ae2c21f011",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1125437023000,
      "commitNameOld": "1bff1d39fe1d9b6be5d7e6c6c821849eeb3391fe",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 6.98,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,53 @@\n     public static int getPrefixLength(String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n         int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return -1;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n-                return 1;\n+                return 2;  // return a length greater than the input\n             }\n             return (isSeparator(ch0) ? 1 : 0);\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n-                    return len;\n+                    return len + 1;  // return a length greater than the input\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             }\n             char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n                 if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                     if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                         return 2;\n                     }\n                     return 3;\n                 }\n                 return -1;\n                 \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n                 if ((posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                     return -1;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return (isSeparator(ch0) ? 1 : 0);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1bff1d39fe1d9b6be5d7e6c6c821849eeb3391fe": {
      "type": "Ybodychange",
      "commitMessage": "Fix to handle short prefixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@264868 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1125437023000,
      "commitName": "1bff1d39fe1d9b6be5d7e6c6c821849eeb3391fe",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1125161220000,
      "commitNameOld": "56104312831c73e13d7ebcd12cbfe50aadb05902",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 3.19,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,53 @@\n     public static int getPrefixLength(String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n         int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return -1;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n-                return -1;\n+                return 1;\n             }\n             return (isSeparator(ch0) ? 1 : 0);\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n-                    return -1;\n+                    return len;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             }\n             char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n                 if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n                     if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                         return 2;\n                     }\n                     return 3;\n                 }\n                 return -1;\n                 \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n                 if ((posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                     return -1;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return (isSeparator(ch0) ? 1 : 0);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "56104312831c73e13d7ebcd12cbfe50aadb05902": {
      "type": "Ybodychange",
      "commitMessage": "Handle Windows drive relative paths like C:a\\b\\c\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240438 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1125161220000,
      "commitName": "56104312831c73e13d7ebcd12cbfe50aadb05902",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1124739387000,
      "commitNameOld": "4522992603c70de79278259cce3a38983ae3f34f",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 4.88,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,53 @@\n     public static int getPrefixLength(String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n         int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n         if (ch0 \u003d\u003d \u0027:\u0027) {\n             return -1;\n         }\n         if (len \u003d\u003d 1) {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return -1;\n             }\n             return (isSeparator(ch0) ? 1 : 0);\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n                     return -1;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             }\n             char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n-                if (ch0 \u003c \u0027A\u0027 || ch0 \u003e \u0027Z\u0027 || len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n-                    return -1;\n+                if (ch0 \u003e\u003d \u0027A\u0027 \u0026\u0026 ch0 \u003c\u003d \u0027Z\u0027) {\n+                    if (len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n+                        return 2;\n+                    }\n+                    return 3;\n                 }\n-                return 3;\n+                return -1;\n                 \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n                 if ((posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                     return -1;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return (isSeparator(ch0) ? 1 : 0);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "289a56cf5d5c89ad3d85389b9651b0e227ded057": {
      "type": "Ybodychange",
      "commitMessage": "Rewrite catPath, renaming to concat\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140645 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1101574851000,
      "commitName": "289a56cf5d5c89ad3d85389b9651b0e227ded057",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1101518525000,
      "commitNameOld": "3323d0a8d6167f47aac9b30c36979cd4daf610c8",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.65,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,50 @@\n     public static int getPrefixLength(String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n         int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         char ch0 \u003d filename.charAt(0);\n+        if (ch0 \u003d\u003d \u0027:\u0027) {\n+            return -1;\n+        }\n         if (len \u003d\u003d 1) {\n-            if (ch0 \u003d\u003d \u0027~\u0027 || ch0 \u003d\u003d \u0027:\u0027) {\n+            if (ch0 \u003d\u003d \u0027~\u0027) {\n                 return -1;\n             }\n             return (isSeparator(ch0) ? 1 : 0);\n         } else {\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n                     return -1;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             }\n             char ch1 \u003d filename.charAt(1);\n             if (ch1 \u003d\u003d \u0027:\u0027) {\n                 ch0 \u003d Character.toUpperCase(ch0);\n                 if (ch0 \u003c \u0027A\u0027 || ch0 \u003e \u0027Z\u0027 || len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                     return -1;\n                 }\n                 return 3;\n                 \n             } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n                 if ((posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                     return -1;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return (isSeparator(ch0) ? 1 : 0);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3323d0a8d6167f47aac9b30c36979cd4daf610c8": {
      "type": "Ybodychange",
      "commitMessage": "Refactor normalize method, and simplify getPrefixLength\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1101518525000,
      "commitName": "3323d0a8d6167f47aac9b30c36979cd4daf610c8",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1101496708000,
      "commitNameOld": "2e16d85893141e996eef35892ddabc3c2bf19ccc",
      "commitAuthorOld": "Martin Cooper",
      "daysBetweenCommits": 0.25,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,47 @@\n     public static int getPrefixLength(String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n         int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n-        if (SYSTEM_SEPARATOR \u003d\u003d WINDOWS_SEPARATOR) {\n-            char ch0 \u003d filename.charAt(0);\n-            if (len \u003d\u003d 1) {\n-                return (isSeparator(ch0) ? 1 : 0);\n-            } else {\n-                char ch1 \u003d filename.charAt(1);\n-                if (ch1 \u003d\u003d \u0027:\u0027) {\n-                    ch0 \u003d Character.toUpperCase(ch0);\n-                    if (ch0 \u003c \u0027A\u0027 || ch0 \u003e \u0027Z\u0027 || len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n-                        return -1;\n-                    }\n-                    return 3;\n-                } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n-                    int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n-                    int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n-                    if ((posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n-                        return -1;\n-                    }\n-                    posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n-                    posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n-                    return Math.min(posUnix, posWin) + 1;\n-                } else {\n-                    return (isSeparator(ch0) ? 1 : 0);\n-                }\n+        char ch0 \u003d filename.charAt(0);\n+        if (len \u003d\u003d 1) {\n+            if (ch0 \u003d\u003d \u0027~\u0027 || ch0 \u003d\u003d \u0027:\u0027) {\n+                return -1;\n             }\n+            return (isSeparator(ch0) ? 1 : 0);\n         } else {\n-            char ch0 \u003d filename.charAt(0);\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n-                if (len \u003d\u003d 1) {\n-                    return -1;\n-                }\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n                     return -1;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n+            }\n+            char ch1 \u003d filename.charAt(1);\n+            if (ch1 \u003d\u003d \u0027:\u0027) {\n+                ch0 \u003d Character.toUpperCase(ch0);\n+                if (ch0 \u003c \u0027A\u0027 || ch0 \u003e \u0027Z\u0027 || len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n+                    return -1;\n+                }\n+                return 3;\n+                \n+            } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n+                int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n+                int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n+                if ((posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n+                    return -1;\n+                }\n+                posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n+                posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n+                return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return (isSeparator(ch0) ? 1 : 0);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2e16d85893141e996eef35892ddabc3c2bf19ccc": {
      "type": "Ybodychange",
      "commitMessage": "Fix breakage when getPrefixLength() is fed a string of length one.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140642 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1101496708000,
      "commitName": "2e16d85893141e996eef35892ddabc3c2bf19ccc",
      "commitAuthor": "Martin Cooper",
      "commitDateOld": 1101168269000,
      "commitNameOld": "5964ce6decf3d7ab3efb7e1a9852b2f85a03ec6d",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 3.8,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,52 @@\n     public static int getPrefixLength(String filename) {\n         if (filename \u003d\u003d null) {\n             return -1;\n         }\n         int len \u003d filename.length();\n         if (len \u003d\u003d 0) {\n             return 0;\n         }\n         if (SYSTEM_SEPARATOR \u003d\u003d WINDOWS_SEPARATOR) {\n             char ch0 \u003d filename.charAt(0);\n             if (len \u003d\u003d 1) {\n                 return (isSeparator(ch0) ? 1 : 0);\n             } else {\n                 char ch1 \u003d filename.charAt(1);\n                 if (ch1 \u003d\u003d \u0027:\u0027) {\n                     ch0 \u003d Character.toUpperCase(ch0);\n                     if (ch0 \u003c \u0027A\u0027 || ch0 \u003e \u0027Z\u0027 || len \u003d\u003d 2 || isSeparator(filename.charAt(2)) \u003d\u003d false) {\n                         return -1;\n                     }\n                     return 3;\n                 } else if (isSeparator(ch0) \u0026\u0026 isSeparator(ch1)) {\n                     int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 2);\n                     int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 2);\n                     if ((posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) || posUnix \u003d\u003d 2 || posWin \u003d\u003d 2) {\n                         return -1;\n                     }\n                     posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                     posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                     return Math.min(posUnix, posWin) + 1;\n                 } else {\n                     return (isSeparator(ch0) ? 1 : 0);\n                 }\n             }\n         } else {\n             char ch0 \u003d filename.charAt(0);\n-            char ch1 \u003d filename.charAt(1);\n             if (ch0 \u003d\u003d \u0027~\u0027) {\n                 if (len \u003d\u003d 1) {\n                     return -1;\n                 }\n                 int posUnix \u003d filename.indexOf(UNIX_SEPARATOR, 1);\n                 int posWin \u003d filename.indexOf(WINDOWS_SEPARATOR, 1);\n                 if (posUnix \u003d\u003d -1 \u0026\u0026 posWin \u003d\u003d -1) {\n                     return -1;\n                 }\n                 posUnix \u003d (posUnix \u003d\u003d -1 ? posWin : posUnix);\n                 posWin \u003d (posWin \u003d\u003d -1 ? posUnix : posWin);\n                 return Math.min(posUnix, posWin) + 1;\n             } else {\n                 return (isSeparator(ch0) ? 1 : 0);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5964ce6decf3d7ab3efb7e1a9852b2f85a03ec6d": {
      "type": "Yintroduced",
      "commitMessage": "Add methods to handle filename prefixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140641 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1101168269000,
      "commitName": "5964ce6decf3d7ab3efb7e1a9852b2f85a03ec6d",
      "commitAuthor": "Stephen Colebourne"
    }
  }
}