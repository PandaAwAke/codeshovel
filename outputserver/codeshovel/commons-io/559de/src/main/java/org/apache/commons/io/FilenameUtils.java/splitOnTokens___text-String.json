{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "FilenameUtils.java",
  "functionName": "splitOnTokens",
  "functionId": "splitOnTokens___text-String",
  "sourceFilePath": "src/main/java/org/apache/commons/io/FilenameUtils.java",
  "functionStartLine": 1464,
  "functionEndLine": 1497,
  "changeHistory": [
    "51f13c846dae950e1d27693c9e23c1063945210f",
    "9264ccd2857cc25cabf6a309f323dd95ed319495",
    "63eba2740e08ede085c78b131bc1a9c3f1d5ddb1",
    "13367815a956ea794c8edfcb332073734e5ab801",
    "2009a2c2822ef99585be7ec2ac2cf00ba22141ae",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "1170279dc85c2bbdea594b053c56b379a72a2104",
    "33e9a899dcc38a2fdcf42432fb82024d323b0c6d",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "d4c5044c7b7697d944a444470a296dcd15911595",
    "6d6a73a689ce734d094f71723752cde23a1d9259",
    "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10",
    "09a6cbfe4abf8693528dbc6588b4c3ba0a2836da",
    "1ead1cc51d537700eb72e3fa991e1d68162029d5",
    "84b251bf545c9df52c9c750835a86d5af4bf0387",
    "4694d5a982413a12bce4ce0e5570404b8cc7b1f7",
    "fe44f3401d6d2b6c66eca32058de5bcd1f6facb9",
    "4fbac940f62e0e5196498c3b7cb4ab909ce1a337"
  ],
  "changeHistoryShort": {
    "51f13c846dae950e1d27693c9e23c1063945210f": "Ybodychange",
    "9264ccd2857cc25cabf6a309f323dd95ed319495": "Ybodychange",
    "63eba2740e08ede085c78b131bc1a9c3f1d5ddb1": "Ybodychange",
    "13367815a956ea794c8edfcb332073734e5ab801": "Ybodychange",
    "2009a2c2822ef99585be7ec2ac2cf00ba22141ae": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "1170279dc85c2bbdea594b053c56b379a72a2104": "Ybodychange",
    "33e9a899dcc38a2fdcf42432fb82024d323b0c6d": "Ybodychange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "d4c5044c7b7697d944a444470a296dcd15911595": "Ybodychange",
    "6d6a73a689ce734d094f71723752cde23a1d9259": "Ybodychange",
    "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10": "Ybodychange",
    "09a6cbfe4abf8693528dbc6588b4c3ba0a2836da": "Ybodychange",
    "1ead1cc51d537700eb72e3fa991e1d68162029d5": "Ybodychange",
    "84b251bf545c9df52c9c750835a86d5af4bf0387": "Ybodychange",
    "4694d5a982413a12bce4ce0e5570404b8cc7b1f7": "Ymovefromfile",
    "fe44f3401d6d2b6c66eca32058de5bcd1f6facb9": "Yfilerename",
    "4fbac940f62e0e5196498c3b7cb4ab909ce1a337": "Yintroduced"
  },
  "changeHistoryDetails": {
    "51f13c846dae950e1d27693c9e23c1063945210f": {
      "type": "Ybodychange",
      "commitMessage": "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1464881775000,
      "commitName": "51f13c846dae950e1d27693c9e23c1063945210f",
      "commitAuthor": "Kristian Rosenvold",
      "commitDateOld": 1441866902000,
      "commitNameOld": "5d072ef89fbc2532f621a5a0b4d6791cb926a997",
      "commitAuthorOld": "Kristian Rosenvold",
      "daysBetweenCommits": 266.38,
      "commitsBetweenForRepo": 103,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     static String[] splitOnTokens(final String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n \n         if (text.indexOf(\u0027?\u0027) \u003d\u003d NOT_FOUND \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d NOT_FOUND) {\n             return new String[] { text };\n         }\n \n         final char[] array \u003d text.toCharArray();\n-        final ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n+        final ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();\n         final StringBuilder buffer \u003d new StringBuilder();\n         char prevChar \u003d 0;\n         for (final char ch : array) {\n             if (ch \u003d\u003d \u0027?\u0027 || ch \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (ch \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (prevChar !\u003d \u0027*\u0027) {// ch \u003d\u003d \u0027*\u0027 here; check if previous char was \u0027*\u0027\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(ch);\n             }\n             prevChar \u003d ch;\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9264ccd2857cc25cabf6a309f323dd95ed319495": {
      "type": "Ybodychange",
      "commitMessage": "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1434643076000,
      "commitName": "9264ccd2857cc25cabf6a309f323dd95ed319495",
      "commitAuthor": "Kristian Rosenvold",
      "commitDateOld": 1397172877000,
      "commitNameOld": "39acf07bc85fb77c2eb287d05302948597ccc0d9",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 433.68,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,34 @@\n     static String[] splitOnTokens(final String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n \n         if (text.indexOf(\u0027?\u0027) \u003d\u003d NOT_FOUND \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d NOT_FOUND) {\n             return new String[] { text };\n         }\n \n         final char[] array \u003d text.toCharArray();\n         final ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n         final StringBuilder buffer \u003d new StringBuilder();\n         char prevChar \u003d 0;\n-        for (int i \u003d 0; i \u003c array.length; i++) {\n-            final char ch \u003d array[i];\n+        for (final char ch : array) {\n             if (ch \u003d\u003d \u0027?\u0027 || ch \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (ch \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n-                } else if (prevChar !\u003d \u0027*\u0027 ) {// ch \u003d\u003d \u0027*\u0027 here; check if previous char was \u0027*\u0027\n+                } else if (prevChar !\u003d \u0027*\u0027) {// ch \u003d\u003d \u0027*\u0027 here; check if previous char was \u0027*\u0027\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(ch);\n             }\n             prevChar \u003d ch;\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "63eba2740e08ede085c78b131bc1a9c3f1d5ddb1": {
      "type": "Ybodychange",
      "commitMessage": "Refactor magic number into constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586309 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1397138899000,
      "commitName": "63eba2740e08ede085c78b131bc1a9c3f1d5ddb1",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1397138331000,
      "commitNameOld": "c4a7e644a5fc43210fa0a563e9087347e3eef67d",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     static String[] splitOnTokens(final String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n \n-        if (text.indexOf(\u0027?\u0027) \u003d\u003d -1 \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d -1) {\n+        if (text.indexOf(\u0027?\u0027) \u003d\u003d NOT_FOUND \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d NOT_FOUND) {\n             return new String[] { text };\n         }\n \n         final char[] array \u003d text.toCharArray();\n         final ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n         final StringBuilder buffer \u003d new StringBuilder();\n         char prevChar \u003d 0;\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             final char ch \u003d array[i];\n             if (ch \u003d\u003d \u0027?\u0027 || ch \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (ch \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (prevChar !\u003d \u0027*\u0027 ) {// ch \u003d\u003d \u0027*\u0027 here; check if previous char was \u0027*\u0027\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(ch);\n             }\n             prevChar \u003d ch;\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "13367815a956ea794c8edfcb332073734e5ab801": {
      "type": "Ybodychange",
      "commitMessage": "IO-375 FilenameUtils.splitOnTokens(String text) check for \u0027**\u0027 could be simplified \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465505 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1365376205000,
      "commitName": "13367815a956ea794c8edfcb332073734e5ab801",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1365375683000,
      "commitNameOld": "2009a2c2822ef99585be7ec2ac2cf00ba22141ae",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n     static String[] splitOnTokens(final String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\u0027?\u0027) \u003d\u003d -1 \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         final char[] array \u003d text.toCharArray();\n         final ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n         final StringBuilder buffer \u003d new StringBuilder();\n+        char prevChar \u003d 0;\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             final char ch \u003d array[i];\n             if (ch \u003d\u003d \u0027?\u0027 || ch \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (ch \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n-                } else if (list.isEmpty() || // ch \u003d\u003d \u0027*\u0027 here; check if previous char was \u0027*\u0027\n-                        i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false) {\n+                } else if (prevChar !\u003d \u0027*\u0027 ) {// ch \u003d\u003d \u0027*\u0027 here; check if previous char was \u0027*\u0027\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(ch);\n             }\n+            prevChar \u003d ch;\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2009a2c2822ef99585be7ec2ac2cf00ba22141ae": {
      "type": "Ybodychange",
      "commitMessage": "Fetch char once from array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465504 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1365375683000,
      "commitName": "2009a2c2822ef99585be7ec2ac2cf00ba22141ae",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1354308699000,
      "commitNameOld": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 128.09,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n     static String[] splitOnTokens(final String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\u0027?\u0027) \u003d\u003d -1 \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         final char[] array \u003d text.toCharArray();\n         final ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n         final StringBuilder buffer \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n-            if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n+            final char ch \u003d array[i];\n+            if (ch \u003d\u003d \u0027?\u0027 || ch \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n-                if (array[i] \u003d\u003d \u0027?\u0027) {\n+                if (ch \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n-                } else if (list.isEmpty() ||\n+                } else if (list.isEmpty() || // ch \u003d\u003d \u0027*\u0027 here; check if previous char was \u0027*\u0027\n                         i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false) {\n                     list.add(\"*\");\n                 }\n             } else {\n-                buffer.append(array[i]);\n+                buffer.append(ch);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1333120391000,
          "commitNameOld": "3ef56378e33ed5ccc296806e4ad6b8c463e5979f",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 245.24,
          "commitsBetweenForRepo": 143,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n-    static String[] splitOnTokens(String text) {\n+    static String[] splitOnTokens(final String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\u0027?\u0027) \u003d\u003d -1 \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n-        char[] array \u003d text.toCharArray();\n-        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n-        StringBuilder buffer \u003d new StringBuilder();\n+        final char[] array \u003d text.toCharArray();\n+        final ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n+        final StringBuilder buffer \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (array[i] \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (list.isEmpty() ||\n                         i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false) {\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1333120391000,
          "commitNameOld": "3ef56378e33ed5ccc296806e4ad6b8c463e5979f",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 245.24,
          "commitsBetweenForRepo": 143,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n-    static String[] splitOnTokens(String text) {\n+    static String[] splitOnTokens(final String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\u0027?\u0027) \u003d\u003d -1 \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n-        char[] array \u003d text.toCharArray();\n-        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n-        StringBuilder buffer \u003d new StringBuilder();\n+        final char[] array \u003d text.toCharArray();\n+        final ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n+        final StringBuilder buffer \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (array[i] \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (list.isEmpty() ||\n                         i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false) {\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1170279dc85c2bbdea594b053c56b379a72a2104": {
      "type": "Ybodychange",
      "commitMessage": "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332207332000,
      "commitName": "1170279dc85c2bbdea594b053c56b379a72a2104",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1330924596000,
      "commitNameOld": "b37ba99e8f838e0fb7df77bea2fc774d5c8e893f",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 14.85,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String[] splitOnTokens(String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\u0027?\u0027) \u003d\u003d -1 \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         char[] array \u003d text.toCharArray();\n         ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n         StringBuilder buffer \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (array[i] \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (list.isEmpty() ||\n-                        (i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false)) {\n+                        i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false) {\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "33e9a899dcc38a2fdcf42432fb82024d323b0c6d": {
      "type": "Ybodychange",
      "commitMessage": "Use Collection.isEmpty() instead of size() \u003d\u003d 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1199986 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1320875024000,
      "commitName": "33e9a899dcc38a2fdcf42432fb82024d323b0c6d",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1320704183000,
      "commitNameOld": "63a1efef1d71667220a506b3f7a79e8642c5c712",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 1.98,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String[] splitOnTokens(String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\u0027?\u0027) \u003d\u003d -1 \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         char[] array \u003d text.toCharArray();\n         ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n         StringBuilder buffer \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (array[i] \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n-                } else if (list.size() \u003d\u003d 0 ||\n+                } else if (list.isEmpty() ||\n                         (i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false)) {\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/FilenameUtils.java",
        "newPath": "src/main/java/org/apache/commons/io/FilenameUtils.java"
      }
    },
    "d4c5044c7b7697d944a444470a296dcd15911595": {
      "type": "Ybodychange",
      "commitMessage": "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1232676142000,
      "commitName": "d4c5044c7b7697d944a444470a296dcd15911595",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1228356398000,
      "commitNameOld": "ee8a7df94a2b9f928c4a50e55291e427e363f76d",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 50.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String[] splitOnTokens(String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n-        if (text.indexOf(\"?\") \u003d\u003d -1 \u0026\u0026 text.indexOf(\"*\") \u003d\u003d -1) {\n+        if (text.indexOf(\u0027?\u0027) \u003d\u003d -1 \u0026\u0026 text.indexOf(\u0027*\u0027) \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         char[] array \u003d text.toCharArray();\n         ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n         StringBuilder buffer \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (array[i] \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (list.size() \u003d\u003d 0 ||\n                         (i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false)) {\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6d6a73a689ce734d094f71723752cde23a1d9259": {
      "type": "Ybodychange",
      "commitMessage": "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1202325947000,
      "commitName": "6d6a73a689ce734d094f71723752cde23a1d9259",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1202324477000,
      "commitNameOld": "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String[] splitOnTokens(String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\"?\") \u003d\u003d -1 \u0026\u0026 text.indexOf(\"*\") \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         char[] array \u003d text.toCharArray();\n         ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n-        StringBuffer buffer \u003d new StringBuffer();\n+        StringBuilder buffer \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (array[i] \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (list.size() \u003d\u003d 0 ||\n                         (i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false)) {\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10": {
      "type": "Ybodychange",
      "commitMessage": "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1202324477000,
      "commitName": "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1199767586000,
      "commitNameOld": "14978fec52d916b2e371044c714191013d3bb02c",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 29.59,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String[] splitOnTokens(String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\"?\") \u003d\u003d -1 \u0026\u0026 text.indexOf(\"*\") \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         char[] array \u003d text.toCharArray();\n-        ArrayList list \u003d new ArrayList();\n+        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n         StringBuffer buffer \u003d new StringBuffer();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (array[i] \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (list.size() \u003d\u003d 0 ||\n                         (i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false)) {\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n-        return (String[]) list.toArray( new String[ list.size() ] );\n+        return list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "09a6cbfe4abf8693528dbc6588b4c3ba0a2836da": {
      "type": "Ybodychange",
      "commitMessage": "Added findbugs optimisation: \u0027http://findbugs.sourceforge.net/bugDescriptions.html#ITA_INEFFICIENT_TO_ARRAY\u0027. Pass in a correctly sized array to list.toArray\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490424 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1167182443000,
      "commitName": "09a6cbfe4abf8693528dbc6588b4c3ba0a2836da",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": 1156766220000,
      "commitNameOld": "93910e80b41dfbecca566bda13da7601262f3730",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 120.56,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String[] splitOnTokens(String text) {\n         // used by wildcardMatch\n         // package level so a unit test may run on this\n         \n         if (text.indexOf(\"?\") \u003d\u003d -1 \u0026\u0026 text.indexOf(\"*\") \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         char[] array \u003d text.toCharArray();\n         ArrayList list \u003d new ArrayList();\n         StringBuffer buffer \u003d new StringBuffer();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n                 if (array[i] \u003d\u003d \u0027?\u0027) {\n                     list.add(\"?\");\n                 } else if (list.size() \u003d\u003d 0 ||\n                         (i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false)) {\n                     list.add(\"*\");\n                 }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n-        return (String[]) list.toArray(new String[0]);\n+        return (String[]) list.toArray( new String[ list.size() ] );\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1ead1cc51d537700eb72e3fa991e1d68162029d5": {
      "type": "Ybodychange",
      "commitMessage": "Fix bug in wildcard search for advanced repetitive matches\nbug 33303, from Danival Taffarel Calegari\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@156217 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1109985765000,
      "commitName": "1ead1cc51d537700eb72e3fa991e1d68162029d5",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1108296521000,
      "commitNameOld": "7a009ea80932204d693c2f80fb89bb43df3907f0",
      "commitAuthorOld": "Jeremias Maerki",
      "daysBetweenCommits": 19.55,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,30 @@\n     static String[] splitOnTokens(String text) {\n         if (text.indexOf(\"?\") \u003d\u003d -1 \u0026\u0026 text.indexOf(\"*\") \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n         char[] array \u003d text.toCharArray();\n         ArrayList list \u003d new ArrayList();\n         StringBuffer buffer \u003d new StringBuffer();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n             if (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n                 if (buffer.length() !\u003d 0) {\n                     list.add(buffer.toString());\n                     buffer.setLength(0);\n                 }\n-                list.add(new String(new char[] { array[i] }));\n+                if (array[i] \u003d\u003d \u0027?\u0027) {\n+                    list.add(\"?\");\n+                } else if (list.size() \u003d\u003d 0 ||\n+                        (i \u003e 0 \u0026\u0026 list.get(list.size() - 1).equals(\"*\") \u003d\u003d false)) {\n+                    list.add(\"*\");\n+                }\n             } else {\n                 buffer.append(array[i]);\n             }\n         }\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return (String[]) list.toArray(new String[0]);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "84b251bf545c9df52c9c750835a86d5af4bf0387": {
      "type": "Ybodychange",
      "commitMessage": "Convert wildcard method to match based on OS case sensitivity\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140647 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1102718217000,
      "commitName": "84b251bf545c9df52c9c750835a86d5af4bf0387",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1102188520000,
      "commitNameOld": "a09ebfc6c0f84a0aa9a05da04801461d99509ec5",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 6.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     static String[] splitOnTokens(String text) {\n-        char[] array \u003d text.toCharArray();\n         if (text.indexOf(\"?\") \u003d\u003d -1 \u0026\u0026 text.indexOf(\"*\") \u003d\u003d -1) {\n             return new String[] { text };\n         }\n \n+        char[] array \u003d text.toCharArray();\n         ArrayList list \u003d new ArrayList();\n         StringBuffer buffer \u003d new StringBuffer();\n         for (int i \u003d 0; i \u003c array.length; i++) {\n-            if(array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n-                if(buffer.length() !\u003d 0) {\n-                   list.add(buffer.toString());\n-                   buffer.setLength(0);\n-                }\n-                list.add(new String( new char[] { array[i] } ));\n-            } else {\n-                buffer.append(array[i]);\n-            }\n-        }\n+\t\t\tif (array[i] \u003d\u003d \u0027?\u0027 || array[i] \u003d\u003d \u0027*\u0027) {\n+\t\t\t\tif (buffer.length() !\u003d 0) {\n+\t\t\t\t\tlist.add(buffer.toString());\n+\t\t\t\t\tbuffer.setLength(0);\n+\t\t\t\t}\n+\t\t\t\tlist.add(new String(new char[] { array[i] }));\n+\t\t\t} else {\n+\t\t\t\tbuffer.append(array[i]);\n+\t\t\t}\n+\t\t}\n         if (buffer.length() !\u003d 0) {\n             list.add(buffer.toString());\n         }\n \n         return (String[]) list.toArray(new String[0]);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4694d5a982413a12bce4ce0e5570404b8cc7b1f7": {
      "type": "Ymovefromfile",
      "commitMessage": "merged WildcardUtils into FilenameUtils; thought the test case is still a separate file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140639 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1099196254000,
      "commitName": "4694d5a982413a12bce4ce0e5570404b8cc7b1f7",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": 1099180983000,
      "commitNameOld": "4a61d8cf150c561fe24477350eb6de2bb41ef750",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/WildcardUtils.java",
        "newPath": "src/java/org/apache/commons/io/FilenameUtils.java",
        "oldMethodName": "splitOnTokens",
        "newMethodName": "splitOnTokens"
      }
    },
    "fe44f3401d6d2b6c66eca32058de5bcd1f6facb9": {
      "type": "Yfilerename",
      "commitMessage": "moved WildcardUtils up a directory as it is used in two sub-packages of IO\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140620 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1098744928000,
      "commitName": "fe44f3401d6d2b6c66eca32058de5bcd1f6facb9",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": 1098744806000,
      "commitNameOld": "dfb79b3263d2a1f2c77e4d307e7af4e4341e604a",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/find/WildcardUtils.java",
        "newPath": "src/java/org/apache/commons/io/WildcardUtils.java"
      }
    },
    "4fbac940f62e0e5196498c3b7cb4ab909ce1a337": {
      "type": "Yintroduced",
      "commitMessage": "added finding subsystem to IO along with WildcardUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140602 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1095380089000,
      "commitName": "4fbac940f62e0e5196498c3b7cb4ab909ce1a337",
      "commitAuthor": "Henri Yandell"
    }
  }
}