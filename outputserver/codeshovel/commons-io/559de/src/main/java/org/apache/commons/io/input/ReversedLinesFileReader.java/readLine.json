{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "ReversedLinesFileReader.java",
  "functionName": "readLine",
  "functionId": "readLine",
  "sourceFilePath": "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
  "functionStartLine": 277,
  "functionEndLine": 329,
  "changeHistory": [
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "1170279dc85c2bbdea594b053c56b379a72a2104",
    "94afbe4621736c8183f0145f779f86e48cf2d4d6",
    "33b0f21c557b26de02b928140ffbbff0c3b6e11a"
  ],
  "changeHistoryShort": {
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ybodychange",
    "1170279dc85c2bbdea594b053c56b379a72a2104": "Ybodychange",
    "94afbe4621736c8183f0145f779f86e48cf2d4d6": "Yfilerename",
    "33b0f21c557b26de02b928140ffbbff0c3b6e11a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ybodychange",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1351039174000,
      "commitNameOld": "558e03e490f2f81c78bedb9b3d71dd55e75de5cb",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 37.84,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,53 @@\n         private String readLine() throws IOException {\n \n             String line \u003d null;\n             int newLineMatchByteCount;\n \n-            boolean isLastFilePart \u003d no \u003d\u003d 1;\n+            final boolean isLastFilePart \u003d no \u003d\u003d 1;\n \n             int i \u003d currentLastBytePos;\n             while (i \u003e -1) {\n \n                 if (!isLastFilePart \u0026\u0026 i \u003c avoidNewlineSplitBufferSize) {\n                     // avoidNewlineSplitBuffer: for all except the last file part we\n                     // take a few bytes to the next file part to avoid splitting of newlines\n                     createLeftOver();\n                     break; // skip last few bytes and leave it to the next file part\n                 }\n \n                 // --- check for newline ---\n                 if ((newLineMatchByteCount \u003d getNewLineMatchByteCount(data, i)) \u003e 0 /* found newline */) {\n                     final int lineStart \u003d i + 1;\n-                    int lineLengthBytes \u003d currentLastBytePos - lineStart + 1;\n+                    final int lineLengthBytes \u003d currentLastBytePos - lineStart + 1;\n \n                     if (lineLengthBytes \u003c 0) {\n                         throw new IllegalStateException(\"Unexpected negative line length\u003d\"+lineLengthBytes);\n                     }\n-                    byte[] lineData \u003d new byte[lineLengthBytes];\n+                    final byte[] lineData \u003d new byte[lineLengthBytes];\n                     System.arraycopy(data, lineStart, lineData, 0, lineLengthBytes);\n \n                     line \u003d new String(lineData, encoding);\n \n                     currentLastBytePos \u003d i - newLineMatchByteCount;\n                     break; // found line\n                 }\n \n                 // --- move cursor ---\n                 i -\u003d byteDecrement;\n \n                 // --- end of file part handling ---\n                 if (i \u003c 0) {\n                     createLeftOver();\n                     break; // end of file part\n                 }\n             }\n \n             // --- last file part handling ---\n             if (isLastFilePart \u0026\u0026 leftOver !\u003d null) {\n                 // there will be no line break anymore, this is the first line of the file\n                 line \u003d new String(leftOver, encoding);\n                 leftOver \u003d null;\n             }\n \n             return line;\n         }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1170279dc85c2bbdea594b053c56b379a72a2104": {
      "type": "Ybodychange",
      "commitMessage": "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332207332000,
      "commitName": "1170279dc85c2bbdea594b053c56b379a72a2104",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1331653451000,
      "commitNameOld": "5236eb0d95ac51d03ee8d5b412497ae2b22861c8",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 6.41,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,53 @@\n         private String readLine() throws IOException {\n \n             String line \u003d null;\n             int newLineMatchByteCount;\n \n-            boolean isLastFilePart \u003d (no \u003d\u003d 1);\n+            boolean isLastFilePart \u003d no \u003d\u003d 1;\n \n             int i \u003d currentLastBytePos;\n             while (i \u003e -1) {\n \n                 if (!isLastFilePart \u0026\u0026 i \u003c avoidNewlineSplitBufferSize) {\n                     // avoidNewlineSplitBuffer: for all except the last file part we\n                     // take a few bytes to the next file part to avoid splitting of newlines\n                     createLeftOver();\n                     break; // skip last few bytes and leave it to the next file part\n                 }\n \n                 // --- check for newline ---\n                 if ((newLineMatchByteCount \u003d getNewLineMatchByteCount(data, i)) \u003e 0 /* found newline */) {\n                     final int lineStart \u003d i + 1;\n                     int lineLengthBytes \u003d currentLastBytePos - lineStart + 1;\n \n                     if (lineLengthBytes \u003c 0) {\n                         throw new IllegalStateException(\"Unexpected negative line length\u003d\"+lineLengthBytes);\n                     }\n                     byte[] lineData \u003d new byte[lineLengthBytes];\n                     System.arraycopy(data, lineStart, lineData, 0, lineLengthBytes);\n \n                     line \u003d new String(lineData, encoding);\n \n                     currentLastBytePos \u003d i - newLineMatchByteCount;\n                     break; // found line\n                 }\n \n                 // --- move cursor ---\n                 i -\u003d byteDecrement;\n \n                 // --- end of file part handling ---\n                 if (i \u003c 0) {\n                     createLeftOver();\n                     break; // end of file part\n                 }\n             }\n \n             // --- last file part handling ---\n             if (isLastFilePart \u0026\u0026 leftOver !\u003d null) {\n                 // there will be no line break anymore, this is the first line of the file\n                 line \u003d new String(leftOver, encoding);\n                 leftOver \u003d null;\n             }\n \n             return line;\n         }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "94afbe4621736c8183f0145f779f86e48cf2d4d6": {
      "type": "Yfilerename",
      "commitMessage": "IO-288 Move ReversedLinesFileReader to org.apache.commons.io.input package with the reset of the InputStreams \u0026 Readers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1228535 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1325900012000,
      "commitName": "94afbe4621736c8183f0145f779f86e48cf2d4d6",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1321411991000,
      "commitNameOld": "bf48fd5f8985c8d24d5bcebf7064767c7ea5ec91",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 51.94,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/io/ReversedLinesFileReader.java",
        "newPath": "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java"
      }
    },
    "33b0f21c557b26de02b928140ffbbff0c3b6e11a": {
      "type": "Yintroduced",
      "commitMessage": "IO-288 Supply a ReversedLinesFileReader\nN.B. Renamed test .txt files to .bin and made them application/octet-stream\nas it\u0027s important not to change the EOL setting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1202500 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1321407046000,
      "commitName": "33b0f21c557b26de02b928140ffbbff0c3b6e11a",
      "commitAuthor": "Sebastian Bazley"
    }
  }
}