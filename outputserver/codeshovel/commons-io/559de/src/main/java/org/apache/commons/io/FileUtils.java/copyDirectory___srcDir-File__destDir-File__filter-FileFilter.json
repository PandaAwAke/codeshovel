{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "FileUtils.java",
  "functionName": "copyDirectory",
  "functionId": "copyDirectory___srcDir-File__destDir-File__filter-FileFilter",
  "sourceFilePath": "src/main/java/org/apache/commons/io/FileUtils.java",
  "functionStartLine": 1303,
  "functionEndLine": 1306,
  "changeHistory": [
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "7cbb2763115558b029da2d1b409d5d3ce7f13655",
    "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1",
    "361dd615a081d3292b24e109d6db0786b85a070d",
    "64320f1c02f6173874ffcd7d5261a0f193c206a0"
  ],
  "changeHistoryShort": {
    "6aa00766b9103d75c763160280429af8e1f0549e": "Yparametermetachange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "7cbb2763115558b029da2d1b409d5d3ce7f13655": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1": "Ymultichange(Yparameterchange,Ybodychange)",
    "361dd615a081d3292b24e109d6db0786b85a070d": "Ybodychange",
    "64320f1c02f6173874ffcd7d5261a0f193c206a0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1351082444000,
      "commitNameOld": "965f66687351e0abd445925d0497f96e5656ff13",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 37.34,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-    public static void copyDirectory(File srcDir, File destDir,\n-            FileFilter filter) throws IOException {\n+    public static void copyDirectory(final File srcDir, final File destDir,\n+            final FileFilter filter) throws IOException {\n         copyDirectory(srcDir, destDir, filter, true);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/FileUtils.java",
        "newPath": "src/main/java/org/apache/commons/io/FileUtils.java"
      }
    },
    "7cbb2763115558b029da2d1b409d5d3ce7f13655": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "IO-105 - Add a FileUtils copyDirectory method that makes use of FileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609471 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1199662500000,
      "commitName": "7cbb2763115558b029da2d1b409d5d3ce7f13655",
      "commitAuthor": "Niall Pemberton",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "IO-105 - Add a FileUtils copyDirectory method that makes use of FileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609471 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1199662500000,
          "commitName": "7cbb2763115558b029da2d1b409d5d3ce7f13655",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1199651616000,
          "commitNameOld": "da8e3183bd70cdb2e1b9441e2e4b640e3fc27fad",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,4 @@\n-    private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate,\n-           List exclusionList) throws IOException {\n-        if (destDir.exists()) {\n-            if (destDir.isDirectory() \u003d\u003d false) {\n-                throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 exists but is not a directory\");\n-            }\n-        } else {\n-            if (destDir.mkdirs() \u003d\u003d false) {\n-                throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 directory cannot be created\");\n-            }\n-            if (preserveFileDate) {\n-                destDir.setLastModified(srcDir.lastModified());\n-            }\n-        }\n-        if (destDir.canWrite() \u003d\u003d false) {\n-            throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 cannot be written to\");\n-        }\n-        // recurse\n-        File[] files \u003d srcDir.listFiles();\n-        if (files \u003d\u003d null) {  // null if security restricted\n-            throw new IOException(\"Failed to list contents of \" + srcDir);\n-        }\n-        for (int i \u003d 0; i \u003c files.length; i++) {\n-            File copiedFile \u003d new File(destDir, files[i].getName());\n-            if (exclusionList \u003d\u003d null || !exclusionList.contains(files[i].getCanonicalPath())) {\n-                if (files[i].isDirectory()) {\n-                    doCopyDirectory(files[i], copiedFile, preserveFileDate, exclusionList);\n-                } else {\n-                    doCopyFile(files[i], copiedFile, preserveFileDate);\n-                }\n-            }\n-        }\n+    public static void copyDirectory(File srcDir, File destDir,\n+            FileFilter filter) throws IOException {\n+        copyDirectory(srcDir, destDir, filter, true);\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldMethodName": "doCopyDirectory",
            "newMethodName": "copyDirectory"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "IO-105 - Add a FileUtils copyDirectory method that makes use of FileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609471 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1199662500000,
          "commitName": "7cbb2763115558b029da2d1b409d5d3ce7f13655",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1199651616000,
          "commitNameOld": "da8e3183bd70cdb2e1b9441e2e4b640e3fc27fad",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,4 @@\n-    private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate,\n-           List exclusionList) throws IOException {\n-        if (destDir.exists()) {\n-            if (destDir.isDirectory() \u003d\u003d false) {\n-                throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 exists but is not a directory\");\n-            }\n-        } else {\n-            if (destDir.mkdirs() \u003d\u003d false) {\n-                throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 directory cannot be created\");\n-            }\n-            if (preserveFileDate) {\n-                destDir.setLastModified(srcDir.lastModified());\n-            }\n-        }\n-        if (destDir.canWrite() \u003d\u003d false) {\n-            throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 cannot be written to\");\n-        }\n-        // recurse\n-        File[] files \u003d srcDir.listFiles();\n-        if (files \u003d\u003d null) {  // null if security restricted\n-            throw new IOException(\"Failed to list contents of \" + srcDir);\n-        }\n-        for (int i \u003d 0; i \u003c files.length; i++) {\n-            File copiedFile \u003d new File(destDir, files[i].getName());\n-            if (exclusionList \u003d\u003d null || !exclusionList.contains(files[i].getCanonicalPath())) {\n-                if (files[i].isDirectory()) {\n-                    doCopyDirectory(files[i], copiedFile, preserveFileDate, exclusionList);\n-                } else {\n-                    doCopyFile(files[i], copiedFile, preserveFileDate);\n-                }\n-            }\n-        }\n+    public static void copyDirectory(File srcDir, File destDir,\n+            FileFilter filter) throws IOException {\n+        copyDirectory(srcDir, destDir, filter, true);\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "IO-105 - Add a FileUtils copyDirectory method that makes use of FileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609471 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1199662500000,
          "commitName": "7cbb2763115558b029da2d1b409d5d3ce7f13655",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1199651616000,
          "commitNameOld": "da8e3183bd70cdb2e1b9441e2e4b640e3fc27fad",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,4 @@\n-    private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate,\n-           List exclusionList) throws IOException {\n-        if (destDir.exists()) {\n-            if (destDir.isDirectory() \u003d\u003d false) {\n-                throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 exists but is not a directory\");\n-            }\n-        } else {\n-            if (destDir.mkdirs() \u003d\u003d false) {\n-                throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 directory cannot be created\");\n-            }\n-            if (preserveFileDate) {\n-                destDir.setLastModified(srcDir.lastModified());\n-            }\n-        }\n-        if (destDir.canWrite() \u003d\u003d false) {\n-            throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 cannot be written to\");\n-        }\n-        // recurse\n-        File[] files \u003d srcDir.listFiles();\n-        if (files \u003d\u003d null) {  // null if security restricted\n-            throw new IOException(\"Failed to list contents of \" + srcDir);\n-        }\n-        for (int i \u003d 0; i \u003c files.length; i++) {\n-            File copiedFile \u003d new File(destDir, files[i].getName());\n-            if (exclusionList \u003d\u003d null || !exclusionList.contains(files[i].getCanonicalPath())) {\n-                if (files[i].isDirectory()) {\n-                    doCopyDirectory(files[i], copiedFile, preserveFileDate, exclusionList);\n-                } else {\n-                    doCopyFile(files[i], copiedFile, preserveFileDate);\n-                }\n-            }\n-        }\n+    public static void copyDirectory(File srcDir, File destDir,\n+            FileFilter filter) throws IOException {\n+        copyDirectory(srcDir, destDir, filter, true);\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ybodychange",
          "commitMessage": "IO-105 - Add a FileUtils copyDirectory method that makes use of FileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609471 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1199662500000,
          "commitName": "7cbb2763115558b029da2d1b409d5d3ce7f13655",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1199651616000,
          "commitNameOld": "da8e3183bd70cdb2e1b9441e2e4b640e3fc27fad",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,4 @@\n-    private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate,\n-           List exclusionList) throws IOException {\n-        if (destDir.exists()) {\n-            if (destDir.isDirectory() \u003d\u003d false) {\n-                throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 exists but is not a directory\");\n-            }\n-        } else {\n-            if (destDir.mkdirs() \u003d\u003d false) {\n-                throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 directory cannot be created\");\n-            }\n-            if (preserveFileDate) {\n-                destDir.setLastModified(srcDir.lastModified());\n-            }\n-        }\n-        if (destDir.canWrite() \u003d\u003d false) {\n-            throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 cannot be written to\");\n-        }\n-        // recurse\n-        File[] files \u003d srcDir.listFiles();\n-        if (files \u003d\u003d null) {  // null if security restricted\n-            throw new IOException(\"Failed to list contents of \" + srcDir);\n-        }\n-        for (int i \u003d 0; i \u003c files.length; i++) {\n-            File copiedFile \u003d new File(destDir, files[i].getName());\n-            if (exclusionList \u003d\u003d null || !exclusionList.contains(files[i].getCanonicalPath())) {\n-                if (files[i].isDirectory()) {\n-                    doCopyDirectory(files[i], copiedFile, preserveFileDate, exclusionList);\n-                } else {\n-                    doCopyFile(files[i], copiedFile, preserveFileDate);\n-                }\n-            }\n-        }\n+    public static void copyDirectory(File srcDir, File destDir,\n+            FileFilter filter) throws IOException {\n+        copyDirectory(srcDir, destDir, filter, true);\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "IO-141 - Infinite loop on FileUtils.copyDirectory when the destination directory is within the source directory - reported by Mark Bryan Yu\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609147 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1199545555000,
      "commitName": "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1",
      "commitAuthor": "Niall Pemberton",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "IO-141 - Infinite loop on FileUtils.copyDirectory when the destination directory is within the source directory - reported by Mark Bryan Yu\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609147 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1199545555000,
          "commitName": "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1199335637000,
          "commitNameOld": "50f9c9370c1286039fb6750e08e0fcbc20c6adc0",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 2.43,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,33 @@\n-    private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate) throws IOException {\n+    private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate,\n+           List exclusionList) throws IOException {\n         if (destDir.exists()) {\n             if (destDir.isDirectory() \u003d\u003d false) {\n                 throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 exists but is not a directory\");\n             }\n         } else {\n             if (destDir.mkdirs() \u003d\u003d false) {\n                 throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 directory cannot be created\");\n             }\n             if (preserveFileDate) {\n                 destDir.setLastModified(srcDir.lastModified());\n             }\n         }\n         if (destDir.canWrite() \u003d\u003d false) {\n             throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 cannot be written to\");\n         }\n         // recurse\n         File[] files \u003d srcDir.listFiles();\n         if (files \u003d\u003d null) {  // null if security restricted\n             throw new IOException(\"Failed to list contents of \" + srcDir);\n         }\n         for (int i \u003d 0; i \u003c files.length; i++) {\n             File copiedFile \u003d new File(destDir, files[i].getName());\n-            if (files[i].isDirectory()) {\n-                doCopyDirectory(files[i], copiedFile, preserveFileDate);\n-            } else {\n-                doCopyFile(files[i], copiedFile, preserveFileDate);\n+            if (exclusionList \u003d\u003d null || !exclusionList.contains(files[i].getCanonicalPath())) {\n+                if (files[i].isDirectory()) {\n+                    doCopyDirectory(files[i], copiedFile, preserveFileDate, exclusionList);\n+                } else {\n+                    doCopyFile(files[i], copiedFile, preserveFileDate);\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ybodychange",
          "commitMessage": "IO-141 - Infinite loop on FileUtils.copyDirectory when the destination directory is within the source directory - reported by Mark Bryan Yu\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609147 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1199545555000,
          "commitName": "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1199335637000,
          "commitNameOld": "50f9c9370c1286039fb6750e08e0fcbc20c6adc0",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 2.43,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,33 @@\n-    private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate) throws IOException {\n+    private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate,\n+           List exclusionList) throws IOException {\n         if (destDir.exists()) {\n             if (destDir.isDirectory() \u003d\u003d false) {\n                 throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 exists but is not a directory\");\n             }\n         } else {\n             if (destDir.mkdirs() \u003d\u003d false) {\n                 throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 directory cannot be created\");\n             }\n             if (preserveFileDate) {\n                 destDir.setLastModified(srcDir.lastModified());\n             }\n         }\n         if (destDir.canWrite() \u003d\u003d false) {\n             throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 cannot be written to\");\n         }\n         // recurse\n         File[] files \u003d srcDir.listFiles();\n         if (files \u003d\u003d null) {  // null if security restricted\n             throw new IOException(\"Failed to list contents of \" + srcDir);\n         }\n         for (int i \u003d 0; i \u003c files.length; i++) {\n             File copiedFile \u003d new File(destDir, files[i].getName());\n-            if (files[i].isDirectory()) {\n-                doCopyDirectory(files[i], copiedFile, preserveFileDate);\n-            } else {\n-                doCopyFile(files[i], copiedFile, preserveFileDate);\n+            if (exclusionList \u003d\u003d null || !exclusionList.contains(files[i].getCanonicalPath())) {\n+                if (files[i].isDirectory()) {\n+                    doCopyDirectory(files[i], copiedFile, preserveFileDate, exclusionList);\n+                } else {\n+                    doCopyFile(files[i], copiedFile, preserveFileDate);\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "361dd615a081d3292b24e109d6db0786b85a070d": {
      "type": "Ybodychange",
      "commitMessage": "Handle security restricted directories\nbug 36801, from Chris Eldredge\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291765 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1127772520000,
      "commitName": "361dd615a081d3292b24e109d6db0786b85a070d",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": 1127085165000,
      "commitNameOld": "990ea5d016b6ebc1961be059ba9aab0f5079683b",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 7.96,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n     private static void doCopyDirectory(File srcDir, File destDir, boolean preserveFileDate) throws IOException {\n         if (destDir.exists()) {\n             if (destDir.isDirectory() \u003d\u003d false) {\n                 throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 exists but is not a directory\");\n             }\n         } else {\n             if (destDir.mkdirs() \u003d\u003d false) {\n                 throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 directory cannot be created\");\n             }\n             if (preserveFileDate) {\n                 destDir.setLastModified(srcDir.lastModified());\n             }\n         }\n         if (destDir.canWrite() \u003d\u003d false) {\n             throw new IOException(\"Destination \u0027\" + destDir + \"\u0027 cannot be written to\");\n         }\n         // recurse\n         File[] files \u003d srcDir.listFiles();\n+        if (files \u003d\u003d null) {  // null if security restricted\n+            throw new IOException(\"Failed to list contents of \" + srcDir);\n+        }\n         for (int i \u003d 0; i \u003c files.length; i++) {\n             File copiedFile \u003d new File(destDir, files[i].getName());\n             if (files[i].isDirectory()) {\n                 doCopyDirectory(files[i], copiedFile, preserveFileDate);\n             } else {\n                 doCopyFile(files[i], copiedFile, preserveFileDate);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "64320f1c02f6173874ffcd7d5261a0f193c206a0": {
      "type": "Yintroduced",
      "commitMessage": "Add copyDirectory, and refactor copyFile\nbug 32944, from Ian Springer\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154553 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1108923234000,
      "commitName": "64320f1c02f6173874ffcd7d5261a0f193c206a0",
      "commitAuthor": "Stephen Colebourne"
    }
  }
}