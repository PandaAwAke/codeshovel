{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "CharSequenceInputStream.java",
  "functionName": "read",
  "functionId": "read___b-byte[]__off-int__len-int",
  "sourceFilePath": "src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
  "functionStartLine": 131,
  "functionEndLine": 161,
  "changeHistory": [
    "0986e7970561a77ade9bdaaf701e14017d105464",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "11c95251bc5923b32fe3b8e9fd9f0fb51c563c57",
    "0c7f310735275b001264f62e54accb8c78ef2144",
    "50a7fdcaf8fb9a684a96568ceeb8643b4941c475"
  ],
  "changeHistoryShort": {
    "0986e7970561a77ade9bdaaf701e14017d105464": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "11c95251bc5923b32fe3b8e9fd9f0fb51c563c57": "Ybodychange",
    "0c7f310735275b001264f62e54accb8c78ef2144": "Ybodychange",
    "50a7fdcaf8fb9a684a96568ceeb8643b4941c475": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0986e7970561a77ade9bdaaf701e14017d105464": {
      "type": "Ybodychange",
      "commitMessage": "\u003caction issue\u003d\"IO-437\" dev\u003d\"ggregory\" type\u003d\"add\"\u003e\n  Make IOUtils.EOF public and reuse it in various classes.\n\u003c/action\u003e\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1397145440000,
      "commitName": "0986e7970561a77ade9bdaaf701e14017d105464",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1366847501000,
      "commitNameOld": "586d223e8049873dfa350e5f575e3c03e714dbcf",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 350.67,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public int read(final byte[] b, int off, int len) throws IOException {\n         if (b \u003d\u003d null) {\n             throw new NullPointerException(\"Byte array is null\");\n         }\n         if (len \u003c 0 || (off + len) \u003e b.length) {\n             throw new IndexOutOfBoundsException(\"Array Size\u003d\" + b.length +\n                     \", offset\u003d\" + off + \", length\u003d\" + len);\n         }\n         if (len \u003d\u003d 0) {\n             return 0; // must return 0 for zero length read\n         }\n         if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n-            return EOS;\n+            return EOF;\n         }\n         int bytesRead \u003d 0;\n         while (len \u003e 0) {\n             if (this.bbuf.hasRemaining()) {\n                 final int chunk \u003d Math.min(this.bbuf.remaining(), len);\n                 this.bbuf.get(b, off, chunk);\n                 off +\u003d chunk;\n                 len -\u003d chunk;\n                 bytesRead +\u003d chunk;\n             } else {\n                 fillBuffer();\n                 if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n                     break;\n                 }\n             }\n         }\n-        return bytesRead \u003d\u003d 0 \u0026\u0026 !this.cbuf.hasRemaining() ? EOS : bytesRead;\n+        return bytesRead \u003d\u003d 0 \u0026\u0026 !this.cbuf.hasRemaining() ? EOF : bytesRead;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1354290171000,
          "commitNameOld": "0cb77535f31951102c93c5b215e23d960e9defca",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.21,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-    public int read(byte[] b, int off, int len) throws IOException {\n+    public int read(final byte[] b, int off, int len) throws IOException {\n         if (b \u003d\u003d null) {\n             throw new NullPointerException(\"Byte array is null\");\n         }\n         if (len \u003c 0 || (off + len) \u003e b.length) {\n             throw new IndexOutOfBoundsException(\"Array Size\u003d\" + b.length +\n                     \", offset\u003d\" + off + \", length\u003d\" + len);\n         }\n         if (len \u003d\u003d 0) {\n             return 0; // must return 0 for zero length read\n         }\n         if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n             return EOS;\n         }\n         int bytesRead \u003d 0;\n         while (len \u003e 0) {\n             if (this.bbuf.hasRemaining()) {\n-                int chunk \u003d Math.min(this.bbuf.remaining(), len);\n+                final int chunk \u003d Math.min(this.bbuf.remaining(), len);\n                 this.bbuf.get(b, off, chunk);\n                 off +\u003d chunk;\n                 len -\u003d chunk;\n                 bytesRead +\u003d chunk;\n             } else {\n                 fillBuffer();\n                 if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n                     break;\n                 }\n             }\n         }\n         return bytesRead \u003d\u003d 0 \u0026\u0026 !this.cbuf.hasRemaining() ? EOS : bytesRead;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1354290171000,
          "commitNameOld": "0cb77535f31951102c93c5b215e23d960e9defca",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.21,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-    public int read(byte[] b, int off, int len) throws IOException {\n+    public int read(final byte[] b, int off, int len) throws IOException {\n         if (b \u003d\u003d null) {\n             throw new NullPointerException(\"Byte array is null\");\n         }\n         if (len \u003c 0 || (off + len) \u003e b.length) {\n             throw new IndexOutOfBoundsException(\"Array Size\u003d\" + b.length +\n                     \", offset\u003d\" + off + \", length\u003d\" + len);\n         }\n         if (len \u003d\u003d 0) {\n             return 0; // must return 0 for zero length read\n         }\n         if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n             return EOS;\n         }\n         int bytesRead \u003d 0;\n         while (len \u003e 0) {\n             if (this.bbuf.hasRemaining()) {\n-                int chunk \u003d Math.min(this.bbuf.remaining(), len);\n+                final int chunk \u003d Math.min(this.bbuf.remaining(), len);\n                 this.bbuf.get(b, off, chunk);\n                 off +\u003d chunk;\n                 len -\u003d chunk;\n                 bytesRead +\u003d chunk;\n             } else {\n                 fillBuffer();\n                 if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n                     break;\n                 }\n             }\n         }\n         return bytesRead \u003d\u003d 0 \u0026\u0026 !this.cbuf.hasRemaining() ? EOS : bytesRead;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "11c95251bc5923b32fe3b8e9fd9f0fb51c563c57": {
      "type": "Ybodychange",
      "commitMessage": "Replace magic number with private constant EOS (End Of Stream).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415701 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354289952000,
      "commitName": "11c95251bc5923b32fe3b8e9fd9f0fb51c563c57",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1354289885000,
      "commitNameOld": "61bfd7be89e97e204caea839e37c67c6f837a710",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public int read(byte[] b, int off, int len) throws IOException {\n         if (b \u003d\u003d null) {\n             throw new NullPointerException(\"Byte array is null\");\n         }\n         if (len \u003c 0 || (off + len) \u003e b.length) {\n             throw new IndexOutOfBoundsException(\"Array Size\u003d\" + b.length +\n                     \", offset\u003d\" + off + \", length\u003d\" + len);\n         }\n         if (len \u003d\u003d 0) {\n             return 0; // must return 0 for zero length read\n         }\n         if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n-            return -1;\n+            return EOS;\n         }\n         int bytesRead \u003d 0;\n         while (len \u003e 0) {\n             if (this.bbuf.hasRemaining()) {\n                 int chunk \u003d Math.min(this.bbuf.remaining(), len);\n                 this.bbuf.get(b, off, chunk);\n                 off +\u003d chunk;\n                 len -\u003d chunk;\n                 bytesRead +\u003d chunk;\n             } else {\n                 fillBuffer();\n                 if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n                     break;\n                 }\n             }\n         }\n-        return bytesRead \u003d\u003d 0 \u0026\u0026 !this.cbuf.hasRemaining() ? -1 : bytesRead;\n+        return bytesRead \u003d\u003d 0 \u0026\u0026 !this.cbuf.hasRemaining() ? EOS : bytesRead;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0c7f310735275b001264f62e54accb8c78ef2144": {
      "type": "Ybodychange",
      "commitMessage": "Fix occasional test failure - should always return 0 for read length \u003d\u003d 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300238 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1331658212000,
      "commitName": "0c7f310735275b001264f62e54accb8c78ef2144",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1331582626000,
      "commitNameOld": "027d941954b6e81af5ba8acb7d8e5399dc6232d4",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.87,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n     public int read(byte[] b, int off, int len) throws IOException {\n         if (b \u003d\u003d null) {\n             throw new NullPointerException(\"Byte array is null\");\n         }\n         if (len \u003c 0 || (off + len) \u003e b.length) {\n             throw new IndexOutOfBoundsException(\"Array Size\u003d\" + b.length +\n                     \", offset\u003d\" + off + \", length\u003d\" + len);\n-        }        \n+        }\n+        if (len \u003d\u003d 0) {\n+            return 0; // must return 0 for zero length read\n+        }\n         if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n             return -1;\n         }\n         int bytesRead \u003d 0;\n         while (len \u003e 0) {\n             if (this.bbuf.hasRemaining()) {\n                 int chunk \u003d Math.min(this.bbuf.remaining(), len);\n                 this.bbuf.get(b, off, chunk);\n                 off +\u003d chunk;\n                 len -\u003d chunk;\n                 bytesRead +\u003d chunk;\n             } else {\n                 fillBuffer();\n                 if (!this.bbuf.hasRemaining() \u0026\u0026 !this.cbuf.hasRemaining()) {\n                     break;\n                 }\n             }\n         }\n         return bytesRead \u003d\u003d 0 \u0026\u0026 !this.cbuf.hasRemaining() ? -1 : bytesRead;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "50a7fdcaf8fb9a684a96568ceeb8643b4941c475": {
      "type": "Yintroduced",
      "commitMessage": "IO-297 CharSequenceInputStream to efficiently stream content of a CharSequence\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295643 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1330617632000,
      "commitName": "50a7fdcaf8fb9a684a96568ceeb8643b4941c475",
      "commitAuthor": "Sebastian Bazley"
    }
  }
}