{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "IOUtils.java",
  "functionName": "copyLarge",
  "functionId": "copyLarge___input-Reader__output-Writer",
  "sourceFilePath": "src/main/java/org/apache/commons/io/IOUtils.java",
  "functionStartLine": 2514,
  "functionEndLine": 2516,
  "changeHistory": [
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "62dd09687a08f660efbab7adc9f82ae501fd840f",
    "1daa7cb1c8d2abe9caaa4c6f568e00217ce18da5",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "4147a50bae4e937d0bd41c397b13009b56a8cf2a",
    "bbf9bb5b413200614e1e05db4f9c1c5e01e41061"
  ],
  "changeHistoryShort": {
    "6aa00766b9103d75c763160280429af8e1f0549e": "Yparametermetachange",
    "62dd09687a08f660efbab7adc9f82ae501fd840f": "Ybodychange",
    "1daa7cb1c8d2abe9caaa4c6f568e00217ce18da5": "Ybodychange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "4147a50bae4e937d0bd41c397b13009b56a8cf2a": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "bbf9bb5b413200614e1e05db4f9c1c5e01e41061": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1354302626000,
      "commitNameOld": "efca1657258b7555b80bbee207a3221489b9ffed",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-    public static long copyLarge(Reader input, Writer output) throws IOException {\n+    public static long copyLarge(final Reader input, final Writer output) throws IOException {\n         return copyLarge(input, output, new char[DEFAULT_BUFFER_SIZE]);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62dd09687a08f660efbab7adc9f82ae501fd840f": {
      "type": "Ybodychange",
      "commitMessage": "IO-308 Allow applications to provide buffer (or size) for copyLarge methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304086 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332452951000,
      "commitName": "62dd09687a08f660efbab7adc9f82ae501fd840f",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1332451725000,
      "commitNameOld": "9f7b69e843d9f039b375c1d2aacc05d4e49040e0",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,3 @@\n     public static long copyLarge(Reader input, Writer output) throws IOException {\n-        char[] buffer \u003d new char[DEFAULT_BUFFER_SIZE];\n-        long count \u003d 0;\n-        int n \u003d 0;\n-        while (EOF !\u003d (n \u003d input.read(buffer))) {\n-            output.write(buffer, 0, n);\n-            count +\u003d n;\n-        }\n-        return count;\n+        return copyLarge(input, output, new char[DEFAULT_BUFFER_SIZE]);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1daa7cb1c8d2abe9caaa4c6f568e00217ce18da5": {
      "type": "Ybodychange",
      "commitMessage": "Replace magic number (-1) with new private constant EOF.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304049 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332449192000,
      "commitName": "1daa7cb1c8d2abe9caaa4c6f568e00217ce18da5",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1332448861000,
      "commitNameOld": "2413cf3c607371a7b7aa9d37a9e5d916814a4799",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     public static long copyLarge(Reader input, Writer output) throws IOException {\n         char[] buffer \u003d new char[DEFAULT_BUFFER_SIZE];\n         long count \u003d 0;\n         int n \u003d 0;\n-        while (-1 !\u003d (n \u003d input.read(buffer))) {\n+        while (EOF !\u003d (n \u003d input.read(buffer))) {\n             output.write(buffer, 0, n);\n             count +\u003d n;\n         }\n         return count;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/IOUtils.java",
        "newPath": "src/main/java/org/apache/commons/io/IOUtils.java"
      }
    },
    "4147a50bae4e937d0bd41c397b13009b56a8cf2a": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "IO-84 Modify copy() methods that return an int to throw an ArithmeticException if the returned size is too large for an int to handle. Add two new equivalent copyLarge() methods that return a long for large files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463154 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1160641463000,
      "commitName": "4147a50bae4e937d0bd41c397b13009b56a8cf2a",
      "commitAuthor": "Niall Pemberton",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "IO-84 Modify copy() methods that return an int to throw an ArithmeticException if the returned size is too large for an int to handle. Add two new equivalent copyLarge() methods that return a long for large files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463154 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1160641463000,
          "commitName": "4147a50bae4e937d0bd41c397b13009b56a8cf2a",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1160225552000,
          "commitNameOld": "83af1cb1fe4a4a8f6af79fe8c44258d95e061e31",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 4.81,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public static int copy(Reader input, Writer output) throws IOException {\n+    public static long copyLarge(Reader input, Writer output) throws IOException {\n         char[] buffer \u003d new char[DEFAULT_BUFFER_SIZE];\n-        int count \u003d 0;\n+        long count \u003d 0;\n         int n \u003d 0;\n         while (-1 !\u003d (n \u003d input.read(buffer))) {\n             output.write(buffer, 0, n);\n             count +\u003d n;\n         }\n         return count;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldMethodName": "copy",
            "newMethodName": "copyLarge"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "IO-84 Modify copy() methods that return an int to throw an ArithmeticException if the returned size is too large for an int to handle. Add two new equivalent copyLarge() methods that return a long for large files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463154 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1160641463000,
          "commitName": "4147a50bae4e937d0bd41c397b13009b56a8cf2a",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1160225552000,
          "commitNameOld": "83af1cb1fe4a4a8f6af79fe8c44258d95e061e31",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 4.81,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public static int copy(Reader input, Writer output) throws IOException {\n+    public static long copyLarge(Reader input, Writer output) throws IOException {\n         char[] buffer \u003d new char[DEFAULT_BUFFER_SIZE];\n-        int count \u003d 0;\n+        long count \u003d 0;\n         int n \u003d 0;\n         while (-1 !\u003d (n \u003d input.read(buffer))) {\n             output.write(buffer, 0, n);\n             count +\u003d n;\n         }\n         return count;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ybodychange",
          "commitMessage": "IO-84 Modify copy() methods that return an int to throw an ArithmeticException if the returned size is too large for an int to handle. Add two new equivalent copyLarge() methods that return a long for large files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463154 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1160641463000,
          "commitName": "4147a50bae4e937d0bd41c397b13009b56a8cf2a",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1160225552000,
          "commitNameOld": "83af1cb1fe4a4a8f6af79fe8c44258d95e061e31",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 4.81,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public static int copy(Reader input, Writer output) throws IOException {\n+    public static long copyLarge(Reader input, Writer output) throws IOException {\n         char[] buffer \u003d new char[DEFAULT_BUFFER_SIZE];\n-        int count \u003d 0;\n+        long count \u003d 0;\n         int n \u003d 0;\n         while (-1 !\u003d (n \u003d input.read(buffer))) {\n             output.write(buffer, 0, n);\n             count +\u003d n;\n         }\n         return count;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "bbf9bb5b413200614e1e05db4f9c1c5e01e41061": {
      "type": "Yintroduced",
      "commitMessage": "Add code from CopyUtils to IOUtils, refactoring to be simpler, clearer and more efficient\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1092440341000,
      "commitName": "bbf9bb5b413200614e1e05db4f9c1c5e01e41061",
      "commitAuthor": "Stephen Colebourne"
    }
  }
}