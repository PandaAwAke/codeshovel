{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "FileUtils.java",
  "functionName": "contentEqualsIgnoreEOL",
  "functionId": "contentEqualsIgnoreEOL___file1-File__file2-File__charsetName-String",
  "sourceFilePath": "src/main/java/org/apache/commons/io/FileUtils.java",
  "functionStartLine": 788,
  "functionEndLine": 818,
  "changeHistory": [
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
    "493a38aaeacec2a9365e055ffbd7e14bd14b24af",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "a2cf54639b1655d9059d416e6a6cb80931940a7d"
  ],
  "changeHistoryShort": {
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0": "Ybodychange",
    "493a38aaeacec2a9365e055ffbd7e14bd14b24af": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "a2cf54639b1655d9059d416e6a6cb80931940a7d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0": {
      "type": "Ybodychange",
      "commitMessage": "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1462579617000,
      "commitName": "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1461715185000,
      "commitNameOld": "6c3a1bb78c3e92fded50c1c1e9f4c3e2e6e9dd4c",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 10.01,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,31 @@\n     public static boolean contentEqualsIgnoreEOL(final File file1, final File file2, final String charsetName)\n             throws IOException {\n         final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n             // same file\n             return true;\n         }\n \n-        Reader input1 \u003d null;\n-        Reader input2 \u003d null;\n-        try {\n-            if (charsetName \u003d\u003d null) {\n-                // N.B. make explicit the use of the default charset\n-                input1 \u003d new InputStreamReader(new FileInputStream(file1), Charset.defaultCharset());\n-                input2 \u003d new InputStreamReader(new FileInputStream(file2), Charset.defaultCharset());\n-            } else {\n-                input1 \u003d new InputStreamReader(new FileInputStream(file1), charsetName);\n-                input2 \u003d new InputStreamReader(new FileInputStream(file2), charsetName);\n-            }\n+        try (Reader input1 \u003d charsetName \u003d\u003d null\n+                                 ? new InputStreamReader(new FileInputStream(file1), Charset.defaultCharset())\n+                                 : new InputStreamReader(new FileInputStream(file1), charsetName);\n+             Reader input2 \u003d charsetName \u003d\u003d null\n+                                 ? new InputStreamReader(new FileInputStream(file2), Charset.defaultCharset())\n+                                 : new InputStreamReader(new FileInputStream(file2), charsetName)) {\n             return IOUtils.contentEqualsIgnoreEOL(input1, input2);\n-\n-        } finally {\n-            IOUtils.closeQuietly(input1);\n-            IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "493a38aaeacec2a9365e055ffbd7e14bd14b24af": {
      "type": "Ybodychange",
      "commitMessage": "Make explicit where the default platform encoding is being used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468883 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1366203760000,
      "commitName": "493a38aaeacec2a9365e055ffbd7e14bd14b24af",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1366162283000,
      "commitNameOld": "f89670bd02bc20cb858ac6b05d6fe6332245e47d",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.48,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,39 @@\n     public static boolean contentEqualsIgnoreEOL(final File file1, final File file2, final String charsetName) throws IOException {\n         final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n             // same file\n             return true;\n         }\n \n         Reader input1 \u003d null;\n         Reader input2 \u003d null;\n         try {\n             if (charsetName \u003d\u003d null) {\n-                input1 \u003d new InputStreamReader(new FileInputStream(file1));\n-                input2 \u003d new InputStreamReader(new FileInputStream(file2));\n+                // N.B. make explicit the use of the default charset\n+                input1 \u003d new InputStreamReader(new FileInputStream(file1), Charset.defaultCharset());\n+                input2 \u003d new InputStreamReader(new FileInputStream(file2), Charset.defaultCharset());\n             } else {\n                 input1 \u003d new InputStreamReader(new FileInputStream(file1), charsetName);\n                 input2 \u003d new InputStreamReader(new FileInputStream(file2), charsetName);\n             }\n             return IOUtils.contentEqualsIgnoreEOL(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1351082444000,
          "commitNameOld": "965f66687351e0abd445925d0497f96e5656ff13",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 37.34,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,38 @@\n-    public static boolean contentEqualsIgnoreEOL(File file1, File file2, String charsetName) throws IOException {\n-        boolean file1Exists \u003d file1.exists();\n+    public static boolean contentEqualsIgnoreEOL(final File file1, final File file2, final String charsetName) throws IOException {\n+        final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n             // same file\n             return true;\n         }\n \n         Reader input1 \u003d null;\n         Reader input2 \u003d null;\n         try {\n             if (charsetName \u003d\u003d null) {\n                 input1 \u003d new InputStreamReader(new FileInputStream(file1));\n                 input2 \u003d new InputStreamReader(new FileInputStream(file2));\n             } else {\n                 input1 \u003d new InputStreamReader(new FileInputStream(file1), charsetName);\n                 input2 \u003d new InputStreamReader(new FileInputStream(file2), charsetName);\n             }\n             return IOUtils.contentEqualsIgnoreEOL(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1351082444000,
          "commitNameOld": "965f66687351e0abd445925d0497f96e5656ff13",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 37.34,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,38 @@\n-    public static boolean contentEqualsIgnoreEOL(File file1, File file2, String charsetName) throws IOException {\n-        boolean file1Exists \u003d file1.exists();\n+    public static boolean contentEqualsIgnoreEOL(final File file1, final File file2, final String charsetName) throws IOException {\n+        final boolean file1Exists \u003d file1.exists();\n         if (file1Exists !\u003d file2.exists()) {\n             return false;\n         }\n \n         if (!file1Exists) {\n             // two not existing files are equal\n             return true;\n         }\n \n         if (file1.isDirectory() || file2.isDirectory()) {\n             // don\u0027t want to compare directory contents\n             throw new IOException(\"Can\u0027t compare directories, only files\");\n         }\n \n         if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n             // same file\n             return true;\n         }\n \n         Reader input1 \u003d null;\n         Reader input2 \u003d null;\n         try {\n             if (charsetName \u003d\u003d null) {\n                 input1 \u003d new InputStreamReader(new FileInputStream(file1));\n                 input2 \u003d new InputStreamReader(new FileInputStream(file2));\n             } else {\n                 input1 \u003d new InputStreamReader(new FileInputStream(file1), charsetName);\n                 input2 \u003d new InputStreamReader(new FileInputStream(file2), charsetName);\n             }\n             return IOUtils.contentEqualsIgnoreEOL(input1, input2);\n \n         } finally {\n             IOUtils.closeQuietly(input1);\n             IOUtils.closeQuietly(input2);\n         }\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a2cf54639b1655d9059d416e6a6cb80931940a7d": {
      "type": "Yintroduced",
      "commitMessage": "IO-275 FileUtils.contentEquals/IOUtils.contentEquals - Add option to ignore \"line endings\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1200693 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1320977639000,
      "commitName": "a2cf54639b1655d9059d416e6a6cb80931940a7d",
      "commitAuthor": "Sebastian Bazley"
    }
  }
}