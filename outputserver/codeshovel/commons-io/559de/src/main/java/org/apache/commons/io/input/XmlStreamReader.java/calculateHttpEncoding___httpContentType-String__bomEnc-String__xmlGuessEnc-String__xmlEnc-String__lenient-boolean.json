{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "XmlStreamReader.java",
  "functionName": "calculateHttpEncoding",
  "functionId": "calculateHttpEncoding___httpContentType-String__bomEnc-String__xmlGuessEnc-String__xmlEnc-String__lenient-boolean",
  "sourceFilePath": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
  "functionStartLine": 577,
  "functionEndLine": 643,
  "changeHistory": [
    "8993c0060e4eb2d5bca20e3529a829a9dd90efdf",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "e4c65e5424fe7a7c9795348fc855d42a247f0c00",
    "1170279dc85c2bbdea594b053c56b379a72a2104",
    "d46782f8408d2ae17f8e05f18080db51ed608b35",
    "7b6afbba6b7d568983f6b4481f96e0d1f207eafa",
    "7264eea73bc0f9560520ed6c423ff62f18ab4940",
    "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
    "305062404737ecf9a3ff561bca985513cee818ad",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "e8703179767272e33bc097c730606ee03476c44b",
    "5b75cf83b2db408f8228b26910a8d3d3633cd54f"
  ],
  "changeHistoryShort": {
    "8993c0060e4eb2d5bca20e3529a829a9dd90efdf": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "e4c65e5424fe7a7c9795348fc855d42a247f0c00": "Ybodychange",
    "1170279dc85c2bbdea594b053c56b379a72a2104": "Ybodychange",
    "d46782f8408d2ae17f8e05f18080db51ed608b35": "Ymodifierchange",
    "7b6afbba6b7d568983f6b4481f96e0d1f207eafa": "Ybodychange",
    "7264eea73bc0f9560520ed6c423ff62f18ab4940": "Ymultichange(Yparameterchange,Ybodychange)",
    "e4540bba7aebd88d3d4b22e68a6a916ddfc48890": "Ymultichange(Yparameterchange,Ybodychange)",
    "305062404737ecf9a3ff561bca985513cee818ad": "Ybodychange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "e8703179767272e33bc097c730606ee03476c44b": "Ybodychange",
    "5b75cf83b2db408f8228b26910a8d3d3633cd54f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8993c0060e4eb2d5bca20e3529a829a9dd90efdf": {
      "type": "Ybodychange",
      "commitMessage": "Don\u0027t need to nest else clause. Refactor magic numbers into constants.",
      "commitDate": 1520355642000,
      "commitName": "8993c0060e4eb2d5bca20e3529a829a9dd90efdf",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": 1515926378000,
      "commitNameOld": "d19259a7774e23ebdaac4af5ee4def8602fe2969",
      "commitAuthorOld": "luccioman",
      "daysBetweenCommits": 51.26,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,68 +1,67 @@\n     String calculateHttpEncoding(final String httpContentType,\n             final String bomEnc, final String xmlGuessEnc, final String xmlEnc,\n             final boolean lenient) throws IOException {\n \n         // Lenient and has XML encoding\n         if (lenient \u0026\u0026 xmlEnc !\u003d null) {\n             return xmlEnc;\n         }\n \n         // Determine mime/encoding content types from HTTP Content Type\n         final String cTMime \u003d getContentTypeMime(httpContentType);\n         final String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n         final boolean appXml  \u003d isAppXml(cTMime);\n         final boolean textXml \u003d isTextXml(cTMime);\n \n         // Mime type NOT \"application/xml\" or \"text/xml\"\n         if (!appXml \u0026\u0026 !textXml) {\n             final String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // No content type encoding\n         if (cTEnc \u003d\u003d null) {\n             if (appXml) {\n                 return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n-            } else {\n-                return defaultEncoding \u003d\u003d null ? US_ASCII : defaultEncoding;\n             }\n+            return defaultEncoding \u003d\u003d null ? US_ASCII : defaultEncoding;\n         }\n \n         // UTF-16BE or UTF-16LE content type encoding\n         if (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE)) {\n             if (bomEnc !\u003d null) {\n                 final String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-16 content type encoding\n         if (cTEnc.equals(UTF_16)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                 return bomEnc;\n             }\n             final String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // UTF-32BE or UTF-132E content type encoding\n         if (cTEnc.equals(UTF_32BE) || cTEnc.equals(UTF_32LE)) {\n             if (bomEnc !\u003d null) {\n                 final String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-32 content type encoding\n         if (cTEnc.equals(UTF_32)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_32)) {\n                 return bomEnc;\n             }\n             final String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         return cTEnc;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1338907681000,
          "commitNameOld": "e4c65e5424fe7a7c9795348fc855d42a247f0c00",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 178.25,
          "commitsBetweenForRepo": 86,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,68 +1,68 @@\n-    String calculateHttpEncoding(String httpContentType,\n-            String bomEnc, String xmlGuessEnc, String xmlEnc,\n-            boolean lenient) throws IOException {\n+    String calculateHttpEncoding(final String httpContentType,\n+            final String bomEnc, final String xmlGuessEnc, final String xmlEnc,\n+            final boolean lenient) throws IOException {\n \n         // Lenient and has XML encoding\n         if (lenient \u0026\u0026 xmlEnc !\u003d null) {\n             return xmlEnc;\n         }\n \n         // Determine mime/encoding content types from HTTP Content Type\n-        String cTMime \u003d getContentTypeMime(httpContentType);\n-        String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n-        boolean appXml  \u003d isAppXml(cTMime);\n-        boolean textXml \u003d isTextXml(cTMime);\n+        final String cTMime \u003d getContentTypeMime(httpContentType);\n+        final String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n+        final boolean appXml  \u003d isAppXml(cTMime);\n+        final boolean textXml \u003d isTextXml(cTMime);\n \n         // Mime type NOT \"application/xml\" or \"text/xml\"\n         if (!appXml \u0026\u0026 !textXml) {\n-            String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            final String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // No content type encoding\n         if (cTEnc \u003d\u003d null) {\n             if (appXml) {\n                 return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n             } else {\n                 return defaultEncoding \u003d\u003d null ? US_ASCII : defaultEncoding;\n             }\n         }\n \n         // UTF-16BE or UTF-16LE content type encoding\n         if (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE)) {\n             if (bomEnc !\u003d null) {\n-                String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                final String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-16 content type encoding\n         if (cTEnc.equals(UTF_16)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                 return bomEnc;\n             }\n-            String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            final String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // UTF-32BE or UTF-132E content type encoding\n         if (cTEnc.equals(UTF_32BE) || cTEnc.equals(UTF_32LE)) {\n             if (bomEnc !\u003d null) {\n-                String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                final String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-32 content type encoding\n         if (cTEnc.equals(UTF_32)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_32)) {\n                 return bomEnc;\n             }\n-            String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            final String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         return cTEnc;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1338907681000,
          "commitNameOld": "e4c65e5424fe7a7c9795348fc855d42a247f0c00",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 178.25,
          "commitsBetweenForRepo": 86,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,68 +1,68 @@\n-    String calculateHttpEncoding(String httpContentType,\n-            String bomEnc, String xmlGuessEnc, String xmlEnc,\n-            boolean lenient) throws IOException {\n+    String calculateHttpEncoding(final String httpContentType,\n+            final String bomEnc, final String xmlGuessEnc, final String xmlEnc,\n+            final boolean lenient) throws IOException {\n \n         // Lenient and has XML encoding\n         if (lenient \u0026\u0026 xmlEnc !\u003d null) {\n             return xmlEnc;\n         }\n \n         // Determine mime/encoding content types from HTTP Content Type\n-        String cTMime \u003d getContentTypeMime(httpContentType);\n-        String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n-        boolean appXml  \u003d isAppXml(cTMime);\n-        boolean textXml \u003d isTextXml(cTMime);\n+        final String cTMime \u003d getContentTypeMime(httpContentType);\n+        final String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n+        final boolean appXml  \u003d isAppXml(cTMime);\n+        final boolean textXml \u003d isTextXml(cTMime);\n \n         // Mime type NOT \"application/xml\" or \"text/xml\"\n         if (!appXml \u0026\u0026 !textXml) {\n-            String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            final String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // No content type encoding\n         if (cTEnc \u003d\u003d null) {\n             if (appXml) {\n                 return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n             } else {\n                 return defaultEncoding \u003d\u003d null ? US_ASCII : defaultEncoding;\n             }\n         }\n \n         // UTF-16BE or UTF-16LE content type encoding\n         if (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE)) {\n             if (bomEnc !\u003d null) {\n-                String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                final String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-16 content type encoding\n         if (cTEnc.equals(UTF_16)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                 return bomEnc;\n             }\n-            String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            final String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // UTF-32BE or UTF-132E content type encoding\n         if (cTEnc.equals(UTF_32BE) || cTEnc.equals(UTF_32LE)) {\n             if (bomEnc !\u003d null) {\n-                String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                final String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-32 content type encoding\n         if (cTEnc.equals(UTF_32)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_32)) {\n                 return bomEnc;\n             }\n-            String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            final String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         return cTEnc;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e4c65e5424fe7a7c9795348fc855d42a247f0c00": {
      "type": "Ybodychange",
      "commitMessage": "[IO-320] Add XmlStreamReader support for UTF-32.\n[IO-331] BOMInputStream wrongly detects UTF-32LE_BOM files as UTF-16LE_BOM files in method getBOM().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1346400 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1338907681000,
      "commitName": "e4c65e5424fe7a7c9795348fc855d42a247f0c00",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1332449729000,
      "commitNameOld": "cf5c462807a137b823a3155dfe9800b3cbf2303d",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 74.74,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,68 @@\n     String calculateHttpEncoding(String httpContentType,\n             String bomEnc, String xmlGuessEnc, String xmlEnc,\n             boolean lenient) throws IOException {\n \n         // Lenient and has XML encoding\n         if (lenient \u0026\u0026 xmlEnc !\u003d null) {\n             return xmlEnc;\n         }\n \n         // Determine mime/encoding content types from HTTP Content Type\n         String cTMime \u003d getContentTypeMime(httpContentType);\n         String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n         boolean appXml  \u003d isAppXml(cTMime);\n         boolean textXml \u003d isTextXml(cTMime);\n \n         // Mime type NOT \"application/xml\" or \"text/xml\"\n         if (!appXml \u0026\u0026 !textXml) {\n             String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // No content type encoding\n         if (cTEnc \u003d\u003d null) {\n             if (appXml) {\n                 return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n             } else {\n                 return defaultEncoding \u003d\u003d null ? US_ASCII : defaultEncoding;\n             }\n         }\n \n         // UTF-16BE or UTF-16LE content type encoding\n         if (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE)) {\n             if (bomEnc !\u003d null) {\n                 String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-16 content type encoding\n         if (cTEnc.equals(UTF_16)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                 return bomEnc;\n             }\n             String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n+        // UTF-32BE or UTF-132E content type encoding\n+        if (cTEnc.equals(UTF_32BE) || cTEnc.equals(UTF_32LE)) {\n+            if (bomEnc !\u003d null) {\n+                String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            }\n+            return cTEnc;\n+        }\n+\n+        // UTF-32 content type encoding\n+        if (cTEnc.equals(UTF_32)) {\n+            if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_32)) {\n+                return bomEnc;\n+            }\n+            String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+        }\n+\n         return cTEnc;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1170279dc85c2bbdea594b053c56b379a72a2104": {
      "type": "Ybodychange",
      "commitMessage": "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332207332000,
      "commitName": "1170279dc85c2bbdea594b053c56b379a72a2104",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1331603157000,
      "commitNameOld": "5db7f804522957c408a9db89b69715d71a0fd8f4",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.99,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n     String calculateHttpEncoding(String httpContentType,\n             String bomEnc, String xmlGuessEnc, String xmlEnc,\n             boolean lenient) throws IOException {\n \n         // Lenient and has XML encoding\n         if (lenient \u0026\u0026 xmlEnc !\u003d null) {\n             return xmlEnc;\n         }\n \n         // Determine mime/encoding content types from HTTP Content Type\n         String cTMime \u003d getContentTypeMime(httpContentType);\n         String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n         boolean appXml  \u003d isAppXml(cTMime);\n         boolean textXml \u003d isTextXml(cTMime);\n \n         // Mime type NOT \"application/xml\" or \"text/xml\"\n         if (!appXml \u0026\u0026 !textXml) {\n             String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // No content type encoding\n         if (cTEnc \u003d\u003d null) {\n             if (appXml) {\n                 return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n             } else {\n-                return (defaultEncoding \u003d\u003d null) ? US_ASCII : defaultEncoding;\n+                return defaultEncoding \u003d\u003d null ? US_ASCII : defaultEncoding;\n             }\n         }\n \n         // UTF-16BE or UTF-16LE content type encoding\n         if (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE)) {\n             if (bomEnc !\u003d null) {\n                 String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-16 content type encoding\n         if (cTEnc.equals(UTF_16)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                 return bomEnc;\n             }\n             String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         return cTEnc;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d46782f8408d2ae17f8e05f18080db51ed608b35": {
      "type": "Ymodifierchange",
      "commitMessage": "IO-162 Improve testing of Encoding Utility functionality (changed the visibility of some XmlStreamReader methods from private to package)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004822 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286315886000,
      "commitName": "d46782f8408d2ae17f8e05f18080db51ed608b35",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286250944000,
      "commitNameOld": "7b6afbba6b7d568983f6b4481f96e0d1f207eafa",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.75,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n-    private String calculateHttpEncoding(String httpContentType,\n+    String calculateHttpEncoding(String httpContentType,\n             String bomEnc, String xmlGuessEnc, String xmlEnc,\n             boolean lenient) throws IOException {\n \n         // Lenient and has XML encoding\n         if (lenient \u0026\u0026 xmlEnc !\u003d null) {\n             return xmlEnc;\n         }\n \n         // Determine mime/encoding content types from HTTP Content Type\n         String cTMime \u003d getContentTypeMime(httpContentType);\n         String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n         boolean appXml  \u003d isAppXml(cTMime);\n         boolean textXml \u003d isTextXml(cTMime);\n \n         // Mime type NOT \"application/xml\" or \"text/xml\"\n         if (!appXml \u0026\u0026 !textXml) {\n             String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         // No content type encoding\n         if (cTEnc \u003d\u003d null) {\n             if (appXml) {\n                 return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n             } else {\n                 return (defaultEncoding \u003d\u003d null) ? US_ASCII : defaultEncoding;\n             }\n         }\n \n         // UTF-16BE or UTF-16LE content type encoding\n         if (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE)) {\n             if (bomEnc !\u003d null) {\n                 String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return cTEnc;\n         }\n \n         // UTF-16 content type encoding\n         if (cTEnc.equals(UTF_16)) {\n             if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                 return bomEnc;\n             }\n             String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n \n         return cTEnc;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7b6afbba6b7d568983f6b4481f96e0d1f207eafa": {
      "type": "Ybodychange",
      "commitMessage": "Refactor the calculateRawEncoding() \u0026 calculateHttpEncoding() methods to make them easier to understand\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004517 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286250944000,
      "commitName": "7b6afbba6b7d568983f6b4481f96e0d1f207eafa",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286247516000,
      "commitNameOld": "7264eea73bc0f9560520ed6c423ff62f18ab4940",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,50 @@\n     private String calculateHttpEncoding(String httpContentType,\n             String bomEnc, String xmlGuessEnc, String xmlEnc,\n             boolean lenient) throws IOException {\n+\n+        // Lenient and has XML encoding\n+        if (lenient \u0026\u0026 xmlEnc !\u003d null) {\n+            return xmlEnc;\n+        }\n+\n+        // Determine mime/encoding content types from HTTP Content Type\n         String cTMime \u003d getContentTypeMime(httpContentType);\n         String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n-        String encoding;\n-        if (lenient \u0026 xmlEnc !\u003d null) {\n-            encoding \u003d xmlEnc;\n-        } else {\n-            boolean appXml \u003d isAppXml(cTMime);\n-            boolean textXml \u003d isTextXml(cTMime);\n-            if (appXml || textXml) {\n-                if (cTEnc \u003d\u003d null) {\n-                    if (appXml) {\n-                        encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n-                    } else {\n-                        encoding \u003d (defaultEncoding \u003d\u003d null) ? US_ASCII\n-                                : defaultEncoding;\n-                    }\n-                } else if (bomEnc !\u003d null\n-                        \u0026\u0026 (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE))) {\n-                    String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n-                    throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n-                } else if (cTEnc.equals(UTF_16)) {\n-                    if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n-                        encoding \u003d bomEnc;\n-                    } else {\n-                        String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n-                        throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n-                    }\n-                } else {\n-                    encoding \u003d cTEnc;\n-                }\n+        boolean appXml  \u003d isAppXml(cTMime);\n+        boolean textXml \u003d isTextXml(cTMime);\n+\n+        // Mime type NOT \"application/xml\" or \"text/xml\"\n+        if (!appXml \u0026\u0026 !textXml) {\n+            String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+        }\n+\n+        // No content type encoding\n+        if (cTEnc \u003d\u003d null) {\n+            if (appXml) {\n+                return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n             } else {\n-                String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n-                throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                return (defaultEncoding \u003d\u003d null) ? US_ASCII : defaultEncoding;\n             }\n         }\n-        return encoding;\n+\n+        // UTF-16BE or UTF-16LE content type encoding\n+        if (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE)) {\n+            if (bomEnc !\u003d null) {\n+                String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            }\n+            return cTEnc;\n+        }\n+\n+        // UTF-16 content type encoding\n+        if (cTEnc.equals(UTF_16)) {\n+            if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n+                return bomEnc;\n+            }\n+            String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+            throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+        }\n+\n+        return cTEnc;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7264eea73bc0f9560520ed6c423ff62f18ab4940": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Refactoring - move mine/encoding content type detection into the calculateHttpEncoding() method where its used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004514 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286247516000,
      "commitName": "7264eea73bc0f9560520ed6c423ff62f18ab4940",
      "commitAuthor": "Niall Pemberton",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactoring - move mine/encoding content type detection into the calculateHttpEncoding() method where its used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004514 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1286247516000,
          "commitName": "7264eea73bc0f9560520ed6c423ff62f18ab4940",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1286246960000,
          "commitNameOld": "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,40 @@\n-    private String calculateHttpEncoding(String cTMime, String cTEnc,\n+    private String calculateHttpEncoding(String httpContentType,\n             String bomEnc, String xmlGuessEnc, String xmlEnc,\n             boolean lenient) throws IOException {\n+        String cTMime \u003d getContentTypeMime(httpContentType);\n+        String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n         String encoding;\n         if (lenient \u0026 xmlEnc !\u003d null) {\n             encoding \u003d xmlEnc;\n         } else {\n             boolean appXml \u003d isAppXml(cTMime);\n             boolean textXml \u003d isTextXml(cTMime);\n             if (appXml || textXml) {\n                 if (cTEnc \u003d\u003d null) {\n                     if (appXml) {\n                         encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n                     } else {\n                         encoding \u003d (defaultEncoding \u003d\u003d null) ? US_ASCII\n                                 : defaultEncoding;\n                     }\n                 } else if (bomEnc !\u003d null\n                         \u0026\u0026 (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE))) {\n                     String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 } else if (cTEnc.equals(UTF_16)) {\n                     if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                         encoding \u003d bomEnc;\n                     } else {\n                         String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                         throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     }\n                 } else {\n                     encoding \u003d cTEnc;\n                 }\n             } else {\n                 String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring - move mine/encoding content type detection into the calculateHttpEncoding() method where its used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004514 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1286247516000,
          "commitName": "7264eea73bc0f9560520ed6c423ff62f18ab4940",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1286246960000,
          "commitNameOld": "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,40 @@\n-    private String calculateHttpEncoding(String cTMime, String cTEnc,\n+    private String calculateHttpEncoding(String httpContentType,\n             String bomEnc, String xmlGuessEnc, String xmlEnc,\n             boolean lenient) throws IOException {\n+        String cTMime \u003d getContentTypeMime(httpContentType);\n+        String cTEnc  \u003d getContentTypeEncoding(httpContentType);\n         String encoding;\n         if (lenient \u0026 xmlEnc !\u003d null) {\n             encoding \u003d xmlEnc;\n         } else {\n             boolean appXml \u003d isAppXml(cTMime);\n             boolean textXml \u003d isTextXml(cTMime);\n             if (appXml || textXml) {\n                 if (cTEnc \u003d\u003d null) {\n                     if (appXml) {\n                         encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n                     } else {\n                         encoding \u003d (defaultEncoding \u003d\u003d null) ? US_ASCII\n                                 : defaultEncoding;\n                     }\n                 } else if (bomEnc !\u003d null\n                         \u0026\u0026 (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE))) {\n                     String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 } else if (cTEnc.equals(UTF_16)) {\n                     if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                         encoding \u003d bomEnc;\n                     } else {\n                         String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                         throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     }\n                 } else {\n                     encoding \u003d cTEnc;\n                 }\n             } else {\n                 String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e4540bba7aebd88d3d4b22e68a6a916ddfc48890": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Refactoring to remove the InputStream from XmlStreamReaderException in r1004109 means we don\u0027t need to pass the InputStream to the calculateRawEncoding() and calculateHttpEncoding() methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004512 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286246960000,
      "commitName": "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
      "commitAuthor": "Niall Pemberton",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactoring to remove the InputStream from XmlStreamReaderException in r1004109 means we don\u0027t need to pass the InputStream to the calculateRawEncoding() and calculateHttpEncoding() methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004512 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1286246960000,
          "commitName": "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1286246430000,
          "commitNameOld": "305062404737ecf9a3ff561bca985513cee818ad",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,38 @@\n     private String calculateHttpEncoding(String cTMime, String cTEnc,\n-            String bomEnc, String xmlGuessEnc, String xmlEnc, InputStream is,\n+            String bomEnc, String xmlGuessEnc, String xmlEnc,\n             boolean lenient) throws IOException {\n         String encoding;\n         if (lenient \u0026 xmlEnc !\u003d null) {\n             encoding \u003d xmlEnc;\n         } else {\n             boolean appXml \u003d isAppXml(cTMime);\n             boolean textXml \u003d isTextXml(cTMime);\n             if (appXml || textXml) {\n                 if (cTEnc \u003d\u003d null) {\n                     if (appXml) {\n-                        encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc,\n-                                xmlEnc, is);\n+                        encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n                     } else {\n                         encoding \u003d (defaultEncoding \u003d\u003d null) ? US_ASCII\n                                 : defaultEncoding;\n                     }\n                 } else if (bomEnc !\u003d null\n                         \u0026\u0026 (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE))) {\n                     String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 } else if (cTEnc.equals(UTF_16)) {\n                     if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                         encoding \u003d bomEnc;\n                     } else {\n                         String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                         throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     }\n                 } else {\n                     encoding \u003d cTEnc;\n                 }\n             } else {\n                 String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring to remove the InputStream from XmlStreamReaderException in r1004109 means we don\u0027t need to pass the InputStream to the calculateRawEncoding() and calculateHttpEncoding() methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004512 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1286246960000,
          "commitName": "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
          "commitAuthor": "Niall Pemberton",
          "commitDateOld": 1286246430000,
          "commitNameOld": "305062404737ecf9a3ff561bca985513cee818ad",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,38 @@\n     private String calculateHttpEncoding(String cTMime, String cTEnc,\n-            String bomEnc, String xmlGuessEnc, String xmlEnc, InputStream is,\n+            String bomEnc, String xmlGuessEnc, String xmlEnc,\n             boolean lenient) throws IOException {\n         String encoding;\n         if (lenient \u0026 xmlEnc !\u003d null) {\n             encoding \u003d xmlEnc;\n         } else {\n             boolean appXml \u003d isAppXml(cTMime);\n             boolean textXml \u003d isTextXml(cTMime);\n             if (appXml || textXml) {\n                 if (cTEnc \u003d\u003d null) {\n                     if (appXml) {\n-                        encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc,\n-                                xmlEnc, is);\n+                        encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n                     } else {\n                         encoding \u003d (defaultEncoding \u003d\u003d null) ? US_ASCII\n                                 : defaultEncoding;\n                     }\n                 } else if (bomEnc !\u003d null\n                         \u0026\u0026 (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE))) {\n                     String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 } else if (cTEnc.equals(UTF_16)) {\n                     if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                         encoding \u003d bomEnc;\n                     } else {\n                         String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                         throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     }\n                 } else {\n                     encoding \u003d cTEnc;\n                 }\n             } else {\n                 String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "305062404737ecf9a3ff561bca985513cee818ad": {
      "type": "Ybodychange",
      "commitMessage": "Remove unsafe *static* MessageFormats instances.\n\nFrom the MessageFormat JavaDocs:\n\"Message formats are not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004511 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286246430000,
      "commitName": "305062404737ecf9a3ff561bca985513cee818ad",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286245688000,
      "commitNameOld": "ac500460cc6de2f84921faaa7c65bbe812cb2fd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,39 @@\n     private String calculateHttpEncoding(String cTMime, String cTEnc,\n             String bomEnc, String xmlGuessEnc, String xmlEnc, InputStream is,\n             boolean lenient) throws IOException {\n         String encoding;\n         if (lenient \u0026 xmlEnc !\u003d null) {\n             encoding \u003d xmlEnc;\n         } else {\n             boolean appXml \u003d isAppXml(cTMime);\n             boolean textXml \u003d isTextXml(cTMime);\n             if (appXml || textXml) {\n                 if (cTEnc \u003d\u003d null) {\n                     if (appXml) {\n                         encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc,\n                                 xmlEnc, is);\n                     } else {\n                         encoding \u003d (defaultEncoding \u003d\u003d null) ? US_ASCII\n                                 : defaultEncoding;\n                     }\n                 } else if (bomEnc !\u003d null\n                         \u0026\u0026 (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE))) {\n-                    throw new XmlStreamReaderException(HTTP_EX_1\n-                            .format(new Object[] { cTMime, cTEnc, bomEnc,\n-                                    xmlGuessEnc, xmlEnc }), cTMime, cTEnc,\n-                            bomEnc, xmlGuessEnc, xmlEnc);\n+                    String msg \u003d MessageFormat.format(HTTP_EX_1, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                    throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                 } else if (cTEnc.equals(UTF_16)) {\n                     if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                         encoding \u003d bomEnc;\n                     } else {\n-                        throw new XmlStreamReaderException(HTTP_EX_2\n-                                .format(new Object[] { cTMime, cTEnc, bomEnc,\n-                                        xmlGuessEnc, xmlEnc }), cTMime, cTEnc,\n-                                bomEnc, xmlGuessEnc, xmlEnc);\n+                        String msg \u003d MessageFormat.format(HTTP_EX_2, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                        throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                     }\n                 } else {\n                     encoding \u003d cTEnc;\n                 }\n             } else {\n-                throw new XmlStreamReaderException(HTTP_EX_3\n-                        .format(new Object[] { cTMime, cTEnc, bomEnc,\n-                                xmlGuessEnc, xmlEnc }), cTMime, cTEnc, bomEnc,\n-                        xmlGuessEnc, xmlEnc);\n+                String msg \u003d MessageFormat.format(HTTP_EX_3, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n+                throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
        "newPath": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
      }
    },
    "e8703179767272e33bc097c730606ee03476c44b": {
      "type": "Ybodychange",
      "commitMessage": "IO-162 Refactoring to remove the InputStream from XmlStreamReaderException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004109 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286166952000,
      "commitName": "e8703179767272e33bc097c730606ee03476c44b",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286164891000,
      "commitNameOld": "a2800c889834ee30b5e8c0971cd1efbfa980bf9a",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     private String calculateHttpEncoding(String cTMime, String cTEnc,\n             String bomEnc, String xmlGuessEnc, String xmlEnc, InputStream is,\n             boolean lenient) throws IOException {\n         String encoding;\n         if (lenient \u0026 xmlEnc !\u003d null) {\n             encoding \u003d xmlEnc;\n         } else {\n             boolean appXml \u003d isAppXml(cTMime);\n             boolean textXml \u003d isTextXml(cTMime);\n             if (appXml || textXml) {\n                 if (cTEnc \u003d\u003d null) {\n                     if (appXml) {\n                         encoding \u003d calculateRawEncoding(bomEnc, xmlGuessEnc,\n                                 xmlEnc, is);\n                     } else {\n                         encoding \u003d (defaultEncoding \u003d\u003d null) ? US_ASCII\n                                 : defaultEncoding;\n                     }\n                 } else if (bomEnc !\u003d null\n                         \u0026\u0026 (cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE))) {\n                     throw new XmlStreamReaderException(HTTP_EX_1\n                             .format(new Object[] { cTMime, cTEnc, bomEnc,\n                                     xmlGuessEnc, xmlEnc }), cTMime, cTEnc,\n-                            bomEnc, xmlGuessEnc, xmlEnc, is);\n+                            bomEnc, xmlGuessEnc, xmlEnc);\n                 } else if (cTEnc.equals(UTF_16)) {\n                     if (bomEnc !\u003d null \u0026\u0026 bomEnc.startsWith(UTF_16)) {\n                         encoding \u003d bomEnc;\n                     } else {\n                         throw new XmlStreamReaderException(HTTP_EX_2\n                                 .format(new Object[] { cTMime, cTEnc, bomEnc,\n                                         xmlGuessEnc, xmlEnc }), cTMime, cTEnc,\n-                                bomEnc, xmlGuessEnc, xmlEnc, is);\n+                                bomEnc, xmlGuessEnc, xmlEnc);\n                     }\n                 } else {\n                     encoding \u003d cTEnc;\n                 }\n             } else {\n                 throw new XmlStreamReaderException(HTTP_EX_3\n                         .format(new Object[] { cTMime, cTEnc, bomEnc,\n                                 xmlGuessEnc, xmlEnc }), cTMime, cTEnc, bomEnc,\n-                        xmlGuessEnc, xmlEnc, is);\n+                        xmlGuessEnc, xmlEnc);\n             }\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5b75cf83b2db408f8228b26910a8d3d3633cd54f": {
      "type": "Yintroduced",
      "commitMessage": "IO-162 add Xml(Stream)Reader/Writer from ROME - thanks to Hervé Boutemy for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286161189000,
      "commitName": "5b75cf83b2db408f8228b26910a8d3d3633cd54f",
      "commitAuthor": "Niall Pemberton"
    }
  }
}