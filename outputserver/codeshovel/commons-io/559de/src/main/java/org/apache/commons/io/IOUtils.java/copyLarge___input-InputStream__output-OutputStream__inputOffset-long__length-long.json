{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "IOUtils.java",
  "functionName": "copyLarge",
  "functionId": "copyLarge___input-InputStream__output-OutputStream__inputOffset-long__length-long",
  "sourceFilePath": "src/main/java/org/apache/commons/io/IOUtils.java",
  "functionStartLine": 2344,
  "functionEndLine": 2347,
  "changeHistory": [
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "62dd09687a08f660efbab7adc9f82ae501fd840f",
    "57ca8f6d878e3ff0955904cc9e261f254c0320b2",
    "211174c5242ef7eff06b2edf7ae74bc55851d2c2",
    "1daa7cb1c8d2abe9caaa4c6f568e00217ce18da5",
    "0031a91ba7b5b580b28fab5cb60d683c93e9fae8"
  ],
  "changeHistoryShort": {
    "6aa00766b9103d75c763160280429af8e1f0549e": "Yparametermetachange",
    "62dd09687a08f660efbab7adc9f82ae501fd840f": "Ymultichange(Ybodychange,Yparametermetachange)",
    "57ca8f6d878e3ff0955904cc9e261f254c0320b2": "Ymultichange(Yparameterchange,Ybodychange)",
    "211174c5242ef7eff06b2edf7ae74bc55851d2c2": "Ybodychange",
    "1daa7cb1c8d2abe9caaa4c6f568e00217ce18da5": "Ybodychange",
    "0031a91ba7b5b580b28fab5cb60d683c93e9fae8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1354302626000,
      "commitNameOld": "efca1657258b7555b80bbee207a3221489b9ffed",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-    public static long copyLarge(InputStream input, OutputStream output, long inputOffset, long length)\n+    public static long copyLarge(final InputStream input, final OutputStream output, final long inputOffset, final long length)\n             throws IOException {\n         return copyLarge(input, output, inputOffset, length, new byte[DEFAULT_BUFFER_SIZE]);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62dd09687a08f660efbab7adc9f82ae501fd840f": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "IO-308 Allow applications to provide buffer (or size) for copyLarge methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304086 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332452951000,
      "commitName": "62dd09687a08f660efbab7adc9f82ae501fd840f",
      "commitAuthor": "Sebastian Bazley",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "IO-308 Allow applications to provide buffer (or size) for copyLarge methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304086 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1332452951000,
          "commitName": "62dd09687a08f660efbab7adc9f82ae501fd840f",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": 1332451725000,
          "commitNameOld": "9f7b69e843d9f039b375c1d2aacc05d4e49040e0",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,4 @@\n-    public static long copyLarge(InputStream input, OutputStream output, final long inputOffset, final long length)\n+    public static long copyLarge(InputStream input, OutputStream output, long inputOffset, long length)\n             throws IOException {\n-        if (inputOffset \u003e 0) {\n-            skipFully(input, inputOffset);\n-        }\n-        if (length \u003d\u003d 0) {\n-            return 0;\n-        }\n-        final byte[] buffer \u003d new byte[DEFAULT_BUFFER_SIZE];\n-        final int bufferLength \u003d buffer.length;\n-        int bytesToRead \u003d bufferLength;\n-        if (length \u003e 0 \u0026\u0026 length \u003c bufferLength) {\n-            bytesToRead \u003d (int) length;\n-        }\n-        int read;\n-        long totalRead \u003d 0;\n-        while (bytesToRead \u003e 0 \u0026\u0026 EOF !\u003d (read \u003d input.read(buffer, 0, bytesToRead))) {\n-            output.write(buffer, 0, read);\n-            totalRead +\u003d read;\n-            if (length \u003e 0) { // only adjust length if not reading to the end\n-                // Note the cast must work because buffer.length is an integer\n-                bytesToRead \u003d (int) Math.min(length - totalRead, bufferLength);\n-            }\n-        }\n-        return totalRead;\n+        return copyLarge(input, output, inputOffset, length, new byte[DEFAULT_BUFFER_SIZE]);\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "IO-308 Allow applications to provide buffer (or size) for copyLarge methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304086 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1332452951000,
          "commitName": "62dd09687a08f660efbab7adc9f82ae501fd840f",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": 1332451725000,
          "commitNameOld": "9f7b69e843d9f039b375c1d2aacc05d4e49040e0",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,4 @@\n-    public static long copyLarge(InputStream input, OutputStream output, final long inputOffset, final long length)\n+    public static long copyLarge(InputStream input, OutputStream output, long inputOffset, long length)\n             throws IOException {\n-        if (inputOffset \u003e 0) {\n-            skipFully(input, inputOffset);\n-        }\n-        if (length \u003d\u003d 0) {\n-            return 0;\n-        }\n-        final byte[] buffer \u003d new byte[DEFAULT_BUFFER_SIZE];\n-        final int bufferLength \u003d buffer.length;\n-        int bytesToRead \u003d bufferLength;\n-        if (length \u003e 0 \u0026\u0026 length \u003c bufferLength) {\n-            bytesToRead \u003d (int) length;\n-        }\n-        int read;\n-        long totalRead \u003d 0;\n-        while (bytesToRead \u003e 0 \u0026\u0026 EOF !\u003d (read \u003d input.read(buffer, 0, bytesToRead))) {\n-            output.write(buffer, 0, read);\n-            totalRead +\u003d read;\n-            if (length \u003e 0) { // only adjust length if not reading to the end\n-                // Note the cast must work because buffer.length is an integer\n-                bytesToRead \u003d (int) Math.min(length - totalRead, bufferLength);\n-            }\n-        }\n-        return totalRead;\n+        return copyLarge(input, output, inputOffset, length, new byte[DEFAULT_BUFFER_SIZE]);\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "57ca8f6d878e3ff0955904cc9e261f254c0320b2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Javadoc - rename offset as that is usually used for destination buffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304077 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332451667000,
      "commitName": "57ca8f6d878e3ff0955904cc9e261f254c0320b2",
      "commitAuthor": "Sebastian Bazley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Javadoc - rename offset as that is usually used for destination buffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304077 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1332451667000,
          "commitName": "57ca8f6d878e3ff0955904cc9e261f254c0320b2",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": 1332451422000,
          "commitNameOld": "211174c5242ef7eff06b2edf7ae74bc55851d2c2",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    public static long copyLarge(InputStream input, OutputStream output, final long offset, final long length)\n+    public static long copyLarge(InputStream input, OutputStream output, final long inputOffset, final long length)\n             throws IOException {\n-        if (offset \u003e 0) {\n-            skipFully(input, offset);\n+        if (inputOffset \u003e 0) {\n+            skipFully(input, inputOffset);\n         }\n         if (length \u003d\u003d 0) {\n             return 0;\n         }\n         final byte[] buffer \u003d new byte[DEFAULT_BUFFER_SIZE];\n         final int bufferLength \u003d buffer.length;\n         int bytesToRead \u003d bufferLength;\n         if (length \u003e 0 \u0026\u0026 length \u003c bufferLength) {\n             bytesToRead \u003d (int) length;\n         }\n         int read;\n         long totalRead \u003d 0;\n         while (bytesToRead \u003e 0 \u0026\u0026 EOF !\u003d (read \u003d input.read(buffer, 0, bytesToRead))) {\n             output.write(buffer, 0, read);\n             totalRead +\u003d read;\n             if (length \u003e 0) { // only adjust length if not reading to the end\n                 // Note the cast must work because buffer.length is an integer\n                 bytesToRead \u003d (int) Math.min(length - totalRead, bufferLength);\n             }\n         }\n         return totalRead;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Javadoc - rename offset as that is usually used for destination buffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304077 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1332451667000,
          "commitName": "57ca8f6d878e3ff0955904cc9e261f254c0320b2",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": 1332451422000,
          "commitNameOld": "211174c5242ef7eff06b2edf7ae74bc55851d2c2",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    public static long copyLarge(InputStream input, OutputStream output, final long offset, final long length)\n+    public static long copyLarge(InputStream input, OutputStream output, final long inputOffset, final long length)\n             throws IOException {\n-        if (offset \u003e 0) {\n-            skipFully(input, offset);\n+        if (inputOffset \u003e 0) {\n+            skipFully(input, inputOffset);\n         }\n         if (length \u003d\u003d 0) {\n             return 0;\n         }\n         final byte[] buffer \u003d new byte[DEFAULT_BUFFER_SIZE];\n         final int bufferLength \u003d buffer.length;\n         int bytesToRead \u003d bufferLength;\n         if (length \u003e 0 \u0026\u0026 length \u003c bufferLength) {\n             bytesToRead \u003d (int) length;\n         }\n         int read;\n         long totalRead \u003d 0;\n         while (bytesToRead \u003e 0 \u0026\u0026 EOF !\u003d (read \u003d input.read(buffer, 0, bytesToRead))) {\n             output.write(buffer, 0, read);\n             totalRead +\u003d read;\n             if (length \u003e 0) { // only adjust length if not reading to the end\n                 // Note the cast must work because buffer.length is an integer\n                 bytesToRead \u003d (int) Math.min(length - totalRead, bufferLength);\n             }\n         }\n         return totalRead;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "211174c5242ef7eff06b2edf7ae74bc55851d2c2": {
      "type": "Ybodychange",
      "commitMessage": "Calculate buffer lengthe once\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304074 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332451422000,
      "commitName": "211174c5242ef7eff06b2edf7ae74bc55851d2c2",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1332450780000,
      "commitNameOld": "f584ed909815d3020e718c8dd9c1f335c7a1543d",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n     public static long copyLarge(InputStream input, OutputStream output, final long offset, final long length)\n             throws IOException {\n         if (offset \u003e 0) {\n             skipFully(input, offset);\n         }\n         if (length \u003d\u003d 0) {\n             return 0;\n         }\n-        byte[] buffer \u003d new byte[DEFAULT_BUFFER_SIZE];\n-        int bytesToRead \u003d buffer.length;\n-        if (length \u003e 0 \u0026\u0026 length \u003c buffer.length) {\n+        final byte[] buffer \u003d new byte[DEFAULT_BUFFER_SIZE];\n+        final int bufferLength \u003d buffer.length;\n+        int bytesToRead \u003d bufferLength;\n+        if (length \u003e 0 \u0026\u0026 length \u003c bufferLength) {\n             bytesToRead \u003d (int) length;\n         }\n         int read;\n         long totalRead \u003d 0;\n         while (bytesToRead \u003e 0 \u0026\u0026 EOF !\u003d (read \u003d input.read(buffer, 0, bytesToRead))) {\n             output.write(buffer, 0, read);\n             totalRead +\u003d read;\n             if (length \u003e 0) { // only adjust length if not reading to the end\n                 // Note the cast must work because buffer.length is an integer\n-                bytesToRead \u003d (int) Math.min(length - totalRead, buffer.length);\n+                bytesToRead \u003d (int) Math.min(length - totalRead, bufferLength);\n             }\n         }\n         return totalRead;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1daa7cb1c8d2abe9caaa4c6f568e00217ce18da5": {
      "type": "Ybodychange",
      "commitMessage": "Replace magic number (-1) with new private constant EOF.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304049 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332449192000,
      "commitName": "1daa7cb1c8d2abe9caaa4c6f568e00217ce18da5",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1332448861000,
      "commitNameOld": "2413cf3c607371a7b7aa9d37a9e5d916814a4799",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public static long copyLarge(InputStream input, OutputStream output, final long offset, final long length)\n             throws IOException {\n         if (offset \u003e 0) {\n             skipFully(input, offset);\n         }\n         if (length \u003d\u003d 0) {\n             return 0;\n         }\n         byte[] buffer \u003d new byte[DEFAULT_BUFFER_SIZE];\n         int bytesToRead \u003d buffer.length;\n         if (length \u003e 0 \u0026\u0026 length \u003c buffer.length) {\n             bytesToRead \u003d (int) length;\n         }\n         int read;\n         long totalRead \u003d 0;\n-        while (bytesToRead \u003e 0 \u0026\u0026 -1 !\u003d (read \u003d input.read(buffer, 0, bytesToRead))) {\n+        while (bytesToRead \u003e 0 \u0026\u0026 EOF !\u003d (read \u003d input.read(buffer, 0, bytesToRead))) {\n             output.write(buffer, 0, read);\n             totalRead +\u003d read;\n             if (length \u003e 0) { // only adjust length if not reading to the end\n                 // Note the cast must work because buffer.length is an integer\n                 bytesToRead \u003d (int) Math.min(length - totalRead, buffer.length);\n             }\n         }\n         return totalRead;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0031a91ba7b5b580b28fab5cb60d683c93e9fae8": {
      "type": "Yintroduced",
      "commitMessage": "IO-305:  New copyLarge() method in IOUtils that takes additional offset, length arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1301851 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1331947271000,
      "commitName": "0031a91ba7b5b580b28fab5cb60d683c93e9fae8",
      "commitAuthor": "Sebastian Bazley"
    }
  }
}