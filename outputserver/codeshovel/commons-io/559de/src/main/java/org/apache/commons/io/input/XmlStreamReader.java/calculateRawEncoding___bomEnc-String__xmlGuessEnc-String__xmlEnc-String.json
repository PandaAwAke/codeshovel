{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "XmlStreamReader.java",
  "functionName": "calculateRawEncoding",
  "functionId": "calculateRawEncoding___bomEnc-String__xmlGuessEnc-String__xmlEnc-String",
  "sourceFilePath": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
  "functionStartLine": 505,
  "functionEndLine": 562,
  "changeHistory": [
    "9264ccd2857cc25cabf6a309f323dd95ed319495",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "e4c65e5424fe7a7c9795348fc855d42a247f0c00",
    "1170279dc85c2bbdea594b053c56b379a72a2104",
    "0ac9cccd34c88c2421550cfd30ec7cc2af62e3c3",
    "d46782f8408d2ae17f8e05f18080db51ed608b35",
    "7b6afbba6b7d568983f6b4481f96e0d1f207eafa",
    "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
    "305062404737ecf9a3ff561bca985513cee818ad",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "e8703179767272e33bc097c730606ee03476c44b",
    "5b75cf83b2db408f8228b26910a8d3d3633cd54f"
  ],
  "changeHistoryShort": {
    "9264ccd2857cc25cabf6a309f323dd95ed319495": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "e4c65e5424fe7a7c9795348fc855d42a247f0c00": "Ybodychange",
    "1170279dc85c2bbdea594b053c56b379a72a2104": "Ybodychange",
    "0ac9cccd34c88c2421550cfd30ec7cc2af62e3c3": "Ybodychange",
    "d46782f8408d2ae17f8e05f18080db51ed608b35": "Ymodifierchange",
    "7b6afbba6b7d568983f6b4481f96e0d1f207eafa": "Ybodychange",
    "e4540bba7aebd88d3d4b22e68a6a916ddfc48890": "Yparameterchange",
    "305062404737ecf9a3ff561bca985513cee818ad": "Ybodychange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "e8703179767272e33bc097c730606ee03476c44b": "Ybodychange",
    "5b75cf83b2db408f8228b26910a8d3d3633cd54f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9264ccd2857cc25cabf6a309f323dd95ed319495": {
      "type": "Ybodychange",
      "commitMessage": "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1434643076000,
      "commitName": "9264ccd2857cc25cabf6a309f323dd95ed319495",
      "commitAuthor": "Kristian Rosenvold",
      "commitDateOld": 1366847936000,
      "commitNameOld": "9afc2969a3b491476525e100a8a542027576952e",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 784.67,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n     String calculateRawEncoding(final String bomEnc, final String xmlGuessEnc,\n             final String xmlEnc) throws IOException {\n \n         // BOM is Null\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 return defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding;\n             }\n             if (xmlEnc.equals(UTF_16) \u0026\u0026\n                (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))) {\n                 return xmlGuessEnc;\n             }\n             return xmlEnc;\n         }\n \n         // BOM is UTF-8\n         if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n-                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n-                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-16BE or UTF-16LE\n         if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n-                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n-                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-32BE or UTF-32LE\n         if (bomEnc.equals(UTF_32BE) || bomEnc.equals(UTF_32LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n-                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_32) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n-                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, bomEnc, xmlGuessEnc, xmlEnc);\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is something else\n-        final String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+        final String msg \u003d MessageFormat.format(RAW_EX_2, bomEnc, xmlGuessEnc, xmlEnc);\n         throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1338907681000,
          "commitNameOld": "e4c65e5424fe7a7c9795348fc855d42a247f0c00",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 178.25,
          "commitsBetweenForRepo": 86,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,58 +1,58 @@\n-    String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n-            String xmlEnc) throws IOException {\n+    String calculateRawEncoding(final String bomEnc, final String xmlGuessEnc,\n+            final String xmlEnc) throws IOException {\n \n         // BOM is Null\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 return defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding;\n             }\n             if (xmlEnc.equals(UTF_16) \u0026\u0026\n                (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))) {\n                 return xmlGuessEnc;\n             }\n             return xmlEnc;\n         }\n \n         // BOM is UTF-8\n         if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-16BE or UTF-16LE\n         if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-32BE or UTF-32LE\n         if (bomEnc.equals(UTF_32BE) || bomEnc.equals(UTF_32LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_32) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is something else\n-        String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+        final String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n         throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1338907681000,
          "commitNameOld": "e4c65e5424fe7a7c9795348fc855d42a247f0c00",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 178.25,
          "commitsBetweenForRepo": 86,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,58 +1,58 @@\n-    String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n-            String xmlEnc) throws IOException {\n+    String calculateRawEncoding(final String bomEnc, final String xmlGuessEnc,\n+            final String xmlEnc) throws IOException {\n \n         // BOM is Null\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 return defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding;\n             }\n             if (xmlEnc.equals(UTF_16) \u0026\u0026\n                (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))) {\n                 return xmlGuessEnc;\n             }\n             return xmlEnc;\n         }\n \n         // BOM is UTF-8\n         if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-16BE or UTF-16LE\n         if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-32BE or UTF-32LE\n         if (bomEnc.equals(UTF_32BE) || bomEnc.equals(UTF_32LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_32) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n-                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                final String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is something else\n-        String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+        final String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n         throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e4c65e5424fe7a7c9795348fc855d42a247f0c00": {
      "type": "Ybodychange",
      "commitMessage": "[IO-320] Add XmlStreamReader support for UTF-32.\n[IO-331] BOMInputStream wrongly detects UTF-32LE_BOM files as UTF-16LE_BOM files in method getBOM().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1346400 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1338907681000,
      "commitName": "e4c65e5424fe7a7c9795348fc855d42a247f0c00",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1332449729000,
      "commitNameOld": "cf5c462807a137b823a3155dfe9800b3cbf2303d",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 74.74,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,58 @@\n     String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n             String xmlEnc) throws IOException {\n \n         // BOM is Null\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 return defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding;\n             }\n             if (xmlEnc.equals(UTF_16) \u0026\u0026\n                (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))) {\n                 return xmlGuessEnc;\n             }\n             return xmlEnc;\n         }\n \n         // BOM is UTF-8\n         if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-16BE or UTF-16LE\n         if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n+        // BOM is UTF-32BE or UTF-32LE\n+        if (bomEnc.equals(UTF_32BE) || bomEnc.equals(UTF_32LE)) {\n+            if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n+                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n+            }\n+            if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_32) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n+                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n+            }\n+            return bomEnc;\n+        }\n+\n         // BOM is something else\n         String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n         throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1170279dc85c2bbdea594b053c56b379a72a2104": {
      "type": "Ybodychange",
      "commitMessage": "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1332207332000,
      "commitName": "1170279dc85c2bbdea594b053c56b379a72a2104",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1331603157000,
      "commitNameOld": "5db7f804522957c408a9db89b69715d71a0fd8f4",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.99,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n             String xmlEnc) throws IOException {\n \n         // BOM is Null\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n-                return (defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding);\n+                return defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding;\n             }\n             if (xmlEnc.equals(UTF_16) \u0026\u0026\n                (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))) {\n                 return xmlGuessEnc;\n             }\n             return xmlEnc;\n         }\n \n         // BOM is UTF-8\n         if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-16BE or UTF-16LE\n         if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is something else\n         String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n         throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0ac9cccd34c88c2421550cfd30ec7cc2af62e3c3": {
      "type": "Ybodychange",
      "commitMessage": "IO-162 Throw XmlStreamReaderException instead of IOException (looks like this was missed when it was introduced in ROME)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004825 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286316058000,
      "commitName": "0ac9cccd34c88c2421550cfd30ec7cc2af62e3c3",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286315886000,
      "commitNameOld": "d46782f8408d2ae17f8e05f18080db51ed608b35",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n             String xmlEnc) throws IOException {\n \n         // BOM is Null\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 return (defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding);\n             }\n             if (xmlEnc.equals(UTF_16) \u0026\u0026\n                (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))) {\n                 return xmlGuessEnc;\n             }\n             return xmlEnc;\n         }\n \n         // BOM is UTF-8\n         if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-16BE or UTF-16LE\n         if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n-                throw new IOException(msg);\n+                throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is something else\n         String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n         throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d46782f8408d2ae17f8e05f18080db51ed608b35": {
      "type": "Ymodifierchange",
      "commitMessage": "IO-162 Improve testing of Encoding Utility functionality (changed the visibility of some XmlStreamReader methods from private to package)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004822 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286315886000,
      "commitName": "d46782f8408d2ae17f8e05f18080db51ed608b35",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286250944000,
      "commitNameOld": "7b6afbba6b7d568983f6b4481f96e0d1f207eafa",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.75,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n-    private String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n+    String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n             String xmlEnc) throws IOException {\n \n         // BOM is Null\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 return (defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding);\n             }\n             if (xmlEnc.equals(UTF_16) \u0026\u0026\n                (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))) {\n                 return xmlGuessEnc;\n             }\n             return xmlEnc;\n         }\n \n         // BOM is UTF-8\n         if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is UTF-16BE or UTF-16LE\n         if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new IOException(msg);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             return bomEnc;\n         }\n \n         // BOM is something else\n         String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n         throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7b6afbba6b7d568983f6b4481f96e0d1f207eafa": {
      "type": "Ybodychange",
      "commitMessage": "Refactor the calculateRawEncoding() \u0026 calculateHttpEncoding() methods to make them easier to understand\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004517 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286250944000,
      "commitName": "7b6afbba6b7d568983f6b4481f96e0d1f207eafa",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286247516000,
      "commitNameOld": "7264eea73bc0f9560520ed6c423ff62f18ab4940",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,45 @@\n     private String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n             String xmlEnc) throws IOException {\n-        String encoding;\n+\n+        // BOM is Null\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n-                encoding \u003d (defaultEncoding \u003d\u003d null) ? UTF_8 : defaultEncoding;\n-            } else if (xmlEnc.equals(UTF_16)\n-                    \u0026\u0026 (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc\n-                            .equals(UTF_16LE))) {\n-                encoding \u003d xmlGuessEnc;\n-            } else {\n-                encoding \u003d xmlEnc;\n+                return (defaultEncoding \u003d\u003d null ? UTF_8 : defaultEncoding);\n             }\n-        } else if (bomEnc.equals(UTF_8)) {\n+            if (xmlEnc.equals(UTF_16) \u0026\u0026\n+               (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))) {\n+                return xmlGuessEnc;\n+            }\n+            return xmlEnc;\n+        }\n+\n+        // BOM is UTF-8\n+        if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n-            encoding \u003d UTF_8;\n-        } else if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n+            return bomEnc;\n+        }\n+\n+        // BOM is UTF-16BE or UTF-16LE\n+        if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new IOException(msg);\n             }\n-            if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16)\n-                    \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n+            if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16) \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n-            encoding \u003d bomEnc;\n-        } else {\n-            String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n-            throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n+            return bomEnc;\n         }\n-        return encoding;\n+\n+        // BOM is something else\n+        String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+        throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4540bba7aebd88d3d4b22e68a6a916ddfc48890": {
      "type": "Yparameterchange",
      "commitMessage": "Refactoring to remove the InputStream from XmlStreamReaderException in r1004109 means we don\u0027t need to pass the InputStream to the calculateRawEncoding() and calculateHttpEncoding() methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004512 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286246960000,
      "commitName": "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286246430000,
      "commitNameOld": "305062404737ecf9a3ff561bca985513cee818ad",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     private String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n-            String xmlEnc, InputStream is) throws IOException {\n+            String xmlEnc) throws IOException {\n         String encoding;\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 encoding \u003d (defaultEncoding \u003d\u003d null) ? UTF_8 : defaultEncoding;\n             } else if (xmlEnc.equals(UTF_16)\n                     \u0026\u0026 (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc\n                             .equals(UTF_16LE))) {\n                 encoding \u003d xmlGuessEnc;\n             } else {\n                 encoding \u003d xmlEnc;\n             }\n         } else if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             encoding \u003d UTF_8;\n         } else if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new IOException(msg);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16)\n                     \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n                 String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n                 throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             encoding \u003d bomEnc;\n         } else {\n             String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n             throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "305062404737ecf9a3ff561bca985513cee818ad": {
      "type": "Ybodychange",
      "commitMessage": "Remove unsafe *static* MessageFormats instances.\n\nFrom the MessageFormat JavaDocs:\n\"Message formats are not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004511 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286246430000,
      "commitName": "305062404737ecf9a3ff561bca985513cee818ad",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286245688000,
      "commitNameOld": "ac500460cc6de2f84921faaa7c65bbe812cb2fd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,40 @@\n     private String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n             String xmlEnc, InputStream is) throws IOException {\n         String encoding;\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 encoding \u003d (defaultEncoding \u003d\u003d null) ? UTF_8 : defaultEncoding;\n             } else if (xmlEnc.equals(UTF_16)\n                     \u0026\u0026 (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc\n                             .equals(UTF_16LE))) {\n                 encoding \u003d xmlGuessEnc;\n             } else {\n                 encoding \u003d xmlEnc;\n             }\n         } else if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n-                throw new XmlStreamReaderException(RAW_EX_1\n-                        .format(new Object[] { bomEnc, xmlGuessEnc, xmlEnc }),\n-                        bomEnc, xmlGuessEnc, xmlEnc);\n+                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n-                throw new XmlStreamReaderException(RAW_EX_1\n-                        .format(new Object[] { bomEnc, xmlGuessEnc, xmlEnc }),\n-                        bomEnc, xmlGuessEnc, xmlEnc);\n+                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             encoding \u003d UTF_8;\n         } else if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n-                throw new IOException(RAW_EX_1.format(new Object[] { bomEnc,\n-                        xmlGuessEnc, xmlEnc }));\n+                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                throw new IOException(msg);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16)\n                     \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n-                throw new XmlStreamReaderException(RAW_EX_1\n-                        .format(new Object[] { bomEnc, xmlGuessEnc, xmlEnc }),\n-                        bomEnc, xmlGuessEnc, xmlEnc);\n+                String msg \u003d MessageFormat.format(RAW_EX_1, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+                throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             encoding \u003d bomEnc;\n         } else {\n-            throw new XmlStreamReaderException(RAW_EX_2.format(new Object[] {\n-                    bomEnc, xmlGuessEnc, xmlEnc }), bomEnc, xmlGuessEnc,\n-                    xmlEnc);\n+            String msg \u003d MessageFormat.format(RAW_EX_2, new Object[] { bomEnc, xmlGuessEnc, xmlEnc });\n+            throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
        "newPath": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
      }
    },
    "e8703179767272e33bc097c730606ee03476c44b": {
      "type": "Ybodychange",
      "commitMessage": "IO-162 Refactoring to remove the InputStream from XmlStreamReaderException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004109 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286166952000,
      "commitName": "e8703179767272e33bc097c730606ee03476c44b",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286164891000,
      "commitNameOld": "a2800c889834ee30b5e8c0971cd1efbfa980bf9a",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     private String calculateRawEncoding(String bomEnc, String xmlGuessEnc,\n             String xmlEnc, InputStream is) throws IOException {\n         String encoding;\n         if (bomEnc \u003d\u003d null) {\n             if (xmlGuessEnc \u003d\u003d null || xmlEnc \u003d\u003d null) {\n                 encoding \u003d (defaultEncoding \u003d\u003d null) ? UTF_8 : defaultEncoding;\n             } else if (xmlEnc.equals(UTF_16)\n                     \u0026\u0026 (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc\n                             .equals(UTF_16LE))) {\n                 encoding \u003d xmlGuessEnc;\n             } else {\n                 encoding \u003d xmlEnc;\n             }\n         } else if (bomEnc.equals(UTF_8)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(UTF_8)) {\n                 throw new XmlStreamReaderException(RAW_EX_1\n                         .format(new Object[] { bomEnc, xmlGuessEnc, xmlEnc }),\n-                        bomEnc, xmlGuessEnc, xmlEnc, is);\n+                        bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_8)) {\n                 throw new XmlStreamReaderException(RAW_EX_1\n                         .format(new Object[] { bomEnc, xmlGuessEnc, xmlEnc }),\n-                        bomEnc, xmlGuessEnc, xmlEnc, is);\n+                        bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             encoding \u003d UTF_8;\n         } else if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {\n             if (xmlGuessEnc !\u003d null \u0026\u0026 !xmlGuessEnc.equals(bomEnc)) {\n                 throw new IOException(RAW_EX_1.format(new Object[] { bomEnc,\n                         xmlGuessEnc, xmlEnc }));\n             }\n             if (xmlEnc !\u003d null \u0026\u0026 !xmlEnc.equals(UTF_16)\n                     \u0026\u0026 !xmlEnc.equals(bomEnc)) {\n                 throw new XmlStreamReaderException(RAW_EX_1\n                         .format(new Object[] { bomEnc, xmlGuessEnc, xmlEnc }),\n-                        bomEnc, xmlGuessEnc, xmlEnc, is);\n+                        bomEnc, xmlGuessEnc, xmlEnc);\n             }\n             encoding \u003d bomEnc;\n         } else {\n             throw new XmlStreamReaderException(RAW_EX_2.format(new Object[] {\n                     bomEnc, xmlGuessEnc, xmlEnc }), bomEnc, xmlGuessEnc,\n-                    xmlEnc, is);\n+                    xmlEnc);\n         }\n         return encoding;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5b75cf83b2db408f8228b26910a8d3d3633cd54f": {
      "type": "Yintroduced",
      "commitMessage": "IO-162 add Xml(Stream)Reader/Writer from ROME - thanks to Hervé Boutemy for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286161189000,
      "commitName": "5b75cf83b2db408f8228b26910a8d3d3633cd54f",
      "commitAuthor": "Niall Pemberton"
    }
  }
}