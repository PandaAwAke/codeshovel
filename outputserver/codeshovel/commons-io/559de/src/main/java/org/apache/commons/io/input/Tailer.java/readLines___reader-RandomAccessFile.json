{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/repos/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "Tailer.java",
  "functionName": "readLines",
  "functionId": "readLines___reader-RandomAccessFile",
  "sourceFilePath": "src/main/java/org/apache/commons/io/input/Tailer.java",
  "functionStartLine": 512,
  "functionEndLine": 555,
  "changeHistory": [
    "9e405ca54138b63a4daff58d14d0527fef1e8e66",
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
    "e76397c0c7f7889f82a0a59203ad16a673f1e704",
    "7c58d8a9919c5c9dbc1485a21d56bb3f37444060",
    "0986e7970561a77ade9bdaaf701e14017d105464",
    "6d8ef99f2ed43b9f71005561af57e50c3b24f7d0",
    "8d52f694da0484cb2783a8b35dad845322af0c07",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "3db2debddb4840f415570f88fb4a7794724b7930",
    "41dfac731ef973b03f70d8f9c01afc67bc5f311d",
    "59ffcad15d220c2bc1f70f01d58bc31dec04b423",
    "02dc8c7e77db316553699f0e371f3e7803d3efbd",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "25032e70cbf8cb14de334a5002811852867d16dd",
    "587f5571c6eb5a55b752fd7bfd66c2c535f5e566"
  ],
  "changeHistoryShort": {
    "9e405ca54138b63a4daff58d14d0527fef1e8e66": "Ybodychange",
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0": "Ybodychange",
    "e76397c0c7f7889f82a0a59203ad16a673f1e704": "Ybodychange",
    "7c58d8a9919c5c9dbc1485a21d56bb3f37444060": "Ybodychange",
    "0986e7970561a77ade9bdaaf701e14017d105464": "Ybodychange",
    "6d8ef99f2ed43b9f71005561af57e50c3b24f7d0": "Ybodychange",
    "8d52f694da0484cb2783a8b35dad845322af0c07": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "3db2debddb4840f415570f88fb4a7794724b7930": "Ybodychange",
    "41dfac731ef973b03f70d8f9c01afc67bc5f311d": "Ybodychange",
    "59ffcad15d220c2bc1f70f01d58bc31dec04b423": "Ybodychange",
    "02dc8c7e77db316553699f0e371f3e7803d3efbd": "Ybodychange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "25032e70cbf8cb14de334a5002811852867d16dd": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "587f5571c6eb5a55b752fd7bfd66c2c535f5e566": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9e405ca54138b63a4daff58d14d0527fef1e8e66": {
      "type": "Ybodychange",
      "commitMessage": "Better ivar and param names.",
      "commitDate": 1520353984000,
      "commitName": "9e405ca54138b63a4daff58d14d0527fef1e8e66",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": 1520353633000,
      "commitNameOld": "467386105ad855e793a09632142c00cd01c5dd10",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     private long readLines(final RandomAccessFile reader) throws IOException {\n         try (ByteArrayOutputStream lineBuf \u003d new ByteArrayOutputStream(64)) {\n             long pos \u003d reader.getFilePointer();\n             long rePos \u003d pos; // position to re-read\n             int num;\n             boolean seenCR \u003d false;\n             while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d EOF)) {\n                 for (int i \u003d 0; i \u003c num; i++) {\n                     final byte ch \u003d inbuf[i];\n                     switch ( ch ) {\n                         case \u0027\\n\u0027:\n                             seenCR \u003d false; // swallow CR before LF\n-                            listener.handle(new String(lineBuf.toByteArray(), cset));\n+                            listener.handle(new String(lineBuf.toByteArray(), charset));\n                             lineBuf.reset();\n                             rePos \u003d pos + i + 1;\n                             break;\n                         case \u0027\\r\u0027:\n                             if (seenCR) {\n                                 lineBuf.write(\u0027\\r\u0027);\n                             }\n                             seenCR \u003d true;\n                             break;\n                         default:\n                             if (seenCR) {\n                                 seenCR \u003d false; // swallow final CR\n-                                listener.handle(new String(lineBuf.toByteArray(), cset));\n+                                listener.handle(new String(lineBuf.toByteArray(), charset));\n                                 lineBuf.reset();\n                                 rePos \u003d pos + i + 1;\n                             }\n                             lineBuf.write(ch);\n                     }\n                 }\n                 pos \u003d reader.getFilePointer();\n             }\n \n             reader.seek(rePos); // Ensure we can re-read if necessary\n \n             if (listener instanceof TailerListenerAdapter) {\n                 ((TailerListenerAdapter) listener).endOfFileReached();\n             }\n \n             return rePos;\n         }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0": {
      "type": "Ybodychange",
      "commitMessage": "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1462579617000,
      "commitName": "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1447344401000,
      "commitNameOld": "e76397c0c7f7889f82a0a59203ad16a673f1e704",
      "commitAuthorOld": "Kristian Rosenvold",
      "daysBetweenCommits": 176.33,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,44 @@\n     private long readLines(final RandomAccessFile reader) throws IOException {\n-        ByteArrayOutputStream lineBuf \u003d new ByteArrayOutputStream(64);\n-        long pos \u003d reader.getFilePointer();\n-        long rePos \u003d pos; // position to re-read\n-        int num;\n-        boolean seenCR \u003d false;\n-        while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d EOF)) {\n-            for (int i \u003d 0; i \u003c num; i++) {\n-                final byte ch \u003d inbuf[i];\n-                switch (ch) {\n-                case \u0027\\n\u0027:\n-                    seenCR \u003d false; // swallow CR before LF\n-                    listener.handle(new String(lineBuf.toByteArray(), cset));\n-                    lineBuf.reset();\n-                    rePos \u003d pos + i + 1;\n-                    break;\n-                case \u0027\\r\u0027:\n-                    if (seenCR) {\n-                        lineBuf.write(\u0027\\r\u0027);\n+        try (ByteArrayOutputStream lineBuf \u003d new ByteArrayOutputStream(64)) {\n+            long pos \u003d reader.getFilePointer();\n+            long rePos \u003d pos; // position to re-read\n+            int num;\n+            boolean seenCR \u003d false;\n+            while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d EOF)) {\n+                for (int i \u003d 0; i \u003c num; i++) {\n+                    final byte ch \u003d inbuf[i];\n+                    switch ( ch ) {\n+                        case \u0027\\n\u0027:\n+                            seenCR \u003d false; // swallow CR before LF\n+                            listener.handle(new String(lineBuf.toByteArray(), cset));\n+                            lineBuf.reset();\n+                            rePos \u003d pos + i + 1;\n+                            break;\n+                        case \u0027\\r\u0027:\n+                            if (seenCR) {\n+                                lineBuf.write(\u0027\\r\u0027);\n+                            }\n+                            seenCR \u003d true;\n+                            break;\n+                        default:\n+                            if (seenCR) {\n+                                seenCR \u003d false; // swallow final CR\n+                                listener.handle(new String(lineBuf.toByteArray(), cset));\n+                                lineBuf.reset();\n+                                rePos \u003d pos + i + 1;\n+                            }\n+                            lineBuf.write(ch);\n                     }\n-                    seenCR \u003d true;\n-                    break;\n-                default:\n-                    if (seenCR) {\n-                        seenCR \u003d false; // swallow final CR\n-                        listener.handle(new String(lineBuf.toByteArray(), cset));\n-                        lineBuf.reset();\n-                        rePos \u003d pos + i + 1;\n-                    }\n-                    lineBuf.write(ch);\n                 }\n+                pos \u003d reader.getFilePointer();\n             }\n-            pos \u003d reader.getFilePointer();\n-        }\n-        IOUtils.closeQuietly(lineBuf); // not strictly necessary\n-        reader.seek(rePos); // Ensure we can re-read if necessary\n \n-        if (listener instanceof TailerListenerAdapter) {\n-            ((TailerListenerAdapter) listener).endOfFileReached();\n-        }\n+            reader.seek(rePos); // Ensure we can re-read if necessary\n \n-        return rePos;\n+            if (listener instanceof TailerListenerAdapter) {\n+                ((TailerListenerAdapter) listener).endOfFileReached();\n+            }\n+\n+            return rePos;\n+        }\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e76397c0c7f7889f82a0a59203ad16a673f1e704": {
      "type": "Ybodychange",
      "commitMessage": "Removed added method from interface that broke binary compatibility.\n\nClients wishing to use this feature must subclass TailerListenerAdapter until we break compatibility or go java8 minumum.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1714076 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1447344401000,
      "commitName": "e76397c0c7f7889f82a0a59203ad16a673f1e704",
      "commitAuthor": "Kristian Rosenvold",
      "commitDateOld": 1434912289000,
      "commitNameOld": "7c58d8a9919c5c9dbc1485a21d56bb3f37444060",
      "commitAuthorOld": "Kristian Rosenvold",
      "daysBetweenCommits": 143.89,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,43 @@\n     private long readLines(final RandomAccessFile reader) throws IOException {\n         ByteArrayOutputStream lineBuf \u003d new ByteArrayOutputStream(64);\n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n         int num;\n         boolean seenCR \u003d false;\n         while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d EOF)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n                 final byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n                     seenCR \u003d false; // swallow CR before LF\n                     listener.handle(new String(lineBuf.toByteArray(), cset));\n                     lineBuf.reset();\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n                     if (seenCR) {\n                         lineBuf.write(\u0027\\r\u0027);\n                     }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n                         seenCR \u003d false; // swallow final CR\n                         listener.handle(new String(lineBuf.toByteArray(), cset));\n                         lineBuf.reset();\n                         rePos \u003d pos + i + 1;\n                     }\n                     lineBuf.write(ch);\n                 }\n             }\n             pos \u003d reader.getFilePointer();\n         }\n         IOUtils.closeQuietly(lineBuf); // not strictly necessary\n         reader.seek(rePos); // Ensure we can re-read if necessary\n \n-        listener.endOfFileReached();\n+        if (listener instanceof TailerListenerAdapter) {\n+            ((TailerListenerAdapter) listener).endOfFileReached();\n+        }\n \n         return rePos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7c58d8a9919c5c9dbc1485a21d56bb3f37444060": {
      "type": "Ybodychange",
      "commitMessage": "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1434912289000,
      "commitName": "7c58d8a9919c5c9dbc1485a21d56bb3f37444060",
      "commitAuthor": "Kristian Rosenvold",
      "commitDateOld": 1397145440000,
      "commitNameOld": "0986e7970561a77ade9bdaaf701e14017d105464",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 437.12,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,41 @@\n     private long readLines(final RandomAccessFile reader) throws IOException {\n         ByteArrayOutputStream lineBuf \u003d new ByteArrayOutputStream(64);\n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n         int num;\n         boolean seenCR \u003d false;\n         while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d EOF)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n                 final byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n                     seenCR \u003d false; // swallow CR before LF\n                     listener.handle(new String(lineBuf.toByteArray(), cset));\n                     lineBuf.reset();\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n                     if (seenCR) {\n                         lineBuf.write(\u0027\\r\u0027);\n                     }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n                         seenCR \u003d false; // swallow final CR\n                         listener.handle(new String(lineBuf.toByteArray(), cset));\n                         lineBuf.reset();\n                         rePos \u003d pos + i + 1;\n                     }\n                     lineBuf.write(ch);\n                 }\n             }\n             pos \u003d reader.getFilePointer();\n         }\n         IOUtils.closeQuietly(lineBuf); // not strictly necessary\n         reader.seek(rePos); // Ensure we can re-read if necessary\n+\n+        listener.endOfFileReached();\n+\n         return rePos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0986e7970561a77ade9bdaaf701e14017d105464": {
      "type": "Ybodychange",
      "commitMessage": "\u003caction issue\u003d\"IO-437\" dev\u003d\"ggregory\" type\u003d\"add\"\u003e\n  Make IOUtils.EOF public and reuse it in various classes.\n\u003c/action\u003e\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1397145440000,
      "commitName": "0986e7970561a77ade9bdaaf701e14017d105464",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1391197881000,
      "commitNameOld": "4da8e8ad1d29f542306e3766511fe0c6e1e3eacb",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 68.84,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     private long readLines(final RandomAccessFile reader) throws IOException {\n         ByteArrayOutputStream lineBuf \u003d new ByteArrayOutputStream(64);\n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n         int num;\n         boolean seenCR \u003d false;\n-        while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n+        while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d EOF)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n                 final byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n                     seenCR \u003d false; // swallow CR before LF\n                     listener.handle(new String(lineBuf.toByteArray(), cset));\n                     lineBuf.reset();\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n                     if (seenCR) {\n                         lineBuf.write(\u0027\\r\u0027);\n                     }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n                         seenCR \u003d false; // swallow final CR\n                         listener.handle(new String(lineBuf.toByteArray(), cset));\n                         lineBuf.reset();\n                         rePos \u003d pos + i + 1;\n                     }\n                     lineBuf.write(ch);\n                 }\n             }\n             pos \u003d reader.getFilePointer();\n         }\n         IOUtils.closeQuietly(lineBuf); // not strictly necessary\n         reader.seek(rePos); // Ensure we can re-read if necessary\n         return rePos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6d8ef99f2ed43b9f71005561af57e50c3b24f7d0": {
      "type": "Ybodychange",
      "commitMessage": "IO-354 Commons IO Tailer does not respect UTF-8 Charset\nRework to allow charset to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483340 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1368709796000,
      "commitName": "6d8ef99f2ed43b9f71005561af57e50c3b24f7d0",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1366964761000,
      "commitNameOld": "7705470ba1ca2bf95f6442f06f68f007f33a4aeb",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 20.2,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,38 @@\n     private long readLines(final RandomAccessFile reader) throws IOException {\n-        // Make explicit that the default charset is being used here\n-        Charset cset \u003d Charset.defaultCharset();\n         ByteArrayOutputStream lineBuf \u003d new ByteArrayOutputStream(64);\n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n         int num;\n         boolean seenCR \u003d false;\n         while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n                 final byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n                     seenCR \u003d false; // swallow CR before LF\n                     listener.handle(new String(lineBuf.toByteArray(), cset));\n                     lineBuf.reset();\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n                     if (seenCR) {\n                         lineBuf.write(\u0027\\r\u0027);\n                     }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n                         seenCR \u003d false; // swallow final CR\n                         listener.handle(new String(lineBuf.toByteArray(), cset));\n                         lineBuf.reset();\n                         rePos \u003d pos + i + 1;\n                     }\n                     lineBuf.write(ch);\n                 }\n             }\n             pos \u003d reader.getFilePointer();\n         }\n         IOUtils.closeQuietly(lineBuf); // not strictly necessary\n         reader.seek(rePos); // Ensure we can re-read if necessary\n         return rePos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8d52f694da0484cb2783a8b35dad845322af0c07": {
      "type": "Ybodychange",
      "commitMessage": "IO-354 Commons IO Tailer does not respect UTF-8 Charset\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468703 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1366160382000,
      "commitName": "8d52f694da0484cb2783a8b35dad845322af0c07",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1366152104000,
      "commitNameOld": "9da82a80ffab419c16e9676cb1ae48824e5d7368",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,40 @@\n     private long readLines(final RandomAccessFile reader) throws IOException {\n-        final StringBuilder sb \u003d new StringBuilder();\n-\n+        // Make explicit that the default charset is being used here\n+        Charset cset \u003d Charset.defaultCharset();\n+        ByteArrayOutputStream lineBuf \u003d new ByteArrayOutputStream(64);\n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n-\n         int num;\n         boolean seenCR \u003d false;\n         while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n                 final byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n                     seenCR \u003d false; // swallow CR before LF\n-                    listener.handle(sb.toString());\n-                    sb.setLength(0);\n+                    listener.handle(new String(lineBuf.toByteArray(), cset));\n+                    lineBuf.reset();\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n                     if (seenCR) {\n-                        sb.append(\u0027\\r\u0027);\n+                        lineBuf.write(\u0027\\r\u0027);\n                     }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n                         seenCR \u003d false; // swallow final CR\n-                        listener.handle(sb.toString());\n-                        sb.setLength(0);\n+                        listener.handle(new String(lineBuf.toByteArray(), cset));\n+                        lineBuf.reset(); \n                         rePos \u003d pos + i + 1;\n                     }\n-                    sb.append((char) ch); // add character, not its ascii value\n+                    lineBuf.write(ch);\n                 }\n             }\n-\n             pos \u003d reader.getFilePointer();\n         }\n-\n+        IOUtils.closeQuietly(lineBuf); // not strictly necessary\n         reader.seek(rePos); // Ensure we can re-read if necessary\n         return rePos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1354308699000,
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1353544570000,
          "commitNameOld": "3789b1aa9669cff2f434eba56f57c500662ead10",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 8.84,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,41 @@\n-    private long readLines(RandomAccessFile reader) throws IOException {\n-        StringBuilder sb \u003d new StringBuilder();\n+    private long readLines(final RandomAccessFile reader) throws IOException {\n+        final StringBuilder sb \u003d new StringBuilder();\n \n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n \n         int num;\n         boolean seenCR \u003d false;\n         while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n-                byte ch \u003d inbuf[i];\n+                final byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n                     seenCR \u003d false; // swallow CR before LF\n                     listener.handle(sb.toString());\n                     sb.setLength(0);\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n                     if (seenCR) {\n                         sb.append(\u0027\\r\u0027);\n                     }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n                         seenCR \u003d false; // swallow final CR\n                         listener.handle(sb.toString());\n                         sb.setLength(0);\n                         rePos \u003d pos + i + 1;\n                     }\n                     sb.append((char) ch); // add character, not its ascii value\n                 }\n             }\n \n             pos \u003d reader.getFilePointer();\n         }\n \n         reader.seek(rePos); // Ensure we can re-read if necessary\n         return rePos;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1354308699000,
          "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": 1353544570000,
          "commitNameOld": "3789b1aa9669cff2f434eba56f57c500662ead10",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 8.84,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,41 @@\n-    private long readLines(RandomAccessFile reader) throws IOException {\n-        StringBuilder sb \u003d new StringBuilder();\n+    private long readLines(final RandomAccessFile reader) throws IOException {\n+        final StringBuilder sb \u003d new StringBuilder();\n \n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n \n         int num;\n         boolean seenCR \u003d false;\n         while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n-                byte ch \u003d inbuf[i];\n+                final byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n                     seenCR \u003d false; // swallow CR before LF\n                     listener.handle(sb.toString());\n                     sb.setLength(0);\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n                     if (seenCR) {\n                         sb.append(\u0027\\r\u0027);\n                     }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n                         seenCR \u003d false; // swallow final CR\n                         listener.handle(sb.toString());\n                         sb.setLength(0);\n                         rePos \u003d pos + i + 1;\n                     }\n                     sb.append((char) ch); // add character, not its ascii value\n                 }\n             }\n \n             pos \u003d reader.getFilePointer();\n         }\n \n         reader.seek(rePos); // Ensure we can re-read if necessary\n         return rePos;\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "3db2debddb4840f415570f88fb4a7794724b7930": {
      "type": "Ybodychange",
      "commitMessage": "[IO-345] Supply a hook method allowing Tailer actively determining stop condition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1391419 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1348834239000,
      "commitName": "3db2debddb4840f415570f88fb4a7794724b7930",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1339376998000,
      "commitNameOld": "c395904915ca330d8944d74f9502c0f4bcf65907",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 109.46,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n     private long readLines(RandomAccessFile reader) throws IOException {\n         StringBuilder sb \u003d new StringBuilder();\n \n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n \n         int num;\n         boolean seenCR \u003d false;\n-        while (run \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n+        while (getRun() \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n                 byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n                     seenCR \u003d false; // swallow CR before LF\n                     listener.handle(sb.toString());\n                     sb.setLength(0);\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n                     if (seenCR) {\n                         sb.append(\u0027\\r\u0027);\n                     }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n                         seenCR \u003d false; // swallow final CR\n                         listener.handle(sb.toString());\n                         sb.setLength(0);\n                         rePos \u003d pos + i + 1;\n                     }\n                     sb.append((char) ch); // add character, not its ascii value\n                 }\n             }\n \n             pos \u003d reader.getFilePointer();\n         }\n \n         reader.seek(rePos); // Ensure we can re-read if necessary\n         return rePos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "41dfac731ef973b03f70d8f9c01afc67bc5f311d": {
      "type": "Ybodychange",
      "commitMessage": "IO-335 - Tailer#readLines - incorrect CR handling\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1339111428000,
      "commitName": "41dfac731ef973b03f70d8f9c01afc67bc5f311d",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1339008946000,
      "commitNameOld": "83c5d516f385f95581fe01dc3a0292814d0fc77c",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 1.19,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,41 @@\n     private long readLines(RandomAccessFile reader) throws IOException {\n         StringBuilder sb \u003d new StringBuilder();\n \n         long pos \u003d reader.getFilePointer();\n         long rePos \u003d pos; // position to re-read\n \n         int num;\n         boolean seenCR \u003d false;\n         while (run \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n             for (int i \u003d 0; i \u003c num; i++) {\n                 byte ch \u003d inbuf[i];\n                 switch (ch) {\n                 case \u0027\\n\u0027:\n+                    seenCR \u003d false; // swallow CR before LF\n                     listener.handle(sb.toString());\n-                    sb \u003d new StringBuilder();\n+                    sb.setLength(0);\n                     rePos \u003d pos + i + 1;\n                     break;\n                 case \u0027\\r\u0027:\n+                    if (seenCR) {\n+                        sb.append(\u0027\\r\u0027);\n+                    }\n                     seenCR \u003d true;\n                     break;\n                 default:\n                     if (seenCR) {\n-                        sb.append(\u0027\\r\u0027);\n-                        seenCR \u003d false;\n+                        seenCR \u003d false; // swallow final CR\n+                        listener.handle(sb.toString());\n+                        sb.setLength(0);\n+                        rePos \u003d pos + i + 1;\n                     }\n                     sb.append((char) ch); // add character, not its ascii value\n                 }\n             }\n \n             pos \u003d reader.getFilePointer();\n         }\n \n         reader.seek(rePos); // Ensure we can re-read if necessary\n         return rePos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "59ffcad15d220c2bc1f70f01d58bc31dec04b423": {
      "type": "Ybodychange",
      "commitMessage": "[IO-332] Improve tailer\u0027s reading performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1345279 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1338571641000,
      "commitName": "59ffcad15d220c2bc1f70f01d58bc31dec04b423",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": 1332449729000,
      "commitNameOld": "cf5c462807a137b823a3155dfe9800b3cbf2303d",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 70.86,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,35 @@\n     private long readLines(RandomAccessFile reader) throws IOException {\n+        StringBuilder sb \u003d new StringBuilder();\n+\n         long pos \u003d reader.getFilePointer();\n-        String line \u003d readLine(reader);\n-        while (line !\u003d null) {\n+        long rePos \u003d pos; // position to re-read\n+\n+        int num;\n+        boolean seenCR \u003d false;\n+        while (run \u0026\u0026 ((num \u003d reader.read(inbuf)) !\u003d -1)) {\n+            for (int i \u003d 0; i \u003c num; i++) {\n+                byte ch \u003d inbuf[i];\n+                switch (ch) {\n+                case \u0027\\n\u0027:\n+                    listener.handle(sb.toString());\n+                    sb \u003d new StringBuilder();\n+                    rePos \u003d pos + i + 1;\n+                    break;\n+                case \u0027\\r\u0027:\n+                    seenCR \u003d true;\n+                    break;\n+                default:\n+                    if (seenCR) {\n+                        sb.append(\u0027\\r\u0027);\n+                        seenCR \u003d false;\n+                    }\n+                    sb.append((char) ch); // add character, not its ascii value\n+                }\n+            }\n+\n             pos \u003d reader.getFilePointer();\n-            listener.handle(line);\n-            line \u003d readLine(reader);\n         }\n-        reader.seek(pos); // Ensure we can re-read if necessary\n-        return pos;\n+\n+        reader.seek(rePos); // Ensure we can re-read if necessary\n+        return rePos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "02dc8c7e77db316553699f0e371f3e7803d3efbd": {
      "type": "Ybodychange",
      "commitMessage": "IO-274 - Tailer returning partial lines when reaching EOF before EOL\nAdded version of readLine() that returns null if EOF seen before EOL\nRe-enabled test case\nHad to add sleep call to allow test file to be cleared up properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1127854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1306404222000,
      "commitName": "02dc8c7e77db316553699f0e371f3e7803d3efbd",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": 1289435857000,
      "commitNameOld": "58c093f5d823641031e6a4d6655e8dac0a477ede",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 196.39,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,11 @@\n     private long readLines(RandomAccessFile reader) throws IOException {\n-        String line \u003d reader.readLine();\n+        long pos \u003d reader.getFilePointer();\n+        String line \u003d readLine(reader);\n         while (line !\u003d null) {\n+            pos \u003d reader.getFilePointer();\n             listener.handle(line);\n-            line \u003d reader.readLine();\n+            line \u003d readLine(reader);\n         }\n-        return reader.getFilePointer();\n+        reader.seek(pos); // Ensure we can re-read if necessary\n+        return pos;\n     }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1286218476000,
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": 1286214840000,
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/input/Tailer.java",
        "newPath": "src/main/java/org/apache/commons/io/input/Tailer.java"
      }
    },
    "25032e70cbf8cb14de334a5002811852867d16dd": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Localise variables to run() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1285810849000,
      "commitName": "25032e70cbf8cb14de334a5002811852867d16dd",
      "commitAuthor": "Sebastian Bazley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Localise variables to run() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1285810849000,
          "commitName": "25032e70cbf8cb14de334a5002811852867d16dd",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": 1285808936000,
          "commitNameOld": "a32a395a621098ce652ee8158e6320fa422f9fa3",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private void readLines() throws IOException {\n-        last \u003d System.currentTimeMillis();\n+    private long readLines(RandomAccessFile reader) throws IOException {\n         String line \u003d reader.readLine();\n         while (line !\u003d null) {\n             listener.handle(line);\n             line \u003d reader.readLine();\n         }\n-        position \u003d reader.getFilePointer();\n+        return reader.getFilePointer();\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Localise variables to run() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1285810849000,
          "commitName": "25032e70cbf8cb14de334a5002811852867d16dd",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": 1285808936000,
          "commitNameOld": "a32a395a621098ce652ee8158e6320fa422f9fa3",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private void readLines() throws IOException {\n-        last \u003d System.currentTimeMillis();\n+    private long readLines(RandomAccessFile reader) throws IOException {\n         String line \u003d reader.readLine();\n         while (line !\u003d null) {\n             listener.handle(line);\n             line \u003d reader.readLine();\n         }\n-        position \u003d reader.getFilePointer();\n+        return reader.getFilePointer();\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Localise variables to run() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": 1285810849000,
          "commitName": "25032e70cbf8cb14de334a5002811852867d16dd",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": 1285808936000,
          "commitNameOld": "a32a395a621098ce652ee8158e6320fa422f9fa3",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private void readLines() throws IOException {\n-        last \u003d System.currentTimeMillis();\n+    private long readLines(RandomAccessFile reader) throws IOException {\n         String line \u003d reader.readLine();\n         while (line !\u003d null) {\n             listener.handle(line);\n             line \u003d reader.readLine();\n         }\n-        position \u003d reader.getFilePointer();\n+        return reader.getFilePointer();\n     }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "587f5571c6eb5a55b752fd7bfd66c2c535f5e566": {
      "type": "Yintroduced",
      "commitMessage": "IO-177 New Tailer class - Simple implementation of the unix \"tail -f\" functionality - thanks to Jeff Rodriguez for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002844 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": 1285793783000,
      "commitName": "587f5571c6eb5a55b752fd7bfd66c2c535f5e566",
      "commitAuthor": "Niall Pemberton"
    }
  }
}