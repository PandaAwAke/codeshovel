{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "checkTrailingComma___annotation-DetailAST",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 457,
  "changeHistory": [
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "3bd699bd593414d63c7139aa410f13ec8341a027",
    "ba9639e5decde52e38fbc1a048be7501dc701ac3",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
    "dce9c0687bdf0e40982e2afc49186626367beadb",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
    "1bd7f9bdf3dc678b70e79481971aebc50db69dc7",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d868a951ca1bdd8a6313fe10820bc9140ea030ff",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767"
  ],
  "changeHistoryShort": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "3bd699bd593414d63c7139aa410f13ec8341a027": "Ybodychange",
    "ba9639e5decde52e38fbc1a048be7501dc701ac3": "Ybodychange",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": "Ybodychange",
    "dce9c0687bdf0e40982e2afc49186626367beadb": "Ybodychange",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": "Ybodychange",
    "1bd7f9bdf3dc678b70e79481971aebc50db69dc7": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d868a951ca1bdd8a6313fe10820bc9140ea030ff": "Ybodychange",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": 1464356569000,
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1454680863000,
      "commitNameOld": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 111.99,
      "commitsBetweenForRepo": 276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n     private void checkTrailingComma(final DetailAST annotation) {\n-        if (trailingArrayComma \u003d\u003d TrailingArrayComma.IGNORE) {\n-            return;\n-        }\n+        if (trailingArrayComma !\u003d TrailingArrayComma.IGNORE) {\n+            DetailAST child \u003d annotation.getFirstChild();\n \n-        DetailAST child \u003d annotation.getFirstChild();\n+            while (child !\u003d null) {\n+                DetailAST arrayInit \u003d null;\n \n-        while (child !\u003d null) {\n-            DetailAST arrayInit \u003d null;\n+                if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR) {\n+                    arrayInit \u003d child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);\n+                }\n+                else if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_ARRAY_INIT) {\n+                    arrayInit \u003d child;\n+                }\n \n-            if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR) {\n-                arrayInit \u003d child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);\n+                if (arrayInit !\u003d null) {\n+                    logCommaViolation(arrayInit);\n+                }\n+                child \u003d child.getNextSibling();\n             }\n-            else if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_ARRAY_INIT) {\n-                arrayInit \u003d child;\n-            }\n-\n-            if (arrayInit !\u003d null) {\n-                logCommaViolation(arrayInit);\n-            }\n-            child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3bd699bd593414d63c7139aa410f13ec8341a027": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: HiddenField violations fixed\n",
      "commitDate": 1439356761000,
      "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439355239000,
      "commitNameOld": "ba9639e5decde52e38fbc1a048be7501dc701ac3",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void checkTrailingComma(final DetailAST annotation) {\n-        if (comma \u003d\u003d TrailingArrayComma.IGNORE) {\n+        if (trailingArrayComma \u003d\u003d TrailingArrayComma.IGNORE) {\n             return;\n         }\n \n         DetailAST child \u003d annotation.getFirstChild();\n \n         while (child !\u003d null) {\n             DetailAST arrayInit \u003d null;\n \n             if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR) {\n                 arrayInit \u003d child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);\n             }\n             else if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_ARRAY_INIT) {\n                 arrayInit \u003d child;\n             }\n \n             if (arrayInit !\u003d null) {\n                 logCommaViolation(arrayInit);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ba9639e5decde52e38fbc1a048be7501dc701ac3": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to right side in comparisons. #1555\n\nFixes ` ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439355239000,
      "commitName": "ba9639e5decde52e38fbc1a048be7501dc701ac3",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439324041000,
      "commitNameOld": "82d8e91024a57a96fbb6410dacb29d6a3f582903",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.36,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void checkTrailingComma(final DetailAST annotation) {\n-        if (TrailingArrayComma.IGNORE \u003d\u003d comma) {\n+        if (comma \u003d\u003d TrailingArrayComma.IGNORE) {\n             return;\n         }\n \n         DetailAST child \u003d annotation.getFirstChild();\n \n         while (child !\u003d null) {\n             DetailAST arrayInit \u003d null;\n \n             if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR) {\n                 arrayInit \u003d child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);\n             }\n             else if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_ARRAY_INIT) {\n                 arrayInit \u003d child;\n             }\n \n             if (arrayInit !\u003d null) {\n                 logCommaViolation(arrayInit);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this keyword. #1555\n\nFixes `UnnecessaryThis` inspection violations.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n For example:\n ```\n this.a \u003d 3;\n ```\n",
      "commitDate": 1439131302000,
      "commitName": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439088829000,
      "commitNameOld": "93914f360e7f533c6d8c23ba61e93cb045eaba7d",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void checkTrailingComma(final DetailAST annotation) {\n-        if (TrailingArrayComma.IGNORE \u003d\u003d this.comma) {\n+        if (TrailingArrayComma.IGNORE \u003d\u003d comma) {\n             return;\n         }\n \n         DetailAST child \u003d annotation.getFirstChild();\n \n         while (child !\u003d null) {\n             DetailAST arrayInit \u003d null;\n \n             if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR) {\n                 arrayInit \u003d child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);\n             }\n             else if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_ARRAY_INIT) {\n                 arrayInit \u003d child;\n             }\n \n             if (arrayInit !\u003d null) {\n-                this.logCommaViolation(arrayInit);\n+                logCommaViolation(arrayInit);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "dce9c0687bdf0e40982e2afc49186626367beadb": {
      "type": "Ybodychange",
      "commitMessage": "Coverage has been increased to 100% in AnnotationUseStyleCheck. Issue #908\n",
      "commitDate": 1437871839000,
      "commitName": "dce9c0687bdf0e40982e2afc49186626367beadb",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1437195084000,
      "commitNameOld": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 7.83,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n     private void checkTrailingComma(final DetailAST annotation) {\n-        if (TrailingArrayComma.IGNORE \u003d\u003d this.comma\n-            || this.comma \u003d\u003d null) {\n+        if (TrailingArrayComma.IGNORE \u003d\u003d this.comma) {\n             return;\n         }\n \n         DetailAST child \u003d annotation.getFirstChild();\n \n         while (child !\u003d null) {\n             DetailAST arrayInit \u003d null;\n \n             if (child.getType()\n                 \u003d\u003d TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR) {\n                 arrayInit \u003d\n                     child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);\n             }\n             else if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_ARRAY_INIT) {\n                 arrayInit \u003d child;\n             }\n \n             if (arrayInit !\u003d null) {\n                 this.logCommaViolation(arrayInit);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": {
      "type": "Ybodychange",
      "commitMessage": "Replace calls to equals() on enums with identity comparison\n\nThis replacement is safe because two enum constants are equal only when they have the same identity.\n",
      "commitDate": 1425998782000,
      "commitName": "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425968782000,
      "commitNameOld": "49a23751eb6bffdfba94d72454d7676c9f85adc5",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     private void checkTrailingComma(final DetailAST annotation)\n     {\n-        if (TrailingArrayComma.IGNORE.equals(this.comma)\n+        if (TrailingArrayComma.IGNORE \u003d\u003d this.comma\n             || this.comma \u003d\u003d null)\n         {\n             return;\n         }\n \n         DetailAST child \u003d annotation.getFirstChild();\n \n         while (child !\u003d null) {\n             DetailAST arrayInit \u003d null;\n \n             if (child.getType()\n                 \u003d\u003d TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)\n             {\n                 arrayInit \u003d\n                     child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);\n             }\n             else if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_ARRAY_INIT) {\n                 arrayInit \u003d child;\n             }\n \n             if (arrayInit !\u003d null) {\n                 this.logCommaViolation(arrayInit);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd7f9bdf3dc678b70e79481971aebc50db69dc7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, annotation, #512\n",
      "commitDate": 1421678156000,
      "commitName": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d868a951ca1bdd8a6313fe10820bc9140ea030ff": {
      "type": "Ybodychange",
      "commitMessage": "cleanup\n",
      "commitDate": 1238416264000,
      "commitName": "d868a951ca1bdd8a6313fe10820bc9140ea030ff",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1237805379000,
      "commitNameOld": "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 7.07,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     private void checkTrailingComma(final DetailAST aAnnotation)\n     {\n-        if (TrailingArrayComma.MIXED.equals(this.mComma)\n+        if (TrailingArrayComma.IGNORE.equals(this.mComma)\n             || this.mComma \u003d\u003d null)\n         {\n             return;\n         }\n \n         DetailAST child \u003d aAnnotation.getFirstChild();\n \n         while (child !\u003d null) {\n             DetailAST arrayInit \u003d null;\n \n             if (child.getType()\n                 \u003d\u003d TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)\n             {\n                 arrayInit \u003d\n                     child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);\n             }\n             else if (child.getType() \u003d\u003d TokenTypes.ANNOTATION_ARRAY_INIT) {\n                 arrayInit \u003d child;\n             }\n \n             if (arrayInit !\u003d null) {\n                 this.logCommaViolation(arrayInit);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": {
      "type": "Yintroduced",
      "commitMessage": "record work on patch #2534038 from Travis for new annotation checks. Very good patch as usual from Travis. Shame on me for taking so long to apply it.\n",
      "commitDate": 1237805379000,
      "commitName": "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
      "commitAuthor": "Oliver Burn"
    }
  }
}