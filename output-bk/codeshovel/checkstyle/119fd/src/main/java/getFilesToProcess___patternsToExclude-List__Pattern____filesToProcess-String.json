{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "getFilesToProcess___patternsToExclude-List__Pattern____filesToProcess-String",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 641,
  "changeHistory": [
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
    "ab2f93f9bf61816d84154e636d32c81c05854e24",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "d91236c5ca052899bfd21ac5f378dcaf8e864750",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c6d30db2009efde248f42fe2642ee5a8b252ec18",
    "0320747f860f1c161d4143ae34d47daa8913effc",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "784842200f5307597d721ba0190c912cfab1b77f"
  ],
  "changeHistoryShort": {
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6": "Ymultichange(Yparameterchange,Ybodychange)",
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b": "Yexceptionschange",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": "Yparameterchange",
    "ab2f93f9bf61816d84154e636d32c81c05854e24": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "d91236c5ca052899bfd21ac5f378dcaf8e864750": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c6d30db2009efde248f42fe2642ee5a8b252ec18": "Ybodychange",
    "0320747f860f1c161d4143ae34d47daa8913effc": "Ybodychange",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ymultichange(Yreturntypechange,Ybodychange)",
    "784842200f5307597d721ba0190c912cfab1b77f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": 1474426326000,
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1473886714000,
      "commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 6.25,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private static List\u003cFile\u003e getFilesToProcess(List\u003cPattern\u003e patternsToExclude,\n             String... filesToProcess) {\n-        final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n+        final List\u003cFile\u003e files \u003d new LinkedList\u003c\u003e();\n         for (String element : filesToProcess) {\n             files.addAll(listFiles(new File(element), patternsToExclude));\n         }\n \n         return files;\n     }\n\\ No newline at end of file\n"
    },
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3287: added exclude directory option (#3288)\n\n",
      "commitDate": 1469588124000,
      "commitName": "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
      "commitAuthor": "rnveach",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b": {
      "type": "Yexceptionschange",
      "commitMessage": "huge refactoring for CLI Main class. Issue #596\n",
      "commitDate": 1430849532000,
      "commitName": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1430634431000,
      "commitNameOld": "0f543a21fee9dec9b388bb6f2c42540fe8bf02ec",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.49,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n     private static List\u003cFile\u003e getFilesToProcess(String... filesToProcess)\n-            throws CheckstyleException\n     {\n         final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n         for (String element : filesToProcess) {\n             files.addAll(listFiles(new File(element)));\n         }\n \n         return files;\n     }\n\\ No newline at end of file\n"
    },
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": {
      "type": "Yparameterchange",
      "commitMessage": "Fix PMD violations from UseVarargs rule, issue #999\n\nThe changes are fully backward-compatible. Method with vararg can be invoked both using array and list of parameters.\n",
      "commitDate": 1430353274000,
      "commitName": "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1430008241000,
      "commitNameOld": "55b266cd92adf7b5e18f84ddee839d63f9330c5b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.99,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n-    private static List\u003cFile\u003e getFilesToProcess(String[] filesToProcess)\n+    private static List\u003cFile\u003e getFilesToProcess(String... filesToProcess)\n             throws CheckstyleException\n     {\n         final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n         for (String element : filesToProcess) {\n             files.addAll(listFiles(new File(element)));\n         }\n \n         return files;\n     }\n\\ No newline at end of file\n"
    },
    "ab2f93f9bf61816d84154e636d32c81c05854e24": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Delete System.exit() and delegate exit control into separate method.\n\nIssue #596\n",
      "commitDate": 1429852725000,
      "commitName": "ab2f93f9bf61816d84154e636d32c81c05854e24",
      "commitAuthor": "Damian Szczepanik",
      "subchanges": [
        "Yparameterchange",
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "d91236c5ca052899bfd21ac5f378dcaf8e864750": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3 Turn on -r recursive by default\n",
      "commitDate": 1419892913000,
      "commitName": "d91236c5ca052899bfd21ac5f378dcaf8e864750",
      "commitAuthor": "ychulovskyy",
      "commitDateOld": 1416642615000,
      "commitNameOld": "bbd59b7b88696fbfafccfb3f1123d36360b0cd81",
      "commitAuthorOld": "ychulovskyy",
      "daysBetweenCommits": 37.62,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,14 @@\n     private static List\u003cFile\u003e getFilesToProcess(CommandLine aLine)\n     {\n         final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n-        if (aLine.hasOption(\"r\")) {\n-            final String[] values \u003d aLine.getOptionValues(\"r\");\n-            for (String element : values) {\n-                traverse(new File(element), files);\n-            }\n-        }\n-\n         final String[] remainingArgs \u003d aLine.getArgs();\n         for (String element : remainingArgs) {\n-            files.add(new File(element));\n+            traverse(new File(element), files);\n         }\n \n-        if (files.isEmpty() \u0026\u0026 !aLine.hasOption(\"r\")) {\n+        if (files.isEmpty()) {\n             System.out.println(\"Must specify files to process\");\n             usage();\n         }\n         return files;\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c6d30db2009efde248f42fe2642ee5a8b252ec18": {
      "type": "Ybodychange",
      "commitMessage": "Checkstyle command-line no longer reports a usage error if the user specifies a directory with the -r option that does not contain any files. Thanks to Florian for patch #2151706.\n",
      "commitDate": 1225177886000,
      "commitName": "c6d30db2009efde248f42fe2642ee5a8b252ec18",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1214968564000,
      "commitNameOld": "d2af4accdde3eac0a2103353f490e97bf62f61d2",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 118.16,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static List\u003cFile\u003e getFilesToProcess(CommandLine aLine)\n     {\n         final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n         if (aLine.hasOption(\"r\")) {\n             final String[] values \u003d aLine.getOptionValues(\"r\");\n             for (String element : values) {\n                 traverse(new File(element), files);\n             }\n         }\n \n         final String[] remainingArgs \u003d aLine.getArgs();\n         for (String element : remainingArgs) {\n             files.add(new File(element));\n         }\n \n-        if (files.isEmpty()) {\n+        if (files.isEmpty() \u0026\u0026 !aLine.hasOption(\"r\")) {\n             System.out.println(\"Must specify files to process\");\n             usage();\n         }\n         return files;\n     }\n\\ No newline at end of file\n"
    },
    "0320747f860f1c161d4143ae34d47daa8913effc": {
      "type": "Ybodychange",
      "commitMessage": "Drinking some more of the \"Google Collections\" Kool-Aid.\n",
      "commitDate": 1208867700000,
      "commitName": "0320747f860f1c161d4143ae34d47daa8913effc",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1207618517000,
      "commitNameOld": "fe9057366308642868c25d427c3ee94411b37170",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 14.46,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static List\u003cFile\u003e getFilesToProcess(CommandLine aLine)\n     {\n-        final List\u003cFile\u003e files \u003d new LinkedList\u003cFile\u003e();\n+        final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n         if (aLine.hasOption(\"r\")) {\n             final String[] values \u003d aLine.getOptionValues(\"r\");\n             for (String element : values) {\n                 traverse(new File(element), files);\n             }\n         }\n \n         final String[] remainingArgs \u003d aLine.getArgs();\n         for (String element : remainingArgs) {\n             files.add(new File(element));\n         }\n \n         if (files.isEmpty()) {\n             System.out.println(\"Must specify files to process\");\n             usage();\n         }\n         return files;\n     }\n\\ No newline at end of file\n"
    },
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": {
      "type": "Ybodychange",
      "commitMessage": "Use the new syntactic sugar \"for loop\".\n\nEnd of the cosmetic changes.\n",
      "commitDate": 1197714527000,
      "commitName": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1197706480000,
      "commitNameOld": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static List\u003cFile\u003e getFilesToProcess(CommandLine aLine)\n     {\n         final List\u003cFile\u003e files \u003d new LinkedList\u003cFile\u003e();\n         if (aLine.hasOption(\"r\")) {\n             final String[] values \u003d aLine.getOptionValues(\"r\");\n-            for (int i \u003d 0; i \u003c values.length; i++) {\n-                traverse(new File(values[i]), files);\n+            for (String element : values) {\n+                traverse(new File(element), files);\n             }\n         }\n \n         final String[] remainingArgs \u003d aLine.getArgs();\n-        for (int i \u003d 0; i \u003c remainingArgs.length; i++) {\n-            files.add(new File(remainingArgs[i]));\n+        for (String element : remainingArgs) {\n+            files.add(new File(element));\n         }\n \n         if (files.isEmpty()) {\n             System.out.println(\"Must specify files to process\");\n             usage();\n         }\n         return files;\n     }\n\\ No newline at end of file\n"
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yreturntypechange",
        "Ybodychange"
      ]
    },
    "784842200f5307597d721ba0190c912cfab1b77f": {
      "type": "Yintroduced",
      "commitMessage": "Refactored, that was really ugly code I had written.\n",
      "commitDate": 1056715858000,
      "commitName": "784842200f5307597d721ba0190c912cfab1b77f",
      "commitAuthor": "Oliver Burn"
    }
  }
}