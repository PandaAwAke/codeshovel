{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "notifyBegin___rootAST-DetailAST__contents-FileContents__astState-AstState",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 357,
  "changeHistory": [
    "ab548244eda102c5dc39cf0fc34e6803be192ba7",
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "04b0bd64047e8eee752405a01de145b67f5fb845",
    "9074e6953f601352d6e0829ea67d194a1fdf4a1a",
    "4e0914c73bf3e5b113869fad772a1096787b31ba",
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
    "5fc3ff2bfbed94f88e1af95f38e970a832e4dbe6",
    "7af9e82fc16545a8153b529fba91df0fb310e2e6",
    "7e570084e62eda58f3c4fa7e75e26a1a41d255cf",
    "19257b2cdb950aac0b729ee8a3a979e5605163f9"
  ],
  "changeHistoryShort": {
    "ab548244eda102c5dc39cf0fc34e6803be192ba7": "Ybodychange",
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479": "Ybodychange",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": "Ybodychange",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "04b0bd64047e8eee752405a01de145b67f5fb845": "Ymultichange(Yparameterchange,Ybodychange)",
    "9074e6953f601352d6e0829ea67d194a1fdf4a1a": "Ybodychange",
    "4e0914c73bf3e5b113869fad772a1096787b31ba": "Ybodychange",
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb": "Ymultichange(Yparameterchange,Ybodychange)",
    "5fc3ff2bfbed94f88e1af95f38e970a832e4dbe6": "Ymultichange(Yparameterchange,Ybodychange)",
    "7af9e82fc16545a8153b529fba91df0fb310e2e6": "Ymultichange(Yparameterchange,Ybodychange)",
    "7e570084e62eda58f3c4fa7e75e26a1a41d255cf": "Ybodychange",
    "19257b2cdb950aac0b729ee8a3a979e5605163f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab548244eda102c5dc39cf0fc34e6803be192ba7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3545: Remove LocalizedMessages class\n",
      "commitDate": 1499133361000,
      "commitName": "ab548244eda102c5dc39cf0fc34e6803be192ba7",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1498141328000,
      "commitNameOld": "d72e6f7d0b9f339feef4309a9dada7fd381ba242",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 11.48,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     private void notifyBegin(DetailAST rootAST, FileContents contents,\n             AstState astState) {\n         final Set\u003cAbstractCheck\u003e checks;\n \n         if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n             checks \u003d commentChecks;\n         }\n         else {\n             checks \u003d ordinaryChecks;\n         }\n \n         for (AbstractCheck check : checks) {\n             check.setFileContents(contents);\n+            check.clearMessages();\n             check.beginTree(rootAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2551: renamed Check to AbstractCheck",
      "commitDate": 1454680863000,
      "commitName": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthor": "rnveach",
      "commitDateOld": 1453646135000,
      "commitNameOld": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 11.98,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private void notifyBegin(DetailAST rootAST, FileContents contents,\n             AstState astState) {\n-        final Set\u003cCheck\u003e checks;\n+        final Set\u003cAbstractCheck\u003e checks;\n \n         if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n             checks \u003d commentChecks;\n         }\n         else {\n             checks \u003d ordinaryChecks;\n         }\n \n-        for (Check check : checks) {\n+        for (AbstractCheck check : checks) {\n             check.setFileContents(contents);\n             check.beginTree(rootAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: enforce FinalLocalVariableCheck on checkstyle code\n",
      "commitDate": 1453646135000,
      "commitName": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.59,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private void notifyBegin(DetailAST rootAST, FileContents contents,\n             AstState astState) {\n-        Set\u003cCheck\u003e checks;\n+        final Set\u003cCheck\u003e checks;\n \n         if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n             checks \u003d commentChecks;\n         }\n         else {\n             checks \u003d ordinaryChecks;\n         }\n \n         for (Check check : checks) {\n             check.setFileContents(contents);\n             check.beginTree(rootAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": {
      "type": "Ybodychange",
      "commitMessage": "Rename variables with \u0027standard\u0027 names of unexpected types. #1555\n\nFixes `StandardVariableNames` inspection violations.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n* i, j, k, m, n - int\n* f - float\n* d - double\n* b - byte\n* c, ch - char\n* l - long\n* s, str - String\n",
      "commitDate": 1439008721000,
      "commitName": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439007161000,
      "commitNameOld": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private void notifyBegin(DetailAST rootAST, FileContents contents,\n             AstState astState) {\n         Set\u003cCheck\u003e checks;\n \n         if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n             checks \u003d commentChecks;\n         }\n         else {\n             checks \u003d ordinaryChecks;\n         }\n \n-        for (Check ch : checks) {\n-            ch.setFileContents(contents);\n-            ch.beginTree(rootAST);\n+        for (Check check : checks) {\n+            check.setFileContents(contents);\n+            check.beginTree(rootAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #49. Added support of single-line and block comments\n",
      "commitDate": 1413609550000,
      "commitName": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,7 @@\n     private void notifyBegin(DetailAST aRootAST, FileContents aContents)\n     {\n-        final Iterator it \u003d mAllChecks.iterator();\n-        while (it.hasNext()) {\n-            final Check check \u003d (Check) it.next();\n-            check.setFileContents(aContents);\n-            check.beginTree(aRootAST);\n+        for (Check ch : mAllChecks) {\n+            ch.setFileContents(aContents);\n+            ch.beginTree(aRootAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "04b0bd64047e8eee752405a01de145b67f5fb845": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Last API change before release (I hope:-). Now when notifying of the start and\nfinish of tree, based the root node. Maybe useful to some checks.\n",
      "commitDate": 1045363824000,
      "commitName": "04b0bd64047e8eee752405a01de145b67f5fb845",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "9074e6953f601352d6e0829ea67d194a1fdf4a1a": {
      "type": "Ybodychange",
      "commitMessage": "removed context hashmaps\n",
      "commitDate": 1041927327000,
      "commitName": "9074e6953f601352d6e0829ea67d194a1fdf4a1a",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": 1040983106000,
      "commitNameOld": "2149a9c42dce7a3913cca83755c8f562b0442929",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,9 @@\n     private void notifyBegin(FileContents aContents)\n     {\n-        // TODO: do not track Context properly for token\n         final Iterator it \u003d mAllChecks.iterator();\n         while (it.hasNext()) {\n             final Check check \u003d (Check) it.next();\n-            mTreeContext.clear();\n-            check.setTreeContext(mTreeContext);\n             check.setFileContents(aContents);\n             check.beginTree();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4e0914c73bf3e5b113869fad772a1096787b31ba": {
      "type": "Ybodychange",
      "commitMessage": "performance improvement - eliminate multiple instance creation for\ntree context HashMap.\nStill at the top of the performance hit parade for Checkstyle non-parsing methods.\n",
      "commitDate": 1040825155000,
      "commitName": "4e0914c73bf3e5b113869fad772a1096787b31ba",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1040821628000,
      "commitNameOld": "3badd996bf40d25400ce40bf89aea92cd90b1b35",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void notifyBegin(FileContents aContents)\n     {\n         // TODO: do not track Context properly for token\n         final Iterator it \u003d mAllChecks.iterator();\n         while (it.hasNext()) {\n             final Check check \u003d (Check) it.next();\n-            final HashMap treeContext \u003d new HashMap();\n-            check.setTreeContext(treeContext);\n+            mTreeContext.clear();\n+            check.setTreeContext(mTreeContext);\n             check.setFileContents(aContents);\n             check.beginTree();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "avalonization\n",
      "commitDate": 1038680984000,
      "commitName": "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
      "commitAuthor": "Lars KÃ¼hne",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "5fc3ff2bfbed94f88e1af95f38e970a832e4dbe6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Please ensure you thoroughly test code before committing it. As a sanity test,\nensure that the target \"checkstyle.checkstyle\" will run! If in doubt, do not\ncommit, but instead said a patch to the devel mailing list for a review.\n\nFinished the port of the ClassResolver code. Even though it compiled, it had\nno chance of working due to class casting problems. They have not been\nfixed. Also needed to ensure the correct class loader is being used.\n",
      "commitDate": 1036555078000,
      "commitName": "5fc3ff2bfbed94f88e1af95f38e970a832e4dbe6",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "7af9e82fc16545a8153b529fba91df0fb310e2e6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Refactored the comment manager class to having a file contents class. This\nclass has the file name, lines and comments.\n",
      "commitDate": 1035466470000,
      "commitName": "7af9e82fc16545a8153b529fba91df0fb310e2e6",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "7e570084e62eda58f3c4fa7e75e26a1a41d255cf": {
      "type": "Ybodychange",
      "commitMessage": "Nearly for the first test to run. Having problems with loading resource\nbundles.\n",
      "commitDate": 1032616141000,
      "commitName": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1032266010000,
      "commitNameOld": "672b27dd5551de63a1fb08d8ea80376d70f2aa60",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 4.05,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private void notifyBegin(String[] aLines, String aFilename)\n     {\n         // TODO: do not track Context properly for token\n         final Iterator it \u003d mAllChecks.iterator();\n         while (it.hasNext()) {\n             final Check check \u003d (Check) it.next();\n             final HashMap treeContext \u003d new HashMap();\n-            check.setFilename(aFilename);\n             check.setTreeContext(treeContext);\n+            check.setFilename(aFilename);\n             check.setLines(aLines);\n             check.beginTree();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "19257b2cdb950aac0b729ee8a3a979e5605163f9": {
      "type": "Yintroduced",
      "commitMessage": "Added the tree walker (with all the bugs hopefully marked with TODO:\ncomments). Currently keeping the old grammars around so we can checkstyle the\nnew checkstyle will old version. Kind of a version of boot strapping. :-)\n",
      "commitDate": 1032093857000,
      "commitName": "19257b2cdb950aac0b729ee8a3a979e5605163f9",
      "commitAuthor": "Oliver Burn"
    }
  }
}