{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "getPackageNames___classLoader-ClassLoader",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 155,
  "changeHistory": [
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
    "346387c717048391485fb28f877531aab1095de1",
    "3b452a2e88d0cb670be19818dbd8166335d65884",
    "e689662e9d47347cb2f326e1c16901ee1c4c6367",
    "e1d0e7f6361c32c69650ba789c1995e49a94142f",
    "06865630aa3da0b36064b9e00e0e95ff681f234e",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588",
    "fe9057366308642868c25d427c3ee94411b37170",
    "33f75977205625bc5f9620a2c63e16a11f9663a5",
    "66325cbd72882454193765322efa716537ce9c93",
    "88e89a138aa39f50f7642106cde6568f6e07783f",
    "d056b3b6bb9f6b88b06cade98b6ab6a4d7760226",
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa"
  ],
  "changeHistoryShort": {
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6": "Ybodychange",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": "Ybodychange",
    "346387c717048391485fb28f877531aab1095de1": "Ybodychange",
    "3b452a2e88d0cb670be19818dbd8166335d65884": "Ybodychange",
    "e689662e9d47347cb2f326e1c16901ee1c4c6367": "Ybodychange",
    "e1d0e7f6361c32c69650ba789c1995e49a94142f": "Ybodychange",
    "06865630aa3da0b36064b9e00e0e95ff681f234e": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588": "Ybodychange",
    "fe9057366308642868c25d427c3ee94411b37170": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "33f75977205625bc5f9620a2c63e16a11f9663a5": "Ybodychange",
    "66325cbd72882454193765322efa716537ce9c93": "Ybodychange",
    "88e89a138aa39f50f7642106cde6568f6e07783f": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "d056b3b6bb9f6b88b06cade98b6ab6a4d7760226": "Ybodychange",
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4713: fix all violations from the third part of idea violations\n",
      "commitDate": 1500613458000,
      "commitName": "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1495140203000,
      "commitNameOld": "ddeb553834f10570089a033fa1ac1501b74ac358",
      "commitAuthorOld": "Luolc",
      "daysBetweenCommits": 63.35,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,26 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n             throws CheckstyleException {\n \n         final Set\u003cString\u003e result;\n         try {\n             //create the loader outside the loop to prevent PackageObjectFactory\n             //being created anew for each file\n             final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n \n             final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n \n             while (packageFiles.hasMoreElements()) {\n-                final URL packageFile \u003d packageFiles.nextElement();\n-                InputStream stream \u003d null;\n-\n-                try {\n-                    stream \u003d new BufferedInputStream(packageFile.openStream());\n-                    final InputSource source \u003d new InputSource(stream);\n-                    namesLoader.parseInputSource(source);\n-                }\n-                catch (IOException ex) {\n-                    throw new CheckstyleException(\"unable to open \" + packageFile, ex);\n-                }\n-                finally {\n-                    Closeables.closeQuietly(stream);\n-                }\n+                processFile(packageFiles.nextElement(), namesLoader);\n             }\n \n             result \u003d namesLoader.packageNames;\n-\n         }\n         catch (IOException ex) {\n             throw new CheckstyleException(\"unable to get package file resources\", ex);\n         }\n         catch (ParserConfigurationException | SAXException ex) {\n             throw new CheckstyleException(\"unable to open one of package files\", ex);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n"
    },
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2616: Fix CatchParameterName check violations in Checkstyle code\n",
      "commitDate": 1449184604000,
      "commitName": "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1446385289000,
      "commitNameOld": "346387c717048391485fb28f877531aab1095de1",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 32.4,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n             throws CheckstyleException {\n \n         final Set\u003cString\u003e result;\n         try {\n             //create the loader outside the loop to prevent PackageObjectFactory\n             //being created anew for each file\n             final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n \n             final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n \n             while (packageFiles.hasMoreElements()) {\n                 final URL packageFile \u003d packageFiles.nextElement();\n                 InputStream stream \u003d null;\n \n                 try {\n                     stream \u003d new BufferedInputStream(packageFile.openStream());\n                     final InputSource source \u003d new InputSource(stream);\n                     namesLoader.parseInputSource(source);\n                 }\n-                catch (IOException e) {\n-                    throw new CheckstyleException(\"unable to open \" + packageFile, e);\n+                catch (IOException ex) {\n+                    throw new CheckstyleException(\"unable to open \" + packageFile, ex);\n                 }\n                 finally {\n                     Closeables.closeQuietly(stream);\n                 }\n             }\n \n             result \u003d namesLoader.packageNames;\n \n         }\n-        catch (IOException e) {\n-            throw new CheckstyleException(\"unable to get package file resources\", e);\n+        catch (IOException ex) {\n+            throw new CheckstyleException(\"unable to get package file resources\", ex);\n         }\n-        catch (ParserConfigurationException | SAXException e) {\n-            throw new CheckstyleException(\"unable to open one of package files\", e);\n+        catch (ParserConfigurationException | SAXException ex) {\n+            throw new CheckstyleException(\"unable to open one of package files\", ex);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n"
    },
    "346387c717048391485fb28f877531aab1095de1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1551: Fix FinalLocalVariable violations in checkstyle",
      "commitDate": 1446385289000,
      "commitName": "346387c717048391485fb28f877531aab1095de1",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1441328775000,
      "commitNameOld": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 58.52,
      "commitsBetweenForRepo": 363,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n             throws CheckstyleException {\n \n-        Set\u003cString\u003e result;\n+        final Set\u003cString\u003e result;\n         try {\n             //create the loader outside the loop to prevent PackageObjectFactory\n             //being created anew for each file\n             final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n \n             final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n \n             while (packageFiles.hasMoreElements()) {\n                 final URL packageFile \u003d packageFiles.nextElement();\n                 InputStream stream \u003d null;\n \n                 try {\n                     stream \u003d new BufferedInputStream(packageFile.openStream());\n                     final InputSource source \u003d new InputSource(stream);\n                     namesLoader.parseInputSource(source);\n                 }\n                 catch (IOException e) {\n                     throw new CheckstyleException(\"unable to open \" + packageFile, e);\n                 }\n                 finally {\n                     Closeables.closeQuietly(stream);\n                 }\n             }\n \n             result \u003d namesLoader.packageNames;\n \n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to get package file resources\", e);\n         }\n         catch (ParserConfigurationException | SAXException e) {\n             throw new CheckstyleException(\"unable to open one of package files\", e);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n"
    },
    "3b452a2e88d0cb670be19818dbd8166335d65884": {
      "type": "Ybodychange",
      "commitMessage": "Inline calls to simple getters. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": 1440243167000,
      "commitName": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439886329000,
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 4.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n             throws CheckstyleException {\n \n         Set\u003cString\u003e result;\n         try {\n             //create the loader outside the loop to prevent PackageObjectFactory\n             //being created anew for each file\n             final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n \n             final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n \n             while (packageFiles.hasMoreElements()) {\n                 final URL packageFile \u003d packageFiles.nextElement();\n                 InputStream stream \u003d null;\n \n                 try {\n                     stream \u003d new BufferedInputStream(packageFile.openStream());\n                     final InputSource source \u003d new InputSource(stream);\n                     namesLoader.parseInputSource(source);\n                 }\n                 catch (IOException e) {\n                     throw new CheckstyleException(\"unable to open \" + packageFile, e);\n                 }\n                 finally {\n                     Closeables.closeQuietly(stream);\n                 }\n             }\n \n-            result \u003d namesLoader.getPackageNames();\n+            result \u003d namesLoader.packageNames;\n \n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to get package file resources\", e);\n         }\n         catch (ParserConfigurationException | SAXException e) {\n             throw new CheckstyleException(\"unable to open one of package files\", e);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n"
    },
    "e689662e9d47347cb2f326e1c16901ee1c4c6367": {
      "type": "Ybodychange",
      "commitMessage": "100% coverage for PackageNamesLoader. #1294\n",
      "commitDate": 1437890095000,
      "commitName": "e689662e9d47347cb2f326e1c16901ee1c4c6367",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,40 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n-        throws CheckstyleException {\n+            throws CheckstyleException {\n \n-        Enumeration\u003cURL\u003e packageFiles \u003d null;\n+        Set\u003cString\u003e result;\n         try {\n-            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n+            //create the loader outside the loop to prevent PackageObjectFactory\n+            //being created anew for each file\n+            final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n+\n+            final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n+\n+            while (packageFiles.hasMoreElements()) {\n+                final URL packageFile \u003d packageFiles.nextElement();\n+                InputStream stream \u003d null;\n+\n+                try {\n+                    stream \u003d new BufferedInputStream(packageFile.openStream());\n+                    final InputSource source \u003d new InputSource(stream);\n+                    namesLoader.parseInputSource(source);\n+                }\n+                catch (IOException e) {\n+                    throw new CheckstyleException(\"unable to open \" + packageFile, e);\n+                }\n+                finally {\n+                    Closeables.closeQuietly(stream);\n+                }\n+            }\n+\n+            result \u003d namesLoader.getPackageNames();\n+\n         }\n         catch (IOException e) {\n-            throw new CheckstyleException(\n-                    \"unable to get package file resources\", e);\n+            throw new CheckstyleException(\"unable to get package file resources\", e);\n+        }\n+        catch (ParserConfigurationException | SAXException e) {\n+            throw new CheckstyleException(\"unable to open one of package files\", e);\n         }\n \n-        //create the loader outside the loop to prevent PackageObjectFactory\n-        //being created anew for each file\n-        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n-\n-        while (packageFiles.hasMoreElements()) {\n-            final URL packageFile \u003d packageFiles.nextElement();\n-            InputStream stream \u003d null;\n-\n-            try {\n-                stream \u003d new BufferedInputStream(packageFile.openStream());\n-                final InputSource source \u003d new InputSource(stream);\n-                loadPackageNamesSource(source, \"default package names\",\n-                    namesLoader);\n-            }\n-            catch (IOException e) {\n-                throw new CheckstyleException(\n-                        \"unable to open \" + packageFile, e);\n-            }\n-            finally {\n-                Closeables.closeQuietly(stream);\n-            }\n-        }\n-        return namesLoader.getPackageNames();\n+        return result;\n     }\n\\ No newline at end of file\n"
    },
    "e1d0e7f6361c32c69650ba789c1995e49a94142f": {
      "type": "Ybodychange",
      "commitMessage": "fix for findbugs RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE. Issue #912\n",
      "commitDate": 1428708020000,
      "commitName": "e1d0e7f6361c32c69650ba789c1995e49a94142f",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1427398517000,
      "commitNameOld": "06865630aa3da0b36064b9e00e0e95ff681f234e",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 15.16,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n             packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n-        while (null !\u003d packageFiles \u0026\u0026 packageFiles.hasMoreElements()) {\n+        while (packageFiles.hasMoreElements()) {\n             final URL packageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n                 stream \u003d new BufferedInputStream(packageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n                         \"unable to open \" + packageFile, e);\n             }\n             finally {\n                 Closeables.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n"
    },
    "06865630aa3da0b36064b9e00e0e95ff681f234e": {
      "type": "Ybodychange",
      "commitMessage": "Use Guava Closeables to manage closing exceptions\n\n\u003eWhile it\u0027s not safe in the general case to ignore exceptions that are thrown when closing an I/O resource, it should generally be safe in the case of a resource that\u0027s being used only for reading, such as a Reader. Unlike with writable resources, there\u0027s no chance that a failure that occurs when closing the reader indicates a meaningful problem such as a failure to flush all bytes to the underlying resource.\n\n`Reader` and `InputStream` instances are closed using `Closeables.closeQuietly()`, while `RandomAccessFile` is closed with `Closeables.close()` that throws `IOException` and needs to be handled.\n\nFrom Javadoc:\n\u003e```java\npublic static void close(@Nullable\n         Closeable closeable,\n         boolean swallowIOException)\n                  throws IOException\n```\n\u003eCloses a Closeable, with control over whether an IOException may be thrown. This is primarily useful in a finally block, where a thrown exception needs to be logged but not propagated (otherwise the original exception will be lost).\nIf swallowIOException is true then we never throw IOException but merely log it.\n\n\u003eExample:\n```java\n   public void useStreamNicely() throws IOException {\n     SomeStream stream \u003d new SomeStream(\"foo\");\n     boolean threw \u003d true;\n     try {\n       // ... code which does something with the stream ...\n       threw \u003d false;\n     } finally {\n       // If an exception occurs, rethrow it only if threw\u003d\u003dfalse:\n       Closeables.close(stream, threw);\n     }\n   }\n```\n\nMoreover, `Closeables.close()` and  `Flushables.flush()` are used to flush and close `OutputStream`.\n",
      "commitDate": 1427398517000,
      "commitName": "06865630aa3da0b36064b9e00e0e95ff681f234e",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1427233706000,
      "commitNameOld": "1dacd5303bfe94b9d5476059b6a5676146d96708",
      "commitAuthorOld": "Damian Szczepanik",
      "daysBetweenCommits": 1.91,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n             packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n         while (null !\u003d packageFiles \u0026\u0026 packageFiles.hasMoreElements()) {\n             final URL packageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n                 stream \u003d new BufferedInputStream(packageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n                         \"unable to open \" + packageFile, e);\n             }\n             finally {\n-                Utils.closeQuietly(stream);\n+                Closeables.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425603177000,
      "commitNameOld": "9ea39c8431be4c1b45648ccef79f21565f7d9c4b",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.86,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n             packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n-        while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n+        while (null !\u003d packageFiles \u0026\u0026 packageFiles.hasMoreElements()) {\n             final URL packageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n                 stream \u003d new BufferedInputStream(packageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n                         \"unable to open \" + packageFile, e);\n             }\n             finally {\n                 Utils.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588": {
      "type": "Ybodychange",
      "commitMessage": "New check FileTabCharacter  for ensuring that any files does not contain a tab character. It is now used to ensure the documentation files do not contain tabs.\n\nAlso introduced Utils.closeQuietly to clean up code.\n",
      "commitDate": 1225956072000,
      "commitName": "bd8a1a545fd1bc19d5f84c5061c5383796a7c588",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1209024589000,
      "commitNameOld": "06e8a4eaa00e548f52b2483864a31ba9defd0989",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 195.97,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,37 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader aClassLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n             packageFiles \u003d aClassLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n         while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n             final URL aPackageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n                 stream \u003d new BufferedInputStream(aPackageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n                         \"unable to open \" + aPackageFile, e);\n             }\n             finally {\n-                if (stream !\u003d null) {\n-                    try {\n-                        stream.close();\n-                    }\n-                    catch (IOException e) {\n-                        throw new CheckstyleException(\n-                                \"error closing stream\", e);\n-                    }\n-                }\n+                Utils.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n"
    },
    "fe9057366308642868c25d427c3ee94411b37170": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "Apply patch #1914806 for PackageNamesLoader from Lars Koedderitzsch.\n",
      "commitDate": 1207618517000,
      "commitName": "fe9057366308642868c25d427c3ee94411b37170",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yrename",
        "Yreturntypechange",
        "Ybodychange"
      ]
    },
    "33f75977205625bc5f9620a2c63e16a11f9663a5": {
      "type": "Ybodychange",
      "commitMessage": "Undo for ClassLoader fix.\n",
      "commitDate": 1066710700000,
      "commitName": "33f75977205625bc5f9620a2c63e16a11f9663a5",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1066564909000,
      "commitNameOld": "66325cbd72882454193765322efa716537ce9c93",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 1.69,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public static ModuleFactory loadModuleFactory(ClassLoader aClassLoader)\n         throws CheckstyleException\n     {\n \n         final InputStream stream \u003d\n             aClassLoader.getResourceAsStream(DEFAULT_PACKAGES);\n         final InputSource source \u003d new InputSource(stream);\n-        return loadModuleFactory(source, \"default package names\", aClassLoader);\n+        return loadModuleFactory(source, \"default package names\");\n     }\n\\ No newline at end of file\n"
    },
    "66325cbd72882454193765322efa716537ce9c93": {
      "type": "Ybodychange",
      "commitMessage": "Now PackageObjectFactory uses custom class loader.\n",
      "commitDate": 1066564909000,
      "commitName": "66325cbd72882454193765322efa716537ce9c93",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1055144900000,
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 132.18,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public static ModuleFactory loadModuleFactory(ClassLoader aClassLoader)\n         throws CheckstyleException\n     {\n \n         final InputStream stream \u003d\n             aClassLoader.getResourceAsStream(DEFAULT_PACKAGES);\n         final InputSource source \u003d new InputSource(stream);\n-        return loadModuleFactory(source, \"default package names\");\n+        return loadModuleFactory(source, \"default package names\", aClassLoader);\n     }\n\\ No newline at end of file\n"
    },
    "88e89a138aa39f50f7642106cde6568f6e07783f": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "Changed implementation of module name resolution from inheritance to delegation approach\n",
      "commitDate": 1040020006000,
      "commitName": "88e89a138aa39f50f7642106cde6568f6e07783f",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        "Yrename",
        "Yreturntypechange",
        "Ybodychange"
      ]
    },
    "d056b3b6bb9f6b88b06cade98b6ab6a4d7760226": {
      "type": "Ybodychange",
      "commitMessage": "error message correction\n",
      "commitDate": 1039135574000,
      "commitName": "d056b3b6bb9f6b88b06cade98b6ab6a4d7760226",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1039114468000,
      "commitNameOld": "16ba5b35f9f346e7cea294afaad7f9211605ecaa",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public static String[] loadPackageNames(ClassLoader aClassLoader)\n         throws CheckstyleException\n     {\n \n         final InputStream stream \u003d\n             aClassLoader.getResourceAsStream(DEFAULT_PACKAGES);\n         final InputSource source \u003d new InputSource(stream);\n-        return loadPackageNames(source, \"default map\");\n+        return loadPackageNames(source, \"default package names\");\n     }\n\\ No newline at end of file\n"
    },
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa": {
      "type": "Yintroduced",
      "commitMessage": "modified for config XML and mapping names to full class names - see\nposting to checkstyle-devel@lists.sourceforge.net\n",
      "commitDate": 1039114468000,
      "commitName": "16ba5b35f9f346e7cea294afaad7f9211605ecaa",
      "commitAuthor": "Rick Giles"
    }
  }
}