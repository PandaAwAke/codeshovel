{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "isReference___ent-String",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 341,
  "changeHistory": [
    "69a3d541b4888e5e0e6ab09aa675667155c65381",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "23a1b6253f6296c1a3888361953da47f2808ca3d",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f",
    "8fe2518e3221159d454d6d80922c4eed1c21a80d",
    "a2b8be14bb1230f1b184701bae8bcc7af102bb25",
    "0552912c9fa82f1c3d044a081dc8d7a2a9f5a4b1",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "5cf355fad4b8bc613962aac2f52b48d5726f2acc",
    "1d21af32b9949396bb3f010cd3f3addec4075b5d"
  ],
  "changeHistoryShort": {
    "69a3d541b4888e5e0e6ab09aa675667155c65381": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "23a1b6253f6296c1a3888361953da47f2808ca3d": "Ybodychange",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": "Ybodychange",
    "8fe2518e3221159d454d6d80922c4eed1c21a80d": "Ymodifierchange",
    "a2b8be14bb1230f1b184701bae8bcc7af102bb25": "Ybodychange",
    "0552912c9fa82f1c3d044a081dc8d7a2a9f5a4b1": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "5cf355fad4b8bc613962aac2f52b48d5726f2acc": "Ybodychange",
    "1d21af32b9949396bb3f010cd3f3addec4075b5d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "69a3d541b4888e5e0e6ab09aa675667155c65381": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: partial fix of ReturnCount violations\n",
      "commitDate": 1440678096000,
      "commitName": "69a3d541b4888e5e0e6ab09aa675667155c65381",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440677821000,
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n     public static boolean isReference(String ent) {\n-        if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !CommonUtils.endsWithChar(ent, \u0027;\u0027)) {\n-            return false;\n-        }\n+        boolean reference \u003d false;\n \n-        if (ent.charAt(1) \u003d\u003d \u0027#\u0027) {\n+        if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !CommonUtils.endsWithChar(ent, \u0027;\u0027)) {\n+            reference \u003d false;\n+        }\n+        else if (ent.charAt(1) \u003d\u003d \u0027#\u0027) {\n             // prefix is \"\u0026#\"\n             int prefixLength \u003d 2;\n \n             int radix \u003d BASE_10;\n             if (ent.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     ent.substring(prefixLength, ent.length() - 1), radix);\n-                return true;\n+                reference \u003d true;\n             }\n             catch (final NumberFormatException ignored) {\n-                return false;\n+                reference \u003d false;\n             }\n         }\n-\n-        final String name \u003d ent.substring(1, ent.length() - 1);\n-        for (String element : ENTITIES) {\n-            if (name.equals(element)) {\n-                return true;\n+        else {\n+            final String name \u003d ent.substring(1, ent.length() - 1);\n+            for (String element : ENTITIES) {\n+                if (name.equals(element)) {\n+                    reference \u003d true;\n+                    break;\n+                }\n             }\n         }\n-        return false;\n+        return reference;\n     }\n\\ No newline at end of file\n"
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": 1440677821000,
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1440677821000,
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public static boolean isReference(String ent) {\n-        if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !Utils.endsWithChar(ent, \u0027;\u0027)) {\n+        if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !CommonUtils.endsWithChar(ent, \u0027;\u0027)) {\n             return false;\n         }\n \n         if (ent.charAt(1) \u003d\u003d \u0027#\u0027) {\n             // prefix is \"\u0026#\"\n             int prefixLength \u003d 2;\n \n             int radix \u003d BASE_10;\n             if (ent.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     ent.substring(prefixLength, ent.length() - 1), radix);\n                 return true;\n             }\n             catch (final NumberFormatException ignored) {\n                 return false;\n             }\n         }\n \n         final String name \u003d ent.substring(1, ent.length() - 1);\n         for (String element : ENTITIES) {\n             if (name.equals(element)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "23a1b6253f6296c1a3888361953da47f2808ca3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: Fix for \u0027Don\u0027t use trailing comments\u0027 (partial)\n",
      "commitDate": 1440158741000,
      "commitName": "23a1b6253f6296c1a3888361953da47f2808ca3d",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1440040911000,
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 1.36,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n     public static boolean isReference(String ent) {\n         if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !Utils.endsWithChar(ent, \u0027;\u0027)) {\n             return false;\n         }\n \n         if (ent.charAt(1) \u003d\u003d \u0027#\u0027) {\n-            int prefixLength \u003d 2; // \"\u0026#\"\n+            // prefix is \"\u0026#\"\n+            int prefixLength \u003d 2;\n+\n             int radix \u003d BASE_10;\n             if (ent.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     ent.substring(prefixLength, ent.length() - 1), radix);\n                 return true;\n             }\n             catch (final NumberFormatException ignored) {\n                 return false;\n             }\n         }\n \n         final String name \u003d ent.substring(1, ent.length() - 1);\n         for (String element : ENTITIES) {\n             if (name.equals(element)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": {
      "type": "Ybodychange",
      "commitMessage": "Rename ignored catch parameters. #1555\n\nFixes `UnusedCatchParameter` inspection violations.\n\nDescription:\nReports any catch parameters that are unused in their corresponding blocks. This inspection will not report any catch parameters named \"ignore\" or \"ignored\". Conversely this inspection will warn on any catch parameters named \"ignore\" or \"ignored\" that are actually used.\n",
      "commitDate": 1439011061000,
      "commitName": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566537000,
      "commitNameOld": "30438ebdf9fd28a94613e2aaecde776d906349a7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.14,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     public static boolean isReference(String ent) {\n         if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !Utils.endsWithChar(ent, \u0027;\u0027)) {\n             return false;\n         }\n \n         if (ent.charAt(1) \u003d\u003d \u0027#\u0027) {\n             int prefixLength \u003d 2; // \"\u0026#\"\n             int radix \u003d BASE_10;\n             if (ent.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     ent.substring(prefixLength, ent.length() - 1), radix);\n                 return true;\n             }\n-            catch (final NumberFormatException nfe) {\n+            catch (final NumberFormatException ignored) {\n                 return false;\n             }\n         }\n \n         final String name \u003d ent.substring(1, ent.length() - 1);\n         for (String element : ENTITIES) {\n             if (name.equals(element)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "8fe2518e3221159d454d6d80922c4eed1c21a80d": {
      "type": "Ymodifierchange",
      "commitMessage": "UTs coverage increaded for XMLLogger. #1294\n",
      "commitDate": 1436750546000,
      "commitName": "8fe2518e3221159d454d6d80922c4eed1c21a80d",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 56.57,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n-    public boolean isReference(String ent) {\n+    public static boolean isReference(String ent) {\n         if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !Utils.endsWithChar(ent, \u0027;\u0027)) {\n             return false;\n         }\n \n         if (ent.charAt(1) \u003d\u003d \u0027#\u0027) {\n             int prefixLength \u003d 2; // \"\u0026#\"\n             int radix \u003d BASE_10;\n             if (ent.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     ent.substring(prefixLength, ent.length() - 1), radix);\n                 return true;\n             }\n             catch (final NumberFormatException nfe) {\n                 return false;\n             }\n         }\n \n         final String name \u003d ent.substring(1, ent.length() - 1);\n         for (String element : ENTITIES) {\n             if (name.equals(element)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "a2b8be14bb1230f1b184701bae8bcc7af102bb25": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from SimplifyStartsWith rule, issue #949\n",
      "commitDate": 1430665225000,
      "commitName": "a2b8be14bb1230f1b184701bae8bcc7af102bb25",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1430634431000,
      "commitNameOld": "0f543a21fee9dec9b388bb6f2c42540fe8bf02ec",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.36,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public boolean isReference(String ent)\n     {\n-        if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !ent.endsWith(\";\")) {\n+        if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !Utils.endsWithChar(ent, \u0027;\u0027)) {\n             return false;\n         }\n \n         if (ent.charAt(1) \u003d\u003d \u0027#\u0027) {\n             int prefixLength \u003d 2; // \"\u0026#\"\n             int radix \u003d BASE_10;\n             if (ent.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     ent.substring(prefixLength, ent.length() - 1), radix);\n                 return true;\n             }\n             catch (final NumberFormatException nfe) {\n                 return false;\n             }\n         }\n \n         final String name \u003d ent.substring(1, ent.length() - 1);\n         for (String element : ENTITIES) {\n             if (name.equals(element)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "0552912c9fa82f1c3d044a081dc8d7a2a9f5a4b1": {
      "type": "Ybodychange",
      "commitMessage": "fix for violations of PMD LogicInversion. Issue #744\n",
      "commitDate": 1430068476000,
      "commitName": "0552912c9fa82f1c3d044a081dc8d7a2a9f5a4b1",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1430008241000,
      "commitNameOld": "55b266cd92adf7b5e18f84ddee839d63f9330c5b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.7,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public boolean isReference(String ent)\n     {\n-        if (!(ent.charAt(0) \u003d\u003d \u0027\u0026\u0027) || !ent.endsWith(\";\")) {\n+        if (ent.charAt(0) !\u003d \u0027\u0026\u0027 || !ent.endsWith(\";\")) {\n             return false;\n         }\n \n         if (ent.charAt(1) \u003d\u003d \u0027#\u0027) {\n             int prefixLength \u003d 2; // \"\u0026#\"\n             int radix \u003d BASE_10;\n             if (ent.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     ent.substring(prefixLength, ent.length() - 1), radix);\n                 return true;\n             }\n             catch (final NumberFormatException nfe) {\n                 return false;\n             }\n         }\n \n         final String name \u003d ent.substring(1, ent.length() - 1);\n         for (String element : ENTITIES) {\n             if (name.equals(element)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": {
      "type": "Ybodychange",
      "commitMessage": "Use the new syntactic sugar \"for loop\".\n\nEnd of the cosmetic changes.\n",
      "commitDate": 1197714527000,
      "commitName": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.82,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public boolean isReference(String aEnt)\n     {\n         if (!(aEnt.charAt(0) \u003d\u003d \u0027\u0026\u0027) || !aEnt.endsWith(\";\")) {\n             return false;\n         }\n \n         if (aEnt.charAt(1) \u003d\u003d \u0027#\u0027) {\n             int prefixLength \u003d 2; // \"\u0026#\"\n             int radix \u003d BASE_10;\n             if (aEnt.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     aEnt.substring(prefixLength, aEnt.length() - 1), radix);\n                 return true;\n             }\n             catch (final NumberFormatException nfe) {\n                 return false;\n             }\n         }\n \n         final String name \u003d aEnt.substring(1, aEnt.length() - 1);\n-        for (int i \u003d 0; i \u003c ENTITIES.length; i++) {\n-            if (name.equals(ENTITIES[i])) {\n+        for (String element : ENTITIES) {\n+            if (name.equals(element)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1137408969000,
      "commitNameOld": "bb399478246e8f4f869daa45ef0be78fb662a3e9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 171.7,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public boolean isReference(String aEnt)\n     {\n         if (!(aEnt.charAt(0) \u003d\u003d \u0027\u0026\u0027) || !aEnt.endsWith(\";\")) {\n             return false;\n         }\n \n         if (aEnt.charAt(1) \u003d\u003d \u0027#\u0027) {\n             int prefixLength \u003d 2; // \"\u0026#\"\n             int radix \u003d BASE_10;\n             if (aEnt.charAt(2) \u003d\u003d \u0027x\u0027) {\n                 prefixLength++;\n                 radix \u003d BASE_16;\n             }\n             try {\n                 Integer.parseInt(\n                     aEnt.substring(prefixLength, aEnt.length() - 1), radix);\n                 return true;\n             }\n-            catch (NumberFormatException nfe) {\n+            catch (final NumberFormatException nfe) {\n                 return false;\n             }\n         }\n \n         final String name \u003d aEnt.substring(1, aEnt.length() - 1);\n         for (int i \u003d 0; i \u003c ENTITIES.length; i++) {\n             if (name.equals(ENTITIES[i])) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "5cf355fad4b8bc613962aac2f52b48d5726f2acc": {
      "type": "Ybodychange",
      "commitMessage": "out magic numbers\n",
      "commitDate": 1052732371000,
      "commitName": "5cf355fad4b8bc613962aac2f52b48d5726f2acc",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1052564360000,
      "commitNameOld": "61e6ce5ee716c4a2999b915a00a026277c9e3e46",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 1.94,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,31 @@\n     public boolean isReference(String aEnt)\n     {\n         if (!(aEnt.charAt(0) \u003d\u003d \u0027\u0026\u0027) || !aEnt.endsWith(\";\")) {\n             return false;\n         }\n \n         if (aEnt.charAt(1) \u003d\u003d \u0027#\u0027) {\n+            int prefixLength \u003d 2; // \"\u0026#\"\n+            int radix \u003d BASE_10;\n             if (aEnt.charAt(2) \u003d\u003d \u0027x\u0027) {\n-                try {\n-                    Integer.parseInt(aEnt.substring(3, aEnt.length() - 1), 16);\n-                    return true;\n-                }\n-                catch (NumberFormatException nfe) {\n-                    return false;\n-                }\n+                prefixLength++;\n+                radix \u003d BASE_16;\n             }\n-            else {\n-                try {\n-                    Integer.parseInt(aEnt.substring(2, aEnt.length() - 1));\n-                    return true;\n-                }\n-                catch (NumberFormatException nfe) {\n-                    return false;\n-                }\n+            try {\n+                Integer.parseInt(\n+                    aEnt.substring(prefixLength, aEnt.length() - 1), radix);\n+                return true;\n+            }\n+            catch (NumberFormatException nfe) {\n+                return false;\n             }\n         }\n \n         final String name \u003d aEnt.substring(1, aEnt.length() - 1);\n         for (int i \u003d 0; i \u003c ENTITIES.length; i++) {\n             if (name.equals(ENTITIES[i])) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "1d21af32b9949396bb3f010cd3f3addec4075b5d": {
      "type": "Yintroduced",
      "commitMessage": "first cut\n",
      "commitDate": 999188480000,
      "commitName": "1d21af32b9949396bb3f010cd3f3addec4075b5d",
      "commitAuthor": "Oliver Burn"
    }
  }
}