{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "compareTo___lineColumn-LineColumn",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 73,
  "changeHistory": [
    "154f120d7b71c30ec64f3ef801fb080a24a21c4a",
    "e23b8a2ffa778628b4a163ef7ac60291482f64ef",
    "23c8774d2e2fd245de1e5df02758fd23702c565e",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
    "fc10c00e0a6a9b0ec46714a2e6e098de10bae7ce",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "a5bf1e329b3da8cd3dfc7b56483c3495ad89055f",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e"
  ],
  "changeHistoryShort": {
    "154f120d7b71c30ec64f3ef801fb080a24a21c4a": "Ybodychange",
    "e23b8a2ffa778628b4a163ef7ac60291482f64ef": "Ybodychange",
    "23c8774d2e2fd245de1e5df02758fd23702c565e": "Ybodychange",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": "Ybodychange",
    "fc10c00e0a6a9b0ec46714a2e6e098de10bae7ce": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "a5bf1e329b3da8cd3dfc7b56483c3495ad89055f": "Ybodychange",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "154f120d7b71c30ec64f3ef801fb080a24a21c4a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: Enforce ReturnCount max\u003d1 in com.puppycrawl.tools.checkstyle.api\n",
      "commitDate": 1493349546000,
      "commitName": "154f120d7b71c30ec64f3ef801fb080a24a21c4a",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 90.53,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n     public int compareTo(LineColumn lineColumn) {\n+        final int result;\n         if (line \u003d\u003d lineColumn.line) {\n-            return Integer.compare(column, lineColumn.column);\n+            result \u003d Integer.compare(column, lineColumn.column);\n         }\n         else {\n-            return Integer.compare(line, lineColumn.line);\n+            result \u003d Integer.compare(line, lineColumn.line);\n         }\n+        return result;\n     }\n\\ No newline at end of file\n"
    },
    "e23b8a2ffa778628b4a163ef7ac60291482f64ef": {
      "type": "Ybodychange",
      "commitMessage": "Remove calls to simple getters within classes. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": 1440606474000,
      "commitName": "e23b8a2ffa778628b4a163ef7ac60291482f64ef",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440243789000,
      "commitNameOld": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 4.2,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     public int compareTo(LineColumn lineColumn) {\n-        if (getLine() \u003d\u003d lineColumn.getLine()) {\n-            return Integer.compare(getColumn(), lineColumn.getColumn());\n+        if (line \u003d\u003d lineColumn.line) {\n+            return Integer.compare(column, lineColumn.column);\n         }\n         else {\n-            return Integer.compare(getLine(), lineColumn.getLine());\n+            return Integer.compare(line, lineColumn.line);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "23c8774d2e2fd245de1e5df02758fd23702c565e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: AvoidInlineConditional violations fixed\n",
      "commitDate": 1439784080000,
      "commitName": "23c8774d2e2fd245de1e5df02758fd23702c565e",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439295751000,
      "commitNameOld": "f5f1d754e28ee1e3c5472fd4d5292f24a335e64e",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.65,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,8 @@\n     public int compareTo(LineColumn lineColumn) {\n-        return getLine() !\u003d lineColumn.getLine()\n-            ? Integer.compare(getLine(), lineColumn.getLine())\n-            : Integer.compare(getColumn(), lineColumn.getColumn());\n+        if (getLine() \u003d\u003d lineColumn.getLine()) {\n+            return Integer.compare(getColumn(), lineColumn.getColumn());\n+        }\n+        else {\n+            return Integer.compare(getLine(), lineColumn.getLine());\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this keyword. #1555\n\nFixes `UnnecessaryThis` inspection violations.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n For example:\n ```\n this.a \u003d 3;\n ```\n",
      "commitDate": 1439131302000,
      "commitName": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439008817000,
      "commitNameOld": "4c1148db9982918e65f8d1156e8fb9c07b206fc9",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.42,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n     public int compareTo(LineColumn lineColumn) {\n-        return this.getLine() !\u003d lineColumn.getLine()\n-            ? Integer.compare(this.getLine(), lineColumn.getLine())\n-            : Integer.compare(this.getColumn(), lineColumn.getColumn());\n+        return getLine() !\u003d lineColumn.getLine()\n+            ? Integer.compare(getLine(), lineColumn.getLine())\n+            : Integer.compare(getColumn(), lineColumn.getColumn());\n     }\n\\ No newline at end of file\n"
    },
    "fc10c00e0a6a9b0ec46714a2e6e098de10bae7ce": {
      "type": "Ybodychange",
      "commitMessage": "Replace subtraction in compareTo() with Integer.compare(). #1555\n\nFixes SubtractionInCompareTo inspection violations.\n\nDescription:\n\u003eReports subtraction in compareTo() methods and methods implementing java.util.Comparator.compare(). While it is a common idiom to use the results of integer subtraction as the result of a compareTo() method, this construct may cause subtle and difficult bugs in cases of integer overflow.\n",
      "commitDate": 1439007328000,
      "commitName": "fc10c00e0a6a9b0ec46714a2e6e098de10bae7ce",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 82.69,
      "commitsBetweenForRepo": 613,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n     public int compareTo(LineColumn lineColumn) {\n         return this.getLine() !\u003d lineColumn.getLine()\n-            ? this.getLine() - lineColumn.getLine()\n-            : this.getColumn() - lineColumn.getColumn();\n+            ? Integer.compare(this.getLine(), lineColumn.getLine())\n+            : Integer.compare(this.getColumn(), lineColumn.getColumn());\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     public int compareTo(LineColumn lineColumn)\n     {\n-        return (this.getLine() !\u003d lineColumn.getLine())\n+        return this.getLine() !\u003d lineColumn.getLine()\n             ? this.getLine() - lineColumn.getLine()\n             : this.getColumn() - lineColumn.getColumn();\n     }\n\\ No newline at end of file\n"
    },
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, api, #512\n",
      "commitDate": 1421677181000,
      "commitName": "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "a5bf1e329b3da8cd3dfc7b56483c3495ad89055f": {
      "type": "Ybodychange",
      "commitMessage": "code cleanup\n",
      "commitDate": 1294221158000,
      "commitName": "a5bf1e329b3da8cd3dfc7b56483c3495ad89055f",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1285817783000,
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 97.26,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,6 @@\n     public int compareTo(LineColumn aLineColumn)\n     {\n-        if (this.getLine() !\u003d aLineColumn.getLine()) {\n-            return this.getLine() - aLineColumn.getLine();\n-        }\n-        else {\n-            return this.getColumn() - aLineColumn.getColumn();\n-        }\n+        return (this.getLine() !\u003d aLineColumn.getLine())\n+            ? this.getLine() - aLineColumn.getLine()\n+            : this.getColumn() - aLineColumn.getColumn();\n     }\n\\ No newline at end of file\n"
    },
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": {
      "type": "Yintroduced",
      "commitMessage": "Apply patch #2783226 that uses FileText as an implementation for\nList\u003cString\u003e to pass lines around\n",
      "commitDate": 1277730133000,
      "commitName": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
      "commitAuthor": "Oliver Burn"
    }
  }
}