{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "runCheckstyle___cliOptions-CliOptions",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 530,
  "changeHistory": [
    "dc88a9954baf88df6543cf73baabed710f882363",
    "036582d728d2e2bb37f360bb3a74f899f04d587d",
    "fe7655e7d82152b57fd68d37df621d22b47132ad",
    "9765cda41ba8767f1f187dc1b097793a1dccedcd",
    "8c8fee7432c89b47936c27bcc2c7f60f5cc79923",
    "b6d9344d1c152f225a22ce9ce09341b3cc9488af",
    "23c8774d2e2fd245de1e5df02758fd23702c565e",
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
    "ab2f93f9bf61816d84154e636d32c81c05854e24"
  ],
  "changeHistoryShort": {
    "dc88a9954baf88df6543cf73baabed710f882363": "Ybodychange",
    "036582d728d2e2bb37f360bb3a74f899f04d587d": "Ybodychange",
    "fe7655e7d82152b57fd68d37df621d22b47132ad": "Ybodychange",
    "9765cda41ba8767f1f187dc1b097793a1dccedcd": "Ybodychange",
    "8c8fee7432c89b47936c27bcc2c7f60f5cc79923": "Ybodychange",
    "b6d9344d1c152f225a22ce9ce09341b3cc9488af": "Yexceptionschange",
    "23c8774d2e2fd245de1e5df02758fd23702c565e": "Ybodychange",
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
    "ab2f93f9bf61816d84154e636d32c81c05854e24": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dc88a9954baf88df6543cf73baabed710f882363": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4709: fix avoid boolean parameters for public methods\n",
      "commitDate": 1502279688000,
      "commitName": "dc88a9954baf88df6543cf73baabed710f882363",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1501378825000,
      "commitNameOld": "dd91dc1cf4dfbffd1bd608a9b0f8a487eb25122d",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 10.43,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,53 @@\n     private static int runCheckstyle(CliOptions cliOptions)\n             throws CheckstyleException, FileNotFoundException {\n         // setup the properties\n         final Properties props;\n \n         if (cliOptions.propertiesLocation \u003d\u003d null) {\n             props \u003d System.getProperties();\n         }\n         else {\n             props \u003d loadProperties(new File(cliOptions.propertiesLocation));\n         }\n \n         // create a configuration\n         final ThreadModeSettings multiThreadModeSettings \u003d\n                 new ThreadModeSettings(\n                         cliOptions.checkerThreadsNumber, cliOptions.treeWalkerThreadsNumber);\n+\n+        final ConfigurationLoader.IgnoredModulesOptions ignoredModulesOptions;\n+        if (cliOptions.executeIgnoredModules) {\n+            ignoredModulesOptions \u003d ConfigurationLoader.IgnoredModulesOptions.EXECUTE;\n+        }\n+        else {\n+            ignoredModulesOptions \u003d ConfigurationLoader.IgnoredModulesOptions.OMIT;\n+        }\n+\n         final Configuration config \u003d ConfigurationLoader.loadConfiguration(\n                 cliOptions.configLocation, new PropertiesExpander(props),\n-                !cliOptions.executeIgnoredModules, multiThreadModeSettings);\n+                ignoredModulesOptions, multiThreadModeSettings);\n \n         // create a listener for output\n         final AuditListener listener \u003d createListener(cliOptions.format, cliOptions.outputLocation);\n \n         // create RootModule object and run it\n         final int errorCounter;\n         final ClassLoader moduleClassLoader \u003d Checker.class.getClassLoader();\n         final RootModule rootModule \u003d getRootModule(config.getName(), moduleClassLoader);\n \n         try {\n \n             rootModule.setModuleClassLoader(moduleClassLoader);\n             rootModule.configure(config);\n             rootModule.addListener(listener);\n \n             // run RootModule\n             errorCounter \u003d rootModule.process(cliOptions.files);\n \n         }\n         finally {\n             rootModule.destroy();\n         }\n \n         return errorCounter;\n     }\n\\ No newline at end of file\n"
    },
    "036582d728d2e2bb37f360bb3a74f899f04d587d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4370: Add multi thread mode to checkstyle launcher\n",
      "commitDate": 1499049797000,
      "commitName": "036582d728d2e2bb37f360bb3a74f899f04d587d",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": 1497909220000,
      "commitNameOld": "fe7655e7d82152b57fd68d37df621d22b47132ad",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 13.2,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,44 @@\n     private static int runCheckstyle(CliOptions cliOptions)\n             throws CheckstyleException, FileNotFoundException {\n         // setup the properties\n         final Properties props;\n \n         if (cliOptions.propertiesLocation \u003d\u003d null) {\n             props \u003d System.getProperties();\n         }\n         else {\n             props \u003d loadProperties(new File(cliOptions.propertiesLocation));\n         }\n \n         // create a configuration\n+        final ThreadModeSettings multiThreadModeSettings \u003d\n+                new ThreadModeSettings(\n+                        cliOptions.checkerThreadsNumber, cliOptions.treeWalkerThreadsNumber);\n         final Configuration config \u003d ConfigurationLoader.loadConfiguration(\n                 cliOptions.configLocation, new PropertiesExpander(props),\n-                !cliOptions.executeIgnoredModules);\n+                !cliOptions.executeIgnoredModules, multiThreadModeSettings);\n \n         // create a listener for output\n         final AuditListener listener \u003d createListener(cliOptions.format, cliOptions.outputLocation);\n \n         // create RootModule object and run it\n         final int errorCounter;\n         final ClassLoader moduleClassLoader \u003d Checker.class.getClassLoader();\n         final RootModule rootModule \u003d getRootModule(config.getName(), moduleClassLoader);\n \n         try {\n \n             rootModule.setModuleClassLoader(moduleClassLoader);\n             rootModule.configure(config);\n             rootModule.addListener(listener);\n \n             // run RootModule\n             errorCounter \u003d rootModule.process(cliOptions.files);\n \n         }\n         finally {\n             rootModule.destroy();\n         }\n \n         return errorCounter;\n     }\n\\ No newline at end of file\n"
    },
    "fe7655e7d82152b57fd68d37df621d22b47132ad": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3566: added execute ignored modules to CLI",
      "commitDate": 1497909220000,
      "commitName": "fe7655e7d82152b57fd68d37df621d22b47132ad",
      "commitAuthor": "rnveach",
      "commitDateOld": 1497307870000,
      "commitNameOld": "35d5d4d9e8cea4b9fec731b67a15f488d61cdf61",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 6.96,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,41 @@\n     private static int runCheckstyle(CliOptions cliOptions)\n             throws CheckstyleException, FileNotFoundException {\n         // setup the properties\n         final Properties props;\n \n         if (cliOptions.propertiesLocation \u003d\u003d null) {\n             props \u003d System.getProperties();\n         }\n         else {\n             props \u003d loadProperties(new File(cliOptions.propertiesLocation));\n         }\n \n         // create a configuration\n         final Configuration config \u003d ConfigurationLoader.loadConfiguration(\n-                cliOptions.configLocation, new PropertiesExpander(props));\n+                cliOptions.configLocation, new PropertiesExpander(props),\n+                !cliOptions.executeIgnoredModules);\n \n         // create a listener for output\n         final AuditListener listener \u003d createListener(cliOptions.format, cliOptions.outputLocation);\n \n         // create RootModule object and run it\n         final int errorCounter;\n         final ClassLoader moduleClassLoader \u003d Checker.class.getClassLoader();\n         final RootModule rootModule \u003d getRootModule(config.getName(), moduleClassLoader);\n \n         try {\n \n             rootModule.setModuleClassLoader(moduleClassLoader);\n             rootModule.configure(config);\n             rootModule.addListener(listener);\n \n             // run RootModule\n             errorCounter \u003d rootModule.process(cliOptions.files);\n \n         }\n         finally {\n             rootModule.destroy();\n         }\n \n         return errorCounter;\n     }\n\\ No newline at end of file\n"
    },
    "9765cda41ba8767f1f187dc1b097793a1dccedcd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4250: fix for seleveral inspection violations(ignored return value, deprecated package, extra variable initialization)\n",
      "commitDate": 1492975667000,
      "commitName": "9765cda41ba8767f1f187dc1b097793a1dccedcd",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 86.21,
      "commitsBetweenForRepo": 304,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     private static int runCheckstyle(CliOptions cliOptions)\n             throws CheckstyleException, FileNotFoundException {\n         // setup the properties\n         final Properties props;\n \n         if (cliOptions.propertiesLocation \u003d\u003d null) {\n             props \u003d System.getProperties();\n         }\n         else {\n             props \u003d loadProperties(new File(cliOptions.propertiesLocation));\n         }\n \n         // create a configuration\n         final Configuration config \u003d ConfigurationLoader.loadConfiguration(\n                 cliOptions.configLocation, new PropertiesExpander(props));\n \n         // create a listener for output\n         final AuditListener listener \u003d createListener(cliOptions.format, cliOptions.outputLocation);\n \n         // create RootModule object and run it\n-        int errorCounter \u003d 0;\n+        final int errorCounter;\n         final ClassLoader moduleClassLoader \u003d Checker.class.getClassLoader();\n         final RootModule rootModule \u003d getRootModule(config.getName(), moduleClassLoader);\n \n         try {\n \n             rootModule.setModuleClassLoader(moduleClassLoader);\n             rootModule.configure(config);\n             rootModule.addListener(listener);\n \n             // run RootModule\n             errorCounter \u003d rootModule.process(cliOptions.files);\n \n         }\n         finally {\n             rootModule.destroy();\n         }\n \n         return errorCounter;\n     }\n\\ No newline at end of file\n"
    },
    "8c8fee7432c89b47936c27bcc2c7f60f5cc79923": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3515: allowed cli to override and swap checker",
      "commitDate": 1478669414000,
      "commitName": "8c8fee7432c89b47936c27bcc2c7f60f5cc79923",
      "commitAuthor": "rnveach",
      "commitDateOld": 1474426326000,
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 49.11,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     private static int runCheckstyle(CliOptions cliOptions)\n             throws CheckstyleException, FileNotFoundException {\n         // setup the properties\n         final Properties props;\n \n         if (cliOptions.propertiesLocation \u003d\u003d null) {\n             props \u003d System.getProperties();\n         }\n         else {\n             props \u003d loadProperties(new File(cliOptions.propertiesLocation));\n         }\n \n         // create a configuration\n         final Configuration config \u003d ConfigurationLoader.loadConfiguration(\n                 cliOptions.configLocation, new PropertiesExpander(props));\n \n         // create a listener for output\n         final AuditListener listener \u003d createListener(cliOptions.format, cliOptions.outputLocation);\n \n-        // create Checker object and run it\n+        // create RootModule object and run it\n         int errorCounter \u003d 0;\n-        final Checker checker \u003d new Checker();\n+        final ClassLoader moduleClassLoader \u003d Checker.class.getClassLoader();\n+        final RootModule rootModule \u003d getRootModule(config.getName(), moduleClassLoader);\n \n         try {\n \n-            final ClassLoader moduleClassLoader \u003d Checker.class.getClassLoader();\n-            checker.setModuleClassLoader(moduleClassLoader);\n-            checker.configure(config);\n-            checker.addListener(listener);\n+            rootModule.setModuleClassLoader(moduleClassLoader);\n+            rootModule.configure(config);\n+            rootModule.addListener(listener);\n \n-            // run Checker\n-            errorCounter \u003d checker.process(cliOptions.files);\n+            // run RootModule\n+            errorCounter \u003d rootModule.process(cliOptions.files);\n \n         }\n         finally {\n-            checker.destroy();\n+            rootModule.destroy();\n         }\n \n         return errorCounter;\n     }\n\\ No newline at end of file\n"
    },
    "b6d9344d1c152f225a22ce9ce09341b3cc9488af": {
      "type": "Yexceptionschange",
      "commitMessage": "Pull #2034: Use StandardCharsets and get rid of UnsupportedEncodingException\n",
      "commitDate": 1442527299000,
      "commitName": "b6d9344d1c152f225a22ce9ce09341b3cc9488af",
      "commitAuthor": "Michael Osipov",
      "commitDateOld": 1442014362000,
      "commitNameOld": "0fc8b62a35beddc89cb3412388c27e88cd8cab4a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.94,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     private static int runCheckstyle(CliOptions cliOptions)\n-            throws CheckstyleException, UnsupportedEncodingException, FileNotFoundException {\n+            throws CheckstyleException, FileNotFoundException {\n         // setup the properties\n         final Properties props;\n \n         if (cliOptions.propertiesLocation \u003d\u003d null) {\n             props \u003d System.getProperties();\n         }\n         else {\n             props \u003d loadProperties(new File(cliOptions.propertiesLocation));\n         }\n \n         // create a configuration\n         final Configuration config \u003d ConfigurationLoader.loadConfiguration(\n                 cliOptions.configLocation, new PropertiesExpander(props));\n \n         // create a listener for output\n         final AuditListener listener \u003d createListener(cliOptions.format, cliOptions.outputLocation);\n \n         // create Checker object and run it\n         int errorCounter \u003d 0;\n         final Checker checker \u003d new Checker();\n \n         try {\n \n             final ClassLoader moduleClassLoader \u003d Checker.class.getClassLoader();\n             checker.setModuleClassLoader(moduleClassLoader);\n             checker.configure(config);\n             checker.addListener(listener);\n \n             // run Checker\n             errorCounter \u003d checker.process(cliOptions.files);\n \n         }\n         finally {\n             checker.destroy();\n         }\n \n         return errorCounter;\n     }\n\\ No newline at end of file\n"
    },
    "23c8774d2e2fd245de1e5df02758fd23702c565e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: AvoidInlineConditional violations fixed\n",
      "commitDate": 1439784080000,
      "commitName": "23c8774d2e2fd245de1e5df02758fd23702c565e",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439695399000,
      "commitNameOld": "259cc41625b88390ce26737a819aa446cfc72541",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 1.03,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,40 @@\n     private static int runCheckstyle(CliOptions cliOptions)\n             throws CheckstyleException, UnsupportedEncodingException, FileNotFoundException {\n         // setup the properties\n-        final Properties props \u003d\n-                cliOptions.propertiesLocation !\u003d null\n-                        ? loadProperties(new File(cliOptions.propertiesLocation))\n-                        : System.getProperties();\n+        final Properties props;\n+\n+        if (cliOptions.propertiesLocation \u003d\u003d null) {\n+            props \u003d System.getProperties();\n+        }\n+        else {\n+            props \u003d loadProperties(new File(cliOptions.propertiesLocation));\n+        }\n \n         // create a configuration\n         final Configuration config \u003d ConfigurationLoader.loadConfiguration(\n                 cliOptions.configLocation, new PropertiesExpander(props));\n \n         // create a listener for output\n         final AuditListener listener \u003d createListener(cliOptions.format, cliOptions.outputLocation);\n \n         // create Checker object and run it\n         int errorCounter \u003d 0;\n         final Checker checker \u003d new Checker();\n \n         try {\n \n             final ClassLoader moduleClassLoader \u003d Checker.class.getClassLoader();\n             checker.setModuleClassLoader(moduleClassLoader);\n             checker.configure(config);\n             checker.addListener(listener);\n \n             // run Checker\n             errorCounter \u003d checker.process(cliOptions.files);\n \n         }\n         finally {\n             checker.destroy();\n         }\n \n         return errorCounter;\n     }\n\\ No newline at end of file\n"
    },
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "huge refactoring for CLI Main class. Issue #596\n",
      "commitDate": 1430849532000,
      "commitName": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
      "commitAuthor": "Roman Ivanov",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Yreturntypechange",
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "ab2f93f9bf61816d84154e636d32c81c05854e24": {
      "type": "Yintroduced",
      "commitMessage": "Delete System.exit() and delegate exit control into separate method.\n\nIssue #596\n",
      "commitDate": 1429852725000,
      "commitName": "ab2f93f9bf61816d84154e636d32c81c05854e24",
      "commitAuthor": "Damian Szczepanik"
    }
  }
}