{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "findLineBreaks",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 272,
  "changeHistory": [
    "d1f4e8d40014f53f40f045c6f8bea7ead44761c1",
    "3bd699bd593414d63c7139aa410f13ec8341a027",
    "d49eaaf2e42538bc7f01510eb3ca2812b253c98a",
    "454af2c194e82c740e26ae814cbbf57d365b411e",
    "5ff1834a224cefac74b80a47efff15d113f76a1e",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e"
  ],
  "changeHistoryShort": {
    "d1f4e8d40014f53f40f045c6f8bea7ead44761c1": "Ybodychange",
    "3bd699bd593414d63c7139aa410f13ec8341a027": "Ybodychange",
    "d49eaaf2e42538bc7f01510eb3ca2812b253c98a": "Ybodychange",
    "454af2c194e82c740e26ae814cbbf57d365b411e": "Ybodychange",
    "5ff1834a224cefac74b80a47efff15d113f76a1e": "Yrename",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d1f4e8d40014f53f40f045c6f8bea7ead44761c1": {
      "type": "Ybodychange",
      "commitMessage": "Simplify and remove unnecessary code. #1555\n\nFixes a few violations.\n",
      "commitDate": 1440243292000,
      "commitName": "d1f4e8d40014f53f40f045c6f8bea7ead44761c1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439877123000,
      "commitNameOld": "aeb68b7da9776ef599b02e3d0fcb449aabcaf809",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 4.24,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private int[] findLineBreaks() {\n         if (lineBreaks \u003d\u003d null) {\n             final int[] lineBreakPositions \u003d new int[size() + 1];\n             lineBreakPositions[0] \u003d 0;\n             int lineNo \u003d 1;\n             final Matcher matcher \u003d LINE_TERMINATOR.matcher(fullText);\n             while (matcher.find()) {\n                 lineBreakPositions[lineNo] \u003d matcher.end();\n                 lineNo++;\n             }\n             if (lineNo \u003c lineBreakPositions.length) {\n                 lineBreakPositions[lineNo] \u003d fullText.length();\n             }\n-            this.lineBreaks \u003d lineBreakPositions;\n+            lineBreaks \u003d lineBreakPositions;\n         }\n         return lineBreaks;\n     }\n\\ No newline at end of file\n"
    },
    "3bd699bd593414d63c7139aa410f13ec8341a027": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: HiddenField violations fixed\n",
      "commitDate": 1439356761000,
      "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439295539000,
      "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private int[] findLineBreaks() {\n         if (lineBreaks \u003d\u003d null) {\n-            final int[] lineBreaks \u003d new int[size() + 1];\n-            lineBreaks[0] \u003d 0;\n+            final int[] lineBreakPositions \u003d new int[size() + 1];\n+            lineBreakPositions[0] \u003d 0;\n             int lineNo \u003d 1;\n             final Matcher matcher \u003d LINE_TERMINATOR.matcher(fullText);\n             while (matcher.find()) {\n-                lineBreaks[lineNo] \u003d matcher.end();\n+                lineBreakPositions[lineNo] \u003d matcher.end();\n                 lineNo++;\n             }\n-            if (lineNo \u003c lineBreaks.length) {\n-                lineBreaks[lineNo] \u003d fullText.length();\n+            if (lineNo \u003c lineBreakPositions.length) {\n+                lineBreakPositions[lineNo] \u003d fullText.length();\n             }\n-            this.lineBreaks \u003d lineBreaks;\n+            this.lineBreaks \u003d lineBreakPositions;\n         }\n         return lineBreaks;\n     }\n\\ No newline at end of file\n"
    },
    "d49eaaf2e42538bc7f01510eb3ca2812b253c98a": {
      "type": "Ybodychange",
      "commitMessage": "Extract increment operations to separate expressions. #1538\n\n While increment or decrement expressions nested inside other expressions are admirably terse, such expressions may be confusing, and violate the general design principle that a given construct should do precisely one thing.\n",
      "commitDate": 1438566538000,
      "commitName": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566538000,
      "commitNameOld": "49404dbd701e9f4693d0f2d9c65671ce48ed0aca",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     private int[] findLineBreaks() {\n         if (lineBreaks \u003d\u003d null) {\n             final int[] lineBreaks \u003d new int[size() + 1];\n             lineBreaks[0] \u003d 0;\n             int lineNo \u003d 1;\n             final Matcher matcher \u003d LINE_TERMINATOR.matcher(fullText);\n             while (matcher.find()) {\n-                lineBreaks[lineNo++] \u003d matcher.end();\n+                lineBreaks[lineNo] \u003d matcher.end();\n+                lineNo++;\n             }\n             if (lineNo \u003c lineBreaks.length) {\n                 lineBreaks[lineNo] \u003d fullText.length();\n             }\n             this.lineBreaks \u003d lineBreaks;\n         }\n         return lineBreaks;\n     }\n\\ No newline at end of file\n"
    },
    "454af2c194e82c740e26ae814cbbf57d365b411e": {
      "type": "Ybodychange",
      "commitMessage": "100% coverage for FileText, #1295\n",
      "commitDate": 1437708810000,
      "commitName": "454af2c194e82c740e26ae814cbbf57d365b411e",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 67.66,
      "commitsBetweenForRepo": 460,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,16 @@\n     private int[] findLineBreaks() {\n         if (lineBreaks \u003d\u003d null) {\n             final int[] lineBreaks \u003d new int[size() + 1];\n             lineBreaks[0] \u003d 0;\n             int lineNo \u003d 1;\n             final Matcher matcher \u003d LINE_TERMINATOR.matcher(fullText);\n             while (matcher.find()) {\n                 lineBreaks[lineNo++] \u003d matcher.end();\n             }\n             if (lineNo \u003c lineBreaks.length) {\n-                lineBreaks[lineNo++] \u003d fullText.length();\n-            }\n-            if (lineNo !\u003d lineBreaks.length) {\n-                throw new ConcurrentModificationException(\"Text changed.\");\n+                lineBreaks[lineNo] \u003d fullText.length();\n             }\n             this.lineBreaks \u003d lineBreaks;\n         }\n         return lineBreaks;\n     }\n\\ No newline at end of file\n"
    },
    "5ff1834a224cefac74b80a47efff15d113f76a1e": {
      "type": "Yrename",
      "commitMessage": "Fix PMD violations from AvoidFieldNameMatchingMethodName rule. #984\n",
      "commitDate": 1431536088000,
      "commitName": "5ff1834a224cefac74b80a47efff15d113f76a1e",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1430523168000,
      "commitNameOld": "31421dcdda3b3534f2fcc5c6e88a8fdbc5d15311",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 11.72,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-    private int[] lineBreaks()\n+    private int[] findLineBreaks()\n     {\n         if (lineBreaks \u003d\u003d null) {\n             final int[] lineBreaks \u003d new int[size() + 1];\n             lineBreaks[0] \u003d 0;\n             int lineNo \u003d 1;\n             final Matcher matcher \u003d LINE_TERMINATOR.matcher(fullText);\n             while (matcher.find()) {\n                 lineBreaks[lineNo++] \u003d matcher.end();\n             }\n             if (lineNo \u003c lineBreaks.length) {\n                 lineBreaks[lineNo++] \u003d fullText.length();\n             }\n             if (lineNo !\u003d lineBreaks.length) {\n                 throw new ConcurrentModificationException(\"Text changed.\");\n             }\n             this.lineBreaks \u003d lineBreaks;\n         }\n         return lineBreaks;\n     }\n\\ No newline at end of file\n"
    },
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, api, #512\n",
      "commitDate": 1421677181000,
      "commitName": "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1406058290000,
      "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 180.77,
      "commitsBetweenForRepo": 395,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private int[] lineBreaks()\n     {\n-        if (mLineBreaks \u003d\u003d null) {\n+        if (lineBreaks \u003d\u003d null) {\n             final int[] lineBreaks \u003d new int[size() + 1];\n             lineBreaks[0] \u003d 0;\n             int lineNo \u003d 1;\n-            final Matcher matcher \u003d LINE_TERMINATOR.matcher(mFullText);\n+            final Matcher matcher \u003d LINE_TERMINATOR.matcher(fullText);\n             while (matcher.find()) {\n                 lineBreaks[lineNo++] \u003d matcher.end();\n             }\n             if (lineNo \u003c lineBreaks.length) {\n-                lineBreaks[lineNo++] \u003d mFullText.length();\n+                lineBreaks[lineNo++] \u003d fullText.length();\n             }\n             if (lineNo !\u003d lineBreaks.length) {\n                 throw new ConcurrentModificationException(\"Text changed.\");\n             }\n-            mLineBreaks \u003d lineBreaks;\n+            this.lineBreaks \u003d lineBreaks;\n         }\n-        return mLineBreaks;\n+        return lineBreaks;\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": {
      "type": "Yintroduced",
      "commitMessage": "Apply patch #2783226 that uses FileText as an implementation for\nList\u003cString\u003e to pass lines around\n",
      "commitDate": 1277730133000,
      "commitName": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
      "commitAuthor": "Oliver Burn"
    }
  }
}