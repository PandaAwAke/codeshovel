{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "runCli___commandLine-CommandLine__filesToProcess-List__File__",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 442,
  "changeHistory": [
    "58327e1dd9707b09f82ae2d4d4ce14c253247154",
    "dd91dc1cf4dfbffd1bd608a9b0f8a487eb25122d",
    "44119413b68542bb1db3f50d2585834b9d00d1b3",
    "a6ab6053e6b3d421d19764418cba3858c683e6e8"
  ],
  "changeHistoryShort": {
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": "Ybodychange",
    "dd91dc1cf4dfbffd1bd608a9b0f8a487eb25122d": "Ybodychange",
    "44119413b68542bb1db3f50d2585834b9d00d1b3": "Ybodychange",
    "a6ab6053e6b3d421d19764418cba3858c683e6e8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5436: Split TreeWalker to TreeWalker and JavaParser\n",
      "commitDate": 1516775986000,
      "commitName": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": 1515079236000,
      "commitNameOld": "90f20e09869c71eb22190ad9c1d46d5deec324a5",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 19.64,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,57 @@\n     private static int runCli(CommandLine commandLine, List\u003cFile\u003e filesToProcess)\n             throws IOException, CheckstyleException {\n         int result \u003d 0;\n \n         // create config helper object\n         final CliOptions config \u003d convertCliToPojo(commandLine, filesToProcess);\n         if (commandLine.hasOption(OPTION_T_NAME)) {\n             // print AST\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d AstTreeStringPrinter.printFileAst(file,\n-                    AstTreeStringPrinter.PrintOptions.WITHOUT_COMMENTS);\n+                    JavaParser.Options.WITHOUT_COMMENTS);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_CAPITAL_T_NAME)) {\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d AstTreeStringPrinter.printFileAst(file,\n-                    AstTreeStringPrinter.PrintOptions.WITH_COMMENTS);\n+                    JavaParser.Options.WITH_COMMENTS);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_J_NAME)) {\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d DetailNodeTreeStringPrinter.printFileAst(file);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_CAPITAL_J_NAME)) {\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d AstTreeStringPrinter.printJavaAndJavadocTree(file);\n             System.out.print(stringAst);\n         }\n         else {\n             if (commandLine.hasOption(OPTION_D_NAME)) {\n                 final Logger parentLogger \u003d Logger.getLogger(Main.class.getName()).getParent();\n                 final ConsoleHandler handler \u003d new ConsoleHandler();\n                 handler.setLevel(Level.FINEST);\n                 handler.setFilter(new Filter() {\n                     private final String packageName \u003d Main.class.getPackage().getName();\n \n                     @Override\n                     public boolean isLoggable(LogRecord record) {\n                         return record.getLoggerName().startsWith(packageName);\n                     }\n                 });\n                 parentLogger.addHandler(handler);\n                 parentLogger.setLevel(Level.FINEST);\n             }\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Checkstyle debug logging enabled\");\n                 LOG.debug(\"Running Checkstyle with version: \"\n                         + Main.class.getPackage().getImplementationVersion());\n             }\n \n             // run Checker\n             result \u003d runCheckstyle(config);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n"
    },
    "dd91dc1cf4dfbffd1bd608a9b0f8a487eb25122d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4707: fix all violations of BooleanParameter idea check except those addressed in separate task\n",
      "commitDate": 1501378825000,
      "commitName": "dd91dc1cf4dfbffd1bd608a9b0f8a487eb25122d",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1501160090000,
      "commitNameOld": "b1b49751d38af0bf2476aea1f4595283615ab7de",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 2.53,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,57 @@\n     private static int runCli(CommandLine commandLine, List\u003cFile\u003e filesToProcess)\n             throws IOException, CheckstyleException {\n         int result \u003d 0;\n \n         // create config helper object\n         final CliOptions config \u003d convertCliToPojo(commandLine, filesToProcess);\n         if (commandLine.hasOption(OPTION_T_NAME)) {\n             // print AST\n             final File file \u003d config.files.get(0);\n-            final String stringAst \u003d AstTreeStringPrinter.printFileAst(file, false);\n+            final String stringAst \u003d AstTreeStringPrinter.printFileAst(file,\n+                    AstTreeStringPrinter.PrintOptions.WITHOUT_COMMENTS);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_CAPITAL_T_NAME)) {\n             final File file \u003d config.files.get(0);\n-            final String stringAst \u003d AstTreeStringPrinter.printFileAst(file, true);\n+            final String stringAst \u003d AstTreeStringPrinter.printFileAst(file,\n+                    AstTreeStringPrinter.PrintOptions.WITH_COMMENTS);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_J_NAME)) {\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d DetailNodeTreeStringPrinter.printFileAst(file);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_CAPITAL_J_NAME)) {\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d AstTreeStringPrinter.printJavaAndJavadocTree(file);\n             System.out.print(stringAst);\n         }\n         else {\n             if (commandLine.hasOption(OPTION_D_NAME)) {\n                 final Logger parentLogger \u003d Logger.getLogger(Main.class.getName()).getParent();\n                 final ConsoleHandler handler \u003d new ConsoleHandler();\n                 handler.setLevel(Level.FINEST);\n                 handler.setFilter(new Filter() {\n                     private final String packageName \u003d Main.class.getPackage().getName();\n \n                     @Override\n                     public boolean isLoggable(LogRecord record) {\n                         return record.getLoggerName().startsWith(packageName);\n                     }\n                 });\n                 parentLogger.addHandler(handler);\n                 parentLogger.setLevel(Level.FINEST);\n             }\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Checkstyle debug logging enabled\");\n                 LOG.debug(\"Running Checkstyle with version: \"\n                         + Main.class.getPackage().getImplementationVersion());\n             }\n \n             // run Checker\n             result \u003d runCheckstyle(config);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n"
    },
    "44119413b68542bb1db3f50d2585834b9d00d1b3": {
      "type": "Ybodychange",
      "commitMessage": "minor: fix IntelijIdea violations of \u0027Scope of variable lnr is too broad\u0027\n",
      "commitDate": 1468298833000,
      "commitName": "44119413b68542bb1db3f50d2585834b9d00d1b3",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1466185694000,
      "commitNameOld": "980e53562ac1f29d2d9e8c434ada60515e9890e5",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 24.46,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,55 @@\n     private static int runCli(CommandLine commandLine, List\u003cFile\u003e filesToProcess)\n             throws IOException, CheckstyleException {\n         int result \u003d 0;\n \n         // create config helper object\n         final CliOptions config \u003d convertCliToPojo(commandLine, filesToProcess);\n         if (commandLine.hasOption(OPTION_T_NAME)) {\n             // print AST\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d AstTreeStringPrinter.printFileAst(file, false);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_CAPITAL_T_NAME)) {\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d AstTreeStringPrinter.printFileAst(file, true);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_J_NAME)) {\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d DetailNodeTreeStringPrinter.printFileAst(file);\n             System.out.print(stringAst);\n         }\n         else if (commandLine.hasOption(OPTION_CAPITAL_J_NAME)) {\n             final File file \u003d config.files.get(0);\n             final String stringAst \u003d AstTreeStringPrinter.printJavaAndJavadocTree(file);\n             System.out.print(stringAst);\n         }\n         else {\n             if (commandLine.hasOption(OPTION_D_NAME)) {\n                 final Logger parentLogger \u003d Logger.getLogger(Main.class.getName()).getParent();\n                 final ConsoleHandler handler \u003d new ConsoleHandler();\n-\n-                parentLogger.setLevel(Level.FINEST);\n                 handler.setLevel(Level.FINEST);\n-                parentLogger.addHandler(handler);\n                 handler.setFilter(new Filter() {\n                     private final String packageName \u003d Main.class.getPackage().getName();\n \n                     @Override\n                     public boolean isLoggable(LogRecord record) {\n                         return record.getLoggerName().startsWith(packageName);\n                     }\n                 });\n+                parentLogger.addHandler(handler);\n+                parentLogger.setLevel(Level.FINEST);\n             }\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Checkstyle debug logging enabled\");\n                 LOG.debug(\"Running Checkstyle with version: \"\n                         + Main.class.getPackage().getImplementationVersion());\n             }\n \n             // run Checker\n             result \u003d runCheckstyle(config);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n"
    },
    "a6ab6053e6b3d421d19764418cba3858c683e6e8": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3086: added debug option",
      "commitDate": 1464355091000,
      "commitName": "a6ab6053e6b3d421d19764418cba3858c683e6e8",
      "commitAuthor": "rnveach"
    }
  }
}