{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "XMLLogger.java",
  "functionName": "addError",
  "functionId": "addError___event-AuditEvent",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
  "functionStartLine": 366,
  "functionEndLine": 368,
  "changeHistory": [
    "938e955fb3dfc07b75739075391bf904c2920a1f",
    "78de3dc771531cfee50a60ff2cee80c46b83c43b",
    "ce196814d857a4244a80c51d5151cc35e90b6749",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "61e6ce5ee716c4a2999b915a00a026277c9e3e46",
    "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1",
    "53197d9be9366ccf9ebccc1e6e31270c1dff8e95",
    "65989e76a40bf085059ee2bf9c695c6b45a771fb",
    "1d21af32b9949396bb3f010cd3f3addec4075b5d"
  ],
  "changeHistoryShort": {
    "938e955fb3dfc07b75739075391bf904c2920a1f": "Ybodychange",
    "78de3dc771531cfee50a60ff2cee80c46b83c43b": "Ybodychange",
    "ce196814d857a4244a80c51d5151cc35e90b6749": "Ymultichange(Yparameterchange,Ybodychange)",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "61e6ce5ee716c4a2999b915a00a026277c9e3e46": "Ybodychange",
    "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1": "Ybodychange",
    "53197d9be9366ccf9ebccc1e6e31270c1dff8e95": "Ybodychange",
    "65989e76a40bf085059ee2bf9c695c6b45a771fb": "Ybodychange",
    "1d21af32b9949396bb3f010cd3f3addec4075b5d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "938e955fb3dfc07b75739075391bf904c2920a1f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4932: XMLLogger should be thread-safe\n",
      "commitDate": 1503959042000,
      "commitName": "938e955fb3dfc07b75739075391bf904c2920a1f",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": 1502399664000,
      "commitNameOld": "78de3dc771531cfee50a60ff2cee80c46b83c43b",
      "commitAuthorOld": "Luolc",
      "daysBetweenCommits": 18.05,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,3 @@\n-    public void addError(AuditEvent event) {\n-        if (event.getSeverityLevel() !\u003d SeverityLevel.IGNORE) {\n-            writer.print(\"\u003cerror\" + \" line\u003d\\\"\" + event.getLine() + \"\\\"\");\n-            if (event.getColumn() \u003e 0) {\n-                writer.print(\" column\u003d\\\"\" + event.getColumn() + \"\\\"\");\n-            }\n-            writer.print(\" severity\u003d\\\"\"\n-                + event.getSeverityLevel().getName()\n-                + \"\\\"\");\n-            writer.print(\" message\u003d\\\"\"\n-                + encode(event.getMessage())\n-                + \"\\\"\");\n-            writer.print(\" source\u003d\\\"\");\n-            if (event.getModuleId() \u003d\u003d null) {\n-                writer.print(encode(event.getSourceName()));\n-            }\n-            else {\n-                writer.print(encode(event.getModuleId()));\n-            }\n-            writer.println(\"\\\"/\u003e\");\n-        }\n-    }\n\\ No newline at end of file\n+        public void addError(AuditEvent event) {\n+            errors.add(event);\n+        }\n\\ No newline at end of file\n"
    },
    "78de3dc771531cfee50a60ff2cee80c46b83c43b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4607: Added moduleId to violation messages\n",
      "commitDate": 1502399664000,
      "commitName": "78de3dc771531cfee50a60ff2cee80c46b83c43b",
      "commitAuthor": "Luolc",
      "commitDateOld": 1502279688000,
      "commitNameOld": "dc88a9954baf88df6543cf73baabed710f882363",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 1.39,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,22 @@\n     public void addError(AuditEvent event) {\n         if (event.getSeverityLevel() !\u003d SeverityLevel.IGNORE) {\n             writer.print(\"\u003cerror\" + \" line\u003d\\\"\" + event.getLine() + \"\\\"\");\n             if (event.getColumn() \u003e 0) {\n                 writer.print(\" column\u003d\\\"\" + event.getColumn() + \"\\\"\");\n             }\n             writer.print(\" severity\u003d\\\"\"\n                 + event.getSeverityLevel().getName()\n                 + \"\\\"\");\n             writer.print(\" message\u003d\\\"\"\n                 + encode(event.getMessage())\n                 + \"\\\"\");\n-            writer.println(\" source\u003d\\\"\"\n-                + encode(event.getSourceName())\n-                + \"\\\"/\u003e\");\n+            writer.print(\" source\u003d\\\"\");\n+            if (event.getModuleId() \u003d\u003d null) {\n+                writer.print(encode(event.getSourceName()));\n+            }\n+            else {\n+                writer.print(encode(event.getModuleId()));\n+            }\n+            writer.println(\"\\\"/\u003e\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ce196814d857a4244a80c51d5151cc35e90b6749": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #2080: Fix typos in code\n",
      "commitDate": 1445038509000,
      "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthor": "Michal Kordas",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439011061000,
      "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public void addError(AuditEvent evt) {\n-        if (SeverityLevel.IGNORE !\u003d evt.getSeverityLevel()) {\n+        if (evt.getSeverityLevel() !\u003d SeverityLevel.IGNORE) {\n             writer.print(\"\u003cerror\" + \" line\u003d\\\"\" + evt.getLine() + \"\\\"\");\n             if (evt.getColumn() \u003e 0) {\n                 writer.print(\" column\u003d\\\"\" + evt.getColumn() + \"\\\"\");\n             }\n             writer.print(\" severity\u003d\\\"\"\n                 + evt.getSeverityLevel().getName()\n                 + \"\\\"\");\n             writer.print(\" message\u003d\\\"\"\n                 + encode(evt.getMessage())\n                 + \"\\\"\");\n             writer.println(\" source\u003d\\\"\"\n                 + encode(evt.getSourceName())\n                 + \"\\\"/\u003e\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": {
      "type": "Ybodychange",
      "commitMessage": "Replace calls to equals() on enums with identity comparison\n\nThis replacement is safe because two enum constants are equal only when they have the same identity.\n",
      "commitDate": 1425998782000,
      "commitName": "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.73,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public void addError(AuditEvent evt)\n     {\n-        if (!SeverityLevel.IGNORE.equals(evt.getSeverityLevel())) {\n+        if (SeverityLevel.IGNORE !\u003d evt.getSeverityLevel()) {\n             writer.print(\"\u003cerror\" + \" line\u003d\\\"\" + evt.getLine() + \"\\\"\");\n             if (evt.getColumn() \u003e 0) {\n                 writer.print(\" column\u003d\\\"\" + evt.getColumn() + \"\\\"\");\n             }\n             writer.print(\" severity\u003d\\\"\"\n                 + evt.getSeverityLevel().getName()\n                 + \"\\\"\");\n             writer.print(\" message\u003d\\\"\"\n                 + encode(evt.getMessage())\n                 + \"\\\"\");\n             writer.println(\" source\u003d\\\"\"\n                 + encode(evt.getSourceName())\n                 + \"\\\"/\u003e\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "61e6ce5ee716c4a2999b915a00a026277c9e3e46": {
      "type": "Ybodychange",
      "commitMessage": "Added \"source\" attribute to \"error\" element of XMLLogger output.\n",
      "commitDate": 1052564360000,
      "commitName": "61e6ce5ee716c4a2999b915a00a026277c9e3e46",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1048407856000,
      "commitNameOld": "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 48.11,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n     public void addError(AuditEvent aEvt)\n     {\n         if (!SeverityLevel.IGNORE.equals(aEvt.getSeverityLevel())) {\n             mWriter.print(\"\u003cerror\" + \" line\u003d\\\"\" + aEvt.getLine() + \"\\\"\");\n             if (aEvt.getColumn() \u003e 0) {\n                 mWriter.print(\" column\u003d\\\"\" + aEvt.getColumn() + \"\\\"\");\n             }\n             mWriter.print(\" severity\u003d\\\"\"\n                 + aEvt.getSeverityLevel().getName()\n                 + \"\\\"\");\n-            mWriter.println(\" message\u003d\\\"\"\n+            mWriter.print(\" message\u003d\\\"\"\n                 + encode(aEvt.getMessage())\n+                + \"\\\"\");\n+            mWriter.println(\" source\u003d\\\"\"\n+                + encode(aEvt.getSourceName())\n                 + \"\\\"/\u003e\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1": {
      "type": "Ybodychange",
      "commitMessage": "only log non-IGNORE events\n",
      "commitDate": 1048407856000,
      "commitName": "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1047365805000,
      "commitNameOld": "53197d9be9366ccf9ebccc1e6e31270c1dff8e95",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 12.06,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,15 @@\n     public void addError(AuditEvent aEvt)\n     {\n-        mWriter.print(\"\u003cerror\" + \" line\u003d\\\"\" + aEvt.getLine() + \"\\\"\");\n-        if (aEvt.getColumn() \u003e 0) {\n-            mWriter.print(\" column\u003d\\\"\" + aEvt.getColumn() + \"\\\"\");\n+        if (!SeverityLevel.IGNORE.equals(aEvt.getSeverityLevel())) {\n+            mWriter.print(\"\u003cerror\" + \" line\u003d\\\"\" + aEvt.getLine() + \"\\\"\");\n+            if (aEvt.getColumn() \u003e 0) {\n+                mWriter.print(\" column\u003d\\\"\" + aEvt.getColumn() + \"\\\"\");\n+            }\n+            mWriter.print(\" severity\u003d\\\"\"\n+                + aEvt.getSeverityLevel().getName()\n+                + \"\\\"\");\n+            mWriter.println(\" message\u003d\\\"\"\n+                + encode(aEvt.getMessage())\n+                + \"\\\"/\u003e\");\n         }\n-        mWriter.print(\" severity\u003d\\\"\"\n-                      + aEvt.getSeverityLevel().getName()\n-                      + \"\\\"\");\n-        mWriter.println(\" message\u003d\\\"\" + encode(aEvt.getMessage()) + \"\\\"/\u003e\");\n     }\n\\ No newline at end of file\n"
    },
    "53197d9be9366ccf9ebccc1e6e31270c1dff8e95": {
      "type": "Ybodychange",
      "commitMessage": "Patch from David Schneider to add Severity to logged messages.\n",
      "commitDate": 1047365805000,
      "commitName": "53197d9be9366ccf9ebccc1e6e31270c1dff8e95",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1039737150000,
      "commitNameOld": "6ba28f2ef1ba7b8a8a20273d62fd7817d63a91f0",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 88.29,
      "commitsBetweenForRepo": 248,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,11 @@\n     public void addError(AuditEvent aEvt)\n     {\n         mWriter.print(\"\u003cerror\" + \" line\u003d\\\"\" + aEvt.getLine() + \"\\\"\");\n         if (aEvt.getColumn() \u003e 0) {\n             mWriter.print(\" column\u003d\\\"\" + aEvt.getColumn() + \"\\\"\");\n         }\n+        mWriter.print(\" severity\u003d\\\"\"\n+                      + aEvt.getSeverityLevel().getName()\n+                      + \"\\\"\");\n         mWriter.println(\" message\u003d\\\"\" + encode(aEvt.getMessage()) + \"\\\"/\u003e\");\n     }\n\\ No newline at end of file\n"
    },
    "65989e76a40bf085059ee2bf9c695c6b45a771fb": {
      "type": "Ybodychange",
      "commitMessage": "Request 555262: Include column number in the XML output\n",
      "commitDate": 1021254521000,
      "commitName": "65989e76a40bf085059ee2bf9c695c6b45a771fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1014247148000,
      "commitNameOld": "c85ec6f26ade692103ac27383a87c3402b4d66ca",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 81.1,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,8 @@\n     public void addError(AuditEvent aEvt)\n     {\n-        mWriter.println(\"\u003cerror \" +\n-                        \"line\u003d\\\"\" + aEvt.getLine() + \"\\\" \" +\n-                        \"message\u003d\\\"\" + encode(aEvt.getMessage()) + \"\\\"/\u003e\");\n+        mWriter.print(\"\u003cerror\" + \" line\u003d\\\"\" + aEvt.getLine() + \"\\\"\");\n+        if (aEvt.getColumn() \u003e 0) {\n+            mWriter.print(\" column\u003d\\\"\" + aEvt.getColumn() + \"\\\"\");\n+        }\n+        mWriter.println(\" message\u003d\\\"\" + encode(aEvt.getMessage()) + \"\\\"/\u003e\");\n     }\n\\ No newline at end of file\n"
    },
    "1d21af32b9949396bb3f010cd3f3addec4075b5d": {
      "type": "Yintroduced",
      "commitMessage": "first cut\n",
      "commitDate": 999188480000,
      "commitName": "1d21af32b9949396bb3f010cd3f3addec4075b5d",
      "commitAuthor": "Oliver Burn"
    }
  }
}