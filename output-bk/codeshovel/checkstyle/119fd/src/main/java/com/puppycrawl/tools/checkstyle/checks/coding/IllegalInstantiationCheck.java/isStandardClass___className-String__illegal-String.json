{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "IllegalInstantiationCheck.java",
  "functionName": "isStandardClass",
  "functionId": "isStandardClass___className-String__illegal-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
  "functionStartLine": 329,
  "functionEndLine": 349,
  "changeHistory": [
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1",
    "6054b46c9b717a03cf000c7884d0256335fc01e9",
    "a707819ab73dded873917fd33e22d45d0e3e1860",
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
    "d64bdf0caa867be3913f2665ef4fcc654524937e"
  ],
  "changeHistoryShort": {
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1": "Ybodychange",
    "6054b46c9b717a03cf000c7884d0256335fc01e9": "Ybodychange",
    "a707819ab73dded873917fd33e22d45d0e3e1860": "Ybodychange",
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5": "Ymultichange(Yparameterchange,Ybodychange)",
    "d64bdf0caa867be3913f2665ef4fcc654524937e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1": {
      "type": "Ybodychange",
      "commitMessage": "minor: fix typos\n",
      "commitDate": 1514092430000,
      "commitName": "3b531fe996078098c7fa30b8ab0645a6157dc6d1",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": 1512615523000,
      "commitNameOld": "350a5a513d3655a12541b7411c8bf73abba6a0c8",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 17.09,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private boolean isStandardClass(String className, String illegal) {\n-        boolean isStandardCalss \u003d false;\n+        boolean isStandardClass \u003d false;\n         // class from java.lang\n         if (illegal.length() - JAVA_LANG.length() \u003d\u003d className.length()\n             \u0026\u0026 illegal.endsWith(className)\n             \u0026\u0026 illegal.startsWith(JAVA_LANG)) {\n             // java.lang needs no import, but a class without import might\n             // also come from the same file or be in the same package.\n             // E.g. if a class defines an inner class \"Boolean\",\n             // the expression \"new Boolean()\" refers to that class,\n             // not to java.lang.Boolean\n \n             final boolean isSameFile \u003d classNames.contains(className);\n             final boolean isSamePackage \u003d isSamePackage(className);\n \n             if (!isSameFile \u0026\u0026 !isSamePackage) {\n-                isStandardCalss \u003d true;\n+                isStandardClass \u003d true;\n             }\n         }\n-        return isStandardCalss;\n+        return isStandardClass;\n     }\n\\ No newline at end of file\n"
    },
    "6054b46c9b717a03cf000c7884d0256335fc01e9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4940: fix MultipleReturnPointsPerMethod idea violation\n",
      "commitDate": 1503206988000,
      "commitName": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1497287515000,
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 68.51,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     private boolean isStandardClass(String className, String illegal) {\n+        boolean isStandardCalss \u003d false;\n         // class from java.lang\n         if (illegal.length() - JAVA_LANG.length() \u003d\u003d className.length()\n             \u0026\u0026 illegal.endsWith(className)\n             \u0026\u0026 illegal.startsWith(JAVA_LANG)) {\n             // java.lang needs no import, but a class without import might\n             // also come from the same file or be in the same package.\n             // E.g. if a class defines an inner class \"Boolean\",\n             // the expression \"new Boolean()\" refers to that class,\n             // not to java.lang.Boolean\n \n             final boolean isSameFile \u003d classNames.contains(className);\n             final boolean isSamePackage \u003d isSamePackage(className);\n \n             if (!isSameFile \u0026\u0026 !isSamePackage) {\n-                return true;\n+                isStandardCalss \u003d true;\n             }\n         }\n-        return false;\n+        return isStandardCalss;\n     }\n\\ No newline at end of file\n"
    },
    "a707819ab73dded873917fd33e22d45d0e3e1860": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2661: Enforce AvoidConditionInversionCheck of sevntu-checkstyle over Checkstyle source code\n",
      "commitDate": 1450994517000,
      "commitName": "a707819ab73dded873917fd33e22d45d0e3e1860",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1450903898000,
      "commitNameOld": "2864c10cd45d23b91717299954aaaf41d36a6cb0",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 1.05,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private boolean isStandardClass(String className, String illegal) {\n         // class from java.lang\n         if (illegal.length() - JAVA_LANG.length() \u003d\u003d className.length()\n             \u0026\u0026 illegal.endsWith(className)\n             \u0026\u0026 illegal.startsWith(JAVA_LANG)) {\n             // java.lang needs no import, but a class without import might\n             // also come from the same file or be in the same package.\n             // E.g. if a class defines an inner class \"Boolean\",\n             // the expression \"new Boolean()\" refers to that class,\n             // not to java.lang.Boolean\n \n             final boolean isSameFile \u003d classNames.contains(className);\n             final boolean isSamePackage \u003d isSamePackage(className);\n \n-            if (!(isSameFile || isSamePackage)) {\n+            if (!isSameFile \u0026\u0026 !isSamePackage) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #1293: Improved coverage for IllegalInstantiationCheck\n",
      "commitDate": 1439087559000,
      "commitName": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "d64bdf0caa867be3913f2665ef4fcc654524937e": {
      "type": "Yintroduced",
      "commitMessage": "IllegalInstantiationCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": 1434261690000,
      "commitName": "d64bdf0caa867be3913f2665ef4fcc654524937e",
      "commitAuthor": "Roman Ivanov"
    }
  }
}