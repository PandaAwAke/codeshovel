{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "RequireThisCheck.java",
  "functionName": "isUserDefinedArrangementOfThis",
  "functionId": "isUserDefinedArrangementOfThis___currentFrame-AbstractFrame__ident-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
  "functionStartLine": 547,
  "functionEndLine": 569,
  "changeHistory": [
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
    "81c030e322201085e463b9cc97e3e8dbce0e38d4",
    "0a85131b141a185ec3d7bb92df8ccbd92d38570e",
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25",
    "425fd5a27cd567d5784bd246729c55cf8cda3dbd",
    "6c04cd63af392376159dc7aae41d85bbc348e96d",
    "11639b8437306390798d85fc54422b4559f553c3",
    "f52306ff7799ea2b2e4d99fba7040a11b186d68a",
    "4424370783f1c41fc1e146f554468f89e8f0e88b"
  ],
  "changeHistoryShort": {
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e": "Ybodychange",
    "81c030e322201085e463b9cc97e3e8dbce0e38d4": "Ybodychange",
    "0a85131b141a185ec3d7bb92df8ccbd92d38570e": "Ybodychange",
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "425fd5a27cd567d5784bd246729c55cf8cda3dbd": "Ybodychange",
    "6c04cd63af392376159dc7aae41d85bbc348e96d": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "11639b8437306390798d85fc54422b4559f553c3": "Ymodifierchange",
    "f52306ff7799ea2b2e4d99fba7040a11b186d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "4424370783f1c41fc1e146f554468f89e8f0e88b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e": {
      "type": "Ybodychange",
      "commitMessage": "Pull #4102: changed loops to end execution early",
      "commitDate": 1491393573000,
      "commitName": "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
      "commitAuthor": "rnveach",
      "commitDateOld": 1488307797000,
      "commitNameOld": "1a49cdac6fca0c130e212b49f790865f9ad2c267",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 35.72,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n     private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                           DetailAST ident) {\n         final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n         final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n         final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n         final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n \n         boolean userDefinedArrangementOfThis \u003d false;\n \n         final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n             getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n                 blockEndToken.getLineNo());\n \n         for (DetailAST variableUsage : variableUsagesInsideBlock) {\n             final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n             if (prevSibling !\u003d null\n                     \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n                 userDefinedArrangementOfThis \u003d true;\n+                break;\n             }\n         }\n         return userDefinedArrangementOfThis;\n     }\n\\ No newline at end of file\n"
    },
    "81c030e322201085e463b9cc97e3e8dbce0e38d4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3335: prevented static variables being checked for RequireThis (#3355)\n\n",
      "commitDate": 1469508708000,
      "commitName": "81c030e322201085e463b9cc97e3e8dbce0e38d4",
      "commitAuthor": "rnveach",
      "commitDateOld": 1467737762000,
      "commitNameOld": "0a85131b141a185ec3d7bb92df8ccbd92d38570e",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 20.5,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n     private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                           DetailAST ident) {\n         final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n         final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n         final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n         final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n \n         boolean userDefinedArrangementOfThis \u003d false;\n \n-        if (blockEndToken !\u003d null) {\n-            final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n-                getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n-                    blockEndToken.getLineNo());\n+        final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n+            getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n+                blockEndToken.getLineNo());\n \n-            for (DetailAST variableUsage : variableUsagesInsideBlock) {\n-                final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n-                if (prevSibling !\u003d null\n-                        \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n-                    userDefinedArrangementOfThis \u003d true;\n-                }\n+        for (DetailAST variableUsage : variableUsagesInsideBlock) {\n+            final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n+            if (prevSibling !\u003d null\n+                    \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n+                userDefinedArrangementOfThis \u003d true;\n             }\n         }\n         return userDefinedArrangementOfThis;\n     }\n\\ No newline at end of file\n"
    },
    "0a85131b141a185ec3d7bb92df8ccbd92d38570e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3334: fixed RequireThis when can\u0027t find end block token (#3336)\n\n",
      "commitDate": 1467737762000,
      "commitName": "0a85131b141a185ec3d7bb92df8ccbd92d38570e",
      "commitAuthor": "rnveach",
      "commitDateOld": 1466112819000,
      "commitNameOld": "40a0b5dcf7f9b45ae98ddcb1dec6e9e7c4eec676",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 18.81,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n     private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                           DetailAST ident) {\n         final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n         final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n         final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n         final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n \n-        final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n-            getAllTokensWhichAreEqualToCurrent(definitionToken, ident, blockEndToken.getLineNo());\n-\n         boolean userDefinedArrangementOfThis \u003d false;\n-        for (DetailAST variableUsage : variableUsagesInsideBlock) {\n-            final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n-            if (prevSibling !\u003d null\n-                    \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n-                userDefinedArrangementOfThis \u003d true;\n+\n+        if (blockEndToken !\u003d null) {\n+            final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n+                getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n+                    blockEndToken.getLineNo());\n+\n+            for (DetailAST variableUsage : variableUsagesInsideBlock) {\n+                final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n+                if (prevSibling !\u003d null\n+                        \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n+                    userDefinedArrangementOfThis \u003d true;\n+                }\n             }\n         }\n         return userDefinedArrangementOfThis;\n     }\n\\ No newline at end of file\n"
    },
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Issue #2362: Add \u0027validateOnlyOverlapping\u0027 option for RequireThisCheck\n",
      "commitDate": 1457102074000,
      "commitName": "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25",
      "commitAuthor": "Andrei Selkin",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Yreturntypechange",
        "Ymodifierchange",
        "Ybodychange"
      ]
    },
    "425fd5a27cd567d5784bd246729c55cf8cda3dbd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2539: Fix RequireThis check false-positive on methods\n",
      "commitDate": 1451598097000,
      "commitName": "425fd5a27cd567d5784bd246729c55cf8cda3dbd",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1450994205000,
      "commitNameOld": "6c04cd63af392376159dc7aae41d85bbc348e96d",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 6.99,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n     private AbstractFrame checkMethod(DetailAST ast) {\n         final AbstractFrame frame \u003d findFrame(ast, true);\n         if (frame !\u003d null\n-                \u0026\u0026 ((ClassFrame) frame).hasInstanceMethod(ast)) {\n+            \u0026\u0026 ((ClassFrame) frame).hasInstanceMethod(ast)\n+            \u0026\u0026 !((ClassFrame) frame).hasStaticMethod(ast)) {\n             return frame;\n         }\n         return null;\n     }\n\\ No newline at end of file\n"
    },
    "6c04cd63af392376159dc7aae41d85bbc348e96d": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Issue #2239: Extend RequireThis check message\n",
      "commitDate": 1450994205000,
      "commitName": "6c04cd63af392376159dc7aae41d85bbc348e96d",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Yreturntypechange",
        "Ybodychange"
      ]
    },
    "11639b8437306390798d85fc54422b4559f553c3": {
      "type": "Ymodifierchange",
      "commitMessage": "Pull #2605: Make methods private in RequireThisCheck\n",
      "commitDate": 1447657308000,
      "commitName": "11639b8437306390798d85fc54422b4559f553c3",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1447597420000,
      "commitNameOld": "f52306ff7799ea2b2e4d99fba7040a11b186d68a",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 0.69,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n-    protected final boolean isClassMethod(DetailAST ident) {\n+    private boolean isClassMethod(DetailAST ident) {\n         final LexicalFrame frame \u003d findFrame(ident, true);\n         return frame instanceof ClassFrame\n                 \u0026\u0026 ((ClassFrame) frame).hasInstanceMethod(ident);\n     }\n\\ No newline at end of file\n"
    },
    "f52306ff7799ea2b2e4d99fba7040a11b186d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #2240: Fix false negative in RequireThisCheck\n",
      "commitDate": 1447597420000,
      "commitName": "f52306ff7799ea2b2e4d99fba7040a11b186d68a",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "4424370783f1c41fc1e146f554468f89e8f0e88b": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2451: removed excess hierarchy from RequireThisCheck",
      "commitDate": 1446945172000,
      "commitName": "4424370783f1c41fc1e146f554468f89e8f0e88b",
      "commitAuthor": "rnveach"
    }
  }
}