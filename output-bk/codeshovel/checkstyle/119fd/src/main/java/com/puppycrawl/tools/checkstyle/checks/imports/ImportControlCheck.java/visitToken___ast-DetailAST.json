{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "ImportControlCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
  "functionStartLine": 115,
  "functionEndLine": 138,
  "changeHistory": [
    "b57e4d3df67e43c1db34fed4e9c524e0dadde6a9",
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5",
    "a5d30bf353dde01376d45fb031d9236b11a835d1",
    "1951594e90a04aa2f2b14021ce3318604218ba19"
  ],
  "changeHistoryShort": {
    "b57e4d3df67e43c1db34fed4e9c524e0dadde6a9": "Ybodychange",
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": "Ybodychange",
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5": "Ybodychange",
    "a5d30bf353dde01376d45fb031d9236b11a835d1": "Ybodychange",
    "1951594e90a04aa2f2b14021ce3318604218ba19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b57e4d3df67e43c1db34fed4e9c524e0dadde6a9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3462: Implement \u0027path\u0027 property for ImportControlCheck\n",
      "commitDate": 1485090073000,
      "commitName": "b57e4d3df67e43c1db34fed4e9c524e0dadde6a9",
      "commitAuthor": "Jochen Van de Velde",
      "commitDateOld": 1480971647000,
      "commitNameOld": "292ad0ebf2d18e1d8131127d60b3fde99aa0adf0",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 47.67,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n     public void visitToken(final DetailAST ast) {\n-        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            if (root \u003d\u003d null) {\n-                log(ast, MSG_MISSING_FILE);\n-            }\n-            else {\n-                packageName \u003d getPackageText(ast);\n-                currentImportControl \u003d root.locateFinest(packageName);\n-                if (currentImportControl \u003d\u003d null) {\n-                    log(ast, MSG_UNKNOWN_PKG);\n+        if (processCurrentFile) {\n+            if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+                if (root \u003d\u003d null) {\n+                    log(ast, MSG_MISSING_FILE);\n+                }\n+                else {\n+                    packageName \u003d getPackageText(ast);\n+                    currentImportControl \u003d root.locateFinest(packageName);\n+                    if (currentImportControl \u003d\u003d null) {\n+                        log(ast, MSG_UNKNOWN_PKG);\n+                    }\n                 }\n             }\n-        }\n-        else if (currentImportControl !\u003d null) {\n-            final String importText \u003d getImportText(ast);\n-            final AccessResult access \u003d currentImportControl.checkAccess(packageName, importText);\n-            if (access !\u003d AccessResult.ALLOWED) {\n-                log(ast, MSG_DISALLOWED, importText);\n+            else if (currentImportControl !\u003d null) {\n+                final String importText \u003d getImportText(ast);\n+                final AccessResult access \u003d\n+                        currentImportControl.checkAccess(packageName, importText);\n+                if (access !\u003d AccessResult.ALLOWED) {\n+                    log(ast, MSG_DISALLOWED, importText);\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3498: ImportCheckControl refactored\n",
      "commitDate": 1480372317000,
      "commitName": "3a8f8d6f398f74889354527f6836a6a99ab2ee11",
      "commitAuthor": "kazachka",
      "commitDateOld": 1480371570000,
      "commitNameOld": "0cdbac0761ef6c80c2875a82bef1d966465d3703",
      "commitAuthorOld": "Jochen Van de Velde",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,21 @@\n     public void visitToken(final DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n-            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (root \u003d\u003d null) {\n-                log(nameAST, MSG_MISSING_FILE);\n+                log(ast, MSG_MISSING_FILE);\n             }\n             else {\n-                inPkg \u003d full.getText();\n-                currentLeaf \u003d root.locateFinest(inPkg);\n-                if (currentLeaf \u003d\u003d null) {\n-                    log(nameAST, MSG_UNKNOWN_PKG);\n+                packageName \u003d getPackageText(ast);\n+                currentImportControl \u003d root.locateFinest(packageName);\n+                if (currentImportControl \u003d\u003d null) {\n+                    log(ast, MSG_UNKNOWN_PKG);\n                 }\n             }\n         }\n-        else if (currentLeaf !\u003d null) {\n-            final FullIdent imp;\n-            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n-                imp \u003d FullIdent.createFullIdentBelow(ast);\n-            }\n-            else {\n-                // know it is a static import\n-                imp \u003d FullIdent.createFullIdent(ast\n-                        .getFirstChild().getNextSibling());\n-            }\n-            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n-                    inPkg);\n+        else if (currentImportControl !\u003d null) {\n+            final String importText \u003d getImportText(ast);\n+            final AccessResult access \u003d currentImportControl.checkAccess(packageName, importText);\n             if (access !\u003d AccessResult.ALLOWED) {\n-                log(ast, MSG_DISALLOWED, imp.getText());\n+                log(ast, MSG_DISALLOWED, importText);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 16.82,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void visitToken(final DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (root \u003d\u003d null) {\n                 log(nameAST, MSG_MISSING_FILE);\n             }\n             else {\n                 inPkg \u003d full.getText();\n                 currentLeaf \u003d root.locateFinest(inPkg);\n                 if (currentLeaf \u003d\u003d null) {\n                     log(nameAST, MSG_UNKNOWN_PKG);\n                 }\n             }\n         }\n         else if (currentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(ast);\n             }\n             else {\n                 // know it is a static import\n                 imp \u003d FullIdent.createFullIdent(ast\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                     inPkg);\n-            if (AccessResult.ALLOWED !\u003d access) {\n+            if (access !\u003d AccessResult.ALLOWED) {\n                 log(ast, MSG_DISALLOWED, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": {
      "type": "Ybodychange",
      "commitMessage": "Replace calls to equals() on enums with identity comparison\n\nThis replacement is safe because two enum constants are equal only when they have the same identity.\n",
      "commitDate": 1425998782000,
      "commitName": "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.07,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public void visitToken(final DetailAST ast)\n     {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (root \u003d\u003d null) {\n                 log(nameAST, MSG_MISSING_FILE);\n             }\n             else {\n                 inPkg \u003d full.getText();\n                 currentLeaf \u003d root.locateFinest(inPkg);\n                 if (currentLeaf \u003d\u003d null) {\n                     log(nameAST, MSG_UNKNOWN_PKG);\n                 }\n             }\n         }\n         else if (currentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(ast);\n             }\n             else {\n                 // know it is a static import\n                 imp \u003d FullIdent.createFullIdent(ast\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                     inPkg);\n-            if (!AccessResult.ALLOWED.equals(access)) {\n+            if (AccessResult.ALLOWED !\u003d access) {\n                 log(ast, MSG_DISALLOWED, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, imports package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public void visitToken(final DetailAST ast)\n     {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (root \u003d\u003d null) {\n-                log(nameAST, \"import.control.missing.file\");\n+                log(nameAST, MSG_MISSING_FILE);\n             }\n             else {\n                 inPkg \u003d full.getText();\n                 currentLeaf \u003d root.locateFinest(inPkg);\n                 if (currentLeaf \u003d\u003d null) {\n-                    log(nameAST, \"import.control.unknown.pkg\");\n+                    log(nameAST, MSG_UNKNOWN_PKG);\n                 }\n             }\n         }\n         else if (currentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(ast);\n             }\n             else {\n                 // know it is a static import\n                 imp \u003d FullIdent.createFullIdent(ast\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                     inPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n-                log(ast, \"import.control.disallowed\", imp.getText());\n+                log(ast, MSG_DISALLOWED, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": 1421678111000,
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200296548000,
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public void visitToken(final DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (mRoot \u003d\u003d null) {\n                 log(nameAST, \"import.control.missing.file\");\n             }\n             else {\n                 mInPkg \u003d full.getText();\n                 mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n                 if (mCurrentLeaf \u003d\u003d null) {\n                     log(nameAST, \"import.control.unknown.pkg\");\n                 }\n             }\n         }\n         else if (mCurrentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(aAST);\n             }\n             else {\n                 // know it is a static import\n-                imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n+                imp \u003d FullIdent.createFullIdent(aAST\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n                     mInPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n                 log(aAST, \"import.control.disallowed\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5": {
      "type": "Ybodychange",
      "commitMessage": "Finished unit testing - now need to do documentation.\n",
      "commitDate": 1123076088000,
      "commitName": "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1122812864000,
      "commitNameOld": "a5d30bf353dde01376d45fb031d9236b11a835d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 3.05,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,33 @@\n     public void visitToken(final DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (mRoot \u003d\u003d null) {\n                 log(nameAST, \"import.control.missing.file\");\n             }\n             else {\n                 mInPkg \u003d full.getText();\n                 mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n+                if (mCurrentLeaf \u003d\u003d null) {\n+                    log(nameAST, \"import.control.unknown.pkg\");\n+                }\n             }\n         }\n         else if (mCurrentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(aAST);\n             }\n             else {\n+                // know it is a static import\n                 imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n                     mInPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n                 log(aAST, \"import.control.disallowed\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "a5d30bf353dde01376d45fb031d9236b11a835d1": {
      "type": "Ybodychange",
      "commitMessage": "Added a lot more configuration options for the ImportControlCheck that\ncame out of using at work. I still need to improve the unit tests and\nproperly document the support options. Wanted to check in now for\nbackup.\n",
      "commitDate": 1122812864000,
      "commitName": "a5d30bf353dde01376d45fb031d9236b11a835d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1122497070000,
      "commitNameOld": "28c5d6f06244f45a5673a3ef5bd0d927b0042496",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 3.66,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n     public void visitToken(final DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (mRoot \u003d\u003d null) {\n                 log(nameAST, \"import.control.missing.file\");\n             }\n             else {\n-                mCurrentLeaf \u003d mRoot.locateFinest(full.getText());\n+                mInPkg \u003d full.getText();\n+                mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n             }\n         }\n         else if (mCurrentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(aAST);\n             }\n             else {\n                 imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n                         .getFirstChild().getNextSibling());\n             }\n-            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText());\n+            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n+                    mInPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n                 log(aAST, \"import.control.disallowed\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1951594e90a04aa2f2b14021ce3318604218ba19": {
      "type": "Yintroduced",
      "commitMessage": "Added the ImportControl check. This is a check that can be used to\nenforce which packages can import which packages. I was required to\ndevelop this for a large project to enforce application layering rules.\n\nThe check is fairly basic at the moment, but is still sufficiently\npowerful to be useful. I am sure there will be feature requests in the\nfuture.\n",
      "commitDate": 1122496168000,
      "commitName": "1951594e90a04aa2f2b14021ce3318604218ba19",
      "commitAuthor": "Oliver Burn"
    }
  }
}