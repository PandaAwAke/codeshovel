{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocStyleCheck.java",
  "functionName": "checkFirstSentenceEnding",
  "functionId": "checkFirstSentenceEnding___ast-DetailAST__comment-TextBlock",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java",
  "functionStartLine": 236,
  "functionEndLine": 245,
  "changeHistory": [
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "4fc7b83dc3f9ee775f8026efa410edd8cea8dd96",
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0",
    "5c9e55ae70af0456e1634211ccac54c40a92cfba",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
    "9cff1673f1d42910c654e0af5365d68591f104f0",
    "e27489c7721909245ea5055eac3b9c7c659081f6",
    "8fb2acd39b7db6223486f5e06126c7f0a2642a72",
    "24ba45a971569b9702e6bf78c5c07c48beb25464",
    "611722a893e0c6362b693f5c629a902a83590cbf",
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3"
  ],
  "changeHistoryShort": {
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "4fc7b83dc3f9ee775f8026efa410edd8cea8dd96": "Ybodychange",
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0": "Yrename",
    "5c9e55ae70af0456e1634211ccac54c40a92cfba": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": "Ybodychange",
    "9cff1673f1d42910c654e0af5365d68591f104f0": "Ymultichange(Yparameterchange,Ybodychange)",
    "e27489c7721909245ea5055eac3b9c7c659081f6": "Ybodychange",
    "8fb2acd39b7db6223486f5e06126c7f0a2642a72": "Ymultichange(Yparameterchange,Ybodychange)",
    "24ba45a971569b9702e6bf78c5c07c48beb25464": "Ymultichange(Yparameterchange,Ybodychange)",
    "611722a893e0c6362b693f5c629a902a83590cbf": "Ybodychange",
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3255: changed module setters for pattern",
      "commitDate": 1478694863000,
      "commitName": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthor": "rnveach",
      "commitDateOld": 1474982938000,
      "commitNameOld": "7f8309ba36bb3c47b146f2cacda89d7509fa47f8",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 42.96,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void checkFirstSentenceEnding(final DetailAST ast, TextBlock comment) {\n         final String commentText \u003d getCommentText(comment.getText());\n \n         if (!commentText.isEmpty()\n-            \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n+            \u0026\u0026 !endOfSentenceFormat.matcher(commentText).find()\n             \u0026\u0026 !(commentText.startsWith(\"{@inheritDoc}\")\n             \u0026\u0026 JavadocTagInfo.INHERIT_DOC.isValidOn(ast))) {\n             log(comment.getStartLineNo(), MSG_NO_PERIOD);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": 1453387259000,
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void checkFirstSentenceEnding(final DetailAST ast, TextBlock comment) {\n         final String commentText \u003d getCommentText(comment.getText());\n \n         if (!commentText.isEmpty()\n             \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n             \u0026\u0026 !(commentText.startsWith(\"{@inheritDoc}\")\n             \u0026\u0026 JavadocTagInfo.INHERIT_DOC.isValidOn(ast))) {\n-            log(comment.getStartLineNo(), NO_PERIOD);\n+            log(comment.getStartLineNo(), MSG_NO_PERIOD);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4fc7b83dc3f9ee775f8026efa410edd8cea8dd96": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2411: Fix false positive in JavadocStyle check on inheritDoc tag\n",
      "commitDate": 1446328798000,
      "commitName": "4fc7b83dc3f9ee775f8026efa410edd8cea8dd96",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1445173437000,
      "commitNameOld": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 13.37,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void checkFirstSentenceEnding(final DetailAST ast, TextBlock comment) {\n         final String commentText \u003d getCommentText(comment.getText());\n \n         if (!commentText.isEmpty()\n             \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n-            \u0026\u0026 !(\"{@inheritDoc}\".equals(commentText)\n+            \u0026\u0026 !(commentText.startsWith(\"{@inheritDoc}\")\n             \u0026\u0026 JavadocTagInfo.INHERIT_DOC.isValidOn(ast))) {\n             log(comment.getStartLineNo(), NO_PERIOD);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0": {
      "type": "Yrename",
      "commitMessage": "Fix suspicious getters and setters. #1555\n\nFixes `SuspiciousGetterSetter` inspection violations.\n\nDescription:\n\u003eReports suspicious getter or setter methods. A getter or setter is suspicious if it accesses a different field than would be expected by its name.\n",
      "commitDate": 1440498848000,
      "commitName": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440158741000,
      "commitNameOld": "23a1b6253f6296c1a3888361953da47f2808ca3d",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 3.94,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n-    private void checkFirstSentence(final DetailAST ast, TextBlock comment) {\n+    private void checkFirstSentenceEnding(final DetailAST ast, TextBlock comment) {\n         final String commentText \u003d getCommentText(comment.getText());\n \n         if (!commentText.isEmpty()\n             \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n             \u0026\u0026 !(\"{@inheritDoc}\".equals(commentText)\n             \u0026\u0026 JavadocTagInfo.INHERIT_DOC.isValidOn(ast))) {\n             log(comment.getStartLineNo(), NO_PERIOD);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "5c9e55ae70af0456e1634211ccac54c40a92cfba": {
      "type": "Ybodychange",
      "commitMessage": "Use .isEmpty() method instead of comparisons to 0. #1538\n",
      "commitDate": 1438566537000,
      "commitName": "5c9e55ae70af0456e1634211ccac54c40a92cfba",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438460813000,
      "commitNameOld": "068702d69533256fca702acb12740883a24e2591",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.22,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void checkFirstSentence(final DetailAST ast, TextBlock comment) {\n         final String commentText \u003d getCommentText(comment.getText());\n \n-        if (commentText.length() !\u003d 0\n+        if (!commentText.isEmpty()\n             \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n             \u0026\u0026 !(\"{@inheritDoc}\".equals(commentText)\n             \u0026\u0026 JavadocTagInfo.INHERIT_DOC.isValidOn(ast))) {\n             log(comment.getStartLineNo(), NO_PERIOD);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425602876000,
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void checkFirstSentence(final DetailAST ast, TextBlock comment)\n     {\n         final String commentText \u003d getCommentText(comment.getText());\n \n-        if ((commentText.length() !\u003d 0)\n+        if (commentText.length() !\u003d 0\n             \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n             \u0026\u0026 !(\"{@inheritDoc}\".equals(commentText)\n             \u0026\u0026 JavadocTagInfo.INHERIT_DOC.isValidOn(ast)))\n         {\n             log(comment.getStartLineNo(), NO_PERIOD);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void checkFirstSentence(final DetailAST ast, TextBlock comment)\n     {\n         final String commentText \u003d getCommentText(comment.getText());\n \n         if ((commentText.length() !\u003d 0)\n             \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n             \u0026\u0026 !(\"{@inheritDoc}\".equals(commentText)\n             \u0026\u0026 JavadocTagInfo.INHERIT_DOC.isValidOn(ast)))\n         {\n-            log(comment.getStartLineNo(), \"javadoc.noperiod\");\n+            log(comment.getStartLineNo(), NO_PERIOD);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": {
      "type": "Ybodychange",
      "commitMessage": "record work on patch #2534038 from Travis for new annotation checks. Very good patch as usual from Travis. Shame on me for taking so long to apply it.\n",
      "commitDate": 1237805379000,
      "commitName": "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1237695418000,
      "commitNameOld": "216fcb79f9f5bbd05244364e926f261a90e697d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.27,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void checkFirstSentence(final DetailAST aAST, TextBlock aComment)\n     {\n         final String commentText \u003d getCommentText(aComment.getText());\n \n         if ((commentText.length() !\u003d 0)\n             \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n             \u0026\u0026 !(\"{@inheritDoc}\".equals(commentText)\n-            \u0026\u0026 validForInheritDocOnly(aAST)))\n+            \u0026\u0026 JavadocTagInfo.INHERIT_DOC.isValidOn(aAST)))\n         {\n             log(aComment.getStartLineNo(), \"javadoc.noperiod\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "9cff1673f1d42910c654e0af5365d68591f104f0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Enhanced JavadocMethod to be more restrictive on where {@inheritDoc} can be used. Also enhanced JavadocPackage  to ensure a package-info.java file contains a comment. Thanks to Travis Schneeberger for providing patch #2294029.\n",
      "commitDate": 1231647012000,
      "commitName": "9cff1673f1d42910c654e0af5365d68591f104f0",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "e27489c7721909245ea5055eac3b9c7c659081f6": {
      "type": "Ybodychange",
      "commitMessage": "initial replacing RE by Pattern (need to update docs)\n",
      "commitDate": 1115830091000,
      "commitName": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1111411420000,
      "commitNameOld": "16c6b797253d2baf6e79e6619ba7570a176583a0",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 51.14,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private void checkFirstSentence(TextBlock aComment)\n     {\n         final String commentText \u003d getCommentText(aComment.getText());\n \n         if ((commentText.length() !\u003d 0)\n-            \u0026\u0026 !getEndOfSentenceRE().match(commentText)\n+            \u0026\u0026 !getEndOfSentencePattern().matcher(commentText).find()\n             \u0026\u0026 !\"{@inheritDoc}\".equals(commentText))\n         {\n             log(aComment.getStartLineNo(), \"javadoc.noperiod\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8fb2acd39b7db6223486f5e06126c7f0a2642a72": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "replaced Comment class with TextBlock interface, Comment is now a package private implementation\n",
      "commitDate": 1069656302000,
      "commitName": "8fb2acd39b7db6223486f5e06126c7f0a2642a72",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "24ba45a971569b9702e6bf78c5c07c48beb25464": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fix for ArrayIndexOutOfBounds in JavadocStyle (bug 841942 )\n",
      "commitDate": 1069576421000,
      "commitName": "24ba45a971569b9702e6bf78c5c07c48beb25464",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "611722a893e0c6362b693f5c629a902a83590cbf": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug 798405 JavadocStyleCheck doesn\u0027t accept {@inheritDoc} javadoc\n",
      "commitDate": 1062411040000,
      "commitName": "611722a893e0c6362b693f5c629a902a83590cbf",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1060447585000,
      "commitNameOld": "927ec62235d97ab741aae3954b9a771843df724c",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 22.73,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n     private void checkFirstSentence(DetailAST aAST, String[] aComment)\n     {\n         final String commentText \u003d getCommentText(aComment);\n \n         if ((commentText.length() !\u003d 0)\n-            \u0026\u0026 !getEndOfSentenceRE().match(commentText))\n+            \u0026\u0026 !getEndOfSentenceRE().match(commentText)\n+            \u0026\u0026 !\"{@inheritDoc}\".equals(commentText))\n         {\n             log(aAST.getLineNo() - aComment.length, \"javadoc.noperiod\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3": {
      "type": "Yintroduced",
      "commitMessage": "New Javadoc style check from Chris Stillwell.\n",
      "commitDate": 1058185912000,
      "commitName": "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3",
      "commitAuthor": "Oliver Burn"
    }
  }
}