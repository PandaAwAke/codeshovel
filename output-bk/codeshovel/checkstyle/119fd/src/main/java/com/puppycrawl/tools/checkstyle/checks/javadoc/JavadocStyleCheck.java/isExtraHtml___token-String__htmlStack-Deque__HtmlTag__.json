{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocStyleCheck.java",
  "functionName": "isExtraHtml",
  "functionId": "isExtraHtml___token-String__htmlStack-Deque__HtmlTag__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java",
  "functionStartLine": 481,
  "functionEndLine": 495,
  "changeHistory": [
    "aab0718232e060bd8f289770ab81780b3a2705a2",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "303d7cc6182e72f5472c8bcd9aa37432986793d1",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "06e8a4eaa00e548f52b2483864a31ba9defd0989",
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3"
  ],
  "changeHistoryShort": {
    "aab0718232e060bd8f289770ab81780b3a2705a2": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "303d7cc6182e72f5472c8bcd9aa37432986793d1": "Yparameterchange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "06e8a4eaa00e548f52b2483864a31ba9defd0989": "Ymultichange(Yparameterchange,Ybodychange)",
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d": "Ymultichange(Yparameterchange,Ybodychange)",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aab0718232e060bd8f289770ab81780b3a2705a2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2604: Update regexp pattern for LocalVariableName\n",
      "commitDate": 1449446571000,
      "commitName": "aab0718232e060bd8f289770ab81780b3a2705a2",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1449175261000,
      "commitNameOld": "e9e8d2f0a76601762e59f4743f0df0c792bea44d",
      "commitAuthorOld": "Thomas Jensen",
      "daysBetweenCommits": 3.14,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static boolean isExtraHtml(String token, Deque\u003cHtmlTag\u003e htmlStack) {\n         boolean isExtra \u003d true;\n-        for (final HtmlTag td : htmlStack) {\n+        for (final HtmlTag tag : htmlStack) {\n             // Loop, looking for tags that are closed.\n             // The loop is needed in case there are unclosed\n             // tags on the stack. In that case, the stack would\n             // not be empty, but this tag would still be extra.\n-            if (token.equalsIgnoreCase(td.getId())) {\n+            if (token.equalsIgnoreCase(tag.getId())) {\n                 isExtra \u003d false;\n                 break;\n             }\n         }\n \n         return isExtra;\n     }\n\\ No newline at end of file\n"
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-    private boolean isExtraHtml(String token, Deque\u003cHtmlTag\u003e htmlStack) {\n+    private static boolean isExtraHtml(String token, Deque\u003cHtmlTag\u003e htmlStack) {\n         boolean isExtra \u003d true;\n         for (final HtmlTag td : htmlStack) {\n             // Loop, looking for tags that are closed.\n             // The loop is needed in case there are unclosed\n             // tags on the stack. In that case, the stack would\n             // not be empty, but this tag would still be extra.\n             if (token.equalsIgnoreCase(td.getId())) {\n                 isExtra \u003d false;\n                 break;\n             }\n         }\n \n         return isExtra;\n     }\n\\ No newline at end of file\n"
    },
    "303d7cc6182e72f5472c8bcd9aa37432986793d1": {
      "type": "Yparameterchange",
      "commitMessage": "Replace FastStack with ArrayDeque where possible, issue #86\n",
      "commitDate": 1426740846000,
      "commitName": "303d7cc6182e72f5472c8bcd9aa37432986793d1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1426023398000,
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 8.3,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-    private boolean isExtraHtml(String token, FastStack\u003cHtmlTag\u003e htmlStack)\n+    private boolean isExtraHtml(String token, Deque\u003cHtmlTag\u003e htmlStack)\n     {\n         boolean isExtra \u003d true;\n         for (final HtmlTag td : htmlStack) {\n             // Loop, looking for tags that are closed.\n             // The loop is needed in case there are unclosed\n             // tags on the stack. In that case, the stack would\n             // not be empty, but this tag would still be extra.\n             if (token.equalsIgnoreCase(td.getId())) {\n                 isExtra \u003d false;\n                 break;\n             }\n         }\n \n         return isExtra;\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "06e8a4eaa00e548f52b2483864a31ba9defd0989": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Simple implementation of a LIFO Stack that can be used instead of java.util.Vector which is synchronized. Will help performance.\n",
      "commitDate": 1209024589000,
      "commitName": "06e8a4eaa00e548f52b2483864a31ba9defd0989",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": 1197694270000,
      "commitName": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152242806000,
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private boolean isExtraHtml(String aToken, Stack aHtmlStack)\n     {\n         boolean isExtra \u003d true;\n         for (int i \u003d 0; i \u003c aHtmlStack.size(); i++) {\n             // Loop, looking for tags that are closed.\n             // The loop is needed in case there are unclosed\n             // tags on the stack. In that case, the stack would\n             // not be empty, but this tag would still be extra.\n-            HtmlTag td \u003d (HtmlTag) aHtmlStack.elementAt(i);\n+            final HtmlTag td \u003d (HtmlTag) aHtmlStack.elementAt(i);\n             if (aToken.equalsIgnoreCase(td.getId())) {\n                 isExtra \u003d false;\n                 break;\n             }\n         }\n \n         return isExtra;\n     }\n\\ No newline at end of file\n"
    },
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3": {
      "type": "Yintroduced",
      "commitMessage": "New Javadoc style check from Chris Stillwell.\n",
      "commitDate": 1058185912000,
      "commitName": "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3",
      "commitAuthor": "Oliver Burn"
    }
  }
}