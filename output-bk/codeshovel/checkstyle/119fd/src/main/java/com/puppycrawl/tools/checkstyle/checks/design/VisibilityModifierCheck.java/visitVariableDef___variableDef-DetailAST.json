{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "VisibilityModifierCheck.java",
  "functionName": "visitVariableDef",
  "functionId": "visitVariableDef___variableDef-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
  "functionStartLine": 462,
  "functionEndLine": 475,
  "changeHistory": [
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "008d7f5db9307f204bde9e16d7a4f9f42ca6c0b3",
    "5f68bb50fd191fec409f5edb90755a18fce3e0ac",
    "f9f60d3142533c3eebff775e8eb1159935faaba1"
  ],
  "changeHistoryShort": {
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "008d7f5db9307f204bde9e16d7a4f9f42ca6c0b3": "Ybodychange",
    "5f68bb50fd191fec409f5edb90755a18fce3e0ac": "Ybodychange",
    "f9f60d3142533c3eebff775e8eb1159935faaba1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": 1440705239000,
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void visitVariableDef(DetailAST variableDef) {\n         final boolean inInterfaceOrAnnotationBlock \u003d\n-                ScopeUtils.inInterfaceOrAnnotationBlock(variableDef);\n+                ScopeUtils.isInInterfaceOrAnnotationBlock(variableDef);\n \n         if (!inInterfaceOrAnnotationBlock \u0026\u0026 !hasIgnoreAnnotation(variableDef)) {\n             final DetailAST varNameAST \u003d variableDef.findFirstToken(TokenTypes.TYPE)\n                 .getNextSibling();\n             final String varName \u003d varNameAST.getText();\n             if (!hasProperAccessModifier(variableDef, varName)) {\n                 log(varNameAST.getLineNo(), varNameAST.getColumnNo(),\n                         MSG_KEY, varName);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "008d7f5db9307f204bde9e16d7a4f9f42ca6c0b3": {
      "type": "Ybodychange",
      "commitMessage": "removing dead code and refactoring in VisibilityModifierCheck, #1107",
      "commitDate": 1432508183000,
      "commitName": "008d7f5db9307f204bde9e16d7a4f9f42ca6c0b3",
      "commitAuthor": "vlad",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 7.46,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n     private void visitVariableDef(DetailAST variableDef) {\n         final boolean inInterfaceOrAnnotationBlock \u003d\n                 ScopeUtils.inInterfaceOrAnnotationBlock(variableDef);\n \n         if (!inInterfaceOrAnnotationBlock \u0026\u0026 !hasIgnoreAnnotation(variableDef)) {\n-            final DetailAST varNameAST \u003d getVarNameAST(variableDef);\n+            final DetailAST varNameAST \u003d variableDef.findFirstToken(TokenTypes.TYPE)\n+                .getNextSibling();\n             final String varName \u003d varNameAST.getText();\n             if (!hasProperAccessModifier(variableDef, varName)) {\n                 log(varNameAST.getLineNo(), varNameAST.getColumnNo(),\n                         MSG_KEY, varName);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "5f68bb50fd191fec409f5edb90755a18fce3e0ac": {
      "type": "Ybodychange",
      "commitMessage": "Visibility Modifier Check, ignore annotated fields\n",
      "commitDate": 1425777291000,
      "commitName": "5f68bb50fd191fec409f5edb90755a18fce3e0ac",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1425417238000,
      "commitNameOld": "de4485a22bfe8eafc3c2e273fd328a0221d0ff9e",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 4.17,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void visitVariableDef(DetailAST variableDef)\n     {\n         final boolean inInterfaceOrAnnotationBlock \u003d\n                 ScopeUtils.inInterfaceOrAnnotationBlock(variableDef);\n \n-        if (!inInterfaceOrAnnotationBlock) {\n+        if (!inInterfaceOrAnnotationBlock \u0026\u0026 !hasIgnoreAnnotation(variableDef)) {\n             final DetailAST varNameAST \u003d getVarNameAST(variableDef);\n             final String varName \u003d varNameAST.getText();\n             if (!hasProperAccessModifier(variableDef, varName)) {\n                 log(varNameAST.getLineNo(), varNameAST.getColumnNo(),\n                         MSG_KEY, varName);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f9f60d3142533c3eebff775e8eb1159935faaba1": {
      "type": "Yintroduced",
      "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
      "commitDate": 1424982930000,
      "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
      "commitAuthor": "alexkravin"
    }
  }
}