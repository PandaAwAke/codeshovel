{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "VisibilityModifierCheck.java",
  "functionName": "getNextSubTreeNode",
  "functionId": "getNextSubTreeNode___currentNodeAst-DetailAST__subTreeRootAst-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
  "functionStartLine": 809,
  "functionEndLine": 823,
  "changeHistory": [
    "e2f265251a601054b36a9464d0f6e389371723d5",
    "f9f60d3142533c3eebff775e8eb1159935faaba1"
  ],
  "changeHistoryShort": {
    "e2f265251a601054b36a9464d0f6e389371723d5": "Ybodychange",
    "f9f60d3142533c3eebff775e8eb1159935faaba1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2f265251a601054b36a9464d0f6e389371723d5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Avoid reusing variables\n\nFixes `ReuseOfLocalVariable` inspection violation.\n\nDescription:\n\u003eReports local variables that are \"reused\", overwriting their values with new values unrelated to their original use. Such local variable reuse may be confusing, as the intended semantics of the local variable may vary with each use. It may also be prone to bugs, if code changes result in values that were thought to be overwritten actually being live. It is good practices to keep variable lifetimes as short as possible, and not reuse local variables for the sake of brevity.\n",
      "commitDate": 1440853936000,
      "commitName": "e2f265251a601054b36a9464d0f6e389371723d5",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440705239000,
      "commitNameOld": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.72,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n         getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst) {\n         DetailAST currentNode \u003d currentNodeAst;\n         DetailAST toVisitAst \u003d currentNode.getFirstChild();\n         while (toVisitAst \u003d\u003d null) {\n             toVisitAst \u003d currentNode.getNextSibling();\n             if (toVisitAst \u003d\u003d null) {\n                 if (currentNode.getParent().equals(subTreeRootAst)\n                          \u0026\u0026 currentNode.getParent().getColumnNo() \u003d\u003d subTreeRootAst.getColumnNo()) {\n                     break;\n                 }\n                 currentNode \u003d currentNode.getParent();\n             }\n         }\n-        currentNode \u003d toVisitAst;\n-        return currentNode;\n+        return toVisitAst;\n     }\n\\ No newline at end of file\n"
    },
    "f9f60d3142533c3eebff775e8eb1159935faaba1": {
      "type": "Yintroduced",
      "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
      "commitDate": 1424982930000,
      "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
      "commitAuthor": "alexkravin"
    }
  }
}