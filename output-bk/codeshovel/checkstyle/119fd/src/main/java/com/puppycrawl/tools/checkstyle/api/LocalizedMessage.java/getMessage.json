{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "LocalizedMessage.java",
  "functionName": "getMessage",
  "functionId": "getMessage",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
  "functionStartLine": 328,
  "functionEndLine": 351,
  "changeHistory": [
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
    "d1f4e8d40014f53f40f045c6f8bea7ead44761c1",
    "0da1e4d980420f6abb465af441e5ced254698273",
    "3bd699bd593414d63c7139aa410f13ec8341a027",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "17754d363645285e49bf4323a1af5762af47a8ea",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "224c9c3c457ffca17eaf619e45a38356796e1e73",
    "2bec331db6b2a882a9208489c37691c6b2976004",
    "7e083cf6cbbe2b1590b92bf3feae547e5f58d6ac",
    "c2afeecbf7b6c8e2ed6b50516adbe788fd105f31",
    "78bc37d67358493ace57983b711449e1c9f15c93",
    "7e570084e62eda58f3c4fa7e75e26a1a41d255cf",
    "4880b50a3a89db93e7e7c1b8bae8036ec06e186b",
    "672b27dd5551de63a1fb08d8ea80376d70f2aa60",
    "25a13442f2d67729eba3b1e8eff32ed926396ee3",
    "378e87f1e3bf8b2451ca511668954b707680b843",
    "20483ae032296610315fafb9a8774cfdd0e13857",
    "c682b5725d22afc38bf19d9667b23a7deab6d8c3"
  ],
  "changeHistoryShort": {
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c": "Ybodychange",
    "d1f4e8d40014f53f40f045c6f8bea7ead44761c1": "Ybodychange",
    "0da1e4d980420f6abb465af441e5ced254698273": "Ybodychange",
    "3bd699bd593414d63c7139aa410f13ec8341a027": "Ybodychange",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": "Ybodychange",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "17754d363645285e49bf4323a1af5762af47a8ea": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "224c9c3c457ffca17eaf619e45a38356796e1e73": "Ybodychange",
    "2bec331db6b2a882a9208489c37691c6b2976004": "Ybodychange",
    "7e083cf6cbbe2b1590b92bf3feae547e5f58d6ac": "Ybodychange",
    "c2afeecbf7b6c8e2ed6b50516adbe788fd105f31": "Ybodychange",
    "78bc37d67358493ace57983b711449e1c9f15c93": "Ybodychange",
    "7e570084e62eda58f3c4fa7e75e26a1a41d255cf": "Ybodychange",
    "4880b50a3a89db93e7e7c1b8bae8036ec06e186b": "Ybodychange",
    "672b27dd5551de63a1fb08d8ea80376d70f2aa60": "Yfilerename",
    "25a13442f2d67729eba3b1e8eff32ed926396ee3": "Ybodychange",
    "378e87f1e3bf8b2451ca511668954b707680b843": "Ymodifierchange",
    "20483ae032296610315fafb9a8774cfdd0e13857": "Ybodychange",
    "c682b5725d22afc38bf19d9667b23a7deab6d8c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1217: fixes for violations from \u0027forbiddenapis\u0027 verification tool\n",
      "commitDate": 1444779430000,
      "commitName": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1442014362000,
      "commitNameOld": "0fc8b62a35beddc89cb3412388c27e88cd8cab4a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 32.0,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n     public String getMessage() {\n         String message \u003d getCustomMessage();\n \n         if (message \u003d\u003d null) {\n             try {\n                 // Important to use the default class loader, and not the one in\n                 // the GlobalProperties object. This is because the class loader in\n                 // the GlobalProperties is specified by the user for resolving\n                 // custom classes.\n                 final ResourceBundle resourceBundle \u003d getBundle(bundle);\n                 final String pattern \u003d resourceBundle.getString(key);\n-                message \u003d MessageFormat.format(pattern, args);\n+                final MessageFormat formatter \u003d new MessageFormat(pattern, Locale.ROOT);\n+                message \u003d formatter.format(args);\n             }\n             catch (final MissingResourceException ignored) {\n                 // If the Check author didn\u0027t provide i18n resource bundles\n                 // and logs error messages directly, this will return\n                 // the author\u0027s original message\n-                message \u003d MessageFormat.format(key, args);\n+                final MessageFormat formatter \u003d new MessageFormat(key, Locale.ROOT);\n+                message \u003d formatter.format(args);\n             }\n         }\n         return message;\n     }\n\\ No newline at end of file\n"
    },
    "d1f4e8d40014f53f40f045c6f8bea7ead44761c1": {
      "type": "Ybodychange",
      "commitMessage": "Simplify and remove unnecessary code. #1555\n\nFixes a few violations.\n",
      "commitDate": 1440243292000,
      "commitName": "d1f4e8d40014f53f40f045c6f8bea7ead44761c1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440047165000,
      "commitNameOld": "0da1e4d980420f6abb465af441e5ced254698273",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 2.27,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public String getMessage() {\n         String message \u003d getCustomMessage();\n \n         if (message \u003d\u003d null) {\n             try {\n                 // Important to use the default class loader, and not the one in\n                 // the GlobalProperties object. This is because the class loader in\n                 // the GlobalProperties is specified by the user for resolving\n                 // custom classes.\n-                final ResourceBundle resourceBundle \u003d getBundle(this.bundle);\n+                final ResourceBundle resourceBundle \u003d getBundle(bundle);\n                 final String pattern \u003d resourceBundle.getString(key);\n                 message \u003d MessageFormat.format(pattern, args);\n             }\n             catch (final MissingResourceException ignored) {\n                 // If the Check author didn\u0027t provide i18n resource bundles\n                 // and logs error messages directly, this will return\n                 // the author\u0027s original message\n                 message \u003d MessageFormat.format(key, args);\n             }\n         }\n         return message;\n     }\n\\ No newline at end of file\n"
    },
    "0da1e4d980420f6abb465af441e5ced254698273": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violations (partial fix)\n",
      "commitDate": 1440047165000,
      "commitName": "0da1e4d980420f6abb465af441e5ced254698273",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439955956000,
      "commitNameOld": "bf3e77cc87f01b9ea0d205933749770398fa623b",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n     public String getMessage() {\n+        String message \u003d getCustomMessage();\n \n-        final String message \u003d getCustomMessage();\n-        if (message !\u003d null) {\n-            return message;\n+        if (message \u003d\u003d null) {\n+            try {\n+                // Important to use the default class loader, and not the one in\n+                // the GlobalProperties object. This is because the class loader in\n+                // the GlobalProperties is specified by the user for resolving\n+                // custom classes.\n+                final ResourceBundle resourceBundle \u003d getBundle(this.bundle);\n+                final String pattern \u003d resourceBundle.getString(key);\n+                message \u003d MessageFormat.format(pattern, args);\n+            }\n+            catch (final MissingResourceException ignored) {\n+                // If the Check author didn\u0027t provide i18n resource bundles\n+                // and logs error messages directly, this will return\n+                // the author\u0027s original message\n+                message \u003d MessageFormat.format(key, args);\n+            }\n         }\n-\n-        try {\n-            // Important to use the default class loader, and not the one in\n-            // the GlobalProperties object. This is because the class loader in\n-            // the GlobalProperties is specified by the user for resolving\n-            // custom classes.\n-            final ResourceBundle resourceBundle \u003d getBundle(this.bundle);\n-            final String pattern \u003d resourceBundle.getString(key);\n-            return MessageFormat.format(pattern, args);\n-        }\n-        catch (final MissingResourceException ignored) {\n-            // If the Check author didn\u0027t provide i18n resource bundles\n-            // and logs error messages directly, this will return\n-            // the author\u0027s original message\n-            return MessageFormat.format(key, args);\n-        }\n+        return message;\n     }\n\\ No newline at end of file\n"
    },
    "3bd699bd593414d63c7139aa410f13ec8341a027": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: HiddenField violations fixed\n",
      "commitDate": 1439356761000,
      "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439295751000,
      "commitNameOld": "f5f1d754e28ee1e3c5472fd4d5292f24a335e64e",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public String getMessage() {\n \n-        final String customMessage \u003d getCustomMessage();\n-        if (customMessage !\u003d null) {\n-            return customMessage;\n+        final String message \u003d getCustomMessage();\n+        if (message !\u003d null) {\n+            return message;\n         }\n \n         try {\n             // Important to use the default class loader, and not the one in\n             // the GlobalProperties object. This is because the class loader in\n             // the GlobalProperties is specified by the user for resolving\n             // custom classes.\n-            final ResourceBundle bundle \u003d getBundle(this.bundle);\n-            final String pattern \u003d bundle.getString(key);\n+            final ResourceBundle resourceBundle \u003d getBundle(this.bundle);\n+            final String pattern \u003d resourceBundle.getString(key);\n             return MessageFormat.format(pattern, args);\n         }\n         catch (final MissingResourceException ignored) {\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(key, args);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": {
      "type": "Ybodychange",
      "commitMessage": "Rename ignored catch parameters. #1555\n\nFixes `UnusedCatchParameter` inspection violations.\n\nDescription:\nReports any catch parameters that are unused in their corresponding blocks. This inspection will not report any catch parameters named \"ignore\" or \"ignored\". Conversely this inspection will warn on any catch parameters named \"ignore\" or \"ignored\" that are actually used.\n",
      "commitDate": 1439011061000,
      "commitName": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439008817000,
      "commitNameOld": "4c1148db9982918e65f8d1156e8fb9c07b206fc9",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public String getMessage() {\n \n         final String customMessage \u003d getCustomMessage();\n         if (customMessage !\u003d null) {\n             return customMessage;\n         }\n \n         try {\n             // Important to use the default class loader, and not the one in\n             // the GlobalProperties object. This is because the class loader in\n             // the GlobalProperties is specified by the user for resolving\n             // custom classes.\n             final ResourceBundle bundle \u003d getBundle(this.bundle);\n             final String pattern \u003d bundle.getString(key);\n             return MessageFormat.format(pattern, args);\n         }\n-        catch (final MissingResourceException ex) {\n+        catch (final MissingResourceException ignored) {\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(key, args);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, api, #512\n",
      "commitDate": 1421677181000,
      "commitName": "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1420821881000,
      "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 9.9,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public String getMessage()\n     {\n \n         final String customMessage \u003d getCustomMessage();\n         if (customMessage !\u003d null) {\n             return customMessage;\n         }\n \n         try {\n             // Important to use the default class loader, and not the one in\n             // the GlobalProperties object. This is because the class loader in\n             // the GlobalProperties is specified by the user for resolving\n             // custom classes.\n-            final ResourceBundle bundle \u003d getBundle(mBundle);\n-            final String pattern \u003d bundle.getString(mKey);\n-            return MessageFormat.format(pattern, mArgs);\n+            final ResourceBundle bundle \u003d getBundle(this.bundle);\n+            final String pattern \u003d bundle.getString(key);\n+            return MessageFormat.format(pattern, args);\n         }\n         catch (final MissingResourceException ex) {\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n-            return MessageFormat.format(mKey, mArgs);\n+            return MessageFormat.format(key, args);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "17754d363645285e49bf4323a1af5762af47a8ea": {
      "type": "Ybodychange",
      "commitMessage": "snapshot of changes - need to refactor\n",
      "commitDate": 1216160862000,
      "commitName": "17754d363645285e49bf4323a1af5762af47a8ea",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1214968564000,
      "commitNameOld": "d2af4accdde3eac0a2103353f490e97bf62f61d2",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 13.8,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,24 @@\n     public String getMessage()\n     {\n+\n+        final String customMessage \u003d getCustomMessage();\n+        if (customMessage !\u003d null) {\n+            return customMessage;\n+        }\n+\n         try {\n             // Important to use the default class loader, and not the one in\n             // the GlobalProperties object. This is because the class loader in\n             // the GlobalProperties is specified by the user for resolving\n             // custom classes.\n             final ResourceBundle bundle \u003d getBundle(mBundle);\n             final String pattern \u003d bundle.getString(mKey);\n             return MessageFormat.format(pattern, mArgs);\n         }\n         catch (final MissingResourceException ex) {\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(mKey, mArgs);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152243235000,
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public String getMessage()\n     {\n         try {\n             // Important to use the default class loader, and not the one in\n             // the GlobalProperties object. This is because the class loader in\n             // the GlobalProperties is specified by the user for resolving\n             // custom classes.\n             final ResourceBundle bundle \u003d getBundle(mBundle);\n             final String pattern \u003d bundle.getString(mKey);\n             return MessageFormat.format(pattern, mArgs);\n         }\n-        catch (MissingResourceException ex) {\n+        catch (final MissingResourceException ex) {\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(mKey, mArgs);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "224c9c3c457ffca17eaf619e45a38356796e1e73": {
      "type": "Ybodychange",
      "commitMessage": "renamed Configuration to GlobalProperties\n",
      "commitDate": 1037270254000,
      "commitName": "224c9c3c457ffca17eaf619e45a38356796e1e73",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1037167582000,
      "commitNameOld": "2bec331db6b2a882a9208489c37691c6b2976004",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 1.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public String getMessage()\n     {\n         try {\n             // Important to use the default class loader, and not the one in\n-            // the Configuration object. This is because the class loader in\n-            // the Configuration is specified by the user for resolving custom\n-            // classes.\n+            // the GlobalProperties object. This is because the class loader in\n+            // the GlobalProperties is specified by the user for resolving\n+            // custom classes.\n             final ResourceBundle bundle \u003d getBundle(mBundle);\n             final String pattern \u003d bundle.getString(mKey);\n             return MessageFormat.format(pattern, mArgs);\n         }\n         catch (MissingResourceException ex) {\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(mKey, mArgs);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "2bec331db6b2a882a9208489c37691c6b2976004": {
      "type": "Ybodychange",
      "commitMessage": "allow access to the error identifier\n",
      "commitDate": 1037167582000,
      "commitName": "2bec331db6b2a882a9208489c37691c6b2976004",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1036965514000,
      "commitNameOld": "7e083cf6cbbe2b1590b92bf3feae547e5f58d6ac",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 2.34,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n     public String getMessage()\n     {\n         try {\n-            // PERF: Very simple approach - wait for performance problems.\n-            // Important to use the default class loader, and not the one in the\n-            // Configuration object. This is because the class loader in the\n-            // Configuration is specified by the user for resolving custom\n+            // Important to use the default class loader, and not the one in\n+            // the Configuration object. This is because the class loader in\n+            // the Configuration is specified by the user for resolving custom\n             // classes.\n             final ResourceBundle bundle \u003d getBundle(mBundle);\n             final String pattern \u003d bundle.getString(mKey);\n             return MessageFormat.format(pattern, mArgs);\n         }\n         catch (MissingResourceException ex) {\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(mKey, mArgs);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "7e083cf6cbbe2b1590b92bf3feae547e5f58d6ac": {
      "type": "Ybodychange",
      "commitMessage": "cache ResourceBundles, approx 8% perf improvement\n",
      "commitDate": 1036965514000,
      "commitName": "7e083cf6cbbe2b1590b92bf3feae547e5f58d6ac",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1033235302000,
      "commitNameOld": "c2afeecbf7b6c8e2ed6b50516adbe788fd105f31",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 43.17,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     public String getMessage()\n     {\n         try {\n             // PERF: Very simple approach - wait for performance problems.\n             // Important to use the default class loader, and not the one in the\n             // Configuration object. This is because the class loader in the\n             // Configuration is specified by the user for resolving custom\n             // classes.\n-            final ResourceBundle bundle \u003d\n-                    ResourceBundle.getBundle(mBundle, sLocale);\n+            final ResourceBundle bundle \u003d getBundle(mBundle);\n             final String pattern \u003d bundle.getString(mKey);\n             return MessageFormat.format(pattern, mArgs);\n         }\n         catch (MissingResourceException ex) {\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(mKey, mArgs);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c2afeecbf7b6c8e2ed6b50516adbe788fd105f31": {
      "type": "Ybodychange",
      "commitMessage": "remove debug output\n",
      "commitDate": 1033235302000,
      "commitName": "c2afeecbf7b6c8e2ed6b50516adbe788fd105f31",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1032617056000,
      "commitNameOld": "78bc37d67358493ace57983b711449e1c9f15c93",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 7.16,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n     public String getMessage()\n     {\n         try {\n             // PERF: Very simple approach - wait for performance problems.\n             // Important to use the default class loader, and not the one in the\n             // Configuration object. This is because the class loader in the\n             // Configuration is specified by the user for resolving custom\n             // classes.\n             final ResourceBundle bundle \u003d\n                     ResourceBundle.getBundle(mBundle, sLocale);\n             final String pattern \u003d bundle.getString(mKey);\n             return MessageFormat.format(pattern, mArgs);\n         }\n         catch (MissingResourceException ex) {\n-            ex.printStackTrace();\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(mKey, mArgs);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "78bc37d67358493ace57983b711449e1c9f15c93": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug in Check\n",
      "commitDate": 1032617056000,
      "commitName": "78bc37d67358493ace57983b711449e1c9f15c93",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1032616141000,
      "commitNameOld": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     public String getMessage()\n     {\n-        System.err.println(\"LocalizedMessage.getMessage\");\n         try {\n             // PERF: Very simple approach - wait for performance problems.\n             // Important to use the default class loader, and not the one in the\n             // Configuration object. This is because the class loader in the\n             // Configuration is specified by the user for resolving custom\n             // classes.\n             final ResourceBundle bundle \u003d\n                     ResourceBundle.getBundle(mBundle, sLocale);\n             final String pattern \u003d bundle.getString(mKey);\n             return MessageFormat.format(pattern, mArgs);\n         }\n         catch (MissingResourceException ex) {\n             ex.printStackTrace();\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(mKey, mArgs);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "7e570084e62eda58f3c4fa7e75e26a1a41d255cf": {
      "type": "Ybodychange",
      "commitMessage": "Nearly for the first test to run. Having problems with loading resource\nbundles.\n",
      "commitDate": 1032616141000,
      "commitName": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1032325714000,
      "commitNameOld": "4880b50a3a89db93e7e7c1b8bae8036ec06e186b",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 3.36,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n     public String getMessage()\n     {\n+        System.err.println(\"LocalizedMessage.getMessage\");\n         try {\n             // PERF: Very simple approach - wait for performance problems.\n             // Important to use the default class loader, and not the one in the\n             // Configuration object. This is because the class loader in the\n             // Configuration is specified by the user for resolving custom\n             // classes.\n             final ResourceBundle bundle \u003d\n                     ResourceBundle.getBundle(mBundle, sLocale);\n             final String pattern \u003d bundle.getString(mKey);\n             return MessageFormat.format(pattern, mArgs);\n         }\n         catch (MissingResourceException ex) {\n+            ex.printStackTrace();\n             // If the Check author didn\u0027t provide i18n resource bundles\n             // and logs error messages directly, this will return\n             // the author\u0027s original message\n             return MessageFormat.format(mKey, mArgs);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4880b50a3a89db93e7e7c1b8bae8036ec06e186b": {
      "type": "Ybodychange",
      "commitMessage": "improved resource bundle handling:\n- plugins can use their own bundle (location determined automatically)\n- return the message key if ResourceBundle is not available\n- added log helper methods in Check.java\n",
      "commitDate": 1032325714000,
      "commitName": "4880b50a3a89db93e7e7c1b8bae8036ec06e186b",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1032266010000,
      "commitNameOld": "672b27dd5551de63a1fb08d8ea80376d70f2aa60",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.69,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,20 @@\n     public String getMessage()\n     {\n-        // Very simple approach - wait for performance problems.\n-        // Important to use the default class loader, and not the one in the\n-        // Configuration object. This is because the class loader in the\n-        // Configuration is specified by the user for resolving custom classes.\n-        final ResourceBundle bundle \u003d\n-            ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale);\n-        final String pattern \u003d bundle.getString(mKey);\n-        return MessageFormat.format(pattern, mArgs);\n+        try {\n+            // PERF: Very simple approach - wait for performance problems.\n+            // Important to use the default class loader, and not the one in the\n+            // Configuration object. This is because the class loader in the\n+            // Configuration is specified by the user for resolving custom\n+            // classes.\n+            final ResourceBundle bundle \u003d\n+                    ResourceBundle.getBundle(mBundle, sLocale);\n+            final String pattern \u003d bundle.getString(mKey);\n+            return MessageFormat.format(pattern, mArgs);\n+        }\n+        catch (MissingResourceException ex) {\n+            // If the Check author didn\u0027t provide i18n resource bundles\n+            // and logs error messages directly, this will return\n+            // the author\u0027s original message\n+            return MessageFormat.format(mKey, mArgs);\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "672b27dd5551de63a1fb08d8ea80376d70f2aa60": {
      "type": "Yfilerename",
      "commitMessage": "Moved all the Localization stuff into the api directory. The plan is reused\nthe localisation support in the checks.\n",
      "commitDate": 1032266010000,
      "commitName": "672b27dd5551de63a1fb08d8ea80376d70f2aa60",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1032152891000,
      "commitNameOld": "ffb17cde0f6351bdf2f2e8cf655fa7f7a3cae827",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 1.31,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "25a13442f2d67729eba3b1e8eff32ed926396ee3": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug (594469) where unit tests would fail under different locales. Also\nfixed a potential bug on how messages are located.\n",
      "commitDate": 1029290324000,
      "commitName": "25a13442f2d67729eba3b1e8eff32ed926396ee3",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1029060479000,
      "commitNameOld": "378e87f1e3bf8b2451ca511668954b707680b843",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,11 @@\n     public String getMessage()\n     {\n-        // Very simple approach - wait for performance problems\n+        // Very simple approach - wait for performance problems.\n+        // Important to use the default class loader, and not the one in the\n+        // Configuration object. This is because the class loader in the\n+        // Configuration is specified by the user for resolving custom classes.\n         final ResourceBundle bundle \u003d\n-            ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale, sLoader);\n+            ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale);\n         final String pattern \u003d bundle.getString(mKey);\n         return MessageFormat.format(pattern, mArgs);\n     }\n\\ No newline at end of file\n"
    },
    "378e87f1e3bf8b2451ca511668954b707680b843": {
      "type": "Ymodifierchange",
      "commitMessage": "Since this class is meant to be seen outside the package - fixed the access\nrights\n",
      "commitDate": 1029060479000,
      "commitName": "378e87f1e3bf8b2451ca511668954b707680b843",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1029060061000,
      "commitNameOld": "20483ae032296610315fafb9a8774cfdd0e13857",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-    String getMessage()\n+    public String getMessage()\n     {\n         // Very simple approach - wait for performance problems\n         final ResourceBundle bundle \u003d\n             ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale, sLoader);\n         final String pattern \u003d bundle.getString(mKey);\n         return MessageFormat.format(pattern, mArgs);\n     }\n\\ No newline at end of file\n"
    },
    "20483ae032296610315fafb9a8774cfdd0e13857": {
      "type": "Ybodychange",
      "commitMessage": "Major rework to support localized error messages. Inspired by patch 580410. At\nthe moment it is not possible to override the system locale, this probably\nshould be added.\n\nNow possible to specify the locale to use.\n",
      "commitDate": 1029060061000,
      "commitName": "20483ae032296610315fafb9a8774cfdd0e13857",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1028988900000,
      "commitNameOld": "c682b5725d22afc38bf19d9667b23a7deab6d8c3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.82,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n     String getMessage()\n     {\n         // Very simple approach - wait for performance problems\n-        final ResourceBundle bundle \u003d ResourceBundle.getBundle(MESSAGE_BUNDLE);\n+        final ResourceBundle bundle \u003d\n+            ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale, sLoader);\n         final String pattern \u003d bundle.getString(mKey);\n         return MessageFormat.format(pattern, mArgs);\n     }\n\\ No newline at end of file\n"
    },
    "c682b5725d22afc38bf19d9667b23a7deab6d8c3": {
      "type": "Yintroduced",
      "commitMessage": "Major rework to support localized error messages. Inspired by patch 580410. At\nthe moment it is not possible to override the system locale, this probably\nshould be added.\n",
      "commitDate": 1028988900000,
      "commitName": "c682b5725d22afc38bf19d9667b23a7deab6d8c3",
      "commitAuthor": "Oliver Burn"
    }
  }
}