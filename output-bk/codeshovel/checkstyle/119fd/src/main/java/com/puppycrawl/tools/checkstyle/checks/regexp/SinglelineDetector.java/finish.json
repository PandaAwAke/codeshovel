{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "SinglelineDetector.java",
  "functionName": "finish",
  "functionId": "finish",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
  "functionStartLine": 73,
  "functionEndLine": 83,
  "changeHistory": [
    "cd8f1c3183f391e13f409d8e9b71d842e7a164bc",
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525",
    "075b3084de3934dbf73f108110b36e01dcf10d1e",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "b6161c1a590fa2a0c839f4c0cdd31446bd018295",
    "61f25fbed0f49e67e18b988eb47c86d72544ac23"
  ],
  "changeHistoryShort": {
    "cd8f1c3183f391e13f409d8e9b71d842e7a164bc": "Ybodychange",
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525": "Ybodychange",
    "075b3084de3934dbf73f108110b36e01dcf10d1e": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "b6161c1a590fa2a0c839f4c0cdd31446bd018295": "Ybodychange",
    "61f25fbed0f49e67e18b988eb47c86d72544ac23": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd8f1c3183f391e13f409d8e9b71d842e7a164bc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: moved inline strings to error message fields",
      "commitDate": 1453387259000,
      "commitName": "cd8f1c3183f391e13f409d8e9b71d842e7a164bc",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private void finish() {\n         if (currentMatches \u003c options.getMinimum()) {\n             if (options.getMessage().isEmpty()) {\n-                options.getReporter().log(0, \"regexp.minimum\",\n+                options.getReporter().log(0, MSG_REGEXP_MINIMUM,\n                         options.getMinimum(), options.getFormat());\n             }\n             else {\n                 options.getReporter().log(0, options.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525": {
      "type": "Ybodychange",
      "commitMessage": "Simplify empty string check. #1555\n\nFixes `Simplify empty string check` inspection violations.\n\nDescription:\n\u003eReports .equals() being called to compare a String with an empty string. It is normally more performant to test a String for emptiness by comparing its .length() to zero instead.\n",
      "commitDate": 1439010691000,
      "commitName": "084809c3b9e0d039c818cc4d8c5e640ea9e26525",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 82.73,
      "commitsBetweenForRepo": 621,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private void finish() {\n         if (currentMatches \u003c options.getMinimum()) {\n-            if (\"\".equals(options.getMessage())) {\n+            if (options.getMessage().isEmpty()) {\n                 options.getReporter().log(0, \"regexp.minimum\",\n                         options.getMinimum(), options.getFormat());\n             }\n             else {\n                 options.getReporter().log(0, options.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "075b3084de3934dbf73f108110b36e01dcf10d1e": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, regexp, #512\n",
      "commitDate": 1421677287000,
      "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 320.88,
      "commitsBetweenForRepo": 462,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void finish()\n     {\n-        if (mCurrentMatches \u003c mOptions.getMinimum()) {\n-            if (\"\".equals(mOptions.getMessage())) {\n-                mOptions.getReporter().log(0, \"regexp.minimum\",\n-                        mOptions.getMinimum(), mOptions.getFormat());\n+        if (currentMatches \u003c options.getMinimum()) {\n+            if (\"\".equals(options.getMessage())) {\n+                options.getReporter().log(0, \"regexp.minimum\",\n+                        options.getMinimum(), options.getFormat());\n             }\n             else {\n-                mOptions.getReporter().log(0, mOptions.getMessage());\n+                options.getReporter().log(0, options.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "b6161c1a590fa2a0c839f4c0cdd31446bd018295": {
      "type": "Ybodychange",
      "commitMessage": "part of refactoring to consolidate all the regexp checks.\n",
      "commitDate": 1229985100000,
      "commitName": "b6161c1a590fa2a0c839f4c0cdd31446bd018295",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1229944895000,
      "commitNameOld": "61f25fbed0f49e67e18b988eb47c86d72544ac23",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.47,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void finish()\n     {\n         if (mCurrentMatches \u003c mOptions.getMinimum()) {\n             if (\"\".equals(mOptions.getMessage())) {\n-                mOptions.getReporter().log(0, \"illegal.regexp\",\n-                        mOptions.getFormat());\n+                mOptions.getReporter().log(0, \"regexp.minimum\",\n+                        mOptions.getMinimum(), mOptions.getFormat());\n             }\n             else {\n                 mOptions.getReporter().log(0, mOptions.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "61f25fbed0f49e67e18b988eb47c86d72544ac23": {
      "type": "Yintroduced",
      "commitMessage": "start of refactoring to consolidate all the regexp checks.\n",
      "commitDate": 1229944895000,
      "commitName": "61f25fbed0f49e67e18b988eb47c86d72544ac23",
      "commitAuthor": "Oliver Burn"
    }
  }
}