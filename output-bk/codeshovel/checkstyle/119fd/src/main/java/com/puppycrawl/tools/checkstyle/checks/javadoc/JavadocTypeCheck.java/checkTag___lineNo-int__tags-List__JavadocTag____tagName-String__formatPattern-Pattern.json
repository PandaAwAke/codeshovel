{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocTypeCheck.java",
  "functionName": "checkTag",
  "functionId": "checkTag___lineNo-int__tags-List__JavadocTag____tagName-String__formatPattern-Pattern",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java",
  "functionStartLine": 271,
  "functionEndLine": 289,
  "changeHistory": [
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d",
    "c18071b7561b99767e871be9d4d7711eb15b76f1",
    "e27489c7721909245ea5055eac3b9c7c659081f6",
    "9ce0ceb04ae90185f95643fb4484e525bcb0d3df",
    "2ef6dc6a43ede89c5b5b9091dee83e1e58bb5edc",
    "661274b68096ccd5876abb8eacf7c8d42a939a0b"
  ],
  "changeHistoryShort": {
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a": "Ymultichange(Yparameterchange,Ybodychange)",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": "Ybodychange",
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d": "Ymultichange(Yparameterchange,Ybodychange)",
    "c18071b7561b99767e871be9d4d7711eb15b76f1": "Yparameterchange",
    "e27489c7721909245ea5055eac3b9c7c659081f6": "Ymultichange(Yparameterchange,Ybodychange)",
    "9ce0ceb04ae90185f95643fb4484e525bcb0d3df": "Ymultichange(Yparameterchange,Ybodychange)",
    "2ef6dc6a43ede89c5b5b9091dee83e1e58bb5edc": "Yfilerename",
    "661274b68096ccd5876abb8eacf7c8d42a939a0b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3255: removed unnecessary string fields for patterns",
      "commitDate": 1478802862000,
      "commitName": "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a",
      "commitAuthor": "rnveach",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": 1464356569000,
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1458221995000,
      "commitNameOld": "167dd96d8ca503a472bf003f187191d6b0ce586c",
      "commitAuthorOld": "Rasmus Kaj",
      "daysBetweenCommits": 71.0,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n     private void checkTag(int lineNo, List\u003cJavadocTag\u003e tags, String tagName,\n                           Pattern formatPattern, String format) {\n-        if (formatPattern \u003d\u003d null) {\n-            return;\n-        }\n-\n-        int tagCount \u003d 0;\n-        final String tagPrefix \u003d \"@\";\n-        for (int i \u003d tags.size() - 1; i \u003e\u003d 0; i--) {\n-            final JavadocTag tag \u003d tags.get(i);\n-            if (tag.getTagName().equals(tagName)) {\n-                tagCount++;\n-                if (!formatPattern.matcher(tag.getFirstArg()).find()) {\n-                    log(lineNo, MSG_TAG_FORMAT, tagPrefix + tagName, format);\n+        if (formatPattern !\u003d null) {\n+            int tagCount \u003d 0;\n+            final String tagPrefix \u003d \"@\";\n+            for (int i \u003d tags.size() - 1; i \u003e\u003d 0; i--) {\n+                final JavadocTag tag \u003d tags.get(i);\n+                if (tag.getTagName().equals(tagName)) {\n+                    tagCount++;\n+                    if (!formatPattern.matcher(tag.getFirstArg()).find()) {\n+                        log(lineNo, MSG_TAG_FORMAT, tagPrefix + tagName, format);\n+                    }\n                 }\n             }\n-        }\n-        if (tagCount \u003d\u003d 0) {\n-            log(lineNo, MSG_MISSING_TAG, tagPrefix + tagName);\n+            if (tagCount \u003d\u003d 0) {\n+                log(lineNo, MSG_MISSING_TAG, tagPrefix + tagName);\n+            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": 1453387259000,
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void checkTag(int lineNo, List\u003cJavadocTag\u003e tags, String tagName,\n                           Pattern formatPattern, String format) {\n         if (formatPattern \u003d\u003d null) {\n             return;\n         }\n \n         int tagCount \u003d 0;\n         final String tagPrefix \u003d \"@\";\n         for (int i \u003d tags.size() - 1; i \u003e\u003d 0; i--) {\n             final JavadocTag tag \u003d tags.get(i);\n             if (tag.getTagName().equals(tagName)) {\n                 tagCount++;\n                 if (!formatPattern.matcher(tag.getFirstArg()).find()) {\n-                    log(lineNo, TAG_FORMAT, tagPrefix + tagName, format);\n+                    log(lineNo, MSG_TAG_FORMAT, tagPrefix + tagName, format);\n                 }\n             }\n         }\n         if (tagCount \u003d\u003d 0) {\n-            log(lineNo, MISSING_TAG, tagPrefix + tagName);\n+            log(lineNo, MSG_MISSING_TAG, tagPrefix + tagName);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": 1440543609000,
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440040911000,
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 5.82,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     private void checkTag(int lineNo, List\u003cJavadocTag\u003e tags, String tagName,\n                           Pattern formatPattern, String format) {\n         if (formatPattern \u003d\u003d null) {\n             return;\n         }\n \n         int tagCount \u003d 0;\n+        final String tagPrefix \u003d \"@\";\n         for (int i \u003d tags.size() - 1; i \u003e\u003d 0; i--) {\n             final JavadocTag tag \u003d tags.get(i);\n             if (tag.getTagName().equals(tagName)) {\n                 tagCount++;\n                 if (!formatPattern.matcher(tag.getFirstArg()).find()) {\n-                    log(lineNo, TAG_FORMAT, \"@\" + tagName, format);\n+                    log(lineNo, TAG_FORMAT, tagPrefix + tagName, format);\n                 }\n             }\n         }\n         if (tagCount \u003d\u003d 0) {\n-            log(lineNo, MISSING_TAG, \"@\" + tagName);\n+            log(lineNo, MISSING_TAG, tagPrefix + tagName);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MemberName and MethodName violations fixed\n",
      "commitDate": 1439560811000,
      "commitName": "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439356761000,
      "commitNameOld": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 2.36,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private void checkTag(int lineNo, List\u003cJavadocTag\u003e tags, String tagName,\n                           Pattern formatPattern, String format) {\n         if (formatPattern \u003d\u003d null) {\n             return;\n         }\n \n         int tagCount \u003d 0;\n         for (int i \u003d tags.size() - 1; i \u003e\u003d 0; i--) {\n             final JavadocTag tag \u003d tags.get(i);\n             if (tag.getTagName().equals(tagName)) {\n                 tagCount++;\n-                if (!formatPattern.matcher(tag.getArg1()).find()) {\n+                if (!formatPattern.matcher(tag.getFirstArg()).find()) {\n                     log(lineNo, TAG_FORMAT, \"@\" + tagName, format);\n                 }\n             }\n         }\n         if (tagCount \u003d\u003d 0) {\n             log(lineNo, MISSING_TAG, \"@\" + tagName);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void checkTag(int lineNo, List\u003cJavadocTag\u003e tags, String tagName,\n                           Pattern formatPattern, String format)\n     {\n         if (formatPattern \u003d\u003d null) {\n             return;\n         }\n \n         int tagCount \u003d 0;\n         for (int i \u003d tags.size() - 1; i \u003e\u003d 0; i--) {\n             final JavadocTag tag \u003d tags.get(i);\n             if (tag.getTagName().equals(tagName)) {\n                 tagCount++;\n                 if (!formatPattern.matcher(tag.getArg1()).find()) {\n-                    log(lineNo, \"type.tagFormat\", \"@\" + tagName, format);\n+                    log(lineNo, TAG_FORMAT, \"@\" + tagName, format);\n                 }\n             }\n         }\n         if (tagCount \u003d\u003d 0) {\n-            log(lineNo, \"type.missingTag\", \"@\" + tagName);\n+            log(lineNo, MISSING_TAG, \"@\" + tagName);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": {
      "type": "Ybodychange",
      "commitMessage": "record work on patch #2534038 from Travis for new annotation checks. Very good patch as usual from Travis. Shame on me for taking so long to apply it.\n",
      "commitDate": 1237805379000,
      "commitName": "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1237695418000,
      "commitNameOld": "216fcb79f9f5bbd05244364e926f261a90e697d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.27,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void checkTag(int aLineNo, List\u003cJavadocTag\u003e aTags, String aTag,\n                           Pattern aFormatPattern, String aFormat)\n     {\n         if (aFormatPattern \u003d\u003d null) {\n             return;\n         }\n \n         int tagCount \u003d 0;\n         for (int i \u003d aTags.size() - 1; i \u003e\u003d 0; i--) {\n             final JavadocTag tag \u003d aTags.get(i);\n-            if (tag.getTag().equals(aTag)) {\n+            if (tag.getTagName().equals(aTag)) {\n                 tagCount++;\n                 if (!aFormatPattern.matcher(tag.getArg1()).find()) {\n                     log(aLineNo, \"type.tagFormat\", \"@\" + aTag, aFormat);\n                 }\n             }\n         }\n         if (tagCount \u003d\u003d 0) {\n             log(aLineNo, \"type.missingTag\", \"@\" + aTag);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": 1197694270000,
      "commitName": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "c18071b7561b99767e871be9d4d7711eb15b76f1": {
      "type": "Yparameterchange",
      "commitMessage": "repeat changes made in CVS.\n",
      "commitDate": 1197588660000,
      "commitName": "c18071b7561b99767e871be9d4d7711eb15b76f1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 320.36,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-    private void checkTag(int aLineNo, Vector aTags, String aTag,\n+    private void checkTag(int aLineNo, List aTags, String aTag,\n                           Pattern aFormatPattern, String aFormat)\n     {\n         if (aFormatPattern \u003d\u003d null) {\n             return;\n         }\n \n         int tagCount \u003d 0;\n         for (int i \u003d aTags.size() - 1; i \u003e\u003d 0; i--) {\n             final JavadocTag tag \u003d (JavadocTag) aTags.get(i);\n             if (tag.getTag().equals(aTag)) {\n                 tagCount++;\n                 if (!aFormatPattern.matcher(tag.getArg1()).find()) {\n                     log(aLineNo, \"type.tagFormat\", \"@\" + aTag, aFormat);\n                 }\n             }\n         }\n         if (tagCount \u003d\u003d 0) {\n             log(aLineNo, \"type.missingTag\", \"@\" + aTag);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e27489c7721909245ea5055eac3b9c7c659081f6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "initial replacing RE by Pattern (need to update docs)\n",
      "commitDate": 1115830091000,
      "commitName": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "9ce0ceb04ae90185f95643fb4484e525bcb0d3df": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Some improvements for JavadocType check.\n",
      "commitDate": 1078770170000,
      "commitName": "9ce0ceb04ae90185f95643fb4484e525bcb0d3df",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "2ef6dc6a43ede89c5b5b9091dee83e1e58bb5edc": {
      "type": "Yfilerename",
      "commitMessage": "Moving another Javadoc check to see what is involved.\nA suprisingly small amount. Love the Eclipse refactoring\nsupport having the smarts to do the CVS operations.\n",
      "commitDate": 1054647239000,
      "commitName": "2ef6dc6a43ede89c5b5b9091dee83e1e58bb5edc",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054646658000,
      "commitNameOld": "7f0e2b8f92ef375f2de3f59b9464746a0113b126",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "661274b68096ccd5876abb8eacf7c8d42a939a0b": {
      "type": "Yintroduced",
      "commitMessage": "improved error messages for JavadocTypeCheck\n",
      "commitDate": 1040659096000,
      "commitName": "661274b68096ccd5876abb8eacf7c8d42a939a0b",
      "commitAuthor": "Lars Kühne"
    }
  }
}