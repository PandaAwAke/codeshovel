{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "NewHandler.java",
  "functionName": "checkIndentation",
  "functionId": "checkIndentation",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java",
  "functionStartLine": 47,
  "functionEndLine": 55,
  "changeHistory": [
    "6e8d1e06728b7defbd734253b3818a33676b62bc",
    "8c891372187779376158becd95fcaf4e28b8bb8d",
    "d4a862ea091fc7b74f34a13fcae8143239d9d4b9",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "e3a48d1527341456a798c3f0c1986de6898a8c60",
    "47ce2a333dc5d8858772ca0a63666a0a440c8d57",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f",
    "50559c68761e235f57e48cd2dc28928b417d7745"
  ],
  "changeHistoryShort": {
    "6e8d1e06728b7defbd734253b3818a33676b62bc": "Ybodychange",
    "8c891372187779376158becd95fcaf4e28b8bb8d": "Ybodychange",
    "d4a862ea091fc7b74f34a13fcae8143239d9d4b9": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "e3a48d1527341456a798c3f0c1986de6898a8c60": "Ybodychange",
    "47ce2a333dc5d8858772ca0a63666a0a440c8d57": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f": "Ybodychange",
    "50559c68761e235f57e48cd2dc28928b417d7745": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e8d1e06728b7defbd734253b3818a33676b62bc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3721: enforced no abbreviations in checkstyle",
      "commitDate": 1487369078000,
      "commitName": "6e8d1e06728b7defbd734253b3818a33676b62bc",
      "commitAuthor": "rnveach",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 21.31,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public void checkIndentation() {\n         final DetailAST type \u003d getMainAst().getFirstChild();\n         if (type !\u003d null) {\n             checkExpressionSubtree(type, getIndent(), false, false);\n         }\n \n         final DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n-        checkLParen(lparen);\n+        checkLeftParen(lparen);\n     }\n\\ No newline at end of file\n"
    },
    "8c891372187779376158becd95fcaf4e28b8bb8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": 1450282560000,
      "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1437336185000,
      "commitNameOld": "d4a862ea091fc7b74f34a13fcae8143239d9d4b9",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 149.84,
      "commitsBetweenForRepo": 1346,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public void checkIndentation() {\n         final DetailAST type \u003d getMainAst().getFirstChild();\n         if (type !\u003d null) {\n-            checkExpressionSubtree(type, getLevel(), false, false);\n+            checkExpressionSubtree(type, getIndent(), false, false);\n         }\n \n         final DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n         checkLParen(lparen);\n     }\n\\ No newline at end of file\n"
    },
    "d4a862ea091fc7b74f34a13fcae8143239d9d4b9": {
      "type": "Ybodychange",
      "commitMessage": "Remove dead code from NewHandler in Indentation check. #1270\n",
      "commitDate": 1437336185000,
      "commitName": "d4a862ea091fc7b74f34a13fcae8143239d9d4b9",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1434649920000,
      "commitNameOld": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 31.09,
      "commitsBetweenForRepo": 230,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,9 @@\n     public void checkIndentation() {\n         final DetailAST type \u003d getMainAst().getFirstChild();\n         if (type !\u003d null) {\n             checkExpressionSubtree(type, getLevel(), false, false);\n         }\n \n         final DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n-        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         checkLParen(lparen);\n-\n-        if (rparen \u003d\u003d null || lparen \u003d\u003d null\n-            || rparen.getLineNo() \u003d\u003d lparen.getLineNo()) {\n-            return;\n-        }\n-\n-        if (getMainAst().getType() !\u003d TokenTypes.OBJBLOCK) {\n-            return;\n-        }\n-\n-        // if this method name is on the same line as a containing\n-        // method, don\u0027t indent, this allows expressions like:\n-        //    method(\"my str\" + method2(\n-        //        \"my str2\"));\n-        // as well as\n-        //    method(\"my str\" +\n-        //        method2(\n-        //            \"my str2\"));\n-        //\n-\n-        checkExpressionSubtree(\n-            getMainAst().findFirstToken(TokenTypes.ELIST),\n-            new IndentLevel(getLevel(), getBasicOffset()),\n-            false, true);\n-\n-        checkRParen(lparen, rparen);\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     public void checkIndentation()\n     {\n         final DetailAST type \u003d getMainAst().getFirstChild();\n         if (type !\u003d null) {\n             checkExpressionSubtree(type, getLevel(), false, false);\n         }\n \n         final DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         checkLParen(lparen);\n \n-        if ((rparen \u003d\u003d null) || (lparen \u003d\u003d null)\n-            || (rparen.getLineNo() \u003d\u003d lparen.getLineNo()))\n+        if (rparen \u003d\u003d null || lparen \u003d\u003d null\n+            || rparen.getLineNo() \u003d\u003d lparen.getLineNo())\n         {\n             return;\n         }\n \n         if (getMainAst().getType() !\u003d TokenTypes.OBJBLOCK) {\n             return;\n         }\n \n         // if this method name is on the same line as a containing\n         // method, don\u0027t indent, this allows expressions like:\n         //    method(\"my str\" + method2(\n         //        \"my str2\"));\n         // as well as\n         //    method(\"my str\" +\n         //        method2(\n         //            \"my str2\"));\n         //\n \n         checkExpressionSubtree(\n             getMainAst().findFirstToken(TokenTypes.ELIST),\n             new IndentLevel(getLevel(), getBasicOffset()),\n             false, true);\n \n         checkRParen(lparen, rparen);\n     }\n\\ No newline at end of file\n"
    },
    "e3a48d1527341456a798c3f0c1986de6898a8c60": {
      "type": "Ybodychange",
      "commitMessage": "Update for IndentationCheck. #294\n",
      "commitDate": 1413242511000,
      "commitName": "e3a48d1527341456a798c3f0c1986de6898a8c60",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": 1412964919000,
      "commitNameOld": "47ce2a333dc5d8858772ca0a63666a0a440c8d57",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 3.21,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,38 @@\n     public void checkIndentation()\n     {\n         final DetailAST type \u003d getMainAst().getFirstChild();\n         if (type !\u003d null) {\n             checkExpressionSubtree(type, getLevel(), false, false);\n         }\n \n         final DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         checkLParen(lparen);\n \n         if ((rparen \u003d\u003d null) || (lparen \u003d\u003d null)\n             || (rparen.getLineNo() \u003d\u003d lparen.getLineNo()))\n         {\n             return;\n         }\n \n+        if (getMainAst().getType() !\u003d TokenTypes.OBJBLOCK) {\n+            return;\n+        }\n+\n         // if this method name is on the same line as a containing\n         // method, don\u0027t indent, this allows expressions like:\n         //    method(\"my str\" + method2(\n         //        \"my str2\"));\n         // as well as\n         //    method(\"my str\" +\n         //        method2(\n         //            \"my str2\"));\n         //\n \n         checkExpressionSubtree(\n             getMainAst().findFirstToken(TokenTypes.ELIST),\n             new IndentLevel(getLevel(), getBasicOffset()),\n             false, true);\n \n         checkRParen(lparen, rparen);\n     }\n\\ No newline at end of file\n"
    },
    "47ce2a333dc5d8858772ca0a63666a0a440c8d57": {
      "type": "Ybodychange",
      "commitMessage": "Fixed NPE when NewHandler is used with java 8 method reference\n",
      "commitDate": 1412964919000,
      "commitName": "47ce2a333dc5d8858772ca0a63666a0a440c8d57",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 220.04,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,34 @@\n     public void checkIndentation()\n     {\n         final DetailAST type \u003d getMainAst().getFirstChild();\n-        checkExpressionSubtree(type, getLevel(), false, false);\n+        if (type !\u003d null) {\n+            checkExpressionSubtree(type, getLevel(), false, false);\n+        }\n \n         final DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         checkLParen(lparen);\n \n         if ((rparen \u003d\u003d null) || (lparen \u003d\u003d null)\n             || (rparen.getLineNo() \u003d\u003d lparen.getLineNo()))\n         {\n             return;\n         }\n \n         // if this method name is on the same line as a containing\n         // method, don\u0027t indent, this allows expressions like:\n         //    method(\"my str\" + method2(\n         //        \"my str2\"));\n         // as well as\n         //    method(\"my str\" +\n         //        method2(\n         //            \"my str2\"));\n         //\n \n         checkExpressionSubtree(\n             getMainAst().findFirstToken(TokenTypes.ELIST),\n             new IndentLevel(getLevel(), getBasicOffset()),\n             false, true);\n \n         checkRParen(lparen, rparen);\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200296548000,
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void checkIndentation()\n     {\n-        final DetailAST type \u003d (DetailAST) getMainAst().getFirstChild();\n+        final DetailAST type \u003d getMainAst().getFirstChild();\n         checkExpressionSubtree(type, getLevel(), false, false);\n \n         final DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         checkLParen(lparen);\n \n         if ((rparen \u003d\u003d null) || (lparen \u003d\u003d null)\n             || (rparen.getLineNo() \u003d\u003d lparen.getLineNo()))\n         {\n             return;\n         }\n \n         // if this method name is on the same line as a containing\n         // method, don\u0027t indent, this allows expressions like:\n         //    method(\"my str\" + method2(\n         //        \"my str2\"));\n         // as well as\n         //    method(\"my str\" +\n         //        method2(\n         //            \"my str2\"));\n         //\n \n         checkExpressionSubtree(\n             getMainAst().findFirstToken(TokenTypes.ELIST),\n             new IndentLevel(getLevel(), getBasicOffset()),\n             false, true);\n \n         checkRParen(lparen, rparen);\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152242806000,
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void checkIndentation()\n     {\n-        DetailAST type \u003d (DetailAST) getMainAst().getFirstChild();\n+        final DetailAST type \u003d (DetailAST) getMainAst().getFirstChild();\n         checkExpressionSubtree(type, getLevel(), false, false);\n \n-        DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n-        DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n+        final DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n+        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         checkLParen(lparen);\n \n         if ((rparen \u003d\u003d null) || (lparen \u003d\u003d null)\n             || (rparen.getLineNo() \u003d\u003d lparen.getLineNo()))\n         {\n             return;\n         }\n \n         // if this method name is on the same line as a containing\n         // method, don\u0027t indent, this allows expressions like:\n         //    method(\"my str\" + method2(\n         //        \"my str2\"));\n         // as well as\n         //    method(\"my str\" +\n         //        method2(\n         //            \"my str2\"));\n         //\n \n         checkExpressionSubtree(\n             getMainAst().findFirstToken(TokenTypes.ELIST),\n             new IndentLevel(getLevel(), getBasicOffset()),\n             false, true);\n \n         checkRParen(lparen, rparen);\n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1122110316000,
      "commitNameOld": "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 348.76,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void checkIndentation()\n     {\n         DetailAST type \u003d (DetailAST) getMainAst().getFirstChild();\n         checkExpressionSubtree(type, getLevel(), false, false);\n \n         DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n         DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         checkLParen(lparen);\n \n-        if (rparen \u003d\u003d null || lparen \u003d\u003d null\n-            || rparen.getLineNo() \u003d\u003d lparen.getLineNo())\n+        if ((rparen \u003d\u003d null) || (lparen \u003d\u003d null)\n+            || (rparen.getLineNo() \u003d\u003d lparen.getLineNo()))\n         {\n             return;\n         }\n \n         // if this method name is on the same line as a containing\n         // method, don\u0027t indent, this allows expressions like:\n         //    method(\"my str\" + method2(\n         //        \"my str2\"));\n         // as well as\n         //    method(\"my str\" +\n         //        method2(\n         //            \"my str2\"));\n         //\n \n         checkExpressionSubtree(\n             getMainAst().findFirstToken(TokenTypes.ELIST),\n             new IndentLevel(getLevel(), getBasicOffset()),\n             false, true);\n \n         checkRParen(lparen, rparen);\n     }\n\\ No newline at end of file\n"
    },
    "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f": {
      "type": "Ybodychange",
      "commitMessage": "some additional refactoring (to remove code duplication)\n",
      "commitDate": 1122110316000,
      "commitName": "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1122108240000,
      "commitNameOld": "50559c68761e235f57e48cd2dc28928b417d7745",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void checkIndentation()\n     {\n         DetailAST type \u003d (DetailAST) getMainAst().getFirstChild();\n         checkExpressionSubtree(type, getLevel(), false, false);\n \n-        checkLParen();\n-        DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         DetailAST lparen \u003d getMainAst().findFirstToken(TokenTypes.LPAREN);\n+        DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n+        checkLParen(lparen);\n \n         if (rparen \u003d\u003d null || lparen \u003d\u003d null\n             || rparen.getLineNo() \u003d\u003d lparen.getLineNo())\n         {\n             return;\n         }\n \n         // if this method name is on the same line as a containing\n         // method, don\u0027t indent, this allows expressions like:\n         //    method(\"my str\" + method2(\n         //        \"my str2\"));\n         // as well as\n         //    method(\"my str\" +\n         //        method2(\n         //            \"my str2\"));\n         //\n \n         checkExpressionSubtree(\n             getMainAst().findFirstToken(TokenTypes.ELIST),\n             new IndentLevel(getLevel(), getBasicOffset()),\n             false, true);\n \n-        checkRParen();\n+        checkRParen(lparen, rparen);\n     }\n\\ No newline at end of file\n"
    },
    "50559c68761e235f57e48cd2dc28928b417d7745": {
      "type": "Yintroduced",
      "commitMessage": "fix for 1232822 and some refactoring in indentation check\n",
      "commitDate": 1122108240000,
      "commitName": "50559c68761e235f57e48cd2dc28928b417d7745",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}