{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "ExplicitInitializationCheck.java",
  "functionName": "isSkipCase",
  "functionId": "isSkipCase___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
  "functionStartLine": 146,
  "functionEndLine": 161,
  "changeHistory": [
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
    "9241c0a692ed65fab3b3fdb3c4ff1c118794337c",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "d53fc277c6947761992e6ca3016110d6ed59b042",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
    "6d9d894a62caf7e7419fcb07e7d972499e4306d7"
  ],
  "changeHistoryShort": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": "Ybodychange",
    "9241c0a692ed65fab3b3fdb3c4ff1c118794337c": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "d53fc277c6947761992e6ca3016110d6ed59b042": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": "Ybodychange",
    "6d9d894a62caf7e7419fcb07e7d972499e4306d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for modifiers",
      "commitDate": 1508986494000,
      "commitName": "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
      "commitAuthor": "rnveach",
      "commitDateOld": 1503206988000,
      "commitNameOld": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 66.89,
      "commitsBetweenForRepo": 208,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private static boolean isSkipCase(DetailAST ast) {\n         boolean skipCase \u003d true;\n \n         // do not check local variables and\n         // fields declared in interface/annotations\n         if (!ScopeUtils.isLocalVariableDef(ast)\n                 \u0026\u0026 !ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n             final DetailAST assign \u003d ast.findFirstToken(TokenTypes.ASSIGN);\n \n             if (assign !\u003d null) {\n                 final DetailAST modifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-                skipCase \u003d modifiers.branchContains(TokenTypes.FINAL);\n+                skipCase \u003d modifiers.findFirstToken(TokenTypes.FINAL) !\u003d null;\n             }\n         }\n         return skipCase;\n     }\n\\ No newline at end of file\n"
    },
    "9241c0a692ed65fab3b3fdb3c4ff1c118794337c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violation fixed for ExplicitInitializationCheck\n",
      "commitDate": 1440741539000,
      "commitName": "9241c0a692ed65fab3b3fdb3c4ff1c118794337c",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440739752000,
      "commitNameOld": "cc7aeaec906dc3c864477e3050510009b2a946ee",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     private static boolean isSkipCase(DetailAST ast) {\n+        boolean skipCase \u003d true;\n+\n         // do not check local variables and\n         // fields declared in interface/annotations\n-        if (ScopeUtils.isLocalVariableDef(ast)\n-            || ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n-            return true;\n-        }\n+        if (!ScopeUtils.isLocalVariableDef(ast)\n+                \u0026\u0026 !ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n+            final DetailAST assign \u003d ast.findFirstToken(TokenTypes.ASSIGN);\n \n-        final DetailAST assign \u003d ast.findFirstToken(TokenTypes.ASSIGN);\n-        if (assign \u003d\u003d null) {\n-            // no assign - no check\n-            return true;\n+            if (assign !\u003d null) {\n+                final DetailAST modifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n+                skipCase \u003d modifiers.branchContains(TokenTypes.FINAL);\n+            }\n         }\n-\n-        final DetailAST modifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-        return modifiers.branchContains(TokenTypes.FINAL);\n+        return skipCase;\n     }\n\\ No newline at end of file\n"
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": 1440705239000,
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private static boolean isSkipCase(DetailAST ast) {\n         // do not check local variables and\n         // fields declared in interface/annotations\n         if (ScopeUtils.isLocalVariableDef(ast)\n-            || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n+            || ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n             return true;\n         }\n \n         final DetailAST assign \u003d ast.findFirstToken(TokenTypes.ASSIGN);\n         if (assign \u003d\u003d null) {\n             // no assign - no check\n             return true;\n         }\n \n         final DetailAST modifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         return modifiers.branchContains(TokenTypes.FINAL);\n     }\n\\ No newline at end of file\n"
    },
    "d53fc277c6947761992e6ca3016110d6ed59b042": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Improved coverage for ExplicitInitializationCheck\n",
      "commitDate": 1438437537000,
      "commitName": "d53fc277c6947761992e6ca3016110d6ed59b042",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 9.33,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private static boolean isSkipCase(DetailAST ast) {\n         // do not check local variables and\n         // fields declared in interface/annotations\n         if (ScopeUtils.isLocalVariableDef(ast)\n             || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n             return true;\n         }\n \n         final DetailAST assign \u003d ast.findFirstToken(TokenTypes.ASSIGN);\n         if (assign \u003d\u003d null) {\n             // no assign - no check\n             return true;\n         }\n \n         final DetailAST modifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-        return modifiers !\u003d null \u0026\u0026 modifiers.branchContains(TokenTypes.FINAL);\n+        return modifiers.branchContains(TokenTypes.FINAL);\n     }\n\\ No newline at end of file\n"
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1436323201000,
      "commitNameOld": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 10.09,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-    private boolean isSkipCase(DetailAST ast) {\n+    private static boolean isSkipCase(DetailAST ast) {\n         // do not check local variables and\n         // fields declared in interface/annotations\n         if (ScopeUtils.isLocalVariableDef(ast)\n             || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n             return true;\n         }\n \n         final DetailAST assign \u003d ast.findFirstToken(TokenTypes.ASSIGN);\n         if (assign \u003d\u003d null) {\n             // no assign - no check\n             return true;\n         }\n \n         final DetailAST modifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         return modifiers !\u003d null \u0026\u0026 modifiers.branchContains(TokenTypes.FINAL);\n     }\n\\ No newline at end of file\n"
    },
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": {
      "type": "Ybodychange",
      "commitMessage": "Update Maven PMD Plugin to 3.5. #1300\n",
      "commitDate": 1436323201000,
      "commitName": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1434261690000,
      "commitNameOld": "6d9d894a62caf7e7419fcb07e7d972499e4306d7",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 23.86,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,17 @@\n     private boolean isSkipCase(DetailAST ast) {\n         // do not check local variables and\n         // fields declared in interface/annotations\n         if (ScopeUtils.isLocalVariableDef(ast)\n             || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n             return true;\n         }\n \n         final DetailAST assign \u003d ast.findFirstToken(TokenTypes.ASSIGN);\n         if (assign \u003d\u003d null) {\n             // no assign - no check\n             return true;\n         }\n \n         final DetailAST modifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-        if (modifiers !\u003d null\n-            \u0026\u0026 modifiers.branchContains(TokenTypes.FINAL)) {\n-            // do not check final variables\n-            return true;\n-        }\n-        return false;\n+        return modifiers !\u003d null \u0026\u0026 modifiers.branchContains(TokenTypes.FINAL);\n     }\n\\ No newline at end of file\n"
    },
    "6d9d894a62caf7e7419fcb07e7d972499e4306d7": {
      "type": "Yintroduced",
      "commitMessage": "ExplicitInitializationCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": 1434261690000,
      "commitName": "6d9d894a62caf7e7419fcb07e7d972499e4306d7",
      "commitAuthor": "Roman Ivanov"
    }
  }
}