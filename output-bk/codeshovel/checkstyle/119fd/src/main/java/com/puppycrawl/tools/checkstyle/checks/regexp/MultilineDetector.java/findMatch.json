{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "MultilineDetector.java",
  "functionName": "findMatch",
  "functionId": "findMatch",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
  "functionStartLine": 93,
  "functionEndLine": 120,
  "changeHistory": [
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "aa0f77eb9294588b0d891dbde516bc43a5af4f5a",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f",
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525",
    "0dc308ff69bce4d52ef76002bc4fe3988955ceb6",
    "6f089534ea0b9680f0c76bc1fb3c04d11954a278",
    "37af13d63384a48aaeefb8d767b0f9ebb053a4a7",
    "545237e358cd5ec1492f128f500b345d0f1718a9",
    "075b3084de3934dbf73f108110b36e01dcf10d1e",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4"
  ],
  "changeHistoryShort": {
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "aa0f77eb9294588b0d891dbde516bc43a5af4f5a": "Ybodychange",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": "Ybodychange",
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525": "Ybodychange",
    "0dc308ff69bce4d52ef76002bc4fe3988955ceb6": "Ybodychange",
    "6f089534ea0b9680f0c76bc1fb3c04d11954a278": "Ybodychange",
    "37af13d63384a48aaeefb8d767b0f9ebb053a4a7": "Ybodychange",
    "545237e358cd5ec1492f128f500b345d0f1718a9": "Ybodychange",
    "075b3084de3934dbf73f108110b36e01dcf10d1e": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": "Ybodychange",
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2": {
      "type": "Ybodychange",
      "commitMessage": "Pull #4328: moved variables inside if blocks to reduce execution time",
      "commitDate": 1494119754000,
      "commitName": "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2",
      "commitAuthor": "rnveach",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 99.45,
      "commitsBetweenForRepo": 383,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     private void findMatch() {\n         try {\n             boolean foundMatch \u003d matcher.find();\n \n             while (foundMatch) {\n-                final LineColumn start \u003d text.lineColumn(matcher.start());\n                 currentMatches++;\n                 if (currentMatches \u003e options.getMaximum()) {\n+                    final LineColumn start \u003d text.lineColumn(matcher.start());\n                     if (options.getMessage().isEmpty()) {\n                         options.getReporter().log(start.getLine(),\n                                 MSG_REGEXP_EXCEEDED, matcher.pattern().toString());\n                     }\n                     else {\n                         options.getReporter()\n                                 .log(start.getLine(), options.getMessage());\n                     }\n                 }\n                 foundMatch \u003d matcher.find();\n             }\n         }\n         // see http://bugs.java.com/bugdatabase/view_bug.do?bug_id\u003d6337993 et al.\n         catch (StackOverflowError ignored) {\n             // OK http://blog.igorminar.com/2008/05/catching-stackoverflowerror-and-bug-in.html\n             // http://programmers.stackexchange.com/questions/\n             //        209099/is-it-ever-okay-to-catch-stackoverflowerror-in-java\n             options.getReporter().log(0, MSG_STACKOVERFLOW, matcher.pattern().toString());\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": 1453387259000,
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     private void findMatch() {\n         try {\n             boolean foundMatch \u003d matcher.find();\n \n             while (foundMatch) {\n                 final LineColumn start \u003d text.lineColumn(matcher.start());\n                 currentMatches++;\n                 if (currentMatches \u003e options.getMaximum()) {\n                     if (options.getMessage().isEmpty()) {\n                         options.getReporter().log(start.getLine(),\n-                                REGEXP_EXCEEDED, matcher.pattern().toString());\n+                                MSG_REGEXP_EXCEEDED, matcher.pattern().toString());\n                     }\n                     else {\n                         options.getReporter()\n                                 .log(start.getLine(), options.getMessage());\n                     }\n                 }\n                 foundMatch \u003d matcher.find();\n             }\n         }\n         // see http://bugs.java.com/bugdatabase/view_bug.do?bug_id\u003d6337993 et al.\n         catch (StackOverflowError ignored) {\n             // OK http://blog.igorminar.com/2008/05/catching-stackoverflowerror-and-bug-in.html\n             // http://programmers.stackexchange.com/questions/\n             //        209099/is-it-ever-okay-to-catch-stackoverflowerror-in-java\n-            options.getReporter().log(0, STACKOVERFLOW, matcher.pattern().toString());\n+            options.getReporter().log(0, MSG_STACKOVERFLOW, matcher.pattern().toString());\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "aa0f77eb9294588b0d891dbde516bc43a5af4f5a": {
      "type": "Ybodychange",
      "commitMessage": "Coverage has been increased to 100% in MultilineDetector. Issue #1010\n",
      "commitDate": 1439203599000,
      "commitName": "aa0f77eb9294588b0d891dbde516bc43a5af4f5a",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1439189206000,
      "commitNameOld": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,29 @@\n     private void findMatch() {\n         try {\n             boolean foundMatch \u003d matcher.find();\n \n             while (foundMatch) {\n                 final LineColumn start \u003d text.lineColumn(matcher.start());\n-                final LineColumn end \u003d text.lineColumn(matcher.end());\n-\n-                if (!options.getSuppressor().shouldSuppress(start.getLine(),\n-                        start.getColumn(), end.getLine(), end.getColumn())) {\n-                    currentMatches++;\n-                    if (currentMatches \u003e options.getMaximum()) {\n-                        if (options.getMessage().isEmpty()) {\n-                            options.getReporter().log(start.getLine(),\n-                                    REGEXP_EXCEEDED, matcher.pattern().toString());\n-                        }\n-                        else {\n-                            options.getReporter()\n-                                    .log(start.getLine(), options.getMessage());\n-                        }\n+                currentMatches++;\n+                if (currentMatches \u003e options.getMaximum()) {\n+                    if (options.getMessage().isEmpty()) {\n+                        options.getReporter().log(start.getLine(),\n+                                REGEXP_EXCEEDED, matcher.pattern().toString());\n+                    }\n+                    else {\n+                        options.getReporter()\n+                                .log(start.getLine(), options.getMessage());\n                     }\n                 }\n                 foundMatch \u003d matcher.find();\n             }\n         }\n         // see http://bugs.java.com/bugdatabase/view_bug.do?bug_id\u003d6337993 et al.\n         catch (StackOverflowError ignored) {\n             // OK http://blog.igorminar.com/2008/05/catching-stackoverflowerror-and-bug-in.html\n             // http://programmers.stackexchange.com/questions/\n             //        209099/is-it-ever-okay-to-catch-stackoverflowerror-in-java\n             options.getReporter().log(0, STACKOVERFLOW, matcher.pattern().toString());\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": {
      "type": "Ybodychange",
      "commitMessage": "Rename ignored catch parameters. #1555\n\nFixes `UnusedCatchParameter` inspection violations.\n\nDescription:\nReports any catch parameters that are unused in their corresponding blocks. This inspection will not report any catch parameters named \"ignore\" or \"ignored\". Conversely this inspection will warn on any catch parameters named \"ignore\" or \"ignored\" that are actually used.\n",
      "commitDate": 1439011061000,
      "commitName": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439010691000,
      "commitNameOld": "084809c3b9e0d039c818cc4d8c5e640ea9e26525",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     private void findMatch() {\n         try {\n             boolean foundMatch \u003d matcher.find();\n \n             while (foundMatch) {\n                 final LineColumn start \u003d text.lineColumn(matcher.start());\n                 final LineColumn end \u003d text.lineColumn(matcher.end());\n \n                 if (!options.getSuppressor().shouldSuppress(start.getLine(),\n                         start.getColumn(), end.getLine(), end.getColumn())) {\n                     currentMatches++;\n                     if (currentMatches \u003e options.getMaximum()) {\n                         if (options.getMessage().isEmpty()) {\n                             options.getReporter().log(start.getLine(),\n                                     REGEXP_EXCEEDED, matcher.pattern().toString());\n                         }\n                         else {\n                             options.getReporter()\n                                     .log(start.getLine(), options.getMessage());\n                         }\n                     }\n                 }\n                 foundMatch \u003d matcher.find();\n             }\n         }\n         // see http://bugs.java.com/bugdatabase/view_bug.do?bug_id\u003d6337993 et al.\n-        catch (StackOverflowError e) {\n+        catch (StackOverflowError ignored) {\n             // OK http://blog.igorminar.com/2008/05/catching-stackoverflowerror-and-bug-in.html\n             // http://programmers.stackexchange.com/questions/\n             //        209099/is-it-ever-okay-to-catch-stackoverflowerror-in-java\n             options.getReporter().log(0, STACKOVERFLOW, matcher.pattern().toString());\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525": {
      "type": "Ybodychange",
      "commitMessage": "Simplify empty string check. #1555\n\nFixes `Simplify empty string check` inspection violations.\n\nDescription:\n\u003eReports .equals() being called to compare a String with an empty string. It is normally more performant to test a String for emptiness by comparing its .length() to zero instead.\n",
      "commitDate": 1439010691000,
      "commitName": "084809c3b9e0d039c818cc4d8c5e640ea9e26525",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439007067000,
      "commitNameOld": "7d513f08c27c741105f712dc882fd4c3553f71e7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     private void findMatch() {\n         try {\n             boolean foundMatch \u003d matcher.find();\n \n             while (foundMatch) {\n                 final LineColumn start \u003d text.lineColumn(matcher.start());\n                 final LineColumn end \u003d text.lineColumn(matcher.end());\n \n                 if (!options.getSuppressor().shouldSuppress(start.getLine(),\n                         start.getColumn(), end.getLine(), end.getColumn())) {\n                     currentMatches++;\n                     if (currentMatches \u003e options.getMaximum()) {\n-                        if (\"\".equals(options.getMessage())) {\n+                        if (options.getMessage().isEmpty()) {\n                             options.getReporter().log(start.getLine(),\n                                     REGEXP_EXCEEDED, matcher.pattern().toString());\n                         }\n                         else {\n                             options.getReporter()\n                                     .log(start.getLine(), options.getMessage());\n                         }\n                     }\n                 }\n                 foundMatch \u003d matcher.find();\n             }\n         }\n         // see http://bugs.java.com/bugdatabase/view_bug.do?bug_id\u003d6337993 et al.\n         catch (StackOverflowError e) {\n             // OK http://blog.igorminar.com/2008/05/catching-stackoverflowerror-and-bug-in.html\n             // http://programmers.stackexchange.com/questions/\n             //        209099/is-it-ever-okay-to-catch-stackoverflowerror-in-java\n             options.getReporter().log(0, STACKOVERFLOW, matcher.pattern().toString());\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "0dc308ff69bce4d52ef76002bc4fe3988955ceb6": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary \u0027return\u0027 statement. #1538\n",
      "commitDate": 1438566538000,
      "commitName": "0dc308ff69bce4d52ef76002bc4fe3988955ceb6",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1435725309000,
      "commitNameOld": "6f089534ea0b9680f0c76bc1fb3c04d11954a278",
      "commitAuthorOld": "Michael Vorburger",
      "daysBetweenCommits": 32.88,
      "commitsBetweenForRepo": 324,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,34 @@\n     private void findMatch() {\n         try {\n             boolean foundMatch \u003d matcher.find();\n \n             while (foundMatch) {\n                 final LineColumn start \u003d text.lineColumn(matcher.start());\n                 final LineColumn end \u003d text.lineColumn(matcher.end());\n \n                 if (!options.getSuppressor().shouldSuppress(start.getLine(),\n                         start.getColumn(), end.getLine(), end.getColumn())) {\n                     currentMatches++;\n                     if (currentMatches \u003e options.getMaximum()) {\n                         if (\"\".equals(options.getMessage())) {\n                             options.getReporter().log(start.getLine(),\n                                     REGEXP_EXCEEDED, matcher.pattern().toString());\n                         }\n                         else {\n                             options.getReporter()\n                                     .log(start.getLine(), options.getMessage());\n                         }\n                     }\n                 }\n                 foundMatch \u003d matcher.find();\n             }\n         }\n         // see http://bugs.java.com/bugdatabase/view_bug.do?bug_id\u003d6337993 et al.\n         catch (StackOverflowError e) {\n             // OK http://blog.igorminar.com/2008/05/catching-stackoverflowerror-and-bug-in.html\n             // http://programmers.stackexchange.com/questions/\n             //        209099/is-it-ever-okay-to-catch-stackoverflowerror-in-java\n             options.getReporter().log(0, STACKOVERFLOW, matcher.pattern().toString());\n-            return;\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "6f089534ea0b9680f0c76bc1fb3c04d11954a278": {
      "type": "Ybodychange",
      "commitMessage": "StackOverflow in java.util.regex fixed #1221\n",
      "commitDate": 1435725309000,
      "commitName": "6f089534ea0b9680f0c76bc1fb3c04d11954a278",
      "commitAuthor": "Michael Vorburger",
      "commitDateOld": 1435722143000,
      "commitNameOld": "37af13d63384a48aaeefb8d767b0f9ebb053a4a7",
      "commitAuthorOld": "Michael Vorburger",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,35 @@\n     private void findMatch() {\n-        boolean foundMatch \u003d matcher.find();\n-        while (foundMatch) {\n-            final LineColumn start \u003d text.lineColumn(matcher.start());\n-            final LineColumn end \u003d text.lineColumn(matcher.end());\n+        try {\n+            boolean foundMatch \u003d matcher.find();\n \n-            if (!options.getSuppressor().shouldSuppress(start.getLine(),\n-                    start.getColumn(), end.getLine(), end.getColumn())) {\n-                currentMatches++;\n-                if (currentMatches \u003e options.getMaximum()) {\n-                    if (\"\".equals(options.getMessage())) {\n-                        options.getReporter().log(start.getLine(),\n-                                REGEXP_EXCEEDED, matcher.pattern().toString());\n-                    }\n-                    else {\n-                        options.getReporter()\n-                                .log(start.getLine(), options.getMessage());\n+            while (foundMatch) {\n+                final LineColumn start \u003d text.lineColumn(matcher.start());\n+                final LineColumn end \u003d text.lineColumn(matcher.end());\n+\n+                if (!options.getSuppressor().shouldSuppress(start.getLine(),\n+                        start.getColumn(), end.getLine(), end.getColumn())) {\n+                    currentMatches++;\n+                    if (currentMatches \u003e options.getMaximum()) {\n+                        if (\"\".equals(options.getMessage())) {\n+                            options.getReporter().log(start.getLine(),\n+                                    REGEXP_EXCEEDED, matcher.pattern().toString());\n+                        }\n+                        else {\n+                            options.getReporter()\n+                                    .log(start.getLine(), options.getMessage());\n+                        }\n                     }\n                 }\n+                foundMatch \u003d matcher.find();\n             }\n-            foundMatch \u003d matcher.find();\n         }\n+        // see http://bugs.java.com/bugdatabase/view_bug.do?bug_id\u003d6337993 et al.\n+        catch (StackOverflowError e) {\n+            // OK http://blog.igorminar.com/2008/05/catching-stackoverflowerror-and-bug-in.html\n+            // http://programmers.stackexchange.com/questions/\n+            //        209099/is-it-ever-okay-to-catch-stackoverflowerror-in-java\n+            options.getReporter().log(0, STACKOVERFLOW, matcher.pattern().toString());\n+            return;\n+        }\n+\n     }\n\\ No newline at end of file\n"
    },
    "37af13d63384a48aaeefb8d767b0f9ebb053a4a7": {
      "type": "Ybodychange",
      "commitMessage": "StackOverflow fixed #48\ncom.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector.findMatch",
      "commitDate": 1435722143000,
      "commitName": "37af13d63384a48aaeefb8d767b0f9ebb053a4a7",
      "commitAuthor": "Michael Vorburger",
      "commitDateOld": 1435722021000,
      "commitNameOld": "edc63f0d669bc7e02eb3d9cbf83b6c7dcb92501c",
      "commitAuthorOld": "Michael Vorburger",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n     private void findMatch() {\n-        final boolean foundMatch \u003d matcher.find();\n-        if (!foundMatch) {\n-            return;\n-        }\n+        boolean foundMatch \u003d matcher.find();\n+        while (foundMatch) {\n+            final LineColumn start \u003d text.lineColumn(matcher.start());\n+            final LineColumn end \u003d text.lineColumn(matcher.end());\n \n-        final LineColumn start \u003d text.lineColumn(matcher.start());\n-        final LineColumn end \u003d text.lineColumn(matcher.end());\n-\n-        if (!options.getSuppressor().shouldSuppress(start.getLine(),\n-                start.getColumn(), end.getLine(), end.getColumn())) {\n-            currentMatches++;\n-            if (currentMatches \u003e options.getMaximum()) {\n-                if (\"\".equals(options.getMessage())) {\n-                    options.getReporter().log(start.getLine(),\n-                            REGEXP_EXCEEDED, matcher.pattern().toString());\n-                }\n-                else {\n-                    options.getReporter()\n-                            .log(start.getLine(), options.getMessage());\n+            if (!options.getSuppressor().shouldSuppress(start.getLine(),\n+                    start.getColumn(), end.getLine(), end.getColumn())) {\n+                currentMatches++;\n+                if (currentMatches \u003e options.getMaximum()) {\n+                    if (\"\".equals(options.getMessage())) {\n+                        options.getReporter().log(start.getLine(),\n+                                REGEXP_EXCEEDED, matcher.pattern().toString());\n+                    }\n+                    else {\n+                        options.getReporter()\n+                                .log(start.getLine(), options.getMessage());\n+                    }\n                 }\n             }\n+            foundMatch \u003d matcher.find();\n         }\n-        findMatch();\n     }\n\\ No newline at end of file\n"
    },
    "545237e358cd5ec1492f128f500b345d0f1718a9": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, regexp package, issue #537\n",
      "commitDate": 1424437365000,
      "commitName": "545237e358cd5ec1492f128f500b345d0f1718a9",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private void findMatch()\n     {\n         final boolean foundMatch \u003d matcher.find();\n         if (!foundMatch) {\n             return;\n         }\n \n         final LineColumn start \u003d text.lineColumn(matcher.start());\n         final LineColumn end \u003d text.lineColumn(matcher.end());\n \n         if (!options.getSuppressor().shouldSuppress(start.getLine(),\n                 start.getColumn(), end.getLine(), end.getColumn()))\n         {\n             currentMatches++;\n             if (currentMatches \u003e options.getMaximum()) {\n                 if (\"\".equals(options.getMessage())) {\n                     options.getReporter().log(start.getLine(),\n-                            \"regexp.exceeded\", matcher.pattern().toString());\n+                            REGEXP_EXCEEDED, matcher.pattern().toString());\n                 }\n                 else {\n                     options.getReporter()\n                             .log(start.getLine(), options.getMessage());\n                 }\n             }\n         }\n         findMatch();\n     }\n\\ No newline at end of file\n"
    },
    "075b3084de3934dbf73f108110b36e01dcf10d1e": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, regexp, #512\n",
      "commitDate": 1421677287000,
      "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 320.88,
      "commitsBetweenForRepo": 462,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private void findMatch()\n     {\n-        final boolean foundMatch \u003d mMatcher.find();\n+        final boolean foundMatch \u003d matcher.find();\n         if (!foundMatch) {\n             return;\n         }\n \n-        final LineColumn start \u003d mText.lineColumn(mMatcher.start());\n-        final LineColumn end \u003d mText.lineColumn(mMatcher.end());\n+        final LineColumn start \u003d text.lineColumn(matcher.start());\n+        final LineColumn end \u003d text.lineColumn(matcher.end());\n \n-        if (!mOptions.getSuppressor().shouldSuppress(start.getLine(),\n+        if (!options.getSuppressor().shouldSuppress(start.getLine(),\n                 start.getColumn(), end.getLine(), end.getColumn()))\n         {\n-            mCurrentMatches++;\n-            if (mCurrentMatches \u003e mOptions.getMaximum()) {\n-                if (\"\".equals(mOptions.getMessage())) {\n-                    mOptions.getReporter().log(start.getLine(),\n-                            \"regexp.exceeded\", mMatcher.pattern().toString());\n+            currentMatches++;\n+            if (currentMatches \u003e options.getMaximum()) {\n+                if (\"\".equals(options.getMessage())) {\n+                    options.getReporter().log(start.getLine(),\n+                            \"regexp.exceeded\", matcher.pattern().toString());\n                 }\n                 else {\n-                    mOptions.getReporter()\n-                            .log(start.getLine(), mOptions.getMessage());\n+                    options.getReporter()\n+                            .log(start.getLine(), options.getMessage());\n                 }\n             }\n         }\n         findMatch();\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": {
      "type": "Ybodychange",
      "commitMessage": "Apply patch #2783226 that uses FileText as an implementation for\nList\u003cString\u003e to pass lines around\n",
      "commitDate": 1277730133000,
      "commitName": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1266029835000,
      "commitNameOld": "523080bbf2be11354b94b851ac85d06e7e8a2c14",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 135.42,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,27 @@\n     private void findMatch()\n     {\n         final boolean foundMatch \u003d mMatcher.find();\n         if (!foundMatch) {\n             return;\n         }\n \n-        final int startLine \u003d (mCharacters.get(mMatcher.start()))[0].intValue();\n-        final int startColumn \u003d (mCharacters.get(mMatcher.start()))[1]\n-                .intValue();\n-        final int endLine \u003d (mCharacters.get(mMatcher.end() - 1))[0].intValue();\n-        final int endColumn \u003d (mCharacters.get(mMatcher.end() - 1))[1]\n-                .intValue();\n+        final LineColumn start \u003d mText.lineColumn(mMatcher.start());\n+        final LineColumn end \u003d mText.lineColumn(mMatcher.end());\n \n-\n-        if (!mOptions.getSuppressor().shouldSuppress(startLine, startColumn,\n-                endLine, endColumn))\n+        if (!mOptions.getSuppressor().shouldSuppress(start.getLine(),\n+                start.getColumn(), end.getLine(), end.getColumn()))\n         {\n             mCurrentMatches++;\n             if (mCurrentMatches \u003e mOptions.getMaximum()) {\n                 if (\"\".equals(mOptions.getMessage())) {\n-                    mOptions.getReporter().log(startLine, \"regexp.exceeded\",\n-                            mMatcher.pattern().toString());\n+                    mOptions.getReporter().log(start.getLine(),\n+                            \"regexp.exceeded\", mMatcher.pattern().toString());\n                 }\n                 else {\n                     mOptions.getReporter()\n-                            .log(startLine, mOptions.getMessage());\n+                            .log(start.getLine(), mOptions.getMessage());\n                 }\n             }\n         }\n         findMatch();\n     }\n\\ No newline at end of file\n"
    },
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4": {
      "type": "Yintroduced",
      "commitMessage": "snapshot of a work in progress\n",
      "commitDate": 1231644582000,
      "commitName": "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4",
      "commitAuthor": "Oliver Burn"
    }
  }
}