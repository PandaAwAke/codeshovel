{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AbstractTypeAwareCheck.java",
  "functionName": "processTypeParams",
  "functionId": "processTypeParams___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheck.java",
  "functionStartLine": 315,
  "functionEndLine": 341,
  "changeHistory": [
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f",
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
    "3b452a2e88d0cb670be19818dbd8166335d65884",
    "da6a8d083cb82a94707146de559911578f39affe",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "ff6c49e6a715d8372ac77a34aa77d9eaff6db154",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
    "08638b5f739d9929698860048c052da2d5f80209",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94"
  ],
  "changeHistoryShort": {
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f": "Yfilerename",
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2": "Ybodychange",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": "Ybodychange",
    "3b452a2e88d0cb670be19818dbd8166335d65884": "Ybodychange",
    "da6a8d083cb82a94707146de559911578f39affe": "Ybodychange",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "ff6c49e6a715d8372ac77a34aa77d9eaff6db154": "Ybodychange",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": "Ybodychange",
    "08638b5f739d9929698860048c052da2d5f80209": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94": "Yintroduced"
  },
  "changeHistoryDetails": {
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f": {
      "type": "Yfilerename",
      "commitMessage": "Issue #4676: move AbstractTypeAwareCheck and ClassResolver to javadoc\n",
      "commitDate": 1501987881000,
      "commitName": "16f91dda1a15e0e3c3d7142a159f17db72c06d0f",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501985382000,
      "commitNameOld": "6cdae0ff01b436cfe387d18b5e1206c6f078376b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2": {
      "type": "Ybodychange",
      "commitMessage": "Pull #4328: moved variables inside if blocks to reduce execution time",
      "commitDate": 1494119754000,
      "commitName": "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2",
      "commitAuthor": "rnveach",
      "commitDateOld": 1492827278000,
      "commitNameOld": "de50d3465849b83d25910590e1f5f39a25fe6e2c",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 14.96,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private void processTypeParams(DetailAST ast) {\n         final DetailAST params \u003d\n             ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n         final Map\u003cString, AbstractClassInfo\u003e paramsMap \u003d new HashMap\u003c\u003e();\n         typeParams.push(paramsMap);\n \n         if (params !\u003d null) {\n             for (DetailAST child \u003d params.getFirstChild();\n                  child !\u003d null;\n                  child \u003d child.getNextSibling()) {\n                 if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n-                    final String alias \u003d\n-                        child.findFirstToken(TokenTypes.IDENT).getText();\n                     final DetailAST bounds \u003d\n                         child.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                     if (bounds !\u003d null) {\n                         final FullIdent name \u003d\n                             FullIdent.createFullIdentBelow(bounds);\n                         final AbstractClassInfo classInfo \u003d\n                             createClassInfo(new Token(name), currentClassName);\n+                        final String alias \u003d\n+                                child.findFirstToken(TokenTypes.IDENT).getText();\n                         paramsMap.put(alias, classInfo);\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": 1474426326000,
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1473886714000,
      "commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 6.25,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private void processTypeParams(DetailAST ast) {\n         final DetailAST params \u003d\n             ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n-        final Map\u003cString, AbstractClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n+        final Map\u003cString, AbstractClassInfo\u003e paramsMap \u003d new HashMap\u003c\u003e();\n         typeParams.push(paramsMap);\n \n         if (params !\u003d null) {\n             for (DetailAST child \u003d params.getFirstChild();\n                  child !\u003d null;\n                  child \u003d child.getNextSibling()) {\n                 if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                     final String alias \u003d\n                         child.findFirstToken(TokenTypes.IDENT).getText();\n                     final DetailAST bounds \u003d\n                         child.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                     if (bounds !\u003d null) {\n                         final FullIdent name \u003d\n                             FullIdent.createFullIdentBelow(bounds);\n                         final AbstractClassInfo classInfo \u003d\n                             createClassInfo(new Token(name), currentClassName);\n                         paramsMap.put(alias, classInfo);\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": 1464356569000,
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1454680863000,
      "commitNameOld": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 111.99,
      "commitsBetweenForRepo": 276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,27 @@\n     private void processTypeParams(DetailAST ast) {\n         final DetailAST params \u003d\n             ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n         final Map\u003cString, AbstractClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n         typeParams.push(paramsMap);\n \n-        if (params \u003d\u003d null) {\n-            return;\n-        }\n-\n-        for (DetailAST child \u003d params.getFirstChild();\n-             child !\u003d null;\n-             child \u003d child.getNextSibling()) {\n-            if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n-                final String alias \u003d\n-                    child.findFirstToken(TokenTypes.IDENT).getText();\n-                final DetailAST bounds \u003d\n-                    child.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n-                if (bounds !\u003d null) {\n-                    final FullIdent name \u003d\n-                        FullIdent.createFullIdentBelow(bounds);\n-                    final AbstractClassInfo classInfo \u003d\n-                        createClassInfo(new Token(name), currentClassName);\n-                    paramsMap.put(alias, classInfo);\n+        if (params !\u003d null) {\n+            for (DetailAST child \u003d params.getFirstChild();\n+                 child !\u003d null;\n+                 child \u003d child.getNextSibling()) {\n+                if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n+                    final String alias \u003d\n+                        child.findFirstToken(TokenTypes.IDENT).getText();\n+                    final DetailAST bounds \u003d\n+                        child.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n+                    if (bounds !\u003d null) {\n+                        final FullIdent name \u003d\n+                            FullIdent.createFullIdentBelow(bounds);\n+                        final AbstractClassInfo classInfo \u003d\n+                            createClassInfo(new Token(name), currentClassName);\n+                        paramsMap.put(alias, classInfo);\n+                    }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": {
      "type": "Ybodychange",
      "commitMessage": "Issue #985: Fix PMD violations for ShortVariable rule\n",
      "commitDate": 1444178762000,
      "commitName": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1441051115000,
      "commitNameOld": "49a0ee81710e0c43ed06a01f1d64ac7f5598a934",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 36.2,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     private void processTypeParams(DetailAST ast) {\n         final DetailAST params \u003d\n             ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n         final Map\u003cString, AbstractClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n         typeParams.push(paramsMap);\n \n         if (params \u003d\u003d null) {\n             return;\n         }\n \n         for (DetailAST child \u003d params.getFirstChild();\n              child !\u003d null;\n              child \u003d child.getNextSibling()) {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                 final String alias \u003d\n                     child.findFirstToken(TokenTypes.IDENT).getText();\n                 final DetailAST bounds \u003d\n                     child.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n                     final FullIdent name \u003d\n                         FullIdent.createFullIdentBelow(bounds);\n-                    final AbstractClassInfo ci \u003d\n+                    final AbstractClassInfo classInfo \u003d\n                         createClassInfo(new Token(name), currentClassName);\n-                    paramsMap.put(alias, ci);\n+                    paramsMap.put(alias, classInfo);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3b452a2e88d0cb670be19818dbd8166335d65884": {
      "type": "Ybodychange",
      "commitMessage": "Inline calls to simple getters. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": 1440243167000,
      "commitName": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440159454000,
      "commitNameOld": "584f7ee1232be96284255540e7249023c327ca8f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.97,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     private void processTypeParams(DetailAST ast) {\n         final DetailAST params \u003d\n             ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n         final Map\u003cString, AbstractClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n         typeParams.push(paramsMap);\n \n         if (params \u003d\u003d null) {\n             return;\n         }\n \n         for (DetailAST child \u003d params.getFirstChild();\n              child !\u003d null;\n              child \u003d child.getNextSibling()) {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                 final String alias \u003d\n                     child.findFirstToken(TokenTypes.IDENT).getText();\n                 final DetailAST bounds \u003d\n                     child.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n                     final FullIdent name \u003d\n                         FullIdent.createFullIdentBelow(bounds);\n                     final AbstractClassInfo ci \u003d\n-                        createClassInfo(new Token(name), getCurrentClassName());\n+                        createClassInfo(new Token(name), currentClassName);\n                     paramsMap.put(alias, ci);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "da6a8d083cb82a94707146de559911578f39affe": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary local variables. #1555\n\nFixes `UnnecessaryLocalVariable` inspection violation.\n\nDescription:\n\u003eReports unnecessary local variables, which add nothing to the comprehensibility of a method. Variables caught include local variables which are immediately returned, local variables that are immediately assigned to another variable and then not used, and local variables which always have the same value as another local variable or parameter.\n",
      "commitDate": 1440042157000,
      "commitName": "da6a8d083cb82a94707146de559911578f39affe",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439927038000,
      "commitNameOld": "cf9cbc3dcab11f9b94ecb1daec37db236a24768d",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 1.33,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,29 @@\n     private void processTypeParams(DetailAST ast) {\n         final DetailAST params \u003d\n             ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n         final Map\u003cString, AbstractClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n         typeParams.push(paramsMap);\n \n         if (params \u003d\u003d null) {\n             return;\n         }\n \n         for (DetailAST child \u003d params.getFirstChild();\n              child !\u003d null;\n              child \u003d child.getNextSibling()) {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n-                final DetailAST param \u003d child;\n                 final String alias \u003d\n-                    param.findFirstToken(TokenTypes.IDENT).getText();\n+                    child.findFirstToken(TokenTypes.IDENT).getText();\n                 final DetailAST bounds \u003d\n-                    param.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n+                    child.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n                     final FullIdent name \u003d\n                         FullIdent.createFullIdentBelow(bounds);\n                     final AbstractClassInfo ci \u003d\n                         createClassInfo(new Token(name), getCurrentClassName());\n                     paramsMap.put(alias, ci);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": 1434649920000,
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 32.25,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     private void processTypeParams(DetailAST ast) {\n         final DetailAST params \u003d\n             ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n-        final Map\u003cString, ClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n+        final Map\u003cString, AbstractClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n         typeParams.push(paramsMap);\n \n         if (params \u003d\u003d null) {\n             return;\n         }\n \n         for (DetailAST child \u003d params.getFirstChild();\n              child !\u003d null;\n              child \u003d child.getNextSibling()) {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                 final DetailAST param \u003d child;\n                 final String alias \u003d\n                     param.findFirstToken(TokenTypes.IDENT).getText();\n                 final DetailAST bounds \u003d\n                     param.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n                     final FullIdent name \u003d\n                         FullIdent.createFullIdentBelow(bounds);\n-                    final ClassInfo ci \u003d\n+                    final AbstractClassInfo ci \u003d\n                         createClassInfo(new Token(name), getCurrentClassName());\n                     paramsMap.put(alias, ci);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": 1421678220000,
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1216160862000,
      "commitNameOld": "17754d363645285e49bf4323a1af5762af47a8ea",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 64.55,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     private void processTypeParams(DetailAST aAST)\n     {\n         final DetailAST typeParams \u003d\n             aAST.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n         final Map\u003cString, ClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n         mTypeParams.push(paramsMap);\n \n         if (typeParams \u003d\u003d null) {\n             return;\n         }\n \n-        for (DetailAST child \u003d (DetailAST) typeParams.getFirstChild();\n+        for (DetailAST child \u003d typeParams.getFirstChild();\n              child !\u003d null;\n-             child \u003d (DetailAST) child.getNextSibling())\n+             child \u003d child.getNextSibling())\n         {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                 final DetailAST param \u003d child;\n                 final String alias \u003d\n                     param.findFirstToken(TokenTypes.IDENT).getText();\n                 final DetailAST bounds \u003d\n                     param.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n                     final FullIdent name \u003d\n                         FullIdent.createFullIdentBelow(bounds);\n                     final ClassInfo ci \u003d\n                         createClassInfo(new Token(name), getCurrentClassName());\n                     paramsMap.put(alias, ci);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ff6c49e6a715d8372ac77a34aa77d9eaff6db154": {
      "type": "Ybodychange",
      "commitMessage": "This change makes a lot of sense.\n",
      "commitDate": 1209048548000,
      "commitName": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1208867287000,
      "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.1,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     private void processTypeParams(DetailAST aAST)\n     {\n         final DetailAST typeParams \u003d\n             aAST.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n         final Map\u003cString, ClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n-        mTypeParams.add(paramsMap);\n+        mTypeParams.push(paramsMap);\n \n         if (typeParams \u003d\u003d null) {\n             return;\n         }\n \n         for (DetailAST child \u003d (DetailAST) typeParams.getFirstChild();\n              child !\u003d null;\n              child \u003d (DetailAST) child.getNextSibling())\n         {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                 final DetailAST param \u003d child;\n                 final String alias \u003d\n                     param.findFirstToken(TokenTypes.IDENT).getText();\n                 final DetailAST bounds \u003d\n                     param.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n                     final FullIdent name \u003d\n                         FullIdent.createFullIdentBelow(bounds);\n                     final ClassInfo ci \u003d\n                         createClassInfo(new Token(name), getCurrentClassName());\n                     paramsMap.put(alias, ci);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": {
      "type": "Ybodychange",
      "commitMessage": "Drinking the \"Google Collections\" Kool-Aid.\n\nI like the reduced duplication.\n",
      "commitDate": 1208867287000,
      "commitName": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200352313000,
      "commitNameOld": "315033ff5647ef9896130573d9212fee6fe141db",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 98.55,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,32 @@\n     private void processTypeParams(DetailAST aAST)\n     {\n         final DetailAST typeParams \u003d\n             aAST.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n-        final Map\u003cString, ClassInfo\u003e paramsMap \u003d\n-            new HashMap\u003cString, ClassInfo\u003e();\n+        final Map\u003cString, ClassInfo\u003e paramsMap \u003d Maps.newHashMap();\n         mTypeParams.add(paramsMap);\n \n         if (typeParams \u003d\u003d null) {\n             return;\n         }\n \n         for (DetailAST child \u003d (DetailAST) typeParams.getFirstChild();\n              child !\u003d null;\n              child \u003d (DetailAST) child.getNextSibling())\n         {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                 final DetailAST param \u003d child;\n                 final String alias \u003d\n                     param.findFirstToken(TokenTypes.IDENT).getText();\n                 final DetailAST bounds \u003d\n                     param.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n                     final FullIdent name \u003d\n                         FullIdent.createFullIdentBelow(bounds);\n                     final ClassInfo ci \u003d\n                         createClassInfo(new Token(name), getCurrentClassName());\n                     paramsMap.put(alias, ci);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "08638b5f739d9929698860048c052da2d5f80209": {
      "type": "Ybodychange",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": 1197700618000,
      "commitName": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n     private void processTypeParams(DetailAST aAST)\n     {\n         final DetailAST typeParams \u003d\n             aAST.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n-        final Map paramsMap \u003d new HashMap();\n+        final Map\u003cString, ClassInfo\u003e paramsMap \u003d\n+            new HashMap\u003cString, ClassInfo\u003e();\n         mTypeParams.add(paramsMap);\n \n         if (typeParams \u003d\u003d null) {\n             return;\n         }\n \n         for (DetailAST child \u003d (DetailAST) typeParams.getFirstChild();\n              child !\u003d null;\n              child \u003d (DetailAST) child.getNextSibling())\n         {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                 final DetailAST param \u003d child;\n                 final String alias \u003d\n                     param.findFirstToken(TokenTypes.IDENT).getText();\n                 final DetailAST bounds \u003d\n                     param.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n                     final FullIdent name \u003d\n                         FullIdent.createFullIdentBelow(bounds);\n                     final ClassInfo ci \u003d\n                         createClassInfo(new Token(name), getCurrentClassName());\n                     paramsMap.put(alias, ci);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152243235000,
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n     private void processTypeParams(DetailAST aAST)\n     {\n         final DetailAST typeParams \u003d\n             aAST.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n \n-        Map paramsMap \u003d new HashMap();\n+        final Map paramsMap \u003d new HashMap();\n         mTypeParams.add(paramsMap);\n \n         if (typeParams \u003d\u003d null) {\n             return;\n         }\n \n         for (DetailAST child \u003d (DetailAST) typeParams.getFirstChild();\n              child !\u003d null;\n              child \u003d (DetailAST) child.getNextSibling())\n         {\n             if (child.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n-                DetailAST param \u003d child;\n-                String alias \u003d param.findFirstToken(TokenTypes.IDENT).getText();\n-                DetailAST bounds \u003d\n+                final DetailAST param \u003d child;\n+                final String alias \u003d\n+                    param.findFirstToken(TokenTypes.IDENT).getText();\n+                final DetailAST bounds \u003d\n                     param.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n                 if (bounds !\u003d null) {\n-                    FullIdent name \u003d FullIdent.createFullIdentBelow(bounds);\n-                    ClassInfo ci \u003d\n+                    final FullIdent name \u003d\n+                        FullIdent.createFullIdentBelow(bounds);\n+                    final ClassInfo ci \u003d\n                         createClassInfo(new Token(name), getCurrentClassName());\n                     paramsMap.put(alias, ci);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94": {
      "type": "Yintroduced",
      "commitMessage": "Fixed 1249707: AbstractTypeAwareCheck doesn\u0027t work with types from typeparm\n\nSome pretty big refactoring for typeaware checks performed.\nAlso added handling for type params.  Current handling algorithm\nhas some preconditions and restriction, but it works for most cases\n(not sure I\u0027ve covered all situation when type param will have name\nof real exception, but I do not think it is critical for now :)\n\nAlso, I\u0027ve added column number for JavadocTag (mainly to be able use\nClassInfo for it).  So, JavadocTypeCheck also affected.\n\nAnd I\u0027ve added new logger for TreeWalker (if we have loggers we should\nuse them :)\n",
      "commitDate": 1123248811000,
      "commitName": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}