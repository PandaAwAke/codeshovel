{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AbstractExpressionHandler.java",
  "functionName": "findSubtreeLines",
  "functionId": "findSubtreeLines___lines-LineSet__tree-DetailAST__allowNesting-boolean",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
  "functionStartLine": 464,
  "functionEndLine": 482,
  "changeHistory": [
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "3b452a2e88d0cb670be19818dbd8166335d65884",
    "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a",
    "9988d4d007b7d7b1417efc1e06de9309cb7c3e54",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "e3a48d1527341456a798c3f0c1986de6898a8c60",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "7f7db38a097a95c264307123924779380fb40077",
    "661a9b0ddb10922458082573d79e0791ba6f38c2",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955"
  ],
  "changeHistoryShort": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "3b452a2e88d0cb670be19818dbd8166335d65884": "Ybodychange",
    "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a": "Ybodychange",
    "9988d4d007b7d7b1417efc1e06de9309cb7c3e54": "Ybodychange",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Yfilerename",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ymultichange(Yparameterchange,Ybodychange)",
    "e3a48d1527341456a798c3f0c1986de6898a8c60": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "7f7db38a097a95c264307123924779380fb40077": "Ybodychange",
    "661a9b0ddb10922458082573d79e0791ba6f38c2": "Ymodifierchange",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": "Ymultichange(Ymovefromfile,Ybodychange)",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": 1464356569000,
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1462628234000,
      "commitNameOld": "9e9a0b424551418e80c5a7e7badadfe80958ec82",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 20.0,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n     protected final void findSubtreeLines(LineSet lines, DetailAST tree,\n         boolean allowNesting) {\n-        if (indentCheck.getHandlerFactory().isHandledType(tree.getType())) {\n-            return;\n-        }\n+        if (!indentCheck.getHandlerFactory().isHandledType(tree.getType())) {\n+            final int lineNum \u003d tree.getLineNo();\n+            final Integer colNum \u003d lines.getStartColumn(lineNum);\n \n-        final int lineNum \u003d tree.getLineNo();\n-        final Integer colNum \u003d lines.getStartColumn(lineNum);\n+            final int thisLineColumn \u003d expandedTabsColumnNo(tree);\n+            if (colNum \u003d\u003d null || thisLineColumn \u003c colNum) {\n+                lines.addLineAndCol(lineNum, thisLineColumn);\n+            }\n \n-        final int thisLineColumn \u003d expandedTabsColumnNo(tree);\n-        if (colNum \u003d\u003d null || thisLineColumn \u003c colNum) {\n-            lines.addLineAndCol(lineNum, thisLineColumn);\n-        }\n-\n-        // check children\n-        for (DetailAST node \u003d tree.getFirstChild();\n-            node !\u003d null;\n-            node \u003d node.getNextSibling()) {\n-            findSubtreeLines(lines, node, allowNesting);\n+            // check children\n+            for (DetailAST node \u003d tree.getFirstChild();\n+                node !\u003d null;\n+                node \u003d node.getNextSibling()) {\n+                findSubtreeLines(lines, node, allowNesting);\n+            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3b452a2e88d0cb670be19818dbd8166335d65884": {
      "type": "Ybodychange",
      "commitMessage": "Inline calls to simple getters. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": 1440243167000,
      "commitName": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439886329000,
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 4.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     protected final void findSubtreeLines(LineSet lines, DetailAST tree,\n         boolean allowNesting) {\n-        if (getIndentCheck().getHandlerFactory().isHandledType(tree.getType())) {\n+        if (indentCheck.getHandlerFactory().isHandledType(tree.getType())) {\n             return;\n         }\n \n         final int lineNum \u003d tree.getLineNo();\n         final Integer colNum \u003d lines.getStartColumn(lineNum);\n \n         final int thisLineColumn \u003d expandedTabsColumnNo(tree);\n         if (colNum \u003d\u003d null || thisLineColumn \u003c colNum) {\n             lines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n         for (DetailAST node \u003d tree.getFirstChild();\n             node !\u003d null;\n             node \u003d node.getNextSibling()) {\n             findSubtreeLines(lines, node, allowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary unboxing. #1538\n",
      "commitDate": 1438566538000,
      "commitName": "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 10.83,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     protected final void findSubtreeLines(LineSet lines, DetailAST tree,\n         boolean allowNesting) {\n         if (getIndentCheck().getHandlerFactory().isHandledType(tree.getType())) {\n             return;\n         }\n \n         final int lineNum \u003d tree.getLineNo();\n         final Integer colNum \u003d lines.getStartColumn(lineNum);\n \n         final int thisLineColumn \u003d expandedTabsColumnNo(tree);\n-        if (colNum \u003d\u003d null || thisLineColumn \u003c colNum.intValue()) {\n+        if (colNum \u003d\u003d null || thisLineColumn \u003c colNum) {\n             lines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n         for (DetailAST node \u003d tree.getFirstChild();\n             node !\u003d null;\n             node \u003d node.getNextSibling()) {\n             findSubtreeLines(lines, node, allowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "9988d4d007b7d7b1417efc1e06de9309cb7c3e54": {
      "type": "Ybodychange",
      "commitMessage": "Remove dead code from AbstractExpressionHandler. #1270\n",
      "commitDate": 1437525930000,
      "commitName": "9988d4d007b7d7b1417efc1e06de9309cb7c3e54",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1434649920000,
      "commitNameOld": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 33.29,
      "commitsBetweenForRepo": 252,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     protected final void findSubtreeLines(LineSet lines, DetailAST tree,\n         boolean allowNesting) {\n-        if (getIndentCheck().getHandlerFactory().isHandledType(tree.getType())\n-            || tree.getLineNo() \u003c 0) {\n+        if (getIndentCheck().getHandlerFactory().isHandledType(tree.getType())) {\n             return;\n         }\n \n         final int lineNum \u003d tree.getLineNo();\n         final Integer colNum \u003d lines.getStartColumn(lineNum);\n \n         final int thisLineColumn \u003d expandedTabsColumnNo(tree);\n         if (colNum \u003d\u003d null || thisLineColumn \u003c colNum.intValue()) {\n             lines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n         for (DetailAST node \u003d tree.getFirstChild();\n             node !\u003d null;\n             node \u003d node.getNextSibling()) {\n             findSubtreeLines(lines, node, allowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Yfilerename",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": 1434649920000,
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": 1434608420000,
      "commitNameOld": "0382b7907b54e95408344863915a847dabc37f12",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.48,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "a15fcb34fb0670b0603216dfca3c3c9e12d09727",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     protected final void findSubtreeLines(LineSet lines, DetailAST tree,\n         boolean allowNesting)\n     {\n         if (getIndentCheck().getHandlerFactory().isHandledType(tree.getType())\n-            || (tree.getLineNo() \u003c 0))\n+            || tree.getLineNo() \u003c 0)\n         {\n             return;\n         }\n \n         final int lineNum \u003d tree.getLineNo();\n         final Integer colNum \u003d lines.getStartColumn(lineNum);\n \n         final int thisLineColumn \u003d expandedTabsColumnNo(tree);\n-        if ((colNum \u003d\u003d null) || (thisLineColumn \u003c colNum.intValue())) {\n+        if (colNum \u003d\u003d null || thisLineColumn \u003c colNum.intValue()) {\n             lines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n         for (DetailAST node \u003d tree.getFirstChild();\n             node !\u003d null;\n             node \u003d node.getNextSibling())\n         {\n             findSubtreeLines(lines, node, allowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": 1421678099000,
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "e3a48d1527341456a798c3f0c1986de6898a8c60": {
      "type": "Ybodychange",
      "commitMessage": "Update for IndentationCheck. #294\n",
      "commitDate": 1413242511000,
      "commitName": "e3a48d1527341456a798c3f0c1986de6898a8c60",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 223.25,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,25 @@\n     protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,\n         boolean aAllowNesting)\n     {\n-        // find line for this node\n-        // TODO: getLineNo should probably not return \u003c 0, but it is for\n-        // the interface methods... I should ask about this\n-\n         if (getIndentCheck().getHandlerFactory().isHandledType(aTree.getType())\n             || (aTree.getLineNo() \u003c 0))\n         {\n             return;\n         }\n \n-        // TODO: the problem with this is that not all tree tokens actually\n-        // have the right column number -- I should get a list of these\n-        // and verify that checking nesting this way won\u0027t cause problems\n-//          if (aAllowNesting \u0026\u0026 aTree.getColumnNo() !\u003d getLineStart(aTree)) {\n-//              return;\n-//          }\n-\n         final int lineNum \u003d aTree.getLineNo();\n         final Integer colNum \u003d aLines.getStartColumn(lineNum);\n \n         final int thisLineColumn \u003d expandedTabsColumnNo(aTree);\n         if ((colNum \u003d\u003d null) || (thisLineColumn \u003c colNum.intValue())) {\n             aLines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n         for (DetailAST node \u003d aTree.getFirstChild();\n             node !\u003d null;\n             node \u003d node.getNextSibling())\n         {\n             findSubtreeLines(aLines, node, aAllowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200192438000,
      "commitNameOld": "5a7e221b757e91d49be1aea105eb4b839e653fbd",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 249.37,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,\n         boolean aAllowNesting)\n     {\n         // find line for this node\n         // TODO: getLineNo should probably not return \u003c 0, but it is for\n         // the interface methods... I should ask about this\n \n         if (getIndentCheck().getHandlerFactory().isHandledType(aTree.getType())\n             || (aTree.getLineNo() \u003c 0))\n         {\n             return;\n         }\n \n         // TODO: the problem with this is that not all tree tokens actually\n         // have the right column number -- I should get a list of these\n         // and verify that checking nesting this way won\u0027t cause problems\n //          if (aAllowNesting \u0026\u0026 aTree.getColumnNo() !\u003d getLineStart(aTree)) {\n //              return;\n //          }\n \n         final int lineNum \u003d aTree.getLineNo();\n         final Integer colNum \u003d aLines.getStartColumn(lineNum);\n \n         final int thisLineColumn \u003d expandedTabsColumnNo(aTree);\n         if ((colNum \u003d\u003d null) || (thisLineColumn \u003c colNum.intValue())) {\n             aLines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n-        for (DetailAST node \u003d (DetailAST) aTree.getFirstChild();\n+        for (DetailAST node \u003d aTree.getFirstChild();\n             node !\u003d null;\n-            node \u003d (DetailAST) node.getNextSibling())\n+            node \u003d node.getNextSibling())\n         {\n             findSubtreeLines(aLines, node, aAllowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": {
      "type": "Ybodychange",
      "commitMessage": "Removal of explicit boxing.\n",
      "commitDate": 1198150614000,
      "commitName": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1198148921000,
      "commitNameOld": "ef58eba6d1b95443ff240ed05634c7e373b3445a",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,\n         boolean aAllowNesting)\n     {\n         // find line for this node\n         // TODO: getLineNo should probably not return \u003c 0, but it is for\n         // the interface methods... I should ask about this\n \n         if (getIndentCheck().getHandlerFactory().isHandledType(aTree.getType())\n             || (aTree.getLineNo() \u003c 0))\n         {\n             return;\n         }\n \n         // TODO: the problem with this is that not all tree tokens actually\n         // have the right column number -- I should get a list of these\n         // and verify that checking nesting this way won\u0027t cause problems\n //          if (aAllowNesting \u0026\u0026 aTree.getColumnNo() !\u003d getLineStart(aTree)) {\n //              return;\n //          }\n \n-        final Integer lineNum \u003d new Integer(aTree.getLineNo());\n+        final int lineNum \u003d aTree.getLineNo();\n         final Integer colNum \u003d aLines.getStartColumn(lineNum);\n \n         final int thisLineColumn \u003d expandedTabsColumnNo(aTree);\n         if ((colNum \u003d\u003d null) || (thisLineColumn \u003c colNum.intValue())) {\n             aLines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n         for (DetailAST node \u003d (DetailAST) aTree.getFirstChild();\n             node !\u003d null;\n             node \u003d (DetailAST) node.getNextSibling())\n         {\n             findSubtreeLines(aLines, node, aAllowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152242806000,
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,\n         boolean aAllowNesting)\n     {\n         // find line for this node\n         // TODO: getLineNo should probably not return \u003c 0, but it is for\n         // the interface methods... I should ask about this\n \n         if (getIndentCheck().getHandlerFactory().isHandledType(aTree.getType())\n             || (aTree.getLineNo() \u003c 0))\n         {\n             return;\n         }\n \n         // TODO: the problem with this is that not all tree tokens actually\n         // have the right column number -- I should get a list of these\n         // and verify that checking nesting this way won\u0027t cause problems\n //          if (aAllowNesting \u0026\u0026 aTree.getColumnNo() !\u003d getLineStart(aTree)) {\n //              return;\n //          }\n \n-        Integer lineNum \u003d new Integer(aTree.getLineNo());\n-        Integer colNum \u003d aLines.getStartColumn(lineNum);\n+        final Integer lineNum \u003d new Integer(aTree.getLineNo());\n+        final Integer colNum \u003d aLines.getStartColumn(lineNum);\n \n-        int thisLineColumn \u003d expandedTabsColumnNo(aTree);\n+        final int thisLineColumn \u003d expandedTabsColumnNo(aTree);\n         if ((colNum \u003d\u003d null) || (thisLineColumn \u003c colNum.intValue())) {\n             aLines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n         for (DetailAST node \u003d (DetailAST) aTree.getFirstChild();\n             node !\u003d null;\n             node \u003d (DetailAST) node.getNextSibling())\n         {\n             findSubtreeLines(aLines, node, aAllowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1122110316000,
      "commitNameOld": "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 348.76,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,\n         boolean aAllowNesting)\n     {\n         // find line for this node\n         // TODO: getLineNo should probably not return \u003c 0, but it is for\n         // the interface methods... I should ask about this\n \n         if (getIndentCheck().getHandlerFactory().isHandledType(aTree.getType())\n-            || aTree.getLineNo() \u003c 0)\n+            || (aTree.getLineNo() \u003c 0))\n         {\n             return;\n         }\n \n         // TODO: the problem with this is that not all tree tokens actually\n         // have the right column number -- I should get a list of these\n         // and verify that checking nesting this way won\u0027t cause problems\n //          if (aAllowNesting \u0026\u0026 aTree.getColumnNo() !\u003d getLineStart(aTree)) {\n //              return;\n //          }\n \n         Integer lineNum \u003d new Integer(aTree.getLineNo());\n         Integer colNum \u003d aLines.getStartColumn(lineNum);\n \n         int thisLineColumn \u003d expandedTabsColumnNo(aTree);\n-        if (colNum \u003d\u003d null || (thisLineColumn \u003c colNum.intValue())) {\n+        if ((colNum \u003d\u003d null) || (thisLineColumn \u003c colNum.intValue())) {\n             aLines.addLineAndCol(lineNum, thisLineColumn);\n         }\n \n         // check children\n         for (DetailAST node \u003d (DetailAST) aTree.getFirstChild();\n             node !\u003d null;\n             node \u003d (DetailAST) node.getNextSibling())\n         {\n             findSubtreeLines(aLines, node, aAllowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "7f7db38a097a95c264307123924779380fb40077": {
      "type": "Ybodychange",
      "commitMessage": "IndentationCheck: Some refactoring and fixes for some TODOs and bugs.\n",
      "commitDate": 1060715940000,
      "commitName": "7f7db38a097a95c264307123924779380fb40077",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1055612861000,
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 59.06,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,36 @@\n     protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,\n         boolean aAllowNesting)\n     {\n         // find line for this node\n         // TODO: getLineNo should probably not return \u003c 0, but it is for\n         // the interface methods... I should ask about this\n \n         if (getIndentCheck().getHandlerFactory().isHandledType(aTree.getType())\n             || aTree.getLineNo() \u003c 0)\n         {\n             return;\n         }\n \n         // TODO: the problem with this is that not all tree tokens actually\n         // have the right column number -- I should get a list of these\n         // and verify that checking nesting this way won\u0027t cause problems\n-//        if (allowNesting \u0026\u0026 tree.getColumnNo() !\u003d getLineStart(tree)) {\n-//            return;\n-//        }\n+//          if (aAllowNesting \u0026\u0026 aTree.getColumnNo() !\u003d getLineStart(aTree)) {\n+//              return;\n+//          }\n \n         Integer lineNum \u003d new Integer(aTree.getLineNo());\n         Integer colNum \u003d aLines.getStartColumn(lineNum);\n \n         int thisLineColumn \u003d expandedTabsColumnNo(aTree);\n-        if (colNum \u003d\u003d null) {\n+        if (colNum \u003d\u003d null || (thisLineColumn \u003c colNum.intValue())) {\n             aLines.addLineAndCol(lineNum, thisLineColumn);\n         }\n-        else {\n-            if (expandedTabsColumnNo(aTree) \u003c colNum.intValue()) {\n-                aLines.addLineAndCol(lineNum, thisLineColumn);\n-            }\n-        }\n \n         // check children\n         for (DetailAST node \u003d (DetailAST) aTree.getFirstChild();\n             node !\u003d null;\n             node \u003d (DetailAST) node.getNextSibling())\n         {\n             findSubtreeLines(aLines, node, aAllowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "661a9b0ddb10922458082573d79e0791ba6f38c2": {
      "type": "Ymodifierchange",
      "commitMessage": "Cosmetic changes in ExpressionHandle and LineSet.\nFixed bug with:\nif (foo()\n    || con1\n    || con3)\n{\n}\n\nInput for unit-test modified.\n",
      "commitDate": 1053283707000,
      "commitName": "661a9b0ddb10922458082573d79e0791ba6f38c2",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1053053682000,
      "commitNameOld": "8d9d5e58ac50133f15ad8807bea302ab16aa5071",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n-    protected void findSubtreeLines(LineSet aLines, DetailAST aTree,\n+    protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,\n         boolean aAllowNesting)\n     {\n         // find line for this node\n         // TODO: getLineNo should probably not return \u003c 0, but it is for\n         // the interface methods... I should ask about this\n \n         if (getIndentCheck().getHandlerFactory().isHandledType(aTree.getType())\n             || aTree.getLineNo() \u003c 0)\n         {\n             return;\n         }\n \n         // TODO: the problem with this is that not all tree tokens actually\n         // have the right column number -- I should get a list of these\n         // and verify that checking nesting this way won\u0027t cause problems\n //        if (allowNesting \u0026\u0026 tree.getColumnNo() !\u003d getLineStart(tree)) {\n //            return;\n //        }\n \n         Integer lineNum \u003d new Integer(aTree.getLineNo());\n         Integer colNum \u003d aLines.getStartColumn(lineNum);\n \n         int thisLineColumn \u003d expandedTabsColumnNo(aTree);\n         if (colNum \u003d\u003d null) {\n             aLines.addLineAndCol(lineNum, thisLineColumn);\n         }\n         else {\n             if (expandedTabsColumnNo(aTree) \u003c colNum.intValue()) {\n                 aLines.addLineAndCol(lineNum, thisLineColumn);\n             }\n         }\n \n         // check children\n         for (DetailAST node \u003d (DetailAST) aTree.getFirstChild();\n             node !\u003d null;\n             node \u003d (DetailAST) node.getNextSibling())\n         {\n             findSubtreeLines(aLines, node, aAllowNesting);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
      "commitDate": 1052639583000,
      "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        "Ymovefromfile",
        "Ybodychange"
      ]
    },
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": {
      "type": "Yintroduced",
      "commitMessage": "added IndentationCheck, contributed by John Richardson\nThis check currently fails to pass checkstyle.checkstyle\nbecause most methods are missing javadoc, I hope somebody\ncan help me adding it\n",
      "commitDate": 1051248087000,
      "commitName": "9aab61241e7970ccfb4a9ee66c8eb7f062d31955",
      "commitAuthor": "Lars Kühne"
    }
  }
}