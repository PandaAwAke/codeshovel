{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavaNCSSCheck.java",
  "functionName": "isExpressionCountable",
  "functionId": "isExpressionCountable___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
  "functionStartLine": 285,
  "functionEndLine": 310,
  "changeHistory": [
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "36c152edea29cb79e3130742098434a415e6eee4"
  ],
  "changeHistoryShort": {
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "36c152edea29cb79e3130742098434a415e6eee4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: enforce FinalLocalVariableCheck on checkstyle code\n",
      "commitDate": 1453646135000,
      "commitName": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.59,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private static boolean isExpressionCountable(DetailAST ast) {\n-        boolean countable;\n+        final boolean countable;\n \n         //count expressions only if they are direct child to a slist (method\n         // body, for loop...)\n         //or direct child of label,if,else,do,while,for\n         final int parentType \u003d ast.getParent().getType();\n         switch (parentType) {\n             case TokenTypes.SLIST :\n             case TokenTypes.LABELED_STAT :\n             case TokenTypes.LITERAL_FOR :\n             case TokenTypes.LITERAL_DO :\n             case TokenTypes.LITERAL_WHILE :\n             case TokenTypes.LITERAL_IF :\n             case TokenTypes.LITERAL_ELSE :\n                 //don\u0027t count if or loop conditions\n                 final DetailAST prevSibling \u003d ast.getPreviousSibling();\n                 countable \u003d prevSibling \u003d\u003d null\n                     || prevSibling.getType() !\u003d TokenTypes.LPAREN;\n                 break;\n             default :\n                 countable \u003d false;\n                 break;\n         }\n         return countable;\n     }\n\\ No newline at end of file\n"
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439008721000,
      "commitNameOld": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private static boolean isExpressionCountable(DetailAST ast) {\n         boolean countable;\n \n         //count expressions only if they are direct child to a slist (method\n         // body, for loop...)\n         //or direct child of label,if,else,do,while,for\n         final int parentType \u003d ast.getParent().getType();\n         switch (parentType) {\n             case TokenTypes.SLIST :\n             case TokenTypes.LABELED_STAT :\n             case TokenTypes.LITERAL_FOR :\n             case TokenTypes.LITERAL_DO :\n             case TokenTypes.LITERAL_WHILE :\n             case TokenTypes.LITERAL_IF :\n             case TokenTypes.LITERAL_ELSE :\n                 //don\u0027t count if or loop conditions\n                 final DetailAST prevSibling \u003d ast.getPreviousSibling();\n                 countable \u003d prevSibling \u003d\u003d null\n-                    || TokenTypes.LPAREN !\u003d prevSibling.getType();\n+                    || prevSibling.getType() !\u003d TokenTypes.LPAREN;\n                 break;\n             default :\n                 countable \u003d false;\n                 break;\n         }\n         return countable;\n     }\n\\ No newline at end of file\n"
    },
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": {
      "type": "Ybodychange",
      "commitMessage": "Remove unused assignments. #1555\n\nFixes UnusedAssignment inspection violations.\n\nDescription:\n\u003eThis inspection points out the cases where a variable value is never used after its assignment, i.e.:\n- the variable never gets read after assignment OR\n- the value is always overwritten with another assignment before the next variable read OR\n - the variable initializer is redundant (for one of the above two reasons) OR\n - the variable is never used.\n",
      "commitDate": 1439007161000,
      "commitName": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 15.93,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private static boolean isExpressionCountable(DetailAST ast) {\n-        boolean countable \u003d true;\n+        boolean countable;\n \n         //count expressions only if they are direct child to a slist (method\n         // body, for loop...)\n         //or direct child of label,if,else,do,while,for\n         final int parentType \u003d ast.getParent().getType();\n         switch (parentType) {\n             case TokenTypes.SLIST :\n             case TokenTypes.LABELED_STAT :\n             case TokenTypes.LITERAL_FOR :\n             case TokenTypes.LITERAL_DO :\n             case TokenTypes.LITERAL_WHILE :\n             case TokenTypes.LITERAL_IF :\n             case TokenTypes.LITERAL_ELSE :\n                 //don\u0027t count if or loop conditions\n                 final DetailAST prevSibling \u003d ast.getPreviousSibling();\n                 countable \u003d prevSibling \u003d\u003d null\n                     || TokenTypes.LPAREN !\u003d prevSibling.getType();\n                 break;\n             default :\n                 countable \u003d false;\n                 break;\n         }\n         return countable;\n     }\n\\ No newline at end of file\n"
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n-    private boolean isExpressionCountable(DetailAST ast) {\n+    private static boolean isExpressionCountable(DetailAST ast) {\n         boolean countable \u003d true;\n \n         //count expressions only if they are direct child to a slist (method\n         // body, for loop...)\n         //or direct child of label,if,else,do,while,for\n         final int parentType \u003d ast.getParent().getType();\n         switch (parentType) {\n             case TokenTypes.SLIST :\n             case TokenTypes.LABELED_STAT :\n             case TokenTypes.LITERAL_FOR :\n             case TokenTypes.LITERAL_DO :\n             case TokenTypes.LITERAL_WHILE :\n             case TokenTypes.LITERAL_IF :\n             case TokenTypes.LITERAL_ELSE :\n                 //don\u0027t count if or loop conditions\n                 final DetailAST prevSibling \u003d ast.getPreviousSibling();\n                 countable \u003d prevSibling \u003d\u003d null\n                     || TokenTypes.LPAREN !\u003d prevSibling.getType();\n                 break;\n             default :\n                 countable \u003d false;\n                 break;\n         }\n         return countable;\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private boolean isExpressionCountable(DetailAST ast)\n     {\n         boolean countable \u003d true;\n \n         //count expressions only if they are direct child to a slist (method\n         // body, for loop...)\n         //or direct child of label,if,else,do,while,for\n         final int parentType \u003d ast.getParent().getType();\n         switch (parentType) {\n             case TokenTypes.SLIST :\n             case TokenTypes.LABELED_STAT :\n             case TokenTypes.LITERAL_FOR :\n             case TokenTypes.LITERAL_DO :\n             case TokenTypes.LITERAL_WHILE :\n             case TokenTypes.LITERAL_IF :\n             case TokenTypes.LITERAL_ELSE :\n                 //don\u0027t count if or loop conditions\n                 final DetailAST prevSibling \u003d ast.getPreviousSibling();\n-                countable \u003d (prevSibling \u003d\u003d null)\n-                    || (TokenTypes.LPAREN !\u003d prevSibling.getType());\n+                countable \u003d prevSibling \u003d\u003d null\n+                    || TokenTypes.LPAREN !\u003d prevSibling.getType();\n                 break;\n             default :\n                 countable \u003d false;\n                 break;\n         }\n         return countable;\n     }\n\\ No newline at end of file\n"
    },
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, metrics, #512\n",
      "commitDate": 1421677646000,
      "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152242806000,
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private boolean isExpressionCountable(DetailAST aAST)\n     {\n         boolean countable \u003d true;\n \n         //count expressions only if they are direct child to a slist (method\n         // body, for loop...)\n         //or direct child of label,if,else,do,while,for\n-        int parentType \u003d aAST.getParent().getType();\n+        final int parentType \u003d aAST.getParent().getType();\n         switch (parentType) {\n         case TokenTypes.SLIST :\n         case TokenTypes.LABELED_STAT :\n         case TokenTypes.LITERAL_FOR :\n         case TokenTypes.LITERAL_DO :\n         case TokenTypes.LITERAL_WHILE :\n         case TokenTypes.LITERAL_IF :\n         case TokenTypes.LITERAL_ELSE :\n             //don\u0027t count if or loop conditions\n-            DetailAST prevSibling \u003d aAST.getPreviousSibling();\n+            final DetailAST prevSibling \u003d aAST.getPreviousSibling();\n             countable \u003d (prevSibling \u003d\u003d null)\n                 || (TokenTypes.LPAREN !\u003d prevSibling.getType());\n             break;\n         default :\n             countable \u003d false;\n             break;\n         }\n         return countable;\n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1137847382000,
      "commitNameOld": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 166.61,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private boolean isExpressionCountable(DetailAST aAST)\n     {\n         boolean countable \u003d true;\n \n         //count expressions only if they are direct child to a slist (method\n         // body, for loop...)\n         //or direct child of label,if,else,do,while,for\n         int parentType \u003d aAST.getParent().getType();\n         switch (parentType) {\n         case TokenTypes.SLIST :\n         case TokenTypes.LABELED_STAT :\n         case TokenTypes.LITERAL_FOR :\n         case TokenTypes.LITERAL_DO :\n         case TokenTypes.LITERAL_WHILE :\n         case TokenTypes.LITERAL_IF :\n         case TokenTypes.LITERAL_ELSE :\n             //don\u0027t count if or loop conditions\n             DetailAST prevSibling \u003d aAST.getPreviousSibling();\n-            countable \u003d prevSibling \u003d\u003d null\n-                || TokenTypes.LPAREN !\u003d prevSibling.getType();\n+            countable \u003d (prevSibling \u003d\u003d null)\n+                || (TokenTypes.LPAREN !\u003d prevSibling.getType());\n             break;\n         default :\n             countable \u003d false;\n             break;\n         }\n         return countable;\n     }\n\\ No newline at end of file\n"
    },
    "36c152edea29cb79e3130742098434a415e6eee4": {
      "type": "Yintroduced",
      "commitMessage": "Added check for the ncss metric.\n",
      "commitDate": 1082881159000,
      "commitName": "36c152edea29cb79e3130742098434a415e6eee4",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}