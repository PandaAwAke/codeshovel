{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "CheckUtils.java",
  "functionName": "isGetterMethod",
  "functionId": "isGetterMethod___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtils.java",
  "functionStartLine": 359,
  "functionEndLine": 388,
  "changeHistory": [
    "08942b64e03e8cad6c0c1914f7e92cb5494eae5e",
    "ef1e65fb5128452cd8a19f82d09455b06a021b65",
    "ed595de84fba2db507adaf01d04cb089a5e0bac5",
    "e249a8cdcfb908cfdd7ef58393449d2251e0c91b",
    "23a1b6253f6296c1a3888361953da47f2808ca3d",
    "b02dba99c5643cdf87e854037078e3bf4f3c652e",
    "af095344e1501d55b2dfbbd18deaf305e814601c",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "ab1e3089135d74b0d8c3296d0074244ca89a55e2",
    "055aa0cf9da3dc844ca9cc4956570c47bc3e23b2",
    "836e4d1b12158b86ad0cb10505ff09282a39d277"
  ],
  "changeHistoryShort": {
    "08942b64e03e8cad6c0c1914f7e92cb5494eae5e": "Ybodychange",
    "ef1e65fb5128452cd8a19f82d09455b06a021b65": "Ybodychange",
    "ed595de84fba2db507adaf01d04cb089a5e0bac5": "Yfilerename",
    "e249a8cdcfb908cfdd7ef58393449d2251e0c91b": "Ybodychange",
    "23a1b6253f6296c1a3888361953da47f2808ca3d": "Ybodychange",
    "b02dba99c5643cdf87e854037078e3bf4f3c652e": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "af095344e1501d55b2dfbbd18deaf305e814601c": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "ab1e3089135d74b0d8c3296d0074244ca89a55e2": "Ybodychange",
    "055aa0cf9da3dc844ca9cc4956570c47bc3e23b2": "Ybodychange",
    "836e4d1b12158b86ad0cb10505ff09282a39d277": "Yintroduced"
  },
  "changeHistoryDetails": {
    "08942b64e03e8cad6c0c1914f7e92cb5494eae5e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4395: increase coverage of pitest-checkstyle-utils profile to 100%\n",
      "commitDate": 1499431732000,
      "commitName": "08942b64e03e8cad6c0c1914f7e92cb5494eae5e",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1497287515000,
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 24.82,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public static boolean isGetterMethod(final DetailAST ast) {\n         boolean getterMethod \u003d false;\n \n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n         if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF\n                 \u0026\u0026 ast.getChildCount() \u003d\u003d SETTER_GETTER_MAX_CHILDREN) {\n \n             final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n             final String name \u003d type.getNextSibling().getText();\n             final boolean matchesGetterFormat \u003d GETTER_PATTERN.matcher(name).matches();\n-            final boolean noVoidReturnType \u003d type.getChildCount(TokenTypes.LITERAL_VOID) \u003d\u003d 0;\n+            final boolean noVoidReturnType \u003d type.findFirstToken(TokenTypes.LITERAL_VOID) \u003d\u003d null;\n \n             final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n             final boolean noParams \u003d params.getChildCount(TokenTypes.PARAMETER_DEF) \u003d\u003d 0;\n \n             if (matchesGetterFormat \u0026\u0026 noVoidReturnType \u0026\u0026 noParams) {\n                 // Now verify that the body consists of:\n                 // SLIST -\u003e RETURN\n                 // RCURLY\n                 final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n \n                 if (slist !\u003d null \u0026\u0026 slist.getChildCount() \u003d\u003d GETTER_BODY_SIZE) {\n                     final DetailAST expr \u003d slist.getFirstChild();\n                     getterMethod \u003d expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN;\n                 }\n             }\n         }\n         return getterMethod;\n     }\n\\ No newline at end of file\n"
    },
    "ef1e65fb5128452cd8a19f82d09455b06a021b65": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violation fixed for CheckUtils\n",
      "commitDate": 1440828411000,
      "commitName": "ef1e65fb5128452cd8a19f82d09455b06a021b65",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440739855000,
      "commitNameOld": "95f8b08af84a2287dbd93c9cc740b6732e9e43b1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.02,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,31 @@\n     public static boolean isGetterMethod(final DetailAST ast) {\n+        boolean getterMethod \u003d false;\n+\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n-        if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n-                || ast.getChildCount() !\u003d SETTER_GETTER_MAX_CHILDREN) {\n-            return false;\n+        if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF\n+                \u0026\u0026 ast.getChildCount() \u003d\u003d SETTER_GETTER_MAX_CHILDREN) {\n+\n+            final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n+            final String name \u003d type.getNextSibling().getText();\n+            final boolean matchesGetterFormat \u003d GETTER_PATTERN.matcher(name).matches();\n+            final boolean noVoidReturnType \u003d type.getChildCount(TokenTypes.LITERAL_VOID) \u003d\u003d 0;\n+\n+            final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n+            final boolean noParams \u003d params.getChildCount(TokenTypes.PARAMETER_DEF) \u003d\u003d 0;\n+\n+            if (matchesGetterFormat \u0026\u0026 noVoidReturnType \u0026\u0026 noParams) {\n+                // Now verify that the body consists of:\n+                // SLIST -\u003e RETURN\n+                // RCURLY\n+                final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n+\n+                if (slist !\u003d null \u0026\u0026 slist.getChildCount() \u003d\u003d GETTER_BODY_SIZE) {\n+                    final DetailAST expr \u003d slist.getFirstChild();\n+                    getterMethod \u003d expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN;\n+                }\n+            }\n         }\n-\n-        // Check the name matches format of getX or isX. Technically I should\n-        // check that the format isX is only used with a boolean type.\n-        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n-        final String name \u003d type.getNextSibling().getText();\n-\n-        // Depends on JDK 1.4\n-        if (!GETTER_PATTERN.matcher(name).matches()) {\n-            return false;\n-        }\n-\n-        // Check the return type is void\n-        if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n-            return false;\n-        }\n-\n-        // Check that is had only one parameter\n-        final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n-        if (params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0) {\n-            return false;\n-        }\n-\n-        // Now verify that the body consists of:\n-        // SLIST -\u003e RETURN\n-        // RCURLY\n-        final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n-        if (slist \u003d\u003d null || slist.getChildCount() !\u003d GETTER_BODY_SIZE) {\n-            return false;\n-        }\n-\n-        final DetailAST expr \u003d slist.getFirstChild();\n-        return expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN;\n-\n+        return getterMethod;\n     }\n\\ No newline at end of file\n"
    },
    "ed595de84fba2db507adaf01d04cb089a5e0bac5": {
      "type": "Yfilerename",
      "commitMessage": "Utils classes have been moved to utils package. Issue #1898\n",
      "commitDate": 1440677821000,
      "commitName": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1440637702000,
      "commitNameOld": "f6113bb56d695719a8803274effb3596cb82120f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.46,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "e249a8cdcfb908cfdd7ef58393449d2251e0c91b": {
      "type": "Ybodychange",
      "commitMessage": "Use compiled pattern instead of dynamic regexp in CheckUtils. #1555\n\nFixes some `SpellDynamicRegexReplaceableByCompiledPattern` inspection violations.\n\nDescription:\n\u003eReports calls to the regular expression methods of java.lang.String using constants arguments. Such calls may be profitably replaced with a private static final Pattern field so that the regular expression does not have to be compiled each time it is used.\n",
      "commitDate": 1440503478000,
      "commitName": "e249a8cdcfb908cfdd7ef58393449d2251e0c91b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440158741000,
      "commitNameOld": "23a1b6253f6296c1a3888361953da47f2808ca3d",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 3.99,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n     public static boolean isGetterMethod(final DetailAST ast) {\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n                 || ast.getChildCount() !\u003d SETTER_GETTER_MAX_CHILDREN) {\n             return false;\n         }\n \n         // Check the name matches format of getX or isX. Technically I should\n         // check that the format isX is only used with a boolean type.\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final String name \u003d type.getNextSibling().getText();\n \n         // Depends on JDK 1.4\n-        if (!name.matches(\"^(is|get)[A-Z].*\")) {\n+        if (!GETTER_PATTERN.matcher(name).matches()) {\n             return false;\n         }\n \n         // Check the return type is void\n         if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n             return false;\n         }\n \n         // Check that is had only one parameter\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0) {\n             return false;\n         }\n \n         // Now verify that the body consists of:\n         // SLIST -\u003e RETURN\n         // RCURLY\n         final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n         if (slist \u003d\u003d null || slist.getChildCount() !\u003d GETTER_BODY_SIZE) {\n             return false;\n         }\n \n         final DetailAST expr \u003d slist.getFirstChild();\n         return expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN;\n \n     }\n\\ No newline at end of file\n"
    },
    "23a1b6253f6296c1a3888361953da47f2808ca3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: Fix for \u0027Don\u0027t use trailing comments\u0027 (partial)\n",
      "commitDate": 1440158741000,
      "commitName": "23a1b6253f6296c1a3888361953da47f2808ca3d",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1439886329000,
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 3.15,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,42 @@\n     public static boolean isGetterMethod(final DetailAST ast) {\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n                 || ast.getChildCount() !\u003d SETTER_GETTER_MAX_CHILDREN) {\n             return false;\n         }\n \n         // Check the name matches format of getX or isX. Technically I should\n         // check that the format isX is only used with a boolean type.\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final String name \u003d type.getNextSibling().getText();\n-        if (!name.matches(\"^(is|get)[A-Z].*\")) { // Depends on JDK 1.4\n+\n+        // Depends on JDK 1.4\n+        if (!name.matches(\"^(is|get)[A-Z].*\")) {\n             return false;\n         }\n \n         // Check the return type is void\n         if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n             return false;\n         }\n \n         // Check that is had only one parameter\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0) {\n             return false;\n         }\n \n         // Now verify that the body consists of:\n         // SLIST -\u003e RETURN\n         // RCURLY\n         final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n         if (slist \u003d\u003d null || slist.getChildCount() !\u003d GETTER_BODY_SIZE) {\n             return false;\n         }\n \n         final DetailAST expr \u003d slist.getFirstChild();\n         return expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN;\n \n     }\n\\ No newline at end of file\n"
    },
    "b02dba99c5643cdf87e854037078e3bf4f3c652e": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "Issue #1566: File length of JavadocMethodCheck has been reduced\n",
      "commitDate": 1439876772000,
      "commitName": "b02dba99c5643cdf87e854037078e3bf4f3c652e",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        "Ymovefromfile",
        "Ymodifierchange",
        "Ybodychange"
      ]
    },
    "af095344e1501d55b2dfbbd18deaf305e814601c": {
      "type": "Ybodychange",
      "commitMessage": "Add tests and refactor JavadocMethod check. #1308\n",
      "commitDate": 1438285571000,
      "commitName": "af095344e1501d55b2dfbbd18deaf305e814601c",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 7.57,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,40 @@\n     private static boolean isGetterMethod(final DetailAST ast) {\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n                 || ast.getChildCount() !\u003d MAX_CHILDREN) {\n             return false;\n         }\n \n         // Check the name matches format of getX or isX. Technically I should\n         // check that the format isX is only used with a boolean type.\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final String name \u003d type.getNextSibling().getText();\n         if (!name.matches(\"^(is|get)[A-Z].*\")) { // Depends on JDK 1.4\n             return false;\n         }\n \n         // Check the return type is void\n         if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n             return false;\n         }\n \n         // Check that is had only one parameter\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n-        if (params \u003d\u003d null\n-                || params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0) {\n+        if (params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0) {\n             return false;\n         }\n \n         // Now verify that the body consists of:\n         // SLIST -\u003e RETURN\n         // RCURLY\n         final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n         if (slist \u003d\u003d null || slist.getChildCount() !\u003d 2) {\n             return false;\n         }\n \n         final AST expr \u003d slist.getFirstChild();\n-        return expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN\n-                \u0026\u0026 expr.getFirstChild().getType() \u003d\u003d TokenTypes.EXPR;\n+        return expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN;\n \n     }\n\\ No newline at end of file\n"
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1436323201000,
      "commitNameOld": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 10.09,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n-    private boolean isGetterMethod(final DetailAST ast) {\n+    private static boolean isGetterMethod(final DetailAST ast) {\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n                 || ast.getChildCount() !\u003d MAX_CHILDREN) {\n             return false;\n         }\n \n         // Check the name matches format of getX or isX. Technically I should\n         // check that the format isX is only used with a boolean type.\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final String name \u003d type.getNextSibling().getText();\n         if (!name.matches(\"^(is|get)[A-Z].*\")) { // Depends on JDK 1.4\n             return false;\n         }\n \n         // Check the return type is void\n         if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n             return false;\n         }\n \n         // Check that is had only one parameter\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n         if (params \u003d\u003d null\n                 || params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0) {\n             return false;\n         }\n \n         // Now verify that the body consists of:\n         // SLIST -\u003e RETURN\n         // RCURLY\n         final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n         if (slist \u003d\u003d null || slist.getChildCount() !\u003d 2) {\n             return false;\n         }\n \n         final AST expr \u003d slist.getFirstChild();\n         return expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN\n                 \u0026\u0026 expr.getFirstChild().getType() \u003d\u003d TokenTypes.EXPR;\n \n     }\n\\ No newline at end of file\n"
    },
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": {
      "type": "Ybodychange",
      "commitMessage": "Update Maven PMD Plugin to 3.5. #1300\n",
      "commitDate": 1436323201000,
      "commitName": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1434649920000,
      "commitNameOld": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 19.37,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,42 @@\n     private boolean isGetterMethod(final DetailAST ast) {\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n                 || ast.getChildCount() !\u003d MAX_CHILDREN) {\n             return false;\n         }\n \n         // Check the name matches format of getX or isX. Technically I should\n         // check that the format isX is only used with a boolean type.\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final String name \u003d type.getNextSibling().getText();\n         if (!name.matches(\"^(is|get)[A-Z].*\")) { // Depends on JDK 1.4\n             return false;\n         }\n \n         // Check the return type is void\n         if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n             return false;\n         }\n \n         // Check that is had only one parameter\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n         if (params \u003d\u003d null\n                 || params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0) {\n             return false;\n         }\n \n         // Now verify that the body consists of:\n         // SLIST -\u003e RETURN\n         // RCURLY\n         final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n         if (slist \u003d\u003d null || slist.getChildCount() !\u003d 2) {\n             return false;\n         }\n \n         final AST expr \u003d slist.getFirstChild();\n-        if (expr.getType() !\u003d TokenTypes.LITERAL_RETURN\n-                || expr.getFirstChild().getType() !\u003d TokenTypes.EXPR) {\n-            return false;\n-        }\n+        return expr.getType() \u003d\u003d TokenTypes.LITERAL_RETURN\n+                \u0026\u0026 expr.getFirstChild().getType() \u003d\u003d TokenTypes.EXPR;\n \n-        return true;\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n     private boolean isGetterMethod(final DetailAST ast)\n     {\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n-        if ((ast.getType() !\u003d TokenTypes.METHOD_DEF)\n-                || (ast.getChildCount() !\u003d MAX_CHILDREN))\n+        if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n+                || ast.getChildCount() !\u003d MAX_CHILDREN)\n         {\n             return false;\n         }\n \n         // Check the name matches format of getX or isX. Technically I should\n         // check that the format isX is only used with a boolean type.\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final String name \u003d type.getNextSibling().getText();\n         if (!name.matches(\"^(is|get)[A-Z].*\")) { // Depends on JDK 1.4\n             return false;\n         }\n \n         // Check the return type is void\n         if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n             return false;\n         }\n \n         // Check that is had only one parameter\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n-        if ((params \u003d\u003d null)\n-                || (params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0))\n+        if (params \u003d\u003d null\n+                || params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0)\n         {\n             return false;\n         }\n \n         // Now verify that the body consists of:\n         // SLIST -\u003e RETURN\n         // RCURLY\n         final DetailAST slist \u003d ast.findFirstToken(TokenTypes.SLIST);\n-        if ((slist \u003d\u003d null) || (slist.getChildCount() !\u003d 2)) {\n+        if (slist \u003d\u003d null || slist.getChildCount() !\u003d 2) {\n             return false;\n         }\n \n         final AST expr \u003d slist.getFirstChild();\n-        if ((expr.getType() !\u003d TokenTypes.LITERAL_RETURN)\n-                || (expr.getFirstChild().getType() !\u003d TokenTypes.EXPR))\n+        if (expr.getType() !\u003d TokenTypes.LITERAL_RETURN\n+                || expr.getFirstChild().getType() !\u003d TokenTypes.EXPR)\n         {\n             return false;\n         }\n \n         return true;\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "ab1e3089135d74b0d8c3296d0074244ca89a55e2": {
      "type": "Ybodychange",
      "commitMessage": "Incorporate excellent patch [ 1344344 ] Consolidation of regexp checks.\n",
      "commitDate": 1131278053000,
      "commitName": "ab1e3089135d74b0d8c3296d0074244ca89a55e2",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 5.69,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n     private boolean isGetterMethod(final DetailAST aAST)\n     {\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n         if ((aAST.getType() !\u003d TokenTypes.METHOD_DEF)\n-            || (aAST.getChildCount() !\u003d 7))\n+            || (aAST.getChildCount() !\u003d MAX_CHILDREN))\n         {\n             return false;\n         }\n \n         // Check the name matches format of getX or isX. Technically I should\n         // check that the format isX is only used with a boolean type.\n         final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n         final String name \u003d type.getNextSibling().getText();\n         if (!name.matches(\"^(is|get)[A-Z].*\")) { // Depends on JDK 1.4\n             return false;\n         }\n \n         // Check the return type is void\n         if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n             return false;\n         }\n \n         // Check that is had only one parameter\n         final DetailAST params \u003d aAST.findFirstToken(TokenTypes.PARAMETERS);\n         if ((params \u003d\u003d null)\n             || (params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0))\n         {\n             return false;\n         }\n \n         // Now verify that the body consists of:\n         // SLIST -\u003e RETURN\n         // RCURLY\n         final DetailAST slist \u003d aAST.findFirstToken(TokenTypes.SLIST);\n         if ((slist \u003d\u003d null) || (slist.getChildCount() !\u003d 2)) {\n             return false;\n         }\n \n         final AST expr \u003d slist.getFirstChild();\n         if ((expr.getType() !\u003d TokenTypes.LITERAL_RETURN)\n             || (expr.getFirstChild().getType() !\u003d TokenTypes.EXPR))\n         {\n             return false;\n         }\n \n         return true;\n     }\n\\ No newline at end of file\n"
    },
    "055aa0cf9da3dc844ca9cc4956570c47bc3e23b2": {
      "type": "Ybodychange",
      "commitMessage": "Updated setter/getter support to handle accessor of the format \u0027isSomething\u0027\n",
      "commitDate": 1111313308000,
      "commitName": "055aa0cf9da3dc844ca9cc4956570c47bc3e23b2",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1110979283000,
      "commitNameOld": "836e4d1b12158b86ad0cb10505ff09282a39d277",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 3.87,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,49 @@\n     private boolean isGetterMethod(final DetailAST aAST)\n     {\n         // Check have a method with exactly 7 children which are all that\n         // is allowed in a proper getter method which does not throw any\n         // exceptions.\n         if ((aAST.getType() !\u003d TokenTypes.METHOD_DEF)\n             || (aAST.getChildCount() !\u003d 7))\n         {\n             return false;\n         }\n \n-        // Check the name matches format getX...\n+        // Check the name matches format of getX or isX. Technically I should\n+        // check that the format isX is only used with a boolean type.\n         final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n         final String name \u003d type.getNextSibling().getText();\n-        if (!name.matches(\"^get[A-Z].*\")) { // Depends on JDK 1.4\n+        if (!name.matches(\"^(is|get)[A-Z].*\")) { // Depends on JDK 1.4\n             return false;\n         }\n \n         // Check the return type is void\n         if (type.getChildCount(TokenTypes.LITERAL_VOID) \u003e 0) {\n             return false;\n         }\n \n         // Check that is had only one parameter\n         final DetailAST params \u003d aAST.findFirstToken(TokenTypes.PARAMETERS);\n         if ((params \u003d\u003d null)\n             || (params.getChildCount(TokenTypes.PARAMETER_DEF) \u003e 0))\n         {\n             return false;\n         }\n \n         // Now verify that the body consists of:\n         // SLIST -\u003e RETURN\n         // RCURLY\n         final DetailAST slist \u003d aAST.findFirstToken(TokenTypes.SLIST);\n         if ((slist \u003d\u003d null) || (slist.getChildCount() !\u003d 2)) {\n             return false;\n         }\n \n         final AST expr \u003d slist.getFirstChild();\n         if ((expr.getType() !\u003d TokenTypes.LITERAL_RETURN)\n             || (expr.getFirstChild().getType() !\u003d TokenTypes.EXPR))\n         {\n             return false;\n         }\n \n         return true;\n     }\n\\ No newline at end of file\n"
    },
    "836e4d1b12158b86ad0cb10505ff09282a39d277": {
      "type": "Yintroduced",
      "commitMessage": "Support for suppressing errors about missing Javadoc on property accessor\nmethods. Still need to document it in xdocs.\n",
      "commitDate": 1110979283000,
      "commitName": "836e4d1b12158b86ad0cb10505ff09282a39d277",
      "commitAuthor": "Oliver Burn"
    }
  }
}