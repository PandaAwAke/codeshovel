{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "ParenPadCheck.java",
  "functionName": "visitLiteralFor",
  "functionId": "visitLiteralFor___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
  "functionStartLine": 189,
  "functionEndLine": 198,
  "changeHistory": [
    "e81ca8290b4efd42c3454ffa0159b739f958ea48",
    "55c92042eb6986e905529de841d3d1c9a7b2b6dd",
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
    "e00c478dd61d9d883e41b500b780ab217582c2e7",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "b4ad010003b48f56a8724d7c97395ddb8b1f706a",
    "8376cd4108a78a8ab6a6c0385fd5ea21b46e1d90",
    "da2328d0f138c2d989056bc876f8698cc53bffe3",
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2",
    "75a289111ee8b16dd36de9f76a13908a494d65fd",
    "2e8126e99047befc39560342981b0b8e7cabea21",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf",
    "aede54ee77fb0887148db30be804b36758111698",
    "5fd3fab179d700d68281fee316519fdd907bbcd6"
  ],
  "changeHistoryShort": {
    "e81ca8290b4efd42c3454ffa0159b739f958ea48": "Ybodychange",
    "55c92042eb6986e905529de841d3d1c9a7b2b6dd": "Ybodychange",
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9": "Ymultichange(Yrename,Ymodifierchange,Ybodychange)",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": "Ybodychange",
    "e00c478dd61d9d883e41b500b780ab217582c2e7": "Ybodychange",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "b4ad010003b48f56a8724d7c97395ddb8b1f706a": "Ybodychange",
    "8376cd4108a78a8ab6a6c0385fd5ea21b46e1d90": "Ybodychange",
    "da2328d0f138c2d989056bc876f8698cc53bffe3": "Ybodychange",
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2": "Ybodychange",
    "75a289111ee8b16dd36de9f76a13908a494d65fd": "Ybodychange",
    "2e8126e99047befc39560342981b0b8e7cabea21": "Yfilerename",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": "Ybodychange",
    "aede54ee77fb0887148db30be804b36758111698": "Ybodychange",
    "5fd3fab179d700d68281fee316519fdd907bbcd6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e81ca8290b4efd42c3454ffa0159b739f958ea48": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Avoid reuse of local variables\n\nFixes `ReuseOfLocalVariable` inspection violation.\n\nDescription:\n\u003eReports local variables that are \"reused\", overwriting their values with new values unrelated to their original use. Such local variable reuse may be confusing, as the intended semantics of the local variable may vary with each use. It may also be prone to bugs, if code changes result in values that were thought to be overwritten actually being live. It is good practices to keep variable lifetimes as short as possible, and not reuse local variables for the sake of brevity.\n",
      "commitDate": 1440912854000,
      "commitName": "e81ca8290b4efd42c3454ffa0159b739f958ea48",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440679848000,
      "commitNameOld": "55c92042eb6986e905529de841d3d1c9a7b2b6dd",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.7,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void visitLiteralFor(DetailAST ast) {\n-        DetailAST parenAst \u003d ast.findFirstToken(TokenTypes.LPAREN);\n-        if (!isPrecedingEmptyForInit(parenAst)) {\n-            processLeft(parenAst);\n+        final DetailAST lparen \u003d ast.findFirstToken(TokenTypes.LPAREN);\n+        if (!isPrecedingEmptyForInit(lparen)) {\n+            processLeft(lparen);\n         }\n-        parenAst \u003d ast.findFirstToken(TokenTypes.RPAREN);\n-        if (!isFollowsEmptyForIterator(parenAst)) {\n-            processRight(parenAst);\n+        final DetailAST rparen \u003d ast.findFirstToken(TokenTypes.RPAREN);\n+        if (!isFollowsEmptyForIterator(rparen)) {\n+            processRight(rparen);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "55c92042eb6986e905529de841d3d1c9a7b2b6dd": {
      "type": "Ybodychange",
      "commitMessage": "Fix various typos in Java code. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals, and fix them in one click.\n",
      "commitDate": 1440679848000,
      "commitName": "55c92042eb6986e905529de841d3d1c9a7b2b6dd",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439782863000,
      "commitNameOld": "d56a2a366c6f9e3e8639d492d548ae562b75dc81",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 10.38,
      "commitsBetweenForRepo": 202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void visitLiteralFor(DetailAST ast) {\n         DetailAST parenAst \u003d ast.findFirstToken(TokenTypes.LPAREN);\n-        if (!isPreceedsEmptyForInit(parenAst)) {\n+        if (!isPrecedingEmptyForInit(parenAst)) {\n             processLeft(parenAst);\n         }\n         parenAst \u003d ast.findFirstToken(TokenTypes.RPAREN);\n         if (!isFollowsEmptyForIterator(parenAst)) {\n             processRight(parenAst);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Ybodychange)",
      "commitMessage": "Add possibility to configure targets for ParenPad check, #1189",
      "commitDate": 1435252569000,
      "commitName": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        "Yrename",
        "Ymodifierchange",
        "Ybodychange"
      ]
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425968782000,
      "commitNameOld": "49a23751eb6bffdfba94d72454d7676c9f85adc5",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.63,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST ast)\n     {\n         DetailAST theAst \u003d ast;\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n         if (theAst.getType() !\u003d TokenTypes.RPAREN) {\n-            if ((theAst.getType() \u003d\u003d TokenTypes.CTOR_CALL)\n-                || (theAst.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL))\n+            if (theAst.getType() \u003d\u003d TokenTypes.CTOR_CALL\n+                || theAst.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL)\n             {\n                 theAst \u003d theAst.getFirstChild();\n             }\n             if (!isPreceedsEmptyForInit(theAst)) {\n                 processLeft(theAst);\n             }\n         }\n-        else if (((theAst.getParent() \u003d\u003d null)\n-                 || (theAst.getParent().getType() !\u003d TokenTypes.TYPECAST)\n-                 || (theAst.getParent().findFirstToken(TokenTypes.RPAREN)\n-                     !\u003d theAst))\n+        else if ((theAst.getParent() \u003d\u003d null\n+                 || theAst.getParent().getType() !\u003d TokenTypes.TYPECAST\n+                 || theAst.getParent().findFirstToken(TokenTypes.RPAREN)\n+                     !\u003d theAst)\n                  \u0026\u0026 !isFollowsEmptyForIterator(theAst))\n         {\n             processRight(theAst);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": 1421677248000,
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": {
      "type": "Ybodychange",
      "commitMessage": "poartial fix for #46 - Sonarqube found problems in Checkstyle\n",
      "commitDate": 1386263571000,
      "commitName": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1380946942000,
      "commitNameOld": "788f87df4db1368ee0563e1ba1199177618cc01f",
      "commitAuthorOld": "picomancer",
      "daysBetweenCommits": 61.54,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         DetailAST theAst \u003d aAST;\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n         if (theAst.getType() !\u003d TokenTypes.RPAREN) {\n             if ((theAst.getType() \u003d\u003d TokenTypes.CTOR_CALL)\n                 || (theAst.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL))\n             {\n                 theAst \u003d theAst.getFirstChild();\n             }\n             if (!isPreceedsEmptyForInit(theAst)) {\n                 processLeft(theAst);\n             }\n         }\n-        else if ((theAst.getParent() \u003d\u003d null)\n+        else if (((theAst.getParent() \u003d\u003d null)\n                  || (theAst.getParent().getType() !\u003d TokenTypes.TYPECAST)\n                  || (theAst.getParent().findFirstToken(TokenTypes.RPAREN)\n                      !\u003d theAst))\n+                 \u0026\u0026 !isFollowsEmptyForIterator(theAst))\n         {\n-            if (!isFollowsEmptyForIterator(theAst)) {\n-                processRight(theAst);\n-            }\n+            processRight(theAst);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e00c478dd61d9d883e41b500b780ab217582c2e7": {
      "type": "Ybodychange",
      "commitMessage": "clean up the code that was assigning to a parameter.\n",
      "commitDate": 1287650559000,
      "commitName": "e00c478dd61d9d883e41b500b780ab217582c2e7",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1285817783000,
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 21.21,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n     public void visitToken(DetailAST aAST)\n     {\n+        DetailAST theAst \u003d aAST;\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n-        if (aAST.getType() !\u003d TokenTypes.RPAREN) {\n-            if ((aAST.getType() \u003d\u003d TokenTypes.CTOR_CALL)\n-                || (aAST.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL))\n+        if (theAst.getType() !\u003d TokenTypes.RPAREN) {\n+            if ((theAst.getType() \u003d\u003d TokenTypes.CTOR_CALL)\n+                || (theAst.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL))\n             {\n-                aAST \u003d aAST.getFirstChild();\n+                theAst \u003d theAst.getFirstChild();\n             }\n-            if (!isPreceedsEmptyForInit(aAST)) {\n-                processLeft(aAST);\n+            if (!isPreceedsEmptyForInit(theAst)) {\n+                processLeft(theAst);\n             }\n         }\n-        else if ((aAST.getParent() \u003d\u003d null)\n-                 || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST)\n-                 || (aAST.getParent().findFirstToken(TokenTypes.RPAREN)\n-                     !\u003d aAST))\n+        else if ((theAst.getParent() \u003d\u003d null)\n+                 || (theAst.getParent().getType() !\u003d TokenTypes.TYPECAST)\n+                 || (theAst.getParent().findFirstToken(TokenTypes.RPAREN)\n+                     !\u003d theAst))\n         {\n-            if (!isFollowsEmptyForIterator(aAST)) {\n-                processRight(aAST);\n+            if (!isFollowsEmptyForIterator(theAst)) {\n+                processRight(theAst);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200296548000,
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n         if (aAST.getType() !\u003d TokenTypes.RPAREN) {\n             if ((aAST.getType() \u003d\u003d TokenTypes.CTOR_CALL)\n                 || (aAST.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL))\n             {\n-                aAST \u003d (DetailAST) aAST.getFirstChild();\n+                aAST \u003d aAST.getFirstChild();\n             }\n             if (!isPreceedsEmptyForInit(aAST)) {\n                 processLeft(aAST);\n             }\n         }\n         else if ((aAST.getParent() \u003d\u003d null)\n                  || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST)\n                  || (aAST.getParent().findFirstToken(TokenTypes.RPAREN)\n                      !\u003d aAST))\n         {\n             if (!isFollowsEmptyForIterator(aAST)) {\n                 processRight(aAST);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n         if (aAST.getType() !\u003d TokenTypes.RPAREN) {\n-            if (aAST.getType() \u003d\u003d TokenTypes.CTOR_CALL\n-                || aAST.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL)\n+            if ((aAST.getType() \u003d\u003d TokenTypes.CTOR_CALL)\n+                || (aAST.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL))\n             {\n                 aAST \u003d (DetailAST) aAST.getFirstChild();\n             }\n             if (!isPreceedsEmptyForInit(aAST)) {\n                 processLeft(aAST);\n             }\n         }\n         else if ((aAST.getParent() \u003d\u003d null)\n                  || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST)\n                  || (aAST.getParent().findFirstToken(TokenTypes.RPAREN)\n                      !\u003d aAST))\n         {\n             if (!isFollowsEmptyForIterator(aAST)) {\n                 processRight(aAST);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b4ad010003b48f56a8724d7c97395ddb8b1f706a": {
      "type": "Ybodychange",
      "commitMessage": "Fixed 1322879 - ParenPadCheck should be aware about ou current grammar ;)\n",
      "commitDate": 1130172417000,
      "commitName": "b4ad010003b48f56a8724d7c97395ddb8b1f706a",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1118838277000,
      "commitNameOld": "8376cd4108a78a8ab6a6c0385fd5ea21b46e1d90",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 131.18,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n         if (aAST.getType() !\u003d TokenTypes.RPAREN) {\n+            if (aAST.getType() \u003d\u003d TokenTypes.CTOR_CALL\n+                || aAST.getType() \u003d\u003d TokenTypes.SUPER_CTOR_CALL)\n+            {\n+                aAST \u003d (DetailAST) aAST.getFirstChild();\n+            }\n             if (!isPreceedsEmptyForInit(aAST)) {\n                 processLeft(aAST);\n             }\n         }\n         else if ((aAST.getParent() \u003d\u003d null)\n                  || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST)\n                  || (aAST.getParent().findFirstToken(TokenTypes.RPAREN)\n                      !\u003d aAST))\n         {\n             if (!isFollowsEmptyForIterator(aAST)) {\n                 processRight(aAST);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8376cd4108a78a8ab6a6c0385fd5ea21b46e1d90": {
      "type": "Ybodychange",
      "commitMessage": "TypecastParenPad and ParenPad are now smarter in detectingif paren is part of typecast (bug 1217798)\n",
      "commitDate": 1118838277000,
      "commitName": "8376cd4108a78a8ab6a6c0385fd5ea21b46e1d90",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1105267857000,
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 157.07,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n         if (aAST.getType() !\u003d TokenTypes.RPAREN) {\n             if (!isPreceedsEmptyForInit(aAST)) {\n                 processLeft(aAST);\n             }\n         }\n         else if ((aAST.getParent() \u003d\u003d null)\n-                 || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST))\n+                 || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST)\n+                 || (aAST.getParent().findFirstToken(TokenTypes.RPAREN)\n+                     !\u003d aAST))\n         {\n             if (!isFollowsEmptyForIterator(aAST)) {\n                 processRight(aAST);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "da2328d0f138c2d989056bc876f8698cc53bffe3": {
      "type": "Ybodychange",
      "commitMessage": "added new check EmptyForInitializerPad and changed logic in NoWhiteSpaceBefore and ParenPad to fix bug #895072\n",
      "commitDate": 1076844692000,
      "commitName": "da2328d0f138c2d989056bc876f8698cc53bffe3",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1074114639000,
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 31.6,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n         if (aAST.getType() !\u003d TokenTypes.RPAREN) {\n-            processLeft(aAST);\n+            if (!isPreceedsEmptyForInit(aAST)) {\n+                processLeft(aAST);\n+            }\n         }\n         else if ((aAST.getParent() \u003d\u003d null)\n                  || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST))\n         {\n             if (!isFollowsEmptyForIterator(aAST)) {\n                 processRight(aAST);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2": {
      "type": "Ybodychange",
      "commitMessage": "bug-750348: added check for typecast parens. Involved\na bit of refactoring.\n",
      "commitDate": 1055139619000,
      "commitName": "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1055135859000,
      "commitNameOld": "75a289111ee8b16dd36de9f76a13908a494d65fd",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // Strange logic in this method to guard against checking RPAREN tokens\n         // that are associated with a TYPECAST token.\n         if (aAST.getType() !\u003d TokenTypes.RPAREN) {\n             processLeft(aAST);\n         }\n         else if ((aAST.getParent() \u003d\u003d null)\n                  || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST))\n         {\n-            processRight(aAST);\n+            if (!isFollowsEmptyForIterator(aAST)) {\n+                processRight(aAST);\n+            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "75a289111ee8b16dd36de9f76a13908a494d65fd": {
      "type": "Ybodychange",
      "commitMessage": "bug-750348: removed broken support for checking typecasts\n",
      "commitDate": 1055135859000,
      "commitName": "75a289111ee8b16dd36de9f76a13908a494d65fd",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054727729000,
      "commitNameOld": "2e8126e99047befc39560342981b0b8e7cabea21",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 4.72,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,13 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.RPAREN) {\n-            processRight(aAST);\n-        }\n-        else {\n+        // Strange logic in this method to guard against checking RPAREN tokens\n+        // that are associated with a TYPECAST token.\n+        if (aAST.getType() !\u003d TokenTypes.RPAREN) {\n             processLeft(aAST);\n         }\n+        else if ((aAST.getParent() \u003d\u003d null)\n+                 || (aAST.getParent().getType() !\u003d TokenTypes.TYPECAST))\n+        {\n+            processRight(aAST);\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "2e8126e99047befc39560342981b0b8e7cabea21": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Whitespace checks\n",
      "commitDate": 1054727729000,
      "commitName": "2e8126e99047befc39560342981b0b8e7cabea21",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054723367000,
      "commitNameOld": "3bd6412e39a141b980901f291391ff1bcc4a61f3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": {
      "type": "Ybodychange",
      "commitMessage": "Added a new class TokenTypes that contains all the type constants. This class\nbreaks the circular dependencies - the cost is needing to maintain this class\nwhen a new grammar is introduced.\n",
      "commitDate": 1035008886000,
      "commitName": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1034552460000,
      "commitNameOld": "63664e0b012593e18c5bb93ba528f27fd93fe0d4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.28,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (aAST.getType() \u003d\u003d JavaTokenTypes.RPAREN) {\n+        if (aAST.getType() \u003d\u003d TokenTypes.RPAREN) {\n             processRight(aAST);\n         }\n         else {\n             processLeft(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "aede54ee77fb0887148db30be804b36758111698": {
      "type": "Ybodychange",
      "commitMessage": "Fully implemented the paren pad check\n",
      "commitDate": 1034517942000,
      "commitName": "aede54ee77fb0887148db30be804b36758111698",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1034515902000,
      "commitNameOld": "5fd3fab179d700d68281fee316519fdd907bbcd6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,9 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        // TODO: implement\n+        if (aAST.getType() \u003d\u003d JavaTokenTypes.RPAREN) {\n+            processRight(aAST);\n+        }\n+        else {\n+            processLeft(aAST);\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "5fd3fab179d700d68281fee316519fdd907bbcd6": {
      "type": "Yintroduced",
      "commitMessage": "Stopped the tokens LPAREN and RPAREN being silently eaten by the grammar. Now\nneed to implement the ParenPad check. Should be easy.\n\nAlso need to refactor some the existing tests to use utility methods for\nlocating tokens in the tree. Currently hard code the positions, which is not\nideal.\n",
      "commitDate": 1034515902000,
      "commitName": "5fd3fab179d700d68281fee316519fdd907bbcd6",
      "commitAuthor": "Oliver Burn"
    }
  }
}