{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AutomaticBean.java",
  "functionName": "tryCopyProperty",
  "functionId": "tryCopyProperty___moduleName-String__key-String__value-Object__recheck-boolean",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
  "functionStartLine": 211,
  "functionEndLine": 246,
  "changeHistory": [
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "050d1e55a819d639fe9116ec3ebd99902530c3f9"
  ],
  "changeHistoryShort": {
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": "Ybodychange",
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c": "Ybodychange",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "050d1e55a819d639fe9116ec3ebd99902530c3f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2616: Fix CatchParameterName check violations in Checkstyle code\n",
      "commitDate": 1449184604000,
      "commitName": "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1444779430000,
      "commitNameOld": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 50.99,
      "commitsBetweenForRepo": 265,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n             throws CheckstyleException {\n \n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n                 final PropertyDescriptor descriptor \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n                 if (descriptor \u003d\u003d null) {\n                     final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 in module %s \"\n                             + \"does not exist, please check the documentation\", key, moduleName);\n                     throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n-                | NoSuchMethodException e) {\n+                | NoSuchMethodException ex) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n             final String message \u003d String.format(Locale.ROOT,\n                     \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\", key, value, moduleName);\n-            throw new CheckstyleException(message, e);\n+            throw new CheckstyleException(message, ex);\n         }\n-        catch (final IllegalArgumentException | ConversionException e) {\n+        catch (final IllegalArgumentException | ConversionException ex) {\n             final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n                     + \"\u0027%s\u0027 of module %s\", value, key, moduleName);\n-            throw new CheckstyleException(message, e);\n+            throw new CheckstyleException(message, ex);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1217: fixes for violations from \u0027forbiddenapis\u0027 verification tool\n",
      "commitDate": 1444779430000,
      "commitName": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1444178762000,
      "commitNameOld": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 6.95,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n             throws CheckstyleException {\n \n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n                 final PropertyDescriptor descriptor \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n                 if (descriptor \u003d\u003d null) {\n-                    final String message \u003d String.format(\"Property \u0027%s\u0027 in module %s does not \"\n-                            + \"exist, please check the documentation\", key, moduleName);\n+                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 in module %s \"\n+                            + \"does not exist, please check the documentation\", key, moduleName);\n                     throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n                 | NoSuchMethodException e) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n-            final String message \u003d String.format(\"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\",\n-                    key, value, moduleName);\n+            final String message \u003d String.format(Locale.ROOT,\n+                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\", key, value, moduleName);\n             throw new CheckstyleException(message, e);\n         }\n         catch (final IllegalArgumentException | ConversionException e) {\n-            final String message \u003d String.format(\"illegal value \u0027%s\u0027 for property \u0027%s\u0027 of \"\n-                    + \"module %s\", value, key, moduleName);\n+            final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n+                    + \"\u0027%s\u0027 of module %s\", value, key, moduleName);\n             throw new CheckstyleException(message, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": {
      "type": "Ybodychange",
      "commitMessage": "Issue #985: Fix PMD violations for ShortVariable rule\n",
      "commitDate": 1444178762000,
      "commitName": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1441047087000,
      "commitNameOld": "c899af31c112c07ea1244f6bbe2c5c6c56818ae5",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 36.25,
      "commitsBetweenForRepo": 231,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n             throws CheckstyleException {\n \n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n-                final PropertyDescriptor pd \u003d\n+                final PropertyDescriptor descriptor \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n-                if (pd \u003d\u003d null) {\n+                if (descriptor \u003d\u003d null) {\n                     final String message \u003d String.format(\"Property \u0027%s\u0027 in module %s does not \"\n                             + \"exist, please check the documentation\", key, moduleName);\n                     throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n                 | NoSuchMethodException e) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n             final String message \u003d String.format(\"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\",\n                     key, value, moduleName);\n             throw new CheckstyleException(message, e);\n         }\n         catch (final IllegalArgumentException | ConversionException e) {\n             final String message \u003d String.format(\"illegal value \u0027%s\u0027 for property \u0027%s\u0027 of \"\n                     + \"module %s\", value, key, moduleName);\n             throw new CheckstyleException(message, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": 1440543609000,
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440040911000,
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 5.82,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,37 @@\n     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n             throws CheckstyleException {\n \n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n                 final PropertyDescriptor pd \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n                 if (pd \u003d\u003d null) {\n-                    throw new CheckstyleException(\n-                            \"Property \u0027\" + key + \"\u0027 in module \"\n-                             + moduleName\n-                             + \" does not exist, please check the documentation\");\n+                    final String message \u003d String.format(\"Property \u0027%s\u0027 in module %s does not \"\n+                            + \"exist, please check the documentation\", key, moduleName);\n+                    throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n                 | NoSuchMethodException e) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n-            throw new CheckstyleException(\n-                \"Cannot set property \u0027\" + key + \"\u0027 to \u0027\" + value\n-                + \"\u0027 in module \"  + moduleName, e);\n+            final String message \u003d String.format(\"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\",\n+                    key, value, moduleName);\n+            throw new CheckstyleException(message, e);\n         }\n         catch (final IllegalArgumentException | ConversionException e) {\n-            throw new CheckstyleException(\n-                \"illegal value \u0027\" + value + \"\u0027 for property \u0027\" + key\n-                + \"\u0027 of module \" + moduleName, e);\n+            final String message \u003d String.format(\"illegal value \u0027%s\u0027 for property \u0027%s\u0027 of \"\n+                    + \"module %s\", value, key, moduleName);\n+            throw new CheckstyleException(message, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "050d1e55a819d639fe9116ec3ebd99902530c3f9": {
      "type": "Yintroduced",
      "commitMessage": "100% code coverage for AutomaticBean. #1295\n",
      "commitDate": 1437862670000,
      "commitName": "050d1e55a819d639fe9116ec3ebd99902530c3f9",
      "commitAuthor": "Roman Ivanov"
    }
  }
}