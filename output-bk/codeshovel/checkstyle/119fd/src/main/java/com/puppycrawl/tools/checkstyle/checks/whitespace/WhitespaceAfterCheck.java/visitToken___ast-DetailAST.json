{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "WhitespaceAfterCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java",
  "functionStartLine": 105,
  "functionEndLine": 125,
  "changeHistory": [
    "31bb4ea052d1049f945f076ef531ca964268fa8d",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "1ce6badd8f1852081fee56fd6184ecfe8c128c69",
    "18172eab38e9443539633d6ee3a30818c10c7bb1",
    "43e856a0df8002e9f362ed22ff991b7b8c1cf80a",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "ea4085cd15fefe1e70a495798187c425295c74b6",
    "2e8126e99047befc39560342981b0b8e7cabea21",
    "916417fc6214ab75606d2fbc1d7b511509ffe25b",
    "319721560e3608c84146b20f473f46f8848c65a5",
    "288d01d86c8ce976ef8a448b8d6aaa2aa3584825"
  ],
  "changeHistoryShort": {
    "31bb4ea052d1049f945f076ef531ca964268fa8d": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "1ce6badd8f1852081fee56fd6184ecfe8c128c69": "Ybodychange",
    "18172eab38e9443539633d6ee3a30818c10c7bb1": "Ybodychange",
    "43e856a0df8002e9f362ed22ff991b7b8c1cf80a": "Ybodychange",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "ea4085cd15fefe1e70a495798187c425295c74b6": "Ybodychange",
    "2e8126e99047befc39560342981b0b8e7cabea21": "Yfilerename",
    "916417fc6214ab75606d2fbc1d7b511509ffe25b": "Ybodychange",
    "319721560e3608c84146b20f473f46f8848c65a5": "Ybodychange",
    "288d01d86c8ce976ef8a448b8d6aaa2aa3584825": "Yintroduced"
  },
  "changeHistoryDetails": {
    "31bb4ea052d1049f945f076ef531ca964268fa8d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3850: Fixed multiline typecast\n",
      "commitDate": 1488556461000,
      "commitName": "31bb4ea052d1049f945f076ef531ca964268fa8d",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 35.06,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     public void visitToken(DetailAST ast) {\n-        final String line \u003d getLine(ast.getLineNo() - 1);\n         if (ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             final DetailAST targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n+            final String line \u003d getLine(targetAST.getLineNo() - 1);\n             if (!isFollowedByWhitespace(targetAST, line)) {\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n                     MSG_WS_TYPECAST);\n             }\n         }\n         else {\n+            final String line \u003d getLine(ast.getLineNo() - 1);\n             if (!isFollowedByWhitespace(ast, line)) {\n                 final Object[] message \u003d {ast.getText()};\n                 log(ast.getLineNo(),\n                     ast.getColumnNo() + ast.getText().length(),\n                     MSG_WS_NOT_FOLLOWED,\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": 1453387259000,
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST ast) {\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         if (ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             final DetailAST targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n             if (!isFollowedByWhitespace(targetAST, line)) {\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n-                    WS_TYPECAST);\n+                    MSG_WS_TYPECAST);\n             }\n         }\n         else {\n             if (!isFollowedByWhitespace(ast, line)) {\n                 final Object[] message \u003d {ast.getText()};\n                 log(ast.getLineNo(),\n                     ast.getColumnNo() + ast.getText().length(),\n-                    WS_NOT_FOLLOWED,\n+                    MSG_WS_NOT_FOLLOWED,\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1ce6badd8f1852081fee56fd6184ecfe8c128c69": {
      "type": "Ybodychange",
      "commitMessage": "Replace new array expressions with an array initializer. #1538\n\nArray initializers omit the type declaration because that is already specified by the declaration of the variable the expression is assigned to.\n",
      "commitDate": 1438566537000,
      "commitName": "1ce6badd8f1852081fee56fd6184ecfe8c128c69",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437872196000,
      "commitNameOld": "0e02e3565f37776783e6711ca46f1715af415ed3",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 8.04,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST ast) {\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         if (ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             final DetailAST targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n             if (!isFollowedByWhitespace(targetAST, line)) {\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n                     WS_TYPECAST);\n             }\n         }\n         else {\n             if (!isFollowedByWhitespace(ast, line)) {\n-                final Object[] message \u003d new Object[]{ast.getText()};\n+                final Object[] message \u003d {ast.getText()};\n                 log(ast.getLineNo(),\n                     ast.getColumnNo() + ast.getText().length(),\n                     WS_NOT_FOLLOWED,\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "18172eab38e9443539633d6ee3a30818c10c7bb1": {
      "type": "Ybodychange",
      "commitMessage": "Replace hardcoded message in WhitespaceAfterCheck with property value (i18n), issue #967\n",
      "commitDate": 1435330033000,
      "commitName": "18172eab38e9443539633d6ee3a30818c10c7bb1",
      "commitAuthor": "MEZk",
      "commitDateOld": 1434424982000,
      "commitNameOld": "43e856a0df8002e9f362ed22ff991b7b8c1cf80a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 10.48,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,20 @@\n     public void visitToken(DetailAST ast) {\n-        final Object[] message;\n-        final DetailAST targetAST;\n+        final String line \u003d getLine(ast.getLineNo() - 1);\n         if (ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n-            targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n-            message \u003d new Object[]{\"cast\"};\n+            final DetailAST targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n+            if (!isFollowedByWhitespace(targetAST, line)) {\n+                log(targetAST.getLineNo(),\n+                    targetAST.getColumnNo() + targetAST.getText().length(),\n+                    WS_TYPECAST);\n+            }\n         }\n         else {\n-            targetAST \u003d ast;\n-            message \u003d new Object[]{ast.getText()};\n-        }\n-        final String line \u003d getLine(targetAST.getLineNo() - 1);\n-        final int after \u003d\n-            targetAST.getColumnNo() + targetAST.getText().length();\n-\n-        if (after \u003c line.length()) {\n-\n-            final char charAfter \u003d line.charAt(after);\n-            if (targetAST.getType() \u003d\u003d TokenTypes.SEMI\n-                \u0026\u0026 (charAfter \u003d\u003d \u0027;\u0027 || charAfter \u003d\u003d \u0027)\u0027)) {\n-                return;\n-            }\n-            if (!Character.isWhitespace(charAfter) \u0026\u0026 !isEmptyForIterator(targetAST)) {\n-\n-                log(targetAST.getLineNo(),\n-                        targetAST.getColumnNo() + targetAST.getText().length(),\n-                        WS_NOT_FOLLOWED,\n-                        message);\n+            if (!isFollowedByWhitespace(ast, line)) {\n+                final Object[] message \u003d new Object[]{ast.getText()};\n+                log(ast.getLineNo(),\n+                    ast.getColumnNo() + ast.getText().length(),\n+                    WS_NOT_FOLLOWED,\n+                    message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "43e856a0df8002e9f362ed22ff991b7b8c1cf80a": {
      "type": "Ybodychange",
      "commitMessage": "WhitespaceAfterCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": 1434424982000,
      "commitName": "43e856a0df8002e9f362ed22ff991b7b8c1cf80a",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 29.65,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,31 @@\n     public void visitToken(DetailAST ast) {\n         final Object[] message;\n         final DetailAST targetAST;\n         if (ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d ast;\n             message \u003d new Object[]{ast.getText()};\n         }\n         final String line \u003d getLine(targetAST.getLineNo() - 1);\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003c line.length()) {\n \n             final char charAfter \u003d line.charAt(after);\n             if (targetAST.getType() \u003d\u003d TokenTypes.SEMI\n                 \u0026\u0026 (charAfter \u003d\u003d \u0027;\u0027 || charAfter \u003d\u003d \u0027)\u0027)) {\n                 return;\n             }\n-            if (!Character.isWhitespace(charAfter)) {\n-                //empty FOR_ITERATOR?\n-                if (targetAST.getType() \u003d\u003d TokenTypes.SEMI) {\n-                    final DetailAST sibling \u003d\n-                        targetAST.getNextSibling();\n-                    if (sibling !\u003d null\n-                        \u0026\u0026 sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR\n-                        \u0026\u0026 sibling.getChildCount() \u003d\u003d 0) {\n-                        return;\n-                    }\n-                }\n+            if (!Character.isWhitespace(charAfter) \u0026\u0026 !isEmptyForIterator(targetAST)) {\n+\n                 log(targetAST.getLineNo(),\n-                    targetAST.getColumnNo() + targetAST.getText().length(),\n-                    WS_NOT_FOLLOWED,\n-                    message);\n+                        targetAST.getColumnNo() + targetAST.getText().length(),\n+                        WS_NOT_FOLLOWED,\n+                        message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": {
      "type": "Ybodychange",
      "commitMessage": "all TODO/FIXME were removed , some of them converted to issues\n",
      "commitDate": 1429810711000,
      "commitName": "dd6b080a16e0933b3d19305f84ba01c8893839f3",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1426023398000,
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 43.83,
      "commitsBetweenForRepo": 199,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,43 @@\n     public void visitToken(DetailAST ast)\n     {\n         final Object[] message;\n         final DetailAST targetAST;\n         if (ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n-            // TODO: i18n\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d ast;\n             message \u003d new Object[]{ast.getText()};\n         }\n         final String line \u003d getLine(targetAST.getLineNo() - 1);\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003c line.length()) {\n \n             final char charAfter \u003d line.charAt(after);\n             if (targetAST.getType() \u003d\u003d TokenTypes.SEMI\n                 \u0026\u0026 (charAfter \u003d\u003d \u0027;\u0027 || charAfter \u003d\u003d \u0027)\u0027))\n             {\n                 return;\n             }\n             if (!Character.isWhitespace(charAfter)) {\n                 //empty FOR_ITERATOR?\n                 if (targetAST.getType() \u003d\u003d TokenTypes.SEMI) {\n                     final DetailAST sibling \u003d\n                         targetAST.getNextSibling();\n                     if (sibling !\u003d null\n                         \u0026\u0026 sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR\n                         \u0026\u0026 sibling.getChildCount() \u003d\u003d 0)\n                     {\n                         return;\n                     }\n                 }\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n                     WS_NOT_FOLLOWED,\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425602876000,
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     public void visitToken(DetailAST ast)\n     {\n         final Object[] message;\n         final DetailAST targetAST;\n         if (ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n             // TODO: i18n\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d ast;\n             message \u003d new Object[]{ast.getText()};\n         }\n         final String line \u003d getLine(targetAST.getLineNo() - 1);\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003c line.length()) {\n \n             final char charAfter \u003d line.charAt(after);\n-            if ((targetAST.getType() \u003d\u003d TokenTypes.SEMI)\n-                \u0026\u0026 ((charAfter \u003d\u003d \u0027;\u0027) || (charAfter \u003d\u003d \u0027)\u0027)))\n+            if (targetAST.getType() \u003d\u003d TokenTypes.SEMI\n+                \u0026\u0026 (charAfter \u003d\u003d \u0027;\u0027 || charAfter \u003d\u003d \u0027)\u0027))\n             {\n                 return;\n             }\n             if (!Character.isWhitespace(charAfter)) {\n                 //empty FOR_ITERATOR?\n                 if (targetAST.getType() \u003d\u003d TokenTypes.SEMI) {\n                     final DetailAST sibling \u003d\n                         targetAST.getNextSibling();\n-                    if ((sibling !\u003d null)\n-                        \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR)\n-                        \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n+                    if (sibling !\u003d null\n+                        \u0026\u0026 sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR\n+                        \u0026\u0026 sibling.getChildCount() \u003d\u003d 0)\n                     {\n                         return;\n                     }\n                 }\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n                     WS_NOT_FOLLOWED,\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, whitespace package, issue #537\n",
      "commitDate": 1424437365000,
      "commitName": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     public void visitToken(DetailAST ast)\n     {\n         final Object[] message;\n         final DetailAST targetAST;\n         if (ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d ast.findFirstToken(TokenTypes.RPAREN);\n             // TODO: i18n\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d ast;\n             message \u003d new Object[]{ast.getText()};\n         }\n         final String line \u003d getLine(targetAST.getLineNo() - 1);\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003c line.length()) {\n \n             final char charAfter \u003d line.charAt(after);\n             if ((targetAST.getType() \u003d\u003d TokenTypes.SEMI)\n                 \u0026\u0026 ((charAfter \u003d\u003d \u0027;\u0027) || (charAfter \u003d\u003d \u0027)\u0027)))\n             {\n                 return;\n             }\n             if (!Character.isWhitespace(charAfter)) {\n                 //empty FOR_ITERATOR?\n                 if (targetAST.getType() \u003d\u003d TokenTypes.SEMI) {\n                     final DetailAST sibling \u003d\n                         targetAST.getNextSibling();\n                     if ((sibling !\u003d null)\n                         \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR)\n                         \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n                     {\n                         return;\n                     }\n                 }\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n-                    \"ws.notFollowed\",\n+                    WS_NOT_FOLLOWED,\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": 1421677248000,
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9": {
      "type": "Ybodychange",
      "commitMessage": "FileContents.getLines performance fix\n",
      "commitDate": 1414957696000,
      "commitName": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
      "commitAuthor": "sopov.ivan",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 243.1,
      "commitsBetweenForRepo": 222,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final Object[] message;\n         final DetailAST targetAST;\n         if (aAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d aAST.findFirstToken(TokenTypes.RPAREN);\n             // TODO: i18n\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d aAST;\n             message \u003d new Object[]{aAST.getText()};\n         }\n-        final String line \u003d getLines()[targetAST.getLineNo() - 1];\n+        final String line \u003d getLine(targetAST.getLineNo() - 1);\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003c line.length()) {\n \n             final char charAfter \u003d line.charAt(after);\n             if ((targetAST.getType() \u003d\u003d TokenTypes.SEMI)\n                 \u0026\u0026 ((charAfter \u003d\u003d \u0027;\u0027) || (charAfter \u003d\u003d \u0027)\u0027)))\n             {\n                 return;\n             }\n             if (!Character.isWhitespace(charAfter)) {\n                 //empty FOR_ITERATOR?\n                 if (targetAST.getType() \u003d\u003d TokenTypes.SEMI) {\n                     final DetailAST sibling \u003d\n                         targetAST.getNextSibling();\n                     if ((sibling !\u003d null)\n                         \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR)\n                         \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n                     {\n                         return;\n                     }\n                 }\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n                     \"ws.notFollowed\",\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200296548000,
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final Object[] message;\n         final DetailAST targetAST;\n         if (aAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d aAST.findFirstToken(TokenTypes.RPAREN);\n             // TODO: i18n\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d aAST;\n             message \u003d new Object[]{aAST.getText()};\n         }\n         final String line \u003d getLines()[targetAST.getLineNo() - 1];\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003c line.length()) {\n \n             final char charAfter \u003d line.charAt(after);\n             if ((targetAST.getType() \u003d\u003d TokenTypes.SEMI)\n                 \u0026\u0026 ((charAfter \u003d\u003d \u0027;\u0027) || (charAfter \u003d\u003d \u0027)\u0027)))\n             {\n                 return;\n             }\n             if (!Character.isWhitespace(charAfter)) {\n                 //empty FOR_ITERATOR?\n                 if (targetAST.getType() \u003d\u003d TokenTypes.SEMI) {\n                     final DetailAST sibling \u003d\n-                        (DetailAST) targetAST.getNextSibling();\n+                        targetAST.getNextSibling();\n                     if ((sibling !\u003d null)\n                         \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR)\n                         \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n                     {\n                         return;\n                     }\n                 }\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n                     \"ws.notFollowed\",\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ea4085cd15fefe1e70a495798187c425295c74b6": {
      "type": "Ybodychange",
      "commitMessage": "Fix for rfe 1248106 (TYPECAST is now accepted by NoWhitespaceAfter)\n\nFix for rfe 953266 (thanks to Paul Guyot (pguyot) for submitting patch)\nIllegalType can be configured to accept some abstract classes which\nmatches to regexp of illegal type names (property legalAbstractClassNames)\n\nTrailingComment now can be configured to accept some trailing comments\n(such as NOI18N) (property legalComment, rfe 1385344).\n",
      "commitDate": 1135527190000,
      "commitName": "ea4085cd15fefe1e70a495798187c425295c74b6",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 54.87,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,44 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final String[] lines \u003d getLines();\n         final Object[] message;\n         final DetailAST targetAST;\n         if (aAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d aAST.findFirstToken(TokenTypes.RPAREN);\n             // TODO: i18n\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d aAST;\n             message \u003d new Object[]{aAST.getText()};\n         }\n-        final String line \u003d lines[targetAST.getLineNo() - 1];\n+        final String line \u003d getLines()[targetAST.getLineNo() - 1];\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003c line.length()) {\n \n             final char charAfter \u003d line.charAt(after);\n             if ((targetAST.getType() \u003d\u003d TokenTypes.SEMI)\n                 \u0026\u0026 ((charAfter \u003d\u003d \u0027;\u0027) || (charAfter \u003d\u003d \u0027)\u0027)))\n             {\n                 return;\n             }\n             if (!Character.isWhitespace(charAfter)) {\n                 //empty FOR_ITERATOR?\n                 if (targetAST.getType() \u003d\u003d TokenTypes.SEMI) {\n                     final DetailAST sibling \u003d\n                         (DetailAST) targetAST.getNextSibling();\n                     if ((sibling !\u003d null)\n                         \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR)\n                         \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n                     {\n                         return;\n                     }\n                 }\n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n                     \"ws.notFollowed\",\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "2e8126e99047befc39560342981b0b8e7cabea21": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Whitespace checks\n",
      "commitDate": 1054727729000,
      "commitName": "2e8126e99047befc39560342981b0b8e7cabea21",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054723367000,
      "commitNameOld": "3bd6412e39a141b980901f291391ff1bcc4a61f3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "916417fc6214ab75606d2fbc1d7b511509ffe25b": {
      "type": "Ybodychange",
      "commitMessage": "Check for policy of space at an empty for interator.\nAddresses requests 565666, 583725.\nParenPad and WhitespaceAfter no longer check an empty for iterator.\nNot doing so, and using check EmptyForIterator, is less complex than\nproviding properties for ParenPad and WhitespaceAfter.\n",
      "commitDate": 1042316222000,
      "commitName": "916417fc6214ab75606d2fbc1d7b511509ffe25b",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1039999056000,
      "commitNameOld": "fa0c0353c280c30f2d1cfda01ecfe6597ff46f6b",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 26.82,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,45 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final String[] lines \u003d getLines();\n         final Object[] message;\n         final DetailAST targetAST;\n         if (aAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d aAST.findFirstToken(TokenTypes.RPAREN);\n             // TODO: i18n\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d aAST;\n             message \u003d new Object[]{aAST.getText()};\n         }\n         final String line \u003d lines[targetAST.getLineNo() - 1];\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003c line.length()) {\n             \n             final char charAfter \u003d line.charAt(after);\n             if ((targetAST.getType() \u003d\u003d TokenTypes.SEMI)\n                 \u0026\u0026 ((charAfter \u003d\u003d \u0027;\u0027) || (charAfter \u003d\u003d \u0027)\u0027)))\n             {\n                 return;\n             }\n             if (!Character.isWhitespace(charAfter)) {\n+                //empty FOR_ITERATOR?\n+                if (targetAST.getType() \u003d\u003d TokenTypes.SEMI) {\n+                    final DetailAST sibling \u003d\n+                        (DetailAST) targetAST.getNextSibling();\n+                    if ((sibling !\u003d null)\n+                        \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_ITERATOR)\n+                        \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n+                    {\n+                        return;\n+                    }\n+                }   \n                 log(targetAST.getLineNo(),\n                     targetAST.getColumnNo() + targetAST.getText().length(),\n                     \"ws.notFollowed\",\n                     message);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "319721560e3608c84146b20f473f46f8848c65a5": {
      "type": "Ybodychange",
      "commitMessage": "port check for whitespace after SEMI\n",
      "commitDate": 1037064322000,
      "commitName": "319721560e3608c84146b20f473f46f8848c65a5",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1037015675000,
      "commitNameOld": "e8a2b8423e39375873ec4a26ce9cc491ed3c0ded",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.56,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,34 @@\n     public void visitToken(DetailAST aAST)\n     {\n-\n         final String[] lines \u003d getLines();\n         final Object[] message;\n         final DetailAST targetAST;\n         if (aAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d aAST.findFirstToken(TokenTypes.RPAREN);\n             // TODO: i18n\n             message \u003d new Object[]{\"cast\"};\n         }\n         else {\n             targetAST \u003d aAST;\n             message \u003d new Object[]{aAST.getText()};\n         }\n         final String line \u003d lines[targetAST.getLineNo() - 1];\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n-        if ((after \u003c line.length())\n-            \u0026\u0026 !Character.isWhitespace(line.charAt(after)))\n-        {\n-            log(targetAST.getLineNo(),\n-                targetAST.getColumnNo() + targetAST.getText().length(),\n-                \"ws.notFollowed\",\n-                message);\n+        if (after \u003c line.length()) {\n+            \n+            final char charAfter \u003d line.charAt(after);\n+            if ((targetAST.getType() \u003d\u003d TokenTypes.SEMI)\n+                \u0026\u0026 ((charAfter \u003d\u003d \u0027;\u0027) || (charAfter \u003d\u003d \u0027)\u0027)))\n+            {\n+                return;\n+            }\n+            if (!Character.isWhitespace(charAfter)) {\n+                log(targetAST.getLineNo(),\n+                    targetAST.getColumnNo() + targetAST.getText().length(),\n+                    \"ws.notFollowed\",\n+                    message);\n+            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "288d01d86c8ce976ef8a448b8d6aaa2aa3584825": {
      "type": "Yintroduced",
      "commitMessage": "checks for whitespace after COMMA and TYPECAST\n",
      "commitDate": 1037015325000,
      "commitName": "288d01d86c8ce976ef8a448b8d6aaa2aa3584825",
      "commitAuthor": "Rick Giles"
    }
  }
}