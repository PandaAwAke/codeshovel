{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "ImportControl.java",
  "functionName": "locateFinest",
  "functionId": "locateFinest___forPkg-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
  "functionStartLine": 231,
  "functionEndLine": 247,
  "changeHistory": [
    "5530d4c27d508c513b68af67aadede84b4cfa102",
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
    "3b970321aa2fa100376cd7a19a12e408664030e9",
    "aab0718232e060bd8f289770ab81780b3a2705a2",
    "044889b26a868b1b7200526ceeb40cdbe1e903fc",
    "3b452a2e88d0cb670be19818dbd8166335d65884",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "1951594e90a04aa2f2b14021ce3318604218ba19"
  ],
  "changeHistoryShort": {
    "5530d4c27d508c513b68af67aadede84b4cfa102": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange)",
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8": "Ybodychange",
    "3b970321aa2fa100376cd7a19a12e408664030e9": "Ymodifierchange",
    "aab0718232e060bd8f289770ab81780b3a2705a2": "Ybodychange",
    "044889b26a868b1b7200526ceeb40cdbe1e903fc": "Ybodychange",
    "3b452a2e88d0cb670be19818dbd8166335d65884": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "1951594e90a04aa2f2b14021ce3318604218ba19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5530d4c27d508c513b68af67aadede84b4cfa102": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange)",
      "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
      "commitDate": 1477457193000,
      "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
      "commitAuthor": "Jochen Van de Velde",
      "subchanges": [
        "Yfilerename",
        "Yreturntypechange",
        "Ybodychange"
      ]
    },
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2999: allow regex in subpackage and importcontrol element\n",
      "commitDate": 1476830421000,
      "commitName": "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
      "commitAuthor": "Volker Boerchers",
      "commitDateOld": 1474426326000,
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 27.83,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     public PkgControl locateFinest(final String forPkg) {\n         PkgControl finestMatch \u003d null;\n         // Check if we are a match.\n-        // This algorithm should be improved to check for a trailing \".\"\n-        // or nothing following.\n-        if (forPkg.startsWith(fullPackage)) {\n+        if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n             for (PkgControl child : children) {\n                 final PkgControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n"
    },
    "3b970321aa2fa100376cd7a19a12e408664030e9": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #957: Resolve PMD DefaultPackage rule problems in imports package\n",
      "commitDate": 1455807292000,
      "commitName": "3b970321aa2fa100376cd7a19a12e408664030e9",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1453646135000,
      "commitNameOld": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 25.01,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-    PkgControl locateFinest(final String forPkg) {\n+    public PkgControl locateFinest(final String forPkg) {\n         PkgControl finestMatch \u003d null;\n         // Check if we are a match.\n         // This algorithm should be improved to check for a trailing \".\"\n         // or nothing following.\n         if (forPkg.startsWith(fullPackage)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n             for (PkgControl child : children) {\n                 final PkgControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n"
    },
    "aab0718232e060bd8f289770ab81780b3a2705a2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2604: Update regexp pattern for LocalVariableName\n",
      "commitDate": 1449446571000,
      "commitName": "aab0718232e060bd8f289770ab81780b3a2705a2",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1445038509000,
      "commitNameOld": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 51.02,
      "commitsBetweenForRepo": 258,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     PkgControl locateFinest(final String forPkg) {\n         PkgControl finestMatch \u003d null;\n         // Check if we are a match.\n         // This algorithm should be improved to check for a trailing \".\"\n         // or nothing following.\n         if (forPkg.startsWith(fullPackage)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (PkgControl pc : children) {\n-                final PkgControl match \u003d pc.locateFinest(forPkg);\n+            for (PkgControl child : children) {\n+                final PkgControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n"
    },
    "044889b26a868b1b7200526ceeb40cdbe1e903fc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: partial fix of ReturnCount violations\n",
      "commitDate": 1440678605000,
      "commitName": "044889b26a868b1b7200526ceeb40cdbe1e903fc",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440243167000,
      "commitNameOld": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.04,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     PkgControl locateFinest(final String forPkg) {\n+        PkgControl finestMatch \u003d null;\n         // Check if we are a match.\n-        // This algormithm should be improved to check for a trailing \".\"\n+        // This algorithm should be improved to check for a trailing \".\"\n         // or nothing following.\n-        if (!forPkg.startsWith(fullPackage)) {\n-            return null;\n-        }\n-\n-        // Check if any of the children match.\n-        for (PkgControl pc : children) {\n-            final PkgControl match \u003d pc.locateFinest(forPkg);\n-            if (match !\u003d null) {\n-                return match;\n+        if (forPkg.startsWith(fullPackage)) {\n+            // If there won\u0027t be match so I am the best there is.\n+            finestMatch \u003d this;\n+            // Check if any of the children match.\n+            for (PkgControl pc : children) {\n+                final PkgControl match \u003d pc.locateFinest(forPkg);\n+                if (match !\u003d null) {\n+                    finestMatch \u003d match;\n+                    break;\n+                }\n             }\n         }\n-\n-        // No match so I am the best there is.\n-        return this;\n+        return finestMatch;\n     }\n\\ No newline at end of file\n"
    },
    "3b452a2e88d0cb670be19818dbd8166335d65884": {
      "type": "Ybodychange",
      "commitMessage": "Inline calls to simple getters. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": 1440243167000,
      "commitName": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566538000,
      "commitNameOld": "6fd60de0a4363b806d37d4129d9a430f8f3dee6b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 19.41,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     PkgControl locateFinest(final String forPkg) {\n         // Check if we are a match.\n         // This algormithm should be improved to check for a trailing \".\"\n         // or nothing following.\n-        if (!forPkg.startsWith(getFullPackage())) {\n+        if (!forPkg.startsWith(fullPackage)) {\n             return null;\n         }\n \n         // Check if any of the children match.\n         for (PkgControl pc : children) {\n             final PkgControl match \u003d pc.locateFinest(forPkg);\n             if (match !\u003d null) {\n                 return match;\n             }\n         }\n \n         // No match so I am the best there is.\n         return this;\n     }\n\\ No newline at end of file\n"
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": 1421678111000,
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n     PkgControl locateFinest(final String aForPkg)\n     {\n         // Check if we are a match.\n         // This algormithm should be improved to check for a trailing \".\"\n         // or nothing following.\n         if (!aForPkg.startsWith(getFullPackage())) {\n             return null;\n         }\n \n         // Check if any of the children match.\n-        final Iterator it \u003d mChildren.iterator();\n-        while (it.hasNext()) {\n-            final PkgControl pc \u003d (PkgControl) it.next();\n+        for (PkgControl pc : mChildren) {\n             final PkgControl match \u003d pc.locateFinest(aForPkg);\n             if (match !\u003d null) {\n                 return match;\n             }\n         }\n \n         // No match so I am the best there is.\n         return this;\n     }\n\\ No newline at end of file\n"
    },
    "1951594e90a04aa2f2b14021ce3318604218ba19": {
      "type": "Yintroduced",
      "commitMessage": "Added the ImportControl check. This is a check that can be used to\nenforce which packages can import which packages. I was required to\ndevelop this for a large project to enforce application layering rules.\n\nThe check is fairly basic at the moment, but is still sufficiently\npowerful to be useful. I am sure there will be feature requests in the\nfuture.\n",
      "commitDate": 1122496168000,
      "commitName": "1951594e90a04aa2f2b14021ce3318604218ba19",
      "commitAuthor": "Oliver Burn"
    }
  }
}