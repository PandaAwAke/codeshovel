{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "EmptyForInitializerPadCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java",
  "functionStartLine": 104,
  "functionEndLine": 123,
  "changeHistory": [
    "6ab9f8b8984a5a2fbbf5265d3a813ba466a4dc7b",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "d4b933799af120cf4a8490db98f396b6348430e9",
    "da2328d0f138c2d989056bc876f8698cc53bffe3"
  ],
  "changeHistoryShort": {
    "6ab9f8b8984a5a2fbbf5265d3a813ba466a4dc7b": "Ybodychange",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "d4b933799af120cf4a8490db98f396b6348430e9": "Ybodychange",
    "da2328d0f138c2d989056bc876f8698cc53bffe3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ab9f8b8984a5a2fbbf5265d3a813ba466a4dc7b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2451: removed excess hierarchy from EmptyForInitializerPadCheck",
      "commitDate": 1447384662000,
      "commitName": "6ab9f8b8984a5a2fbbf5265d3a813ba466a4dc7b",
      "commitAuthor": "rnveach",
      "commitDateOld": 1440827451000,
      "commitNameOld": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 75.89,
      "commitsBetweenForRepo": 602,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n             final DetailAST semi \u003d ast.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n             if (!CommonUtils.hasWhitespaceBefore(before, line)) {\n-                final PadOption option \u003d getAbstractOption();\n                 if (option \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(before))) {\n                     log(semi.getLineNo(), before, MSG_PRECEDED, SEMICOLON);\n                 }\n                 else if (option \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before))) {\n                     log(semi.getLineNo(), before, MSG_NOT_PRECEDED, SEMICOLON);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Rename methods returning boolean to use question word\n\nFixes some `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": 1440827451000,
      "commitName": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 1.73,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n             final DetailAST semi \u003d ast.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n-            if (!CommonUtils.whitespaceBefore(before, line)) {\n+            if (!CommonUtils.hasWhitespaceBefore(before, line)) {\n                 final PadOption option \u003d getAbstractOption();\n                 if (option \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(before))) {\n                     log(semi.getLineNo(), before, MSG_PRECEDED, SEMICOLON);\n                 }\n                 else if (option \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before))) {\n                     log(semi.getLineNo(), before, MSG_NOT_PRECEDED, SEMICOLON);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": 1440677821000,
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1440677821000,
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n             final DetailAST semi \u003d ast.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n-            if (!Utils.whitespaceBefore(before, line)) {\n+            if (!CommonUtils.whitespaceBefore(before, line)) {\n                 final PadOption option \u003d getAbstractOption();\n                 if (option \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(before))) {\n                     log(semi.getLineNo(), before, MSG_PRECEDED, SEMICOLON);\n                 }\n                 else if (option \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before))) {\n                     log(semi.getLineNo(), before, MSG_NOT_PRECEDED, SEMICOLON);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": 1440543609000,
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440502770000,
      "commitNameOld": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.47,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n             final DetailAST semi \u003d ast.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n             if (!Utils.whitespaceBefore(before, line)) {\n                 final PadOption option \u003d getAbstractOption();\n                 if (option \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(before))) {\n-                    log(semi.getLineNo(), before, MSG_PRECEDED, \";\");\n+                    log(semi.getLineNo(), before, MSG_PRECEDED, SEMICOLON);\n                 }\n                 else if (option \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before))) {\n-                    log(semi.getLineNo(), before, MSG_NOT_PRECEDED, \";\");\n+                    log(semi.getLineNo(), before, MSG_NOT_PRECEDED, SEMICOLON);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 16.82,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n             final DetailAST semi \u003d ast.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n             if (!Utils.whitespaceBefore(before, line)) {\n                 final PadOption option \u003d getAbstractOption();\n-                if (PadOption.NOSPACE \u003d\u003d option\n+                if (option \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(before))) {\n                     log(semi.getLineNo(), before, MSG_PRECEDED, \";\");\n                 }\n-                else if (PadOption.SPACE \u003d\u003d option\n+                else if (option \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before))) {\n                     log(semi.getLineNo(), before, MSG_NOT_PRECEDED, \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425602876000,
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST ast)\n     {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n             final DetailAST semi \u003d ast.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n             if (!Utils.whitespaceBefore(before, line)) {\n                 final PadOption option \u003d getAbstractOption();\n-                if ((PadOption.NOSPACE \u003d\u003d option)\n-                    \u0026\u0026 (Character.isWhitespace(line.charAt(before))))\n+                if (PadOption.NOSPACE \u003d\u003d option\n+                    \u0026\u0026 Character.isWhitespace(line.charAt(before)))\n                 {\n                     log(semi.getLineNo(), before, MSG_PRECEDED, \";\");\n                 }\n-                else if ((PadOption.SPACE \u003d\u003d option)\n+                else if (PadOption.SPACE \u003d\u003d option\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before)))\n                 {\n                     log(semi.getLineNo(), before, MSG_NOT_PRECEDED, \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, whitespace package, issue #537\n",
      "commitDate": 1424437365000,
      "commitName": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST ast)\n     {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n             final DetailAST semi \u003d ast.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n             if (!Utils.whitespaceBefore(before, line)) {\n                 final PadOption option \u003d getAbstractOption();\n                 if ((PadOption.NOSPACE \u003d\u003d option)\n                     \u0026\u0026 (Character.isWhitespace(line.charAt(before))))\n                 {\n-                    log(semi.getLineNo(), before, \"ws.preceded\", \";\");\n+                    log(semi.getLineNo(), before, MSG_PRECEDED, \";\");\n                 }\n                 else if ((PadOption.SPACE \u003d\u003d option)\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before)))\n                 {\n-                    log(semi.getLineNo(), before, \"ws.notPreceded\", \";\");\n+                    log(semi.getLineNo(), before, MSG_NOT_PRECEDED, \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": 1421677248000,
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1214975994000,
      "commitNameOld": "d4b933799af120cf4a8490db98f396b6348430e9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 78.26,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n-            final DetailAST semi \u003d (DetailAST) aAST.getNextSibling();\n+            final DetailAST semi \u003d aAST.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n             if (!Utils.whitespaceBefore(before, line)) {\n                 final PadOption option \u003d getAbstractOption();\n                 if ((PadOption.NOSPACE \u003d\u003d option)\n                     \u0026\u0026 (Character.isWhitespace(line.charAt(before))))\n                 {\n                     log(semi.getLineNo(), before, \"ws.preceded\", \";\");\n                 }\n                 else if ((PadOption.SPACE \u003d\u003d option)\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before)))\n                 {\n                     log(semi.getLineNo(), before, \"ws.notPreceded\", \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d4b933799af120cf4a8490db98f396b6348430e9": {
      "type": "Ybodychange",
      "commitMessage": "Overhaul of how \u003cspan class\u003d\"code\"\u003eAbstractOptionCheck\u003c/span\u003e works.\nIt now requires that the option type is a Java 5 Enum and hence the\n\u003cspan class\u003d\"code\"\u003eAbstractOption\u003c/span\u003e class has been removed.\n",
      "commitDate": 1214975994000,
      "commitName": "d4b933799af120cf4a8490db98f396b6348430e9",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200296548000,
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 169.9,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getChildCount() \u003d\u003d 0) {\n             //empty for initializer. test pad before semi.\n             final DetailAST semi \u003d (DetailAST) aAST.getNextSibling();\n             final int semiLineIdx \u003d semi.getLineNo() - 1;\n             final String line \u003d getLines()[semiLineIdx];\n             final int before \u003d semi.getColumnNo() - 1;\n             //don\u0027t check if semi at beginning of line\n             if (!Utils.whitespaceBefore(before, line)) {\n-                final AbstractOption abstractOption \u003d getAbstractOption();\n-                if ((PadOption.NOSPACE \u003d\u003d abstractOption)\n+                final PadOption option \u003d getAbstractOption();\n+                if ((PadOption.NOSPACE \u003d\u003d option)\n                     \u0026\u0026 (Character.isWhitespace(line.charAt(before))))\n                 {\n                     log(semi.getLineNo(), before, \"ws.preceded\", \";\");\n                 }\n-                else if ((PadOption.SPACE \u003d\u003d abstractOption)\n+                else if ((PadOption.SPACE \u003d\u003d option)\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(before)))\n                 {\n                     log(semi.getLineNo(), before, \"ws.notPreceded\", \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "da2328d0f138c2d989056bc876f8698cc53bffe3": {
      "type": "Yintroduced",
      "commitMessage": "added new check EmptyForInitializerPad and changed logic in NoWhiteSpaceBefore and ParenPad to fix bug #895072\n",
      "commitDate": 1076844692000,
      "commitName": "da2328d0f138c2d989056bc876f8698cc53bffe3",
      "commitAuthor": "Lars Kühne"
    }
  }
}