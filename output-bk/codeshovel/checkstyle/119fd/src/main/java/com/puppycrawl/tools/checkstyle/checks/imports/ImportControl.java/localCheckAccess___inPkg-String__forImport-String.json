{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "ImportControl.java",
  "functionName": "localCheckAccess",
  "functionId": "localCheckAccess___inPkg-String__forImport-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
  "functionStartLine": 322,
  "functionEndLine": 335,
  "changeHistory": [
    "d6f3a17328226debcddb53ed25c39501f2781764",
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11",
    "5530d4c27d508c513b68af67aadede84b4cfa102",
    "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "c38185458ab824874b8465c46b4dc42646440aaa",
    "a5d30bf353dde01376d45fb031d9236b11a835d1",
    "1951594e90a04aa2f2b14021ce3318604218ba19"
  ],
  "changeHistoryShort": {
    "d6f3a17328226debcddb53ed25c39501f2781764": "Ybodychange",
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11": "Yparameterchange",
    "5530d4c27d508c513b68af67aadede84b4cfa102": "Ymultichange(Yfilerename,Ybodychange)",
    "e9b3b9cdede98c359157dd8ccb501901ebe4ca88": "Ybodychange",
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "c38185458ab824874b8465c46b4dc42646440aaa": "Ybodychange",
    "a5d30bf353dde01376d45fb031d9236b11a835d1": "Ymultichange(Yparameterchange,Ybodychange)",
    "1951594e90a04aa2f2b14021ce3318604218ba19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6f3a17328226debcddb53ed25c39501f2781764": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: Enforce ReturnCount max\u003d1 in imports, regexp, naming, design, sizes packages\n",
      "commitDate": 1493045733000,
      "commitName": "d6f3a17328226debcddb53ed25c39501f2781764",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 87.02,
      "commitsBetweenForRepo": 318,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    private AccessResult localCheckAccess(final String inPkg,\n-        final String forImport) {\n-        for (AbstractImportRule r : rules) {\n+    private AccessResult localCheckAccess(final String inPkg, final String forImport) {\n+        AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n+        for (AbstractImportRule importRule : rules) {\n             // Check if an import rule is only meant to be applied locally.\n-            if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n-                continue;\n-            }\n-            final AccessResult result \u003d r.verifyImport(forImport);\n-            if (result !\u003d AccessResult.UNKNOWN) {\n-                return result;\n+            if (!importRule.isLocalOnly() || matchesExactly(inPkg)) {\n+                final AccessResult result \u003d importRule.verifyImport(forImport);\n+                if (result !\u003d AccessResult.UNKNOWN) {\n+                    localCheckAccessResult \u003d result;\n+                    break;\n+                }\n             }\n         }\n-        return AccessResult.UNKNOWN;\n+        return localCheckAccessResult;\n     }\n\\ No newline at end of file\n"
    },
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11": {
      "type": "Yparameterchange",
      "commitMessage": "Issue #3498: ImportCheckControl refactored\n",
      "commitDate": 1480372317000,
      "commitName": "3a8f8d6f398f74889354527f6836a6a99ab2ee11",
      "commitAuthor": "kazachka",
      "commitDateOld": 1477457193000,
      "commitNameOld": "5530d4c27d508c513b68af67aadede84b4cfa102",
      "commitAuthorOld": "Jochen Van de Velde",
      "daysBetweenCommits": 33.74,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    private AccessResult localCheckAccess(final String forImport,\n-        final String inPkg) {\n+    private AccessResult localCheckAccess(final String inPkg,\n+        final String forImport) {\n         for (AbstractImportRule r : rules) {\n             // Check if an import rule is only meant to be applied locally.\n             if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                 continue;\n             }\n             final AccessResult result \u003d r.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n"
    },
    "5530d4c27d508c513b68af67aadede84b4cfa102": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
      "commitDate": 1477457193000,
      "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
      "commitAuthor": "Jochen Van de Velde",
      "subchanges": [
        "Yfilerename",
        "Ybodychange"
      ]
    },
    "e9b3b9cdede98c359157dd8ccb501901ebe4ca88": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3497: Split Guard class in two\n",
      "commitDate": 1477249937000,
      "commitName": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
      "commitAuthor": "Jochen Van de Velde",
      "commitDateOld": 1476830421000,
      "commitNameOld": "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
      "commitAuthorOld": "Volker Boerchers",
      "daysBetweenCommits": 4.86,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private AccessResult localCheckAccess(final String forImport,\n         final String inPkg) {\n-        for (Guard g : guards) {\n-            // Check if a Guard is only meant to be applied locally.\n-            if (g.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n+        for (AbstractImportRule r : rules) {\n+            // Check if a PkgImportRule is only meant to be applied locally.\n+            if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                 continue;\n             }\n-            final AccessResult result \u003d g.verifyImport(forImport);\n+            final AccessResult result \u003d r.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n"
    },
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2999: allow regex in subpackage and importcontrol element\n",
      "commitDate": 1476830421000,
      "commitName": "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
      "commitAuthor": "Volker Boerchers",
      "commitDateOld": 1474426326000,
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 27.83,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private AccessResult localCheckAccess(final String forImport,\n         final String inPkg) {\n         for (Guard g : guards) {\n             // Check if a Guard is only meant to be applied locally.\n-            if (g.isLocalOnly() \u0026\u0026 !fullPackage.equals(inPkg)) {\n+            if (g.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                 continue;\n             }\n             final AccessResult result \u003d g.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n"
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": 1421678111000,
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     private AccessResult localCheckAccess(final String aForImport,\n         final String aInPkg)\n     {\n-        final Iterator it \u003d mGuards.iterator();\n-        while (it.hasNext()) {\n-            final Guard g \u003d (Guard) it.next();\n+        for (Guard g : mGuards) {\n             // Check if a Guard is only meant to be applied locally.\n             if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                 continue;\n             }\n             final AccessResult result \u003d g.verifyImport(aForImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n"
    },
    "c38185458ab824874b8465c46b4dc42646440aaa": {
      "type": "Ybodychange",
      "commitMessage": "Code cleanup\n",
      "commitDate": 1137847382000,
      "commitName": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1122812864000,
      "commitNameOld": "a5d30bf353dde01376d45fb031d9236b11a835d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 174.01,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private AccessResult localCheckAccess(final String aForImport,\n         final String aInPkg)\n     {\n         final Iterator it \u003d mGuards.iterator();\n         while (it.hasNext()) {\n             final Guard g \u003d (Guard) it.next();\n             // Check if a Guard is only meant to be applied locally.\n             if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                 continue;\n             }\n-            final AccessResult result \u003d g.verifyImport(aForImport, aInPkg);\n+            final AccessResult result \u003d g.verifyImport(aForImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n"
    },
    "a5d30bf353dde01376d45fb031d9236b11a835d1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Added a lot more configuration options for the ImportControlCheck that\ncame out of using at work. I still need to improve the unit tests and\nproperly document the support options. Wanted to check in now for\nbackup.\n",
      "commitDate": 1122812864000,
      "commitName": "a5d30bf353dde01376d45fb031d9236b11a835d1",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "1951594e90a04aa2f2b14021ce3318604218ba19": {
      "type": "Yintroduced",
      "commitMessage": "Added the ImportControl check. This is a check that can be used to\nenforce which packages can import which packages. I was required to\ndevelop this for a large project to enforce application layering rules.\n\nThe check is fairly basic at the moment, but is still sufficiently\npowerful to be useful. I am sure there will be feature requests in the\nfuture.\n",
      "commitDate": 1122496168000,
      "commitName": "1951594e90a04aa2f2b14021ce3318604218ba19",
      "commitAuthor": "Oliver Burn"
    }
  }
}