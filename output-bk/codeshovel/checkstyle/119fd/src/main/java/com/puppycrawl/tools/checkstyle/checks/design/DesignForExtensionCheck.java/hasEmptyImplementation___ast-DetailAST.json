{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "DesignForExtensionCheck.java",
  "functionName": "hasEmptyImplementation",
  "functionId": "hasEmptyImplementation___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java",
  "functionStartLine": 194,
  "functionEndLine": 208,
  "changeHistory": [
    "257d13b6bb53245d2491e50d4ca8e39ddfc80035",
    "3eaa031fb7de67dc205fbbff370712bb92fc8259",
    "34ef127bdc17c8103b68b2cd5fe5fdd2b92be0f6",
    "06716249cfb86d9f213f33a26877112e8ab45adc"
  ],
  "changeHistoryShort": {
    "257d13b6bb53245d2491e50d4ca8e39ddfc80035": "Ybodychange",
    "3eaa031fb7de67dc205fbbff370712bb92fc8259": "Ybodychange",
    "34ef127bdc17c8103b68b2cd5fe5fdd2b92be0f6": "Ybodychange",
    "06716249cfb86d9f213f33a26877112e8ab45adc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "257d13b6bb53245d2491e50d4ca8e39ddfc80035": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3830: Fix bug in DesignForExtension when order of annotations changes violation\n",
      "commitDate": 1487890316000,
      "commitName": "257d13b6bb53245d2491e50d4ca8e39ddfc80035",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1487545764000,
      "commitNameOld": "3eaa031fb7de67dc205fbbff370712bb92fc8259",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 3.99,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     private static boolean hasEmptyImplementation(DetailAST ast) {\n         boolean hasEmptyBody \u003d true;\n         final DetailAST methodImplOpenBrace \u003d ast.findFirstToken(TokenTypes.SLIST);\n         final DetailAST methodImplCloseBrace \u003d methodImplOpenBrace.getLastChild();\n         final Predicate\u003cDetailAST\u003e predicate \u003d currentNode -\u003e {\n-            return currentNode !\u003d null\n-                \u0026\u0026 currentNode !\u003d methodImplCloseBrace\n-                \u0026\u0026 currentNode.getLineNo() \u003c\u003d methodImplCloseBrace.getLineNo()\n+            return currentNode !\u003d methodImplCloseBrace\n                 \u0026\u0026 !TokenUtils.isCommentType(currentNode.getType());\n         };\n         final Optional\u003cDetailAST\u003e methodBody \u003d\n             TokenUtils.findFirstTokenByPredicate(methodImplOpenBrace, predicate);\n         if (methodBody.isPresent()) {\n             hasEmptyBody \u003d false;\n         }\n         return hasEmptyBody;\n     }\n\\ No newline at end of file\n"
    },
    "3eaa031fb7de67dc205fbbff370712bb92fc8259": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3843: Fix coverage problem for DesignForExtension\n",
      "commitDate": 1487545764000,
      "commitName": "3eaa031fb7de67dc205fbbff370712bb92fc8259",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1487219914000,
      "commitNameOld": "34ef127bdc17c8103b68b2cd5fe5fdd2b92be0f6",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 3.77,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     private static boolean hasEmptyImplementation(DetailAST ast) {\n         boolean hasEmptyBody \u003d true;\n         final DetailAST methodImplOpenBrace \u003d ast.findFirstToken(TokenTypes.SLIST);\n-        if (methodImplOpenBrace !\u003d null) {\n-            final DetailAST methodImplCloseBrace \u003d methodImplOpenBrace.getLastChild();\n-            final Predicate\u003cDetailAST\u003e predicate \u003d currentNode -\u003e {\n-                return currentNode !\u003d null\n-                    \u0026\u0026 currentNode !\u003d methodImplCloseBrace\n-                    \u0026\u0026 currentNode.getLineNo() \u003c\u003d methodImplCloseBrace.getLineNo()\n-                    \u0026\u0026 !TokenUtils.isCommentType(currentNode.getType());\n-            };\n-            final Optional\u003cDetailAST\u003e methodBody \u003d\n-                TokenUtils.findFirstTokenByPredicate(methodImplOpenBrace, predicate);\n-            if (methodBody.isPresent()) {\n-                hasEmptyBody \u003d false;\n-            }\n+        final DetailAST methodImplCloseBrace \u003d methodImplOpenBrace.getLastChild();\n+        final Predicate\u003cDetailAST\u003e predicate \u003d currentNode -\u003e {\n+            return currentNode !\u003d null\n+                \u0026\u0026 currentNode !\u003d methodImplCloseBrace\n+                \u0026\u0026 currentNode.getLineNo() \u003c\u003d methodImplCloseBrace.getLineNo()\n+                \u0026\u0026 !TokenUtils.isCommentType(currentNode.getType());\n+        };\n+        final Optional\u003cDetailAST\u003e methodBody \u003d\n+            TokenUtils.findFirstTokenByPredicate(methodImplOpenBrace, predicate);\n+        if (methodBody.isPresent()) {\n+            hasEmptyBody \u003d false;\n         }\n         return hasEmptyBody;\n     }\n\\ No newline at end of file\n"
    },
    "34ef127bdc17c8103b68b2cd5fe5fdd2b92be0f6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3735: added lambdas to NeedBraces for checkstyle config",
      "commitDate": 1487219914000,
      "commitName": "34ef127bdc17c8103b68b2cd5fe5fdd2b92be0f6",
      "commitAuthor": "rnveach",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.59,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n     private static boolean hasEmptyImplementation(DetailAST ast) {\n         boolean hasEmptyBody \u003d true;\n         final DetailAST methodImplOpenBrace \u003d ast.findFirstToken(TokenTypes.SLIST);\n         if (methodImplOpenBrace !\u003d null) {\n             final DetailAST methodImplCloseBrace \u003d methodImplOpenBrace.getLastChild();\n-            final Predicate\u003cDetailAST\u003e predicate \u003d currentNode -\u003e\n-                currentNode !\u003d null\n+            final Predicate\u003cDetailAST\u003e predicate \u003d currentNode -\u003e {\n+                return currentNode !\u003d null\n                     \u0026\u0026 currentNode !\u003d methodImplCloseBrace\n                     \u0026\u0026 currentNode.getLineNo() \u003c\u003d methodImplCloseBrace.getLineNo()\n                     \u0026\u0026 !TokenUtils.isCommentType(currentNode.getType());\n+            };\n             final Optional\u003cDetailAST\u003e methodBody \u003d\n                 TokenUtils.findFirstTokenByPredicate(methodImplOpenBrace, predicate);\n             if (methodBody.isPresent()) {\n                 hasEmptyBody \u003d false;\n             }\n         }\n         return hasEmptyBody;\n     }\n\\ No newline at end of file\n"
    },
    "06716249cfb86d9f213f33a26877112e8ab45adc": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3102: DesignForExtension: consider overridable methods and javadoc\n",
      "commitDate": 1477175779000,
      "commitName": "06716249cfb86d9f213f33a26877112e8ab45adc",
      "commitAuthor": "Andrei Selkin"
    }
  }
}