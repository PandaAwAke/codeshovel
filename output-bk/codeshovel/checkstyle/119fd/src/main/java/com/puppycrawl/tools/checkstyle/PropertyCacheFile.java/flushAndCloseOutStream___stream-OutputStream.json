{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "PropertyCacheFile.java",
  "functionName": "flushAndCloseOutStream",
  "functionId": "flushAndCloseOutStream___stream-OutputStream",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
  "functionStartLine": 171,
  "functionEndLine": 176,
  "changeHistory": [
    "ea9ff3965d9c657b5b7bd2d969e075f430635c47",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1",
    "06865630aa3da0b36064b9e00e0e95ff681f234e",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588",
    "d2af4accdde3eac0a2103353f490e97bf62f61d2"
  ],
  "changeHistoryShort": {
    "ea9ff3965d9c657b5b7bd2d969e075f430635c47": "Ymultichange(Yexceptionschange,Ybodychange)",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1": "Ybodychange",
    "06865630aa3da0b36064b9e00e0e95ff681f234e": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588": "Ybodychange",
    "d2af4accdde3eac0a2103353f490e97bf62f61d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ea9ff3965d9c657b5b7bd2d969e075f430635c47": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "100% UTs coverage for PropertyCacheFile. Refactoring of PropertyCacheFile. #1294\n",
      "commitDate": 1438103538000,
      "commitName": "ea9ff3965d9c657b5b7bd2d969e075f430635c47",
      "commitAuthor": "Roman Ivanov",
      "subchanges": [
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1435511623000,
      "commitNameOld": "4ea1896f464b0f6c0ddfca3d8d9c9f84703bae5e",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 19.48,
      "commitsBetweenForRepo": 168,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n-    private void flushAndCloseOutStream(OutputStream stream) {\n+    private static void flushAndCloseOutStream(OutputStream stream) {\n         try {\n             Flushables.flush(stream, false);\n             Closeables.close(stream, false);\n         }\n         catch (final IOException ex) {\n             LOG.debug(\"Unable to flush and close output stream.\", ex);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from \u0027logging-jakarta\u0027 ruleset, issue #871\n",
      "commitDate": 1428961380000,
      "commitName": "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1428448515000,
      "commitNameOld": "547fb51b1db4533e6e1a03aa528a2fed5de828e9",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 5.94,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n     private void flushAndCloseOutStream(OutputStream stream)\n     {\n         try {\n             Flushables.flush(stream, false);\n             Closeables.close(stream, false);\n         }\n         catch (final IOException ex) {\n-            Utils.getExceptionLogger()\n-                    .debug(\"Unable to flush and close output stream.\", ex);\n+            LOG.debug(\"Unable to flush and close output stream.\", ex);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "06865630aa3da0b36064b9e00e0e95ff681f234e": {
      "type": "Ybodychange",
      "commitMessage": "Use Guava Closeables to manage closing exceptions\n\n\u003eWhile it\u0027s not safe in the general case to ignore exceptions that are thrown when closing an I/O resource, it should generally be safe in the case of a resource that\u0027s being used only for reading, such as a Reader. Unlike with writable resources, there\u0027s no chance that a failure that occurs when closing the reader indicates a meaningful problem such as a failure to flush all bytes to the underlying resource.\n\n`Reader` and `InputStream` instances are closed using `Closeables.closeQuietly()`, while `RandomAccessFile` is closed with `Closeables.close()` that throws `IOException` and needs to be handled.\n\nFrom Javadoc:\n\u003e```java\npublic static void close(@Nullable\n         Closeable closeable,\n         boolean swallowIOException)\n                  throws IOException\n```\n\u003eCloses a Closeable, with control over whether an IOException may be thrown. This is primarily useful in a finally block, where a thrown exception needs to be logged but not propagated (otherwise the original exception will be lost).\nIf swallowIOException is true then we never throw IOException but merely log it.\n\n\u003eExample:\n```java\n   public void useStreamNicely() throws IOException {\n     SomeStream stream \u003d new SomeStream(\"foo\");\n     boolean threw \u003d true;\n     try {\n       // ... code which does something with the stream ...\n       threw \u003d false;\n     } finally {\n       // If an exception occurs, rethrow it only if threw\u003d\u003dfalse:\n       Closeables.close(stream, threw);\n     }\n   }\n```\n\nMoreover, `Closeables.close()` and  `Flushables.flush()` are used to flush and close `OutputStream`.\n",
      "commitDate": 1427398517000,
      "commitName": "06865630aa3da0b36064b9e00e0e95ff681f234e",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1426454536000,
      "commitNameOld": "1c15b6a36baa68dc3f2ebdf9baac131e98bb9e04",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,11 @@\n     private void flushAndCloseOutStream(OutputStream stream)\n     {\n-        if (stream !\u003d null) {\n-            try {\n-                stream.flush();\n-            }\n-            catch (final IOException ex) {\n-                Utils.getExceptionLogger()\n-                    .debug(\"Unable to flush output stream.\", ex);\n-            }\n-            finally {\n-                Utils.closeQuietly(stream);\n-            }\n+        try {\n+            Flushables.flush(stream, false);\n+            Closeables.close(stream, false);\n+        }\n+        catch (final IOException ex) {\n+            Utils.getExceptionLogger()\n+                    .debug(\"Unable to flush and close output stream.\", ex);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588": {
      "type": "Ybodychange",
      "commitMessage": "New check FileTabCharacter  for ensuring that any files does not contain a tab character. It is now used to ensure the documentation files do not contain tabs.\n\nAlso introduced Utils.closeQuietly to clean up code.\n",
      "commitDate": 1225956072000,
      "commitName": "bd8a1a545fd1bc19d5f84c5061c5383796a7c588",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1214968564000,
      "commitNameOld": "d2af4accdde3eac0a2103353f490e97bf62f61d2",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 127.17,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,15 @@\n     private void flushAndCloseOutStream(OutputStream aStream)\n     {\n         if (aStream !\u003d null) {\n             try {\n                 aStream.flush();\n             }\n             catch (final IOException ex) {\n                 Utils.getExceptionLogger()\n                     .debug(\"Unable to flush output stream.\", ex);\n             }\n             finally {\n-                try {\n-                    aStream.close();\n-                }\n-                catch (final IOException ex) {\n-                    Utils.getExceptionLogger()\n-                        .debug(\"Unable to close output stream.\", ex);\n-                }\n+                Utils.closeQuietly(aStream);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d2af4accdde3eac0a2103353f490e97bf62f61d2": {
      "type": "Yintroduced",
      "commitMessage": "Apply parts of patch #1952556 fixing some FindBugs bugs. Thanks to Travis Schneeberger\n",
      "commitDate": 1214968564000,
      "commitName": "d2af4accdde3eac0a2103353f490e97bf62f61d2",
      "commitAuthor": "Oliver Burn"
    }
  }
}