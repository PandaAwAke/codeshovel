{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "InnerTypeLastCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheck.java",
  "functionStartLine": 64,
  "functionEndLine": 81,
  "changeHistory": [
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "1650f482691b47ebb9a5f1d95dcf4e72243d5720",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "e912c46b5bb5c085323930bd1e500b180c1bea8d",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
    "4c384214a90272fe239b76e35ec5bcb87ef4b080",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c4853b445219fd3d31d290c37184e46a8c4161ed"
  ],
  "changeHistoryShort": {
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "1650f482691b47ebb9a5f1d95dcf4e72243d5720": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "e912c46b5bb5c085323930bd1e500b180c1bea8d": "Ybodychange",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": "Ymultichange(Yparameterchange,Ybodychange)",
    "4c384214a90272fe239b76e35ec5bcb87ef4b080": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c4853b445219fd3d31d290c37184e46a8c4161ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": 1440705239000,
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public void visitToken(DetailAST ast) {\n         // First root class\n         if (rootClass) {\n             rootClass \u003d false;\n         }\n         else {\n             DetailAST nextSibling \u003d ast.getNextSibling();\n             while (nextSibling !\u003d null) {\n-                if (!ScopeUtils.inCodeBlock(ast)\n+                if (!ScopeUtils.isInCodeBlock(ast)\n                     \u0026\u0026 (nextSibling.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n                         || nextSibling.getType() \u003d\u003d TokenTypes.METHOD_DEF)) {\n                     log(nextSibling.getLineNo(), nextSibling.getColumnNo(),\n                         MSG_KEY);\n                 }\n                 nextSibling \u003d nextSibling.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1650f482691b47ebb9a5f1d95dcf4e72243d5720": {
      "type": "Ybodychange",
      "commitMessage": "Fix dangling Javadoc comments. #1555\n\nFixes `DanglingJavadoc` inspection violations.\n\nDescription:\n\u003eReports dangling Javadoc comments. Javadoc comment are dangling if they don\u0027t belong to any class, method or field. For example a Javadoc comment in between method declarations that have their own javadoc comments.\n",
      "commitDate": 1439131021000,
      "commitName": "1650f482691b47ebb9a5f1d95dcf4e72243d5720",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439084780000,
      "commitNameOld": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public void visitToken(DetailAST ast) {\n-        /** First root class */\n+        // First root class\n         if (rootClass) {\n             rootClass \u003d false;\n         }\n         else {\n             DetailAST nextSibling \u003d ast.getNextSibling();\n             while (nextSibling !\u003d null) {\n                 if (!ScopeUtils.inCodeBlock(ast)\n                     \u0026\u0026 (nextSibling.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n                         || nextSibling.getType() \u003d\u003d TokenTypes.METHOD_DEF)) {\n                     log(nextSibling.getLineNo(), nextSibling.getColumnNo(),\n                         MSG_KEY);\n                 }\n                 nextSibling \u003d nextSibling.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 16.82,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public void visitToken(DetailAST ast) {\n         /** First root class */\n         if (rootClass) {\n             rootClass \u003d false;\n         }\n         else {\n             DetailAST nextSibling \u003d ast.getNextSibling();\n-            while (null !\u003d nextSibling) {\n+            while (nextSibling !\u003d null) {\n                 if (!ScopeUtils.inCodeBlock(ast)\n                     \u0026\u0026 (nextSibling.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n                         || nextSibling.getType() \u003d\u003d TokenTypes.METHOD_DEF)) {\n                     log(nextSibling.getLineNo(), nextSibling.getColumnNo(),\n                         MSG_KEY);\n                 }\n                 nextSibling \u003d nextSibling.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e912c46b5bb5c085323930bd1e500b180c1bea8d": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, design package, issue #537\n",
      "commitDate": 1424437367000,
      "commitName": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST ast)\n     {\n         /** First root class */\n         if (rootClass) {\n             rootClass \u003d false;\n         }\n         else {\n             DetailAST nextSibling \u003d ast.getNextSibling();\n             while (null !\u003d nextSibling) {\n                 if (!ScopeUtils.inCodeBlock(ast)\n                     \u0026\u0026 (nextSibling.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n                         || nextSibling.getType() \u003d\u003d TokenTypes.METHOD_DEF))\n                 {\n                     log(nextSibling.getLineNo(), nextSibling.getColumnNo(),\n-                        \"arrangement.members.before.inner\");\n+                        MSG_KEY);\n                 }\n                 nextSibling \u003d nextSibling.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, design, #512\n",
      "commitDate": 1421677275000,
      "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "4c384214a90272fe239b76e35ec5bcb87ef4b080": {
      "type": "Ybodychange",
      "commitMessage": "InnerTypeLast within methods #6\n",
      "commitDate": 1417532887000,
      "commitName": "4c384214a90272fe239b76e35ec5bcb87ef4b080",
      "commitAuthor": "ychulovskyy",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 272.91,
      "commitsBetweenForRepo": 301,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n     public void visitToken(DetailAST aAST)\n     {\n         /** First root class */\n         if (mRootClass) {\n             mRootClass \u003d false;\n         }\n         else {\n             DetailAST nextSibling \u003d aAST.getNextSibling();\n-            while (null !\u003d nextSibling\n-                \u0026\u0026 ((nextSibling.getType() !\u003d TokenTypes.CLASS_DEF)\n-                    || (nextSibling.getType() !\u003d TokenTypes.INTERFACE_DEF)))\n-            {\n-                if (nextSibling.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n-                        || nextSibling.getType() \u003d\u003d TokenTypes.METHOD_DEF)\n+            while (null !\u003d nextSibling) {\n+                if (!ScopeUtils.inCodeBlock(aAST)\n+                    \u0026\u0026 (nextSibling.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n+                        || nextSibling.getType() \u003d\u003d TokenTypes.METHOD_DEF))\n                 {\n                     log(nextSibling.getLineNo(), nextSibling.getColumnNo(),\n                         \"arrangement.members.before.inner\");\n                 }\n                 nextSibling \u003d nextSibling.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c4853b445219fd3d31d290c37184e46a8c4161ed": {
      "type": "Yintroduced",
      "commitMessage": "Added InnerTypeLast check.\n",
      "commitDate": 1281874950000,
      "commitName": "c4853b445219fd3d31d290c37184e46a8c4161ed",
      "commitAuthor": "Oliver Burn"
    }
  }
}