{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "StaticVariableNameCheck.java",
  "functionName": "mustCheckName",
  "functionId": "mustCheckName___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheck.java",
  "functionStartLine": 74,
  "functionEndLine": 84,
  "changeHistory": [
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "4fd6b3ee5978613e7f779fe83330ccf18092d784",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "2bf724effc3c43a43fbe254dd81985f618be8eee",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "6125beffc437f970eae276b4a6542265c6547784",
    "d80cbf61042a3901b2f61de7ad4494ff93ea0e3c",
    "6e676cac5dcb94b6df07466801629d0230385279"
  ],
  "changeHistoryShort": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "4fd6b3ee5978613e7f779fe83330ccf18092d784": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "2bf724effc3c43a43fbe254dd81985f618be8eee": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "d80cbf61042a3901b2f61de7ad4494ff93ea0e3c": "Yfilerename",
    "6e676cac5dcb94b6df07466801629d0230385279": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for modifiers",
      "commitDate": 1508986494000,
      "commitName": "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
      "commitAuthor": "rnveach",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 271.52,
      "commitsBetweenForRepo": 1006,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     protected final boolean mustCheckName(DetailAST ast) {\n         final DetailAST modifiersAST \u003d\n             ast.findFirstToken(TokenTypes.MODIFIERS);\n-        final boolean isStatic \u003d modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);\n-        final boolean isFinal \u003d modifiersAST.branchContains(TokenTypes.FINAL);\n+        final boolean isStatic \u003d modifiersAST.findFirstToken(TokenTypes.LITERAL_STATIC) !\u003d null;\n+        final boolean isFinal \u003d modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null;\n \n         return isStatic\n                 \u0026\u0026 !isFinal\n                 \u0026\u0026 shouldCheckInScope(modifiersAST)\n                 \u0026\u0026 !ScopeUtils.isInInterfaceOrAnnotationBlock(ast);\n     }\n\\ No newline at end of file\n"
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": 1440705239000,
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     protected final boolean mustCheckName(DetailAST ast) {\n         final DetailAST modifiersAST \u003d\n             ast.findFirstToken(TokenTypes.MODIFIERS);\n         final boolean isStatic \u003d modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);\n         final boolean isFinal \u003d modifiersAST.branchContains(TokenTypes.FINAL);\n \n         return isStatic\n                 \u0026\u0026 !isFinal\n                 \u0026\u0026 shouldCheckInScope(modifiersAST)\n-                \u0026\u0026 !ScopeUtils.inInterfaceOrAnnotationBlock(ast);\n+                \u0026\u0026 !ScopeUtils.isInInterfaceOrAnnotationBlock(ast);\n     }\n\\ No newline at end of file\n"
    },
    "4fd6b3ee5978613e7f779fe83330ccf18092d784": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1288: \u0027StaticVariableNameCheck\u0027 was refactored, UT coverage improved\n",
      "commitDate": 1436306595000,
      "commitName": "4fd6b3ee5978613e7f779fe83330ccf18092d784",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 51.43,
      "commitsBetweenForRepo": 278,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,11 @@\n     protected final boolean mustCheckName(DetailAST ast) {\n         final DetailAST modifiersAST \u003d\n             ast.findFirstToken(TokenTypes.MODIFIERS);\n-        final boolean isStatic \u003d modifiersAST !\u003d null\n-            \u0026\u0026 modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);\n-        final boolean isFinal \u003d modifiersAST !\u003d null\n-            \u0026\u0026 modifiersAST.branchContains(TokenTypes.FINAL);\n+        final boolean isStatic \u003d modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);\n+        final boolean isFinal \u003d modifiersAST.branchContains(TokenTypes.FINAL);\n \n         return isStatic\n                 \u0026\u0026 !isFinal\n                 \u0026\u0026 shouldCheckInScope(modifiersAST)\n                 \u0026\u0026 !ScopeUtils.inInterfaceOrAnnotationBlock(ast);\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425602876000,
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     protected final boolean mustCheckName(DetailAST ast)\n     {\n         final DetailAST modifiersAST \u003d\n             ast.findFirstToken(TokenTypes.MODIFIERS);\n-        final boolean isStatic \u003d (modifiersAST !\u003d null)\n+        final boolean isStatic \u003d modifiersAST !\u003d null\n             \u0026\u0026 modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);\n-        final boolean isFinal \u003d (modifiersAST !\u003d null)\n+        final boolean isFinal \u003d modifiersAST !\u003d null\n             \u0026\u0026 modifiersAST.branchContains(TokenTypes.FINAL);\n \n-        return (isStatic\n+        return isStatic\n                 \u0026\u0026 !isFinal\n                 \u0026\u0026 shouldCheckInScope(modifiersAST)\n-                \u0026\u0026 !ScopeUtils.inInterfaceOrAnnotationBlock(ast));\n+                \u0026\u0026 !ScopeUtils.inInterfaceOrAnnotationBlock(ast);\n     }\n\\ No newline at end of file\n"
    },
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, naming, #512\n",
      "commitDate": 1421677299000,
      "commitName": "750b733bd124eaea34d4692a1bb8d0fd0fe90976",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "2bf724effc3c43a43fbe254dd81985f618be8eee": {
      "type": "Ybodychange",
      "commitMessage": "Enhanced the naming checks ConstantName, MemberName, MethodName and StaticVariableName to utilise the access control tuning features of AbstractAccessControlNameCheck. Thanks to Steve McKay for patch #2893581.\n",
      "commitDate": 1260591023000,
      "commitName": "2bf724effc3c43a43fbe254dd81985f618be8eee",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1237695418000,
      "commitNameOld": "216fcb79f9f5bbd05244364e926f261a90e697d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 265.0,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n     protected final boolean mustCheckName(DetailAST aAST)\n     {\n         final DetailAST modifiersAST \u003d\n             aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final boolean isStatic \u003d (modifiersAST !\u003d null)\n             \u0026\u0026 modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);\n         final boolean isFinal \u003d (modifiersAST !\u003d null)\n             \u0026\u0026 modifiersAST.branchContains(TokenTypes.FINAL);\n \n         return (isStatic\n                 \u0026\u0026 !isFinal\n+                \u0026\u0026 shouldCheckInScope(modifiersAST)\n                 \u0026\u0026 !ScopeUtils.inInterfaceOrAnnotationBlock(aAST));\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.35,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     protected final boolean mustCheckName(DetailAST aAST)\n     {\n-        DetailAST modifiersAST \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n+        final DetailAST modifiersAST \u003d\n+            aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final boolean isStatic \u003d (modifiersAST !\u003d null)\n             \u0026\u0026 modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);\n         final boolean isFinal \u003d (modifiersAST !\u003d null)\n             \u0026\u0026 modifiersAST.branchContains(TokenTypes.FINAL);\n \n         return (isStatic\n                 \u0026\u0026 !isFinal\n                 \u0026\u0026 !ScopeUtils.inInterfaceOrAnnotationBlock(aAST));\n     }\n\\ No newline at end of file\n"
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": 1096311350000,
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1074114639000,
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 256.91,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,12 @@\n     protected final boolean mustCheckName(DetailAST aAST)\n     {\n         DetailAST modifiersAST \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final boolean isStatic \u003d (modifiersAST !\u003d null)\n             \u0026\u0026 modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);\n         final boolean isFinal \u003d (modifiersAST !\u003d null)\n             \u0026\u0026 modifiersAST.branchContains(TokenTypes.FINAL);\n \n-        return (isStatic \u0026\u0026 !isFinal \u0026\u0026 !ScopeUtils.inInterfaceBlock(aAST));\n+        return (isStatic\n+                \u0026\u0026 !isFinal\n+                \u0026\u0026 !ScopeUtils.inInterfaceOrAnnotationBlock(aAST));\n     }\n\\ No newline at end of file\n"
    },
    "d80cbf61042a3901b2f61de7ad4494ff93ea0e3c": {
      "type": "Yfilerename",
      "commitMessage": "Moved the Naming checks to a sub-package. I had some\nspare time between meetings today.\n",
      "commitDate": 1054710881000,
      "commitName": "d80cbf61042a3901b2f61de7ad4494ff93ea0e3c",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054700509000,
      "commitNameOld": "03ac7a087862456e949f377e2153c47d310ca61e",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "6e676cac5dcb94b6df07466801629d0230385279": {
      "type": "Yintroduced",
      "commitMessage": "Patch from Rick Giles. Also removed dead code\n",
      "commitDate": 1035899070000,
      "commitName": "6e676cac5dcb94b6df07466801629d0230385279",
      "commitAuthor": "Oliver Burn"
    }
  }
}