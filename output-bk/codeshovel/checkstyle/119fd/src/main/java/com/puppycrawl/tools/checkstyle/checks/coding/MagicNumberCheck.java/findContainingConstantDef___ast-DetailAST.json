{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "MagicNumberCheck.java",
  "functionName": "findContainingConstantDef",
  "functionId": "findContainingConstantDef___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
  "functionStartLine": 256,
  "functionEndLine": 282,
  "changeHistory": [
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
    "7410a9f8bfa475e37d786271b6fcceb6a73a897f",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "1214dd0e742fa991b5a7343908e07da59e2354b1",
    "6125beffc437f970eae276b4a6542265c6547784",
    "fc17c983239b6e6a6d3e41f53cb134bd22488db1"
  ],
  "changeHistoryShort": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": "Ybodychange",
    "7410a9f8bfa475e37d786271b6fcceb6a73a897f": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "1214dd0e742fa991b5a7343908e07da59e2354b1": "Ybodychange",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "fc17c983239b6e6a6d3e41f53cb134bd22488db1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for modifiers",
      "commitDate": 1508986494000,
      "commitName": "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
      "commitAuthor": "rnveach",
      "commitDateOld": 1491393573000,
      "commitNameOld": "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 203.62,
      "commitsBetweenForRepo": 804,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private static DetailAST findContainingConstantDef(DetailAST ast) {\n         DetailAST varDefAST \u003d ast;\n         while (varDefAST !\u003d null\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n             varDefAST \u003d varDefAST.getParent();\n         }\n         DetailAST constantDef \u003d null;\n \n         // no containing variable definition?\n         if (varDefAST !\u003d null) {\n             // implicit constant?\n             if (ScopeUtils.isInInterfaceOrAnnotationBlock(varDefAST)\n                     || varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n                 constantDef \u003d varDefAST;\n             }\n             else {\n                 // explicit constant\n                 final DetailAST modifiersAST \u003d varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n \n-                if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n+                if (modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null) {\n                     constantDef \u003d varDefAST;\n                 }\n             }\n         }\n         return constantDef;\n     }\n\\ No newline at end of file\n"
    },
    "7410a9f8bfa475e37d786271b6fcceb6a73a897f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violation fixed for MagicNumberCheck\n",
      "commitDate": 1440741216000,
      "commitName": "7410a9f8bfa475e37d786271b6fcceb6a73a897f",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440705239000,
      "commitNameOld": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.42,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,27 @@\n     private static DetailAST findContainingConstantDef(DetailAST ast) {\n         DetailAST varDefAST \u003d ast;\n         while (varDefAST !\u003d null\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n             varDefAST \u003d varDefAST.getParent();\n         }\n+        DetailAST constantDef \u003d null;\n \n         // no containing variable definition?\n-        if (varDefAST \u003d\u003d null) {\n-            return null;\n-        }\n+        if (varDefAST !\u003d null) {\n+            // implicit constant?\n+            if (ScopeUtils.isInInterfaceOrAnnotationBlock(varDefAST)\n+                    || varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n+                constantDef \u003d varDefAST;\n+            }\n+            else {\n+                // explicit constant\n+                final DetailAST modifiersAST \u003d varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n \n-        // implicit constant?\n-        if (ScopeUtils.isInInterfaceOrAnnotationBlock(varDefAST)\n-            || varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n-            return varDefAST;\n+                if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n+                    constantDef \u003d varDefAST;\n+                }\n+            }\n         }\n-\n-        // explicit constant\n-        final DetailAST modifiersAST \u003d\n-                varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n-        if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n-            return varDefAST;\n-        }\n-\n-        return null;\n+        return constantDef;\n     }\n\\ No newline at end of file\n"
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": 1440705239000,
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private static DetailAST findContainingConstantDef(DetailAST ast) {\n         DetailAST varDefAST \u003d ast;\n         while (varDefAST !\u003d null\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n             varDefAST \u003d varDefAST.getParent();\n         }\n \n         // no containing variable definition?\n         if (varDefAST \u003d\u003d null) {\n             return null;\n         }\n \n         // implicit constant?\n-        if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)\n+        if (ScopeUtils.isInInterfaceOrAnnotationBlock(varDefAST)\n             || varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n             return varDefAST;\n         }\n \n         // explicit constant\n         final DetailAST modifiersAST \u003d\n                 varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n             return varDefAST;\n         }\n \n         return null;\n     }\n\\ No newline at end of file\n"
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1436323201000,
      "commitNameOld": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 10.09,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n-    private DetailAST findContainingConstantDef(DetailAST ast) {\n+    private static DetailAST findContainingConstantDef(DetailAST ast) {\n         DetailAST varDefAST \u003d ast;\n         while (varDefAST !\u003d null\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n             varDefAST \u003d varDefAST.getParent();\n         }\n \n         // no containing variable definition?\n         if (varDefAST \u003d\u003d null) {\n             return null;\n         }\n \n         // implicit constant?\n         if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)\n             || varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF) {\n             return varDefAST;\n         }\n \n         // explicit constant\n         final DetailAST modifiersAST \u003d\n                 varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n             return varDefAST;\n         }\n \n         return null;\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437367000,
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     private DetailAST findContainingConstantDef(DetailAST ast)\n     {\n         DetailAST varDefAST \u003d ast;\n-        while ((varDefAST !\u003d null)\n-                \u0026\u0026 (varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF)\n-                \u0026\u0026 (varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF))\n+        while (varDefAST !\u003d null\n+                \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF\n+                \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF)\n         {\n             varDefAST \u003d varDefAST.getParent();\n         }\n \n         // no containing variable definition?\n         if (varDefAST \u003d\u003d null) {\n             return null;\n         }\n \n         // implicit constant?\n         if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)\n-            || (varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF))\n+            || varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF)\n         {\n             return varDefAST;\n         }\n \n         // explicit constant\n         final DetailAST modifiersAST \u003d\n                 varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n             return varDefAST;\n         }\n \n         return null;\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     private DetailAST findContainingConstantDef(DetailAST aAST)\n     {\n         DetailAST varDefAST \u003d aAST;\n-        while (varDefAST !\u003d null\n-                \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF\n-                \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF)\n+        while ((varDefAST !\u003d null)\n+                \u0026\u0026 (varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF)\n+                \u0026\u0026 (varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF))\n         {\n             varDefAST \u003d varDefAST.getParent();\n         }\n \n         // no containing variable definition?\n         if (varDefAST \u003d\u003d null) {\n             return null;\n         }\n \n         // implicit constant?\n         if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)\n-            || varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF)\n+            || (varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF))\n         {\n             return varDefAST;\n         }\n \n         // explicit constant\n         final DetailAST modifiersAST \u003d\n                 varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n             return varDefAST;\n         }\n \n         return null;\n     }\n\\ No newline at end of file\n"
    },
    "1214dd0e742fa991b5a7343908e07da59e2354b1": {
      "type": "Ybodychange",
      "commitMessage": "fix for 1284682: enum constant are treated the same way as final fields.\n",
      "commitDate": 1126509617000,
      "commitName": "1214dd0e742fa991b5a7343908e07da59e2354b1",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1105267857000,
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 245.85,
      "commitsBetweenForRepo": 209,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n     private DetailAST findContainingConstantDef(DetailAST aAST)\n     {\n         DetailAST varDefAST \u003d aAST;\n         while (varDefAST !\u003d null\n-                \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF)\n+                \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF\n+                \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.ENUM_CONSTANT_DEF)\n         {\n             varDefAST \u003d varDefAST.getParent();\n         }\n \n         // no containing variable definition?\n         if (varDefAST \u003d\u003d null) {\n             return null;\n         }\n \n         // implicit constant?\n-        if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)) {\n+        if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)\n+            || varDefAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF)\n+        {\n             return varDefAST;\n         }\n \n         // explicit constant\n         final DetailAST modifiersAST \u003d\n                 varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n             return varDefAST;\n         }\n \n         return null;\n     }\n\\ No newline at end of file\n"
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": 1096311350000,
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1093528034000,
      "commitNameOld": "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 32.21,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private DetailAST findContainingConstantDef(DetailAST aAST)\n     {\n         DetailAST varDefAST \u003d aAST;\n         while (varDefAST !\u003d null\n                 \u0026\u0026 varDefAST.getType() !\u003d TokenTypes.VARIABLE_DEF)\n         {\n             varDefAST \u003d varDefAST.getParent();\n         }\n \n         // no containing variable definition?\n         if (varDefAST \u003d\u003d null) {\n             return null;\n         }\n \n         // implicit constant?\n-        if (ScopeUtils.inInterfaceBlock(varDefAST)) {\n+        if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)) {\n             return varDefAST;\n         }\n \n         // explicit constant\n         final DetailAST modifiersAST \u003d\n                 varDefAST.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersAST.branchContains(TokenTypes.FINAL)) {\n             return varDefAST;\n         }\n \n         return null;\n     }\n\\ No newline at end of file\n"
    },
    "fc17c983239b6e6a6d3e41f53cb134bd22488db1": {
      "type": "Yintroduced",
      "commitMessage": "Made MagicNumber check less agressive, based on feedback on checkstyle-user list\n",
      "commitDate": 1088954874000,
      "commitName": "fc17c983239b6e6a6d3e41f53cb134bd22488db1",
      "commitAuthor": "Lars Kühne"
    }
  }
}