{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocTypeCheck.java",
  "functionName": "shouldCheck",
  "functionId": "shouldCheck___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java",
  "functionStartLine": 227,
  "functionEndLine": 245,
  "changeHistory": [
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "23c8774d2e2fd245de1e5df02758fd23702c565e",
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f",
    "3bd699bd593414d63c7139aa410f13ec8341a027",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "6125beffc437f970eae276b4a6542265c6547784",
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a"
  ],
  "changeHistoryShort": {
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "23c8774d2e2fd245de1e5df02758fd23702c565e": "Ybodychange",
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f": "Ybodychange",
    "3bd699bd593414d63c7139aa410f13ec8341a027": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2": {
      "type": "Ybodychange",
      "commitMessage": "Pull #4328: moved variables inside if blocks to reduce execution time",
      "commitDate": 1494119754000,
      "commitName": "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2",
      "commitAuthor": "rnveach",
      "commitDateOld": 1491393573000,
      "commitNameOld": "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 31.55,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     private boolean shouldCheck(final DetailAST ast) {\n-        final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-        final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope customScope;\n \n         if (ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n             customScope \u003d Scope.PUBLIC;\n         }\n         else {\n-            customScope \u003d declaredScope;\n+            final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n+            customScope \u003d ScopeUtils.getScopeFromMods(mods);\n         }\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n         return customScope.isIn(scope)\n             \u0026\u0026 (surroundingScope \u003d\u003d null || surroundingScope.isIn(scope))\n             \u0026\u0026 (excludeScope \u003d\u003d null\n                 || !customScope.isIn(excludeScope)\n                 || surroundingScope !\u003d null\n                 \u0026\u0026 !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n"
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": 1440705239000,
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private boolean shouldCheck(final DetailAST ast) {\n         final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope customScope;\n \n-        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n+        if (ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n             customScope \u003d Scope.PUBLIC;\n         }\n         else {\n             customScope \u003d declaredScope;\n         }\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n         return customScope.isIn(scope)\n             \u0026\u0026 (surroundingScope \u003d\u003d null || surroundingScope.isIn(scope))\n             \u0026\u0026 (excludeScope \u003d\u003d null\n                 || !customScope.isIn(excludeScope)\n                 || surroundingScope !\u003d null\n                 \u0026\u0026 !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n"
    },
    "23c8774d2e2fd245de1e5df02758fd23702c565e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: AvoidInlineConditional violations fixed\n",
      "commitDate": 1439784080000,
      "commitName": "23c8774d2e2fd245de1e5df02758fd23702c565e",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439782863000,
      "commitNameOld": "d56a2a366c6f9e3e8639d492d548ae562b75dc81",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,20 @@\n     private boolean shouldCheck(final DetailAST ast) {\n         final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n-        final Scope customScope \u003d\n-            ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n-                ? Scope.PUBLIC : declaredScope;\n+        final Scope customScope;\n+\n+        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n+            customScope \u003d Scope.PUBLIC;\n+        }\n+        else {\n+            customScope \u003d declaredScope;\n+        }\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n         return customScope.isIn(scope)\n             \u0026\u0026 (surroundingScope \u003d\u003d null || surroundingScope.isIn(scope))\n             \u0026\u0026 (excludeScope \u003d\u003d null\n                 || !customScope.isIn(excludeScope)\n                 || surroundingScope !\u003d null\n                 \u0026\u0026 !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n"
    },
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this. #1555\n\nFixes `UnnecessaryThis` inspection violations after recent commits.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n",
      "commitDate": 1439610129000,
      "commitName": "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439560811000,
      "commitNameOld": "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 0.57,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private boolean shouldCheck(final DetailAST ast) {\n         final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope customScope \u003d\n             ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n                 ? Scope.PUBLIC : declaredScope;\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n-        return customScope.isIn(this.scope)\n-            \u0026\u0026 (surroundingScope \u003d\u003d null || surroundingScope.isIn(this.scope))\n+        return customScope.isIn(scope)\n+            \u0026\u0026 (surroundingScope \u003d\u003d null || surroundingScope.isIn(scope))\n             \u0026\u0026 (excludeScope \u003d\u003d null\n                 || !customScope.isIn(excludeScope)\n                 || surroundingScope !\u003d null\n                 \u0026\u0026 !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n"
    },
    "3bd699bd593414d63c7139aa410f13ec8341a027": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: HiddenField violations fixed\n",
      "commitDate": 1439356761000,
      "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439295539000,
      "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private boolean shouldCheck(final DetailAST ast) {\n         final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n-        final Scope scope \u003d\n+        final Scope customScope \u003d\n             ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n                 ? Scope.PUBLIC : declaredScope;\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n-        return scope.isIn(this.scope)\n+        return customScope.isIn(this.scope)\n             \u0026\u0026 (surroundingScope \u003d\u003d null || surroundingScope.isIn(this.scope))\n             \u0026\u0026 (excludeScope \u003d\u003d null\n-                || !scope.isIn(excludeScope)\n+                || !customScope.isIn(excludeScope)\n                 || surroundingScope !\u003d null\n                 \u0026\u0026 !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private boolean shouldCheck(final DetailAST ast)\n     {\n         final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope scope \u003d\n             ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n                 ? Scope.PUBLIC : declaredScope;\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n         return scope.isIn(this.scope)\n-            \u0026\u0026 ((surroundingScope \u003d\u003d null) || surroundingScope.isIn(this.scope))\n-            \u0026\u0026 ((excludeScope \u003d\u003d null)\n+            \u0026\u0026 (surroundingScope \u003d\u003d null || surroundingScope.isIn(this.scope))\n+            \u0026\u0026 (excludeScope \u003d\u003d null\n                 || !scope.isIn(excludeScope)\n-                || ((surroundingScope !\u003d null)\n-                \u0026\u0026 !surroundingScope.isIn(excludeScope)));\n+                || surroundingScope !\u003d null\n+                \u0026\u0026 !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private boolean shouldCheck(final DetailAST aAST)\n     {\n         final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope scope \u003d\n             ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n                 ? Scope.PUBLIC : declaredScope;\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n \n         return scope.isIn(mScope)\n             \u0026\u0026 ((surroundingScope \u003d\u003d null) || surroundingScope.isIn(mScope))\n             \u0026\u0026 ((mExcludeScope \u003d\u003d null)\n                 || !scope.isIn(mExcludeScope)\n-                || (surroundingScope !\u003d null)\n-                \u0026\u0026 !surroundingScope.isIn(mExcludeScope));\n+                || ((surroundingScope !\u003d null)\n+                \u0026\u0026 !surroundingScope.isIn(mExcludeScope)));\n     }\n\\ No newline at end of file\n"
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": 1096311350000,
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1085571846000,
      "commitNameOld": "e577b7ebb8fdc66cc744710b543f04ce84d5c508",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 124.3,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n     private boolean shouldCheck(final DetailAST aAST)\n     {\n         final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope scope \u003d\n-            ScopeUtils.inInterfaceBlock(aAST) ? Scope.PUBLIC : declaredScope;\n+            ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n+                ? Scope.PUBLIC : declaredScope;\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n \n         return scope.isIn(mScope)\n             \u0026\u0026 ((surroundingScope \u003d\u003d null) || surroundingScope.isIn(mScope))\n             \u0026\u0026 ((mExcludeScope \u003d\u003d null)\n                 || !scope.isIn(mExcludeScope)\n                 || (surroundingScope !\u003d null)\n                 \u0026\u0026 !surroundingScope.isIn(mExcludeScope));\n     }\n\\ No newline at end of file\n"
    },
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a": {
      "type": "Yintroduced",
      "commitMessage": "Scoping for javadoc checks\n",
      "commitDate": 1080421817000,
      "commitName": "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}