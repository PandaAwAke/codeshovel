{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "TreeWalker.java",
  "functionName": "notifyVisit",
  "functionId": "notifyVisit___ast-DetailAST__astState-AstState",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
  "functionStartLine": 385,
  "functionEndLine": 393,
  "changeHistory": [
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
    "0fe31dfdf954242756eec703576cda4c8f561f1d",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f2b19f10806dc89807888a772de34177c36c602b",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "fa9bf2e0ef561ab0e112157fd55c52ffac1b5715",
    "3925906faee1cf9310942708e2946d3e598f5f71",
    "278b12b7c2129d8139f1245ea69ec352e369172f",
    "19257b2cdb950aac0b729ee8a3a979e5605163f9"
  ],
  "changeHistoryShort": {
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479": "Ybodychange",
    "0fe31dfdf954242756eec703576cda4c8f561f1d": "Ybodychange",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": "Ybodychange",
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f2b19f10806dc89807888a772de34177c36c602b": "Ybodychange",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "fa9bf2e0ef561ab0e112157fd55c52ffac1b5715": "Ymultichange(Yrename,Ybodychange)",
    "3925906faee1cf9310942708e2946d3e598f5f71": "Ybodychange",
    "278b12b7c2129d8139f1245ea69ec352e369172f": "Ybodychange",
    "19257b2cdb950aac0b729ee8a3a979e5605163f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2551: renamed Check to AbstractCheck",
      "commitDate": 1454680863000,
      "commitName": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthor": "rnveach",
      "commitDateOld": 1453646135000,
      "commitNameOld": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 11.98,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private void notifyVisit(DetailAST ast, AstState astState) {\n-        final Collection\u003cCheck\u003e visitors \u003d getListOfChecks(ast, astState);\n+        final Collection\u003cAbstractCheck\u003e visitors \u003d getListOfChecks(ast, astState);\n \n         if (visitors !\u003d null) {\n-            for (Check check : visitors) {\n+            for (AbstractCheck check : visitors) {\n                 check.visitToken(ast);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0fe31dfdf954242756eec703576cda4c8f561f1d": {
      "type": "Ybodychange",
      "commitMessage": "Source files should not have any duplicated blocks. Issue #46\n",
      "commitDate": 1440046886000,
      "commitName": "0fe31dfdf954242756eec703576cda4c8f561f1d",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1439886329000,
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 1.86,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,9 @@\n     private void notifyVisit(DetailAST ast, AstState astState) {\n-        Collection\u003cCheck\u003e visitors;\n-        final String tokenType \u003d Utils.getTokenName(ast.getType());\n+        final Collection\u003cCheck\u003e visitors \u003d getListOfChecks(ast, astState);\n \n-        if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n-            if (!tokenToCommentChecks.containsKey(tokenType)) {\n-                return;\n+        if (visitors !\u003d null) {\n+            for (Check check : visitors) {\n+                check.visitToken(ast);\n             }\n-            visitors \u003d tokenToCommentChecks.get(tokenType);\n-        }\n-        else {\n-            if (!tokenToOrdinaryChecks.containsKey(tokenType)) {\n-                return;\n-            }\n-            visitors \u003d tokenToOrdinaryChecks.get(tokenType);\n-        }\n-\n-        for (Check check : visitors) {\n-            check.visitToken(ast);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": {
      "type": "Ybodychange",
      "commitMessage": "Rename variables with \u0027standard\u0027 names of unexpected types. #1555\n\nFixes `StandardVariableNames` inspection violations.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n* i, j, k, m, n - int\n* f - float\n* d - double\n* b - byte\n* c, ch - char\n* l - long\n* s, str - String\n",
      "commitDate": 1439008721000,
      "commitName": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439007161000,
      "commitNameOld": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void notifyVisit(DetailAST ast, AstState astState) {\n         Collection\u003cCheck\u003e visitors;\n         final String tokenType \u003d Utils.getTokenName(ast.getType());\n \n         if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n             if (!tokenToCommentChecks.containsKey(tokenType)) {\n                 return;\n             }\n             visitors \u003d tokenToCommentChecks.get(tokenType);\n         }\n         else {\n             if (!tokenToOrdinaryChecks.containsKey(tokenType)) {\n                 return;\n             }\n             visitors \u003d tokenToOrdinaryChecks.get(tokenType);\n         }\n \n-        for (Check c : visitors) {\n-            c.visitToken(ast);\n+        for (Check check : visitors) {\n+            check.visitToken(ast);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037": {
      "type": "Ybodychange",
      "commitMessage": "Findbugs violation: api.TokenTypes do System.exit(...). #923\n",
      "commitDate": 1431729119000,
      "commitName": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1431535637000,
      "commitNameOld": "466b1ebb31bcfda5cf2bbf3091b6bccb5fa8f000",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void notifyVisit(DetailAST ast, AstState astState)\n     {\n         Collection\u003cCheck\u003e visitors;\n-        final String tokenType \u003d TokenTypes.getTokenName(ast.getType());\n+        final String tokenType \u003d Utils.getTokenName(ast.getType());\n \n         if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n             if (!tokenToCommentChecks.containsKey(tokenType)) {\n                 return;\n             }\n             visitors \u003d tokenToCommentChecks.get(tokenType);\n         }\n         else {\n             if (!tokenToOrdinaryChecks.containsKey(tokenType)) {\n                 return;\n             }\n             visitors \u003d tokenToOrdinaryChecks.get(tokenType);\n         }\n \n         for (Check c : visitors) {\n             c.visitToken(ast);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f2b19f10806dc89807888a772de34177c36c602b": {
      "type": "Ybodychange",
      "commitMessage": "fix for MultiMap empty collections garbage\n",
      "commitDate": 1415151014000,
      "commitName": "f2b19f10806dc89807888a772de34177c36c602b",
      "commitAuthor": "Vladimir Sitnikov",
      "commitDateOld": 1413609550000,
      "commitNameOld": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 17.84,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n     private void notifyVisit(DetailAST aAST, AstState aAstState)\n     {\n         Collection\u003cCheck\u003e visitors;\n         final String tokenType \u003d TokenTypes.getTokenName(aAST.getType());\n \n         if (aAstState \u003d\u003d AstState.WITH_COMMENTS) {\n+            if (!mTokenToCommentChecks.containsKey(tokenType)) {\n+                return;\n+            }\n             visitors \u003d mTokenToCommentChecks.get(tokenType);\n         }\n         else {\n+            if (!mTokenToOrdinaryChecks.containsKey(tokenType)) {\n+                return;\n+            }\n             visitors \u003d mTokenToOrdinaryChecks.get(tokenType);\n         }\n \n         for (Check c : visitors) {\n             c.visitToken(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #49. Added support of single-line and block comments\n",
      "commitDate": 1413609550000,
      "commitName": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1216160862000,
      "commitNameOld": "17754d363645285e49bf4323a1af5762af47a8ea",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 64.55,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private void processRec(DetailAST aAST)\n     {\n         if (aAST \u003d\u003d null) {\n             return;\n         }\n \n         notifyVisit(aAST);\n \n-        final DetailAST child \u003d (DetailAST) aAST.getFirstChild();\n+        final DetailAST child \u003d aAST.getFirstChild();\n         if (child !\u003d null) {\n             processRec(child);\n         }\n \n         notifyLeave(aAST);\n \n-        final DetailAST sibling \u003d (DetailAST) aAST.getNextSibling();\n+        final DetailAST sibling \u003d aAST.getNextSibling();\n         if (sibling !\u003d null) {\n             processRec(sibling);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "fa9bf2e0ef561ab0e112157fd55c52ffac1b5715": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "I tired from these horrable long stack traces, so I\u0027ve added iterative\nimplementation of tree processing, now we can activate it by setting\ncheckstyle.use.recursive.algorithm to false (by default checkstyle\nstill uses recursive algorithm).\n\nAlso I\u0027ve chenged build.xml so it will be possible to use it from any\nlocation and user will be able to specify filter for tests.\n",
      "commitDate": 1122153507000,
      "commitName": "fa9bf2e0ef561ab0e112157fd55c52ffac1b5715",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        "Yrename",
        "Ybodychange"
      ]
    },
    "3925906faee1cf9310942708e2946d3e598f5f71": {
      "type": "Ybodychange",
      "commitMessage": "fix for DetailAST\u0027s parent problem\n",
      "commitDate": 1053604084000,
      "commitName": "3925906faee1cf9310942708e2946d3e598f5f71",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1053365666000,
      "commitNameOld": "f0edd3eaf152d377cf8ec47574cf042c0fc14543",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 2.76,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n     private void process(DetailAST aAST)\n     {\n         if (aAST \u003d\u003d null) {\n             return;\n         }\n \n         notifyVisit(aAST);\n \n         final DetailAST child \u003d (DetailAST) aAST.getFirstChild();\n         if (child !\u003d null) {\n-            setParent(child, aAST); // TODO: Manage parent in DetailAST\n             process(child);\n         }\n \n         notifyLeave(aAST);\n \n         final DetailAST sibling \u003d (DetailAST) aAST.getNextSibling();\n         if (sibling !\u003d null) {\n-            setParent(sibling, aAST.getParent()); // TODO: Manage parent ...\n             process(sibling);\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "278b12b7c2129d8139f1245ea69ec352e369172f": {
      "type": "Ybodychange",
      "commitMessage": "Removed DetailsAST.setParent() from public API.\n\nI\u0027m scaring myself with the techniques I used to achieve this, but\nI opted for getting the API right. We can\u0027t fix the API once\nit\u0027s out the door, whereas we can try to remove this hack later after\nmore investigation how ANLTR works.\n",
      "commitDate": 1039864162000,
      "commitName": "278b12b7c2129d8139f1245ea69ec352e369172f",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1039666751000,
      "commitNameOld": "b3caa3b7ad0a135038c2c1c5bda4fccb897a00c4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.28,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void process(DetailAST aAST)\n     {\n         if (aAST \u003d\u003d null) {\n             return;\n         }\n \n         notifyVisit(aAST);\n \n         final DetailAST child \u003d (DetailAST) aAST.getFirstChild();\n         if (child !\u003d null) {\n-            child.setParent(aAST);\n+            setParent(child, aAST); // TODO: Manage parent in DetailAST\n             process(child);\n         }\n \n         notifyLeave(aAST);\n \n         final DetailAST sibling \u003d (DetailAST) aAST.getNextSibling();\n         if (sibling !\u003d null) {\n-            sibling.setParent(aAST.getParent());\n+            setParent(sibling, aAST.getParent()); // TODO: Manage parent ...\n             process(sibling);\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "19257b2cdb950aac0b729ee8a3a979e5605163f9": {
      "type": "Yintroduced",
      "commitMessage": "Added the tree walker (with all the bugs hopefully marked with TODO:\ncomments). Currently keeping the old grammars around so we can checkstyle the\nnew checkstyle will old version. Kind of a version of boot strapping. :-)\n",
      "commitDate": 1032093857000,
      "commitName": "19257b2cdb950aac0b729ee8a3a979e5605163f9",
      "commitAuthor": "Oliver Burn"
    }
  }
}