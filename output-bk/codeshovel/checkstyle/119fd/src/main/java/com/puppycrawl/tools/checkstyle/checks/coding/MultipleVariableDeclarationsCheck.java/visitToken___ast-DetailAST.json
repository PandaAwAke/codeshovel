{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "MultipleVariableDeclarationsCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleVariableDeclarationsCheck.java",
  "functionStartLine": 78,
  "functionEndLine": 113,
  "changeHistory": [
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
    "d6a255f36548fa0fe952d543ef0e5c0a5e14bad6",
    "192a2eecfeb8dcc5e8dd000599c72758ad46868f",
    "dba746ba9387bee04ed362254abb5d9ed35169cd",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "68c1541bb3d6a6128bf6f895bc82f8925d26c00d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "a6a288813e2b86dd11ed0bd3e4af9539480813ff"
  ],
  "changeHistoryShort": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": "Ybodychange",
    "d6a255f36548fa0fe952d543ef0e5c0a5e14bad6": "Ybodychange",
    "192a2eecfeb8dcc5e8dd000599c72758ad46868f": "Ybodychange",
    "dba746ba9387bee04ed362254abb5d9ed35169cd": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "68c1541bb3d6a6128bf6f895bc82f8925d26c00d": "Ybodychange",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "a6a288813e2b86dd11ed0bd3e4af9539480813ff": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": 1464356569000,
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1454680863000,
      "commitNameOld": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 111.99,
      "commitsBetweenForRepo": 276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,36 @@\n     public void visitToken(DetailAST ast) {\n         DetailAST nextNode \u003d ast.getNextSibling();\n \n-        if (nextNode \u003d\u003d null) {\n-            // no next statement - no check\n-            return;\n-        }\n+        if (nextNode !\u003d null) {\n+            final boolean isCommaSeparated \u003d nextNode.getType() \u003d\u003d TokenTypes.COMMA;\n \n-        final boolean isCommaSeparated \u003d nextNode.getType() \u003d\u003d TokenTypes.COMMA;\n+            if (isCommaSeparated\n+                || nextNode.getType() \u003d\u003d TokenTypes.SEMI) {\n+                nextNode \u003d nextNode.getNextSibling();\n+            }\n \n-        if (isCommaSeparated\n-            || nextNode.getType() \u003d\u003d TokenTypes.SEMI) {\n-            nextNode \u003d nextNode.getNextSibling();\n-        }\n-\n-        if (nextNode !\u003d null\n-                \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n-            final DetailAST firstNode \u003d CheckUtils.getFirstNode(ast);\n-            if (isCommaSeparated) {\n-                // Check if the multiple variable declarations are in a\n-                // for loop initializer. If they are, then no warning\n-                // should be displayed. Declaring multiple variables in\n-                // a for loop initializer is a good way to minimize\n-                // variable scope. Refer Feature Request Id - 2895985\n-                // for more details\n-                if (ast.getParent().getType() !\u003d TokenTypes.FOR_INIT) {\n-                    log(firstNode, MSG_MULTIPLE_COMMA);\n+            if (nextNode !\u003d null\n+                    \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n+                final DetailAST firstNode \u003d CheckUtils.getFirstNode(ast);\n+                if (isCommaSeparated) {\n+                    // Check if the multiple variable declarations are in a\n+                    // for loop initializer. If they are, then no warning\n+                    // should be displayed. Declaring multiple variables in\n+                    // a for loop initializer is a good way to minimize\n+                    // variable scope. Refer Feature Request Id - 2895985\n+                    // for more details\n+                    if (ast.getParent().getType() !\u003d TokenTypes.FOR_INIT) {\n+                        log(firstNode, MSG_MULTIPLE_COMMA);\n+                    }\n                 }\n-                return;\n-            }\n+                else {\n+                    final DetailAST lastNode \u003d getLastNode(ast);\n+                    final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n-            final DetailAST lastNode \u003d getLastNode(ast);\n-            final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n-\n-            if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n-                log(firstNode, MSG_MULTIPLE);\n+                    if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n+                        log(firstNode, MSG_MULTIPLE);\n+                    }\n+                }\n             }\n         }\n-\n     }\n\\ No newline at end of file\n"
    },
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations partial fix\n",
      "commitDate": 1440504773000,
      "commitName": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1438565415000,
      "commitNameOld": "d6a255f36548fa0fe952d543ef0e5c0a5e14bad6",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 22.45,
      "commitsBetweenForRepo": 354,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public void visitToken(DetailAST ast) {\n         DetailAST nextNode \u003d ast.getNextSibling();\n \n         if (nextNode \u003d\u003d null) {\n             // no next statement - no check\n             return;\n         }\n \n         final boolean isCommaSeparated \u003d nextNode.getType() \u003d\u003d TokenTypes.COMMA;\n \n         if (isCommaSeparated\n             || nextNode.getType() \u003d\u003d TokenTypes.SEMI) {\n             nextNode \u003d nextNode.getNextSibling();\n         }\n \n         if (nextNode !\u003d null\n                 \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n             final DetailAST firstNode \u003d CheckUtils.getFirstNode(ast);\n             if (isCommaSeparated) {\n                 // Check if the multiple variable declarations are in a\n                 // for loop initializer. If they are, then no warning\n                 // should be displayed. Declaring multiple variables in\n                 // a for loop initializer is a good way to minimize\n                 // variable scope. Refer Feature Request Id - 2895985\n                 // for more details\n                 if (ast.getParent().getType() !\u003d TokenTypes.FOR_INIT) {\n-                    log(firstNode, \"multiple.variable.declarations.comma\");\n+                    log(firstNode, MSG_MULTIPLE_COMMA);\n                 }\n                 return;\n             }\n \n             final DetailAST lastNode \u003d getLastNode(ast);\n             final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n             if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n-                log(firstNode, \"multiple.variable.declarations\");\n+                log(firstNode, MSG_MULTIPLE);\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "d6a255f36548fa0fe952d543ef0e5c0a5e14bad6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1539: Fixed NPE in MultipleVariableDeclarationsCheck\n",
      "commitDate": 1438565415000,
      "commitName": "d6a255f36548fa0fe952d543ef0e5c0a5e14bad6",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1436738470000,
      "commitNameOld": "192a2eecfeb8dcc5e8dd000599c72758ad46868f",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 21.15,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,40 @@\n     public void visitToken(DetailAST ast) {\n         DetailAST nextNode \u003d ast.getNextSibling();\n \n         if (nextNode \u003d\u003d null) {\n             // no next statement - no check\n             return;\n         }\n \n         final boolean isCommaSeparated \u003d nextNode.getType() \u003d\u003d TokenTypes.COMMA;\n \n         if (isCommaSeparated\n             || nextNode.getType() \u003d\u003d TokenTypes.SEMI) {\n             nextNode \u003d nextNode.getNextSibling();\n         }\n \n-        if (nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n+        if (nextNode !\u003d null\n+                \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n             final DetailAST firstNode \u003d CheckUtils.getFirstNode(ast);\n             if (isCommaSeparated) {\n                 // Check if the multiple variable declarations are in a\n                 // for loop initializer. If they are, then no warning\n                 // should be displayed. Declaring multiple variables in\n                 // a for loop initializer is a good way to minimize\n                 // variable scope. Refer Feature Request Id - 2895985\n                 // for more details\n                 if (ast.getParent().getType() !\u003d TokenTypes.FOR_INIT) {\n                     log(firstNode, \"multiple.variable.declarations.comma\");\n                 }\n                 return;\n             }\n \n             final DetailAST lastNode \u003d getLastNode(ast);\n             final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n             if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n                 log(firstNode, \"multiple.variable.declarations\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "192a2eecfeb8dcc5e8dd000599c72758ad46868f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Refactoring of MultipleVariableDeclarationCheck\n",
      "commitDate": 1436738470000,
      "commitName": "192a2eecfeb8dcc5e8dd000599c72758ad46868f",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 56.43,
      "commitsBetweenForRepo": 332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,39 @@\n     public void visitToken(DetailAST ast) {\n         DetailAST nextNode \u003d ast.getNextSibling();\n \n         if (nextNode \u003d\u003d null) {\n             // no next statement - no check\n             return;\n         }\n \n         final boolean isCommaSeparated \u003d nextNode.getType() \u003d\u003d TokenTypes.COMMA;\n \n-        if (nextNode.getType() \u003d\u003d TokenTypes.COMMA\n+        if (isCommaSeparated\n             || nextNode.getType() \u003d\u003d TokenTypes.SEMI) {\n             nextNode \u003d nextNode.getNextSibling();\n         }\n \n-        if (nextNode !\u003d null\n-            \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n+        if (nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n             final DetailAST firstNode \u003d CheckUtils.getFirstNode(ast);\n             if (isCommaSeparated) {\n                 // Check if the multiple variable declarations are in a\n                 // for loop initializer. If they are, then no warning\n                 // should be displayed. Declaring multiple variables in\n                 // a for loop initializer is a good way to minimize\n                 // variable scope. Refer Feature Request Id - 2895985\n                 // for more details\n                 if (ast.getParent().getType() !\u003d TokenTypes.FOR_INIT) {\n                     log(firstNode, \"multiple.variable.declarations.comma\");\n                 }\n                 return;\n             }\n \n             final DetailAST lastNode \u003d getLastNode(ast);\n             final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n             if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n                 log(firstNode, \"multiple.variable.declarations\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "dba746ba9387bee04ed362254abb5d9ed35169cd": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from PrematureDeclaration rule. #948\n",
      "commitDate": 1431536292000,
      "commitName": "dba746ba9387bee04ed362254abb5d9ed35169cd",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1430523168000,
      "commitNameOld": "31421dcdda3b3534f2fcc5c6e88a8fdbc5d15311",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 11.73,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n     public void visitToken(DetailAST ast)\n     {\n         DetailAST nextNode \u003d ast.getNextSibling();\n-        final boolean isCommaSeparated \u003d\n-                nextNode !\u003d null \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.COMMA;\n \n         if (nextNode \u003d\u003d null) {\n             // no next statement - no check\n             return;\n         }\n \n+        final boolean isCommaSeparated \u003d nextNode.getType() \u003d\u003d TokenTypes.COMMA;\n+\n         if (nextNode.getType() \u003d\u003d TokenTypes.COMMA\n             || nextNode.getType() \u003d\u003d TokenTypes.SEMI)\n         {\n             nextNode \u003d nextNode.getNextSibling();\n         }\n \n         if (nextNode !\u003d null\n             \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF)\n         {\n             final DetailAST firstNode \u003d CheckUtils.getFirstNode(ast);\n             if (isCommaSeparated) {\n                 // Check if the multiple variable declarations are in a\n                 // for loop initializer. If they are, then no warning\n                 // should be displayed. Declaring multiple variables in\n                 // a for loop initializer is a good way to minimize\n                 // variable scope. Refer Feature Request Id - 2895985\n                 // for more details\n                 if (ast.getParent().getType() !\u003d TokenTypes.FOR_INIT) {\n                     log(firstNode, \"multiple.variable.declarations.comma\");\n                 }\n                 return;\n             }\n \n             final DetailAST lastNode \u003d getLastNode(ast);\n             final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n             if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n                 log(firstNode, \"multiple.variable.declarations\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437367000,
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n     public void visitToken(DetailAST ast)\n     {\n         DetailAST nextNode \u003d ast.getNextSibling();\n         final boolean isCommaSeparated \u003d\n-            ((nextNode !\u003d null) \u0026\u0026 (nextNode.getType() \u003d\u003d TokenTypes.COMMA));\n+                nextNode !\u003d null \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.COMMA;\n \n         if (nextNode \u003d\u003d null) {\n             // no next statement - no check\n             return;\n         }\n \n-        if ((nextNode.getType() \u003d\u003d TokenTypes.COMMA)\n-            || (nextNode.getType() \u003d\u003d TokenTypes.SEMI))\n+        if (nextNode.getType() \u003d\u003d TokenTypes.COMMA\n+            || nextNode.getType() \u003d\u003d TokenTypes.SEMI)\n         {\n             nextNode \u003d nextNode.getNextSibling();\n         }\n \n-        if ((nextNode !\u003d null)\n-            \u0026\u0026 (nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF))\n+        if (nextNode !\u003d null\n+            \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF)\n         {\n             final DetailAST firstNode \u003d CheckUtils.getFirstNode(ast);\n             if (isCommaSeparated) {\n                 // Check if the multiple variable declarations are in a\n                 // for loop initializer. If they are, then no warning\n                 // should be displayed. Declaring multiple variables in\n                 // a for loop initializer is a good way to minimize\n                 // variable scope. Refer Feature Request Id - 2895985\n                 // for more details\n                 if (ast.getParent().getType() !\u003d TokenTypes.FOR_INIT) {\n                     log(firstNode, \"multiple.variable.declarations.comma\");\n                 }\n                 return;\n             }\n \n             final DetailAST lastNode \u003d getLastNode(ast);\n             final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n             if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n                 log(firstNode, \"multiple.variable.declarations\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "68c1541bb3d6a6128bf6f895bc82f8925d26c00d": {
      "type": "Ybodychange",
      "commitMessage": "apply patch #3121071 - MultipleVariableDeclarations: no warnings in \u0027for\u0027 block\n",
      "commitDate": 1293776646000,
      "commitName": "68c1541bb3d6a6128bf6f895bc82f8925d26c00d",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1285817783000,
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 92.12,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,43 @@\n     public void visitToken(DetailAST aAST)\n     {\n         DetailAST nextNode \u003d aAST.getNextSibling();\n         final boolean isCommaSeparated \u003d\n             ((nextNode !\u003d null) \u0026\u0026 (nextNode.getType() \u003d\u003d TokenTypes.COMMA));\n \n         if (nextNode \u003d\u003d null) {\n             // no next statement - no check\n             return;\n         }\n \n         if ((nextNode.getType() \u003d\u003d TokenTypes.COMMA)\n             || (nextNode.getType() \u003d\u003d TokenTypes.SEMI))\n         {\n             nextNode \u003d nextNode.getNextSibling();\n         }\n \n         if ((nextNode !\u003d null)\n             \u0026\u0026 (nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF))\n         {\n             final DetailAST firstNode \u003d CheckUtils.getFirstNode(aAST);\n             if (isCommaSeparated) {\n-                log(firstNode, \"multiple.variable.declarations.comma\");\n+                // Check if the multiple variable declarations are in a\n+                // for loop initializer. If they are, then no warning\n+                // should be displayed. Declaring multiple variables in\n+                // a for loop initializer is a good way to minimize\n+                // variable scope. Refer Feature Request Id - 2895985\n+                // for more details\n+                if (aAST.getParent().getType() !\u003d TokenTypes.FOR_INIT) {\n+                    log(firstNode, \"multiple.variable.declarations.comma\");\n+                }\n                 return;\n             }\n \n             final DetailAST lastNode \u003d getLastNode(aAST);\n             final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n             if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n                 log(firstNode, \"multiple.variable.declarations\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200296548000,
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        DetailAST nextNode \u003d (DetailAST) aAST.getNextSibling();\n+        DetailAST nextNode \u003d aAST.getNextSibling();\n         final boolean isCommaSeparated \u003d\n             ((nextNode !\u003d null) \u0026\u0026 (nextNode.getType() \u003d\u003d TokenTypes.COMMA));\n \n         if (nextNode \u003d\u003d null) {\n             // no next statement - no check\n             return;\n         }\n \n         if ((nextNode.getType() \u003d\u003d TokenTypes.COMMA)\n             || (nextNode.getType() \u003d\u003d TokenTypes.SEMI))\n         {\n-            nextNode \u003d (DetailAST) nextNode.getNextSibling();\n+            nextNode \u003d nextNode.getNextSibling();\n         }\n \n         if ((nextNode !\u003d null)\n             \u0026\u0026 (nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF))\n         {\n             final DetailAST firstNode \u003d CheckUtils.getFirstNode(aAST);\n             if (isCommaSeparated) {\n                 log(firstNode, \"multiple.variable.declarations.comma\");\n                 return;\n             }\n \n             final DetailAST lastNode \u003d getLastNode(aAST);\n             final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n             if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n                 log(firstNode, \"multiple.variable.declarations\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1105267857000,
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 543.69,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,35 @@\n     public void visitToken(DetailAST aAST)\n     {\n         DetailAST nextNode \u003d (DetailAST) aAST.getNextSibling();\n         final boolean isCommaSeparated \u003d\n-            (nextNode !\u003d null \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.COMMA);\n+            ((nextNode !\u003d null) \u0026\u0026 (nextNode.getType() \u003d\u003d TokenTypes.COMMA));\n \n         if (nextNode \u003d\u003d null) {\n             // no next statement - no check\n             return;\n         }\n \n-        if (nextNode.getType() \u003d\u003d TokenTypes.COMMA\n-            || nextNode.getType() \u003d\u003d TokenTypes.SEMI)\n+        if ((nextNode.getType() \u003d\u003d TokenTypes.COMMA)\n+            || (nextNode.getType() \u003d\u003d TokenTypes.SEMI))\n         {\n             nextNode \u003d (DetailAST) nextNode.getNextSibling();\n         }\n \n-        if (nextNode !\u003d null \u0026\u0026 nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n+        if ((nextNode !\u003d null)\n+            \u0026\u0026 (nextNode.getType() \u003d\u003d TokenTypes.VARIABLE_DEF))\n+        {\n             final DetailAST firstNode \u003d CheckUtils.getFirstNode(aAST);\n             if (isCommaSeparated) {\n                 log(firstNode, \"multiple.variable.declarations.comma\");\n                 return;\n             }\n \n             final DetailAST lastNode \u003d getLastNode(aAST);\n             final DetailAST firstNextNode \u003d CheckUtils.getFirstNode(nextNode);\n \n             if (firstNextNode.getLineNo() \u003d\u003d lastNode.getLineNo()) {\n                 log(firstNode, \"multiple.variable.declarations\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "a6a288813e2b86dd11ed0bd3e4af9539480813ff": {
      "type": "Yintroduced",
      "commitMessage": "MultipleVariableDeclarations (requests 639233, 753858, 844705).\n",
      "commitDate": 1073706855000,
      "commitName": "a6a288813e2b86dd11ed0bd3e4af9539480813ff",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}