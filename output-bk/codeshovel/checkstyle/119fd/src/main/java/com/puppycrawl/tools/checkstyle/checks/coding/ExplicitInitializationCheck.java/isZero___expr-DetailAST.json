{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "ExplicitInitializationCheck.java",
  "functionName": "isZero",
  "functionId": "isZero___expr-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
  "functionStartLine": 195,
  "functionEndLine": 210,
  "changeHistory": [
    "6054b46c9b717a03cf000c7884d0256335fc01e9",
    "f17f1410a5bb22fd62c75aae3d40fd22bb86129e",
    "b8eeaaeb42f096c00f159911d8cc5dfb8f2c0ea6",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "c8430f2d0f4b4533b49bcf6f4304200d5adfc1d8",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "03c3efabf3b36fd1b8dd4da30678365c7506370c"
  ],
  "changeHistoryShort": {
    "6054b46c9b717a03cf000c7884d0256335fc01e9": "Ybodychange",
    "f17f1410a5bb22fd62c75aae3d40fd22bb86129e": "Ybodychange",
    "b8eeaaeb42f096c00f159911d8cc5dfb8f2c0ea6": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "c8430f2d0f4b4533b49bcf6f4304200d5adfc1d8": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "03c3efabf3b36fd1b8dd4da30678365c7506370c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6054b46c9b717a03cf000c7884d0256335fc01e9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4940: fix MultipleReturnPointsPerMethod idea violation\n",
      "commitDate": 1503206988000,
      "commitName": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1497287515000,
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 68.51,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n     private static boolean isZero(DetailAST expr) {\n         final int type \u003d expr.getType();\n+        final boolean isZero;\n         switch (type) {\n             case TokenTypes.NUM_FLOAT:\n             case TokenTypes.NUM_DOUBLE:\n             case TokenTypes.NUM_INT:\n             case TokenTypes.NUM_LONG:\n                 final String text \u003d expr.getText();\n-                return Double.compare(\n-                    CheckUtils.parseDouble(text, type), 0.0) \u003d\u003d 0;\n+                isZero \u003d Double.compare(CheckUtils.parseDouble(text, type), 0.0) \u003d\u003d 0;\n+                break;\n             default:\n-                return false;\n+                isZero \u003d false;\n         }\n+        return isZero;\n     }\n\\ No newline at end of file\n"
    },
    "f17f1410a5bb22fd62c75aae3d40fd22bb86129e": {
      "type": "Ybodychange",
      "commitMessage": "Floating point numbers should not be tested for equality. Issue #46\n",
      "commitDate": 1439872799000,
      "commitName": "f17f1410a5bb22fd62c75aae3d40fd22bb86129e",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1439296129000,
      "commitNameOld": "b8eeaaeb42f096c00f159911d8cc5dfb8f2c0ea6",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 6.67,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n     private static boolean isZero(DetailAST expr) {\n         final int type \u003d expr.getType();\n         switch (type) {\n             case TokenTypes.NUM_FLOAT:\n             case TokenTypes.NUM_DOUBLE:\n             case TokenTypes.NUM_INT:\n             case TokenTypes.NUM_LONG:\n                 final String text \u003d expr.getText();\n-                return CheckUtils.parseDouble(text, type) \u003d\u003d 0.0;\n+                return Double.compare(\n+                    CheckUtils.parseDouble(text, type), 0.0) \u003d\u003d 0;\n             default:\n                 return false;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8eeaaeb42f096c00f159911d8cc5dfb8f2c0ea6": {
      "type": "Ybodychange",
      "commitMessage": "Remove obsolete method with casting that looses precision. #1555\n\nFixes `CastThatLosesPrecision` inspection violation.\n\nDescription:\n\u003eReports any cast operations between built-in numeric types which may result in loss of precision. Such casts are not necessarily a problem, but may result in difficult to trace bugs if the loss of precision is unexpected.\n",
      "commitDate": 1439296129000,
      "commitName": "b8eeaaeb42f096c00f159911d8cc5dfb8f2c0ea6",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439295539000,
      "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private static boolean isZero(DetailAST expr) {\n         final int type \u003d expr.getType();\n         switch (type) {\n             case TokenTypes.NUM_FLOAT:\n             case TokenTypes.NUM_DOUBLE:\n             case TokenTypes.NUM_INT:\n             case TokenTypes.NUM_LONG:\n                 final String text \u003d expr.getText();\n-                return CheckUtils.parseFloat(text, type) \u003d\u003d 0.0;\n+                return CheckUtils.parseDouble(text, type) \u003d\u003d 0.0;\n             default:\n                 return false;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439008870000,
      "commitNameOld": "c8430f2d0f4b4533b49bcf6f4304200d5adfc1d8",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private static boolean isZero(DetailAST expr) {\n         final int type \u003d expr.getType();\n         switch (type) {\n             case TokenTypes.NUM_FLOAT:\n             case TokenTypes.NUM_DOUBLE:\n             case TokenTypes.NUM_INT:\n             case TokenTypes.NUM_LONG:\n                 final String text \u003d expr.getText();\n-                return 0.0 \u003d\u003d CheckUtils.parseFloat(text, type);\n+                return CheckUtils.parseFloat(text, type) \u003d\u003d 0.0;\n             default:\n                 return false;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c8430f2d0f4b4533b49bcf6f4304200d5adfc1d8": {
      "type": "Ybodychange",
      "commitMessage": "Fix comparison of double value with zero. #1555\n\nFixes `FloatingPointEquality` inspection violation.\n\nDescription:\n\u003eReports floating-point values being compared with an \u003d\u003d or !\u003d operator. Floating point values are inherently inaccurate, and comparing them for exact equality is almost never the desired semantics. This inspection ignores comparisons with zero and infinity literals.\n",
      "commitDate": 1439008870000,
      "commitName": "c8430f2d0f4b4533b49bcf6f4304200d5adfc1d8",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438437537000,
      "commitNameOld": "d53fc277c6947761992e6ca3016110d6ed59b042",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 6.61,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private static boolean isZero(DetailAST expr) {\n         final int type \u003d expr.getType();\n         switch (type) {\n             case TokenTypes.NUM_FLOAT:\n             case TokenTypes.NUM_DOUBLE:\n             case TokenTypes.NUM_INT:\n             case TokenTypes.NUM_LONG:\n                 final String text \u003d expr.getText();\n-                return 0 \u003d\u003d CheckUtils.parseFloat(text, type);\n+                return 0.0 \u003d\u003d CheckUtils.parseFloat(text, type);\n             default:\n                 return false;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1436323201000,
      "commitNameOld": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 10.09,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-    private boolean isZero(DetailAST expr) {\n+    private static boolean isZero(DetailAST expr) {\n         final int type \u003d expr.getType();\n         switch (type) {\n             case TokenTypes.NUM_FLOAT:\n             case TokenTypes.NUM_DOUBLE:\n             case TokenTypes.NUM_INT:\n             case TokenTypes.NUM_LONG:\n                 final String text \u003d expr.getText();\n                 return 0 \u003d\u003d CheckUtils.parseFloat(text, type);\n             default:\n                 return false;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437367000,
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private boolean isZero(DetailAST expr)\n     {\n         final int type \u003d expr.getType();\n         switch (type) {\n             case TokenTypes.NUM_FLOAT:\n             case TokenTypes.NUM_DOUBLE:\n             case TokenTypes.NUM_INT:\n             case TokenTypes.NUM_LONG:\n                 final String text \u003d expr.getText();\n-                return (0 \u003d\u003d CheckUtils.parseFloat(text, type));\n+                return 0 \u003d\u003d CheckUtils.parseFloat(text, type);\n             default:\n                 return false;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "03c3efabf3b36fd1b8dd4da30678365c7506370c": {
      "type": "Yintroduced",
      "commitMessage": "Check for variable explicit initialization (request 614387)\n",
      "commitDate": 1065286887000,
      "commitName": "03c3efabf3b36fd1b8dd4da30678365c7506370c",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}