{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "SimplifyBooleanReturnCheck.java",
  "functionName": "isBooleanLiteralReturnStatement",
  "functionId": "isBooleanLiteralReturnStatement___ast-AST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
  "functionStartLine": 133,
  "functionEndLine": 145,
  "changeHistory": [
    "83f2b92b18eb10f3849b6a3be99a7b55b886cae0",
    "bd55b4598158c500333dae2e2194de08a643a3d5",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "a298a50d48358e58be31eaea6b9f0e263f5f046e",
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
    "a865663e990e225a3b614c6245aae571817a3f2a",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf",
    "d077a402da51bb238a7da99d5e2542437b145192",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d"
  ],
  "changeHistoryShort": {
    "83f2b92b18eb10f3849b6a3be99a7b55b886cae0": "Ybodychange",
    "bd55b4598158c500333dae2e2194de08a643a3d5": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "a298a50d48358e58be31eaea6b9f0e263f5f046e": "Ybodychange",
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50": "Ymultichange(Ymodifierchange,Ybodychange)",
    "a865663e990e225a3b614c6245aae571817a3f2a": "Ybodychange",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": "Ybodychange",
    "d077a402da51bb238a7da99d5e2542437b145192": "Ybodychange",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "83f2b92b18eb10f3849b6a3be99a7b55b886cae0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violation fixed for SimplifyBooleanReturnCheck\n",
      "commitDate": 1440826711000,
      "commitName": "83f2b92b18eb10f3849b6a3be99a7b55b886cae0",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440503712000,
      "commitNameOld": "beae0df0a4c4a3e8401d31b29a7feb997b126731",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.74,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n     private static boolean isBooleanLiteralReturnStatement(AST ast) {\n-        if (ast \u003d\u003d null || ast.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n-            return false;\n+        boolean booleanReturnStatement \u003d false;\n+\n+        if (ast !\u003d null \u0026\u0026 ast.getType() \u003d\u003d TokenTypes.LITERAL_RETURN) {\n+            final AST expr \u003d ast.getFirstChild();\n+\n+            if (expr.getType() !\u003d TokenTypes.SEMI) {\n+                final AST value \u003d expr.getFirstChild();\n+                booleanReturnStatement \u003d isBooleanLiteralType(value.getType());\n+            }\n         }\n-\n-        final AST expr \u003d ast.getFirstChild();\n-\n-        if (expr.getType() \u003d\u003d TokenTypes.SEMI) {\n-            return false;\n-        }\n-\n-        final AST value \u003d expr.getFirstChild();\n-        return isBooleanLiteralType(value.getType());\n+        return booleanReturnStatement;\n     }\n\\ No newline at end of file\n"
    },
    "bd55b4598158c500333dae2e2194de08a643a3d5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Improved coverage for SimplifyBooleanReturnCheck.\n",
      "commitDate": 1438446278000,
      "commitName": "bd55b4598158c500333dae2e2194de08a643a3d5",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 9.43,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private static boolean isBooleanLiteralReturnStatement(AST ast) {\n         if (ast \u003d\u003d null || ast.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d ast.getFirstChild();\n \n-        if (expr \u003d\u003d null || expr.getType() \u003d\u003d TokenTypes.SEMI) {\n+        if (expr.getType() \u003d\u003d TokenTypes.SEMI) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437367000,
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static boolean isBooleanLiteralReturnStatement(AST ast)\n     {\n-        if ((ast \u003d\u003d null) || (ast.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n+        if (ast \u003d\u003d null || ast.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d ast.getFirstChild();\n \n-        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n+        if (expr \u003d\u003d null || expr.getType() \u003d\u003d TokenTypes.SEMI) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n-        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n+        if ((aAST \u003d\u003d null) || (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n \n         if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n"
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": 1055680780000,
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1055612861000,
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "a298a50d48358e58be31eaea6b9f0e263f5f046e": {
      "type": "Ybodychange",
      "commitMessage": "correction to handle SEMI after LITERAL_RETURN\n",
      "commitDate": 1037059315000,
      "commitName": "a298a50d48358e58be31eaea6b9f0e263f5f046e",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1036696210000,
      "commitNameOld": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 4.2,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n         if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n \n-        if (expr \u003d\u003d null) {\n+        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n"
    },
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "removed paranoia checks to increase code coverage\n",
      "commitDate": 1036696210000,
      "commitName": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
      "commitAuthor": "Lars KÃ¼hne",
      "subchanges": [
        "Ymodifierchange",
        "Ybodychange"
      ]
    },
    "a865663e990e225a3b614c6245aae571817a3f2a": {
      "type": "Ybodychange",
      "commitMessage": "fixed NPE\n",
      "commitDate": 1036256986000,
      "commitName": "a865663e990e225a3b614c6245aae571817a3f2a",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": 1036016919000,
      "commitNameOld": "663a1a72f4e81c0aa7f9ba359d2d38447c14e8bf",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.78,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,18 @@\n     private boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n-        if (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n+        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n+\n+        if (expr \u003d\u003d null) {\n+            return false;\n+        }\n+\n         final AST value \u003d expr.getFirstChild();\n \n         final int valueType \u003d value.getType();\n         return ((valueType \u003d\u003d TokenTypes.LITERAL_TRUE)\n                 || (valueType \u003d\u003d TokenTypes.LITERAL_FALSE));\n     }\n\\ No newline at end of file\n"
    },
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": {
      "type": "Ybodychange",
      "commitMessage": "Added a new class TokenTypes that contains all the type constants. This class\nbreaks the circular dependencies - the cost is needing to maintain this class\nwhen a new grammar is introduced.\n",
      "commitDate": 1035008886000,
      "commitName": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1034895145000,
      "commitNameOld": "7f35e143a2472ecb49625cc841bd0482fe3dfeea",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 1.32,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n-        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return) {\n+        if (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n         final AST value \u003d expr.getFirstChild();\n \n         final int valueType \u003d value.getType();\n-        return ((valueType \u003d\u003d JavaTokenTypes.LITERAL_true)\n-                || (valueType \u003d\u003d JavaTokenTypes.LITERAL_false));\n+        return ((valueType \u003d\u003d TokenTypes.LITERAL_TRUE)\n+                || (valueType \u003d\u003d TokenTypes.LITERAL_FALSE));\n     }\n\\ No newline at end of file\n"
    },
    "d077a402da51bb238a7da99d5e2542437b145192": {
      "type": "Ybodychange",
      "commitMessage": "Added a lot more checks for name format. Also endeavouring to get Checkstyle\npassing Javadoc again before it gets out of control.\n",
      "commitDate": 1033108888000,
      "commitName": "d077a402da51bb238a7da99d5e2542437b145192",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1032152891000,
      "commitNameOld": "ffb17cde0f6351bdf2f2e8cf655fa7f7a3cae827",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 11.06,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     private boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n-        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return)\n+        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return) {\n             return false;\n+        }\n \n-        AST expr \u003d aAST.getFirstChild();\n-        AST value \u003d expr.getFirstChild();\n+        final AST expr \u003d aAST.getFirstChild();\n+        final AST value \u003d expr.getFirstChild();\n \n-        int valueType \u003d value.getType();\n-        return ( valueType \u003d\u003d JavaTokenTypes.LITERAL_true\n-                || valueType \u003d\u003d JavaTokenTypes.LITERAL_false );\n+        final int valueType \u003d value.getType();\n+        return ((valueType \u003d\u003d JavaTokenTypes.LITERAL_true)\n+                || (valueType \u003d\u003d JavaTokenTypes.LITERAL_false));\n     }\n\\ No newline at end of file\n"
    },
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": {
      "type": "Yintroduced",
      "commitMessage": "initial checkin of check implementations\n",
      "commitDate": 1032107737000,
      "commitName": "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d",
      "commitAuthor": "Lars KÃ¼hne"
    }
  }
}