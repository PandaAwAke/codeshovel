{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AbstractClassNameCheck.java",
  "functionName": "visitClassDef",
  "functionId": "visitClassDef___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java",
  "functionStartLine": 117,
  "functionEndLine": 131,
  "changeHistory": [
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "e46c443af046b065671f0db5c8a5df9f0985589c",
    "8ad4aebb66a1b90ac135e05f8062423028e3be8e",
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b",
    "9d11682be9f541bcc21cfc533ede5e0b5a7862f4",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "ec796dc6410345cc6e2a2e4623dd79f6d9b4c2e0",
    "f06e7b12c34ef7adb9ef3e18db58950ceafee96f"
  ],
  "changeHistoryShort": {
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "e46c443af046b065671f0db5c8a5df9f0985589c": "Ybodychange",
    "8ad4aebb66a1b90ac135e05f8062423028e3be8e": "Ybodychange",
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b": "Ybodychange",
    "9d11682be9f541bcc21cfc533ede5e0b5a7862f4": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "ec796dc6410345cc6e2a2e4623dd79f6d9b4c2e0": "Yfilerename",
    "f06e7b12c34ef7adb9ef3e18db58950ceafee96f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3255: removed unnecessary string fields for patterns",
      "commitDate": 1478802862000,
      "commitName": "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1478694863000,
      "commitNameOld": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.25,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void visitClassDef(DetailAST ast) {\n         final String className \u003d\n             ast.findFirstToken(TokenTypes.IDENT).getText();\n         if (isAbstract(ast)) {\n             // if class has abstract modifier\n             if (!ignoreName \u0026\u0026 !isMatchingClassName(className)) {\n                 log(ast.getLineNo(), ast.getColumnNo(),\n-                    MSG_ILLEGAL_ABSTRACT_CLASS_NAME, className, format);\n+                    MSG_ILLEGAL_ABSTRACT_CLASS_NAME, className, format.pattern());\n             }\n         }\n         else if (!ignoreModifier \u0026\u0026 isMatchingClassName(className)) {\n             log(ast.getLineNo(), ast.getColumnNo(),\n                 MSG_NO_ABSTRACT_CLASS_MODIFIER, className);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": 1453387259000,
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void visitClassDef(DetailAST ast) {\n         final String className \u003d\n             ast.findFirstToken(TokenTypes.IDENT).getText();\n         if (isAbstract(ast)) {\n             // if class has abstract modifier\n             if (!ignoreName \u0026\u0026 !isMatchingClassName(className)) {\n                 log(ast.getLineNo(), ast.getColumnNo(),\n-                    ILLEGAL_ABSTRACT_CLASS_NAME, className, format);\n+                    MSG_ILLEGAL_ABSTRACT_CLASS_NAME, className, format);\n             }\n         }\n         else if (!ignoreModifier \u0026\u0026 isMatchingClassName(className)) {\n             log(ast.getLineNo(), ast.getColumnNo(),\n-                NO_ABSTRACT_CLASS_MODIFIER, className);\n+                MSG_NO_ABSTRACT_CLASS_MODIFIER, className);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e46c443af046b065671f0db5c8a5df9f0985589c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2451: removed excess hierarchy from AbstractClassNameCheck",
      "commitDate": 1446688444000,
      "commitName": "e46c443af046b065671f0db5c8a5df9f0985589c",
      "commitAuthor": "rnveach",
      "commitDateOld": 1441040575000,
      "commitNameOld": "5ca96679525171c73fc4d5c257301f51d2100071",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 65.37,
      "commitsBetweenForRepo": 460,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void visitClassDef(DetailAST ast) {\n         final String className \u003d\n             ast.findFirstToken(TokenTypes.IDENT).getText();\n         if (isAbstract(ast)) {\n             // if class has abstract modifier\n             if (!ignoreName \u0026\u0026 !isMatchingClassName(className)) {\n                 log(ast.getLineNo(), ast.getColumnNo(),\n-                    ILLEGAL_ABSTRACT_CLASS_NAME, className, getFormat());\n+                    ILLEGAL_ABSTRACT_CLASS_NAME, className, format);\n             }\n         }\n         else if (!ignoreModifier \u0026\u0026 isMatchingClassName(className)) {\n             log(ast.getLineNo(), ast.getColumnNo(),\n                 NO_ABSTRACT_CLASS_MODIFIER, className);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8ad4aebb66a1b90ac135e05f8062423028e3be8e": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, naming package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "8ad4aebb66a1b90ac135e05f8062423028e3be8e",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private void visitClassDef(DetailAST ast)\n     {\n         final String className \u003d\n             ast.findFirstToken(TokenTypes.IDENT).getText();\n         if (isAbstract(ast)) {\n             // if class has abstract modifier\n             if (!ignoreName \u0026\u0026 !isMatchingClassName(className)) {\n                 log(ast.getLineNo(), ast.getColumnNo(),\n-                    \"illegal.abstract.class.name\", className, getFormat());\n+                    ILLEGAL_ABSTRACT_CLASS_NAME, className, getFormat());\n             }\n         }\n         else if (!ignoreModifier \u0026\u0026 isMatchingClassName(className)) {\n             log(ast.getLineNo(), ast.getColumnNo(),\n-                \"no.abstract.class.modifier\", className);\n+                NO_ABSTRACT_CLASS_MODIFIER, className);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, naming, #512\n",
      "commitDate": 1421677299000,
      "commitName": "750b733bd124eaea34d4692a1bb8d0fd0fe90976",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b": {
      "type": "Ybodychange",
      "commitMessage": "tidy up the check to make more consistent with other checks.\n",
      "commitDate": 1286255573000,
      "commitName": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1286250478000,
      "commitNameOld": "9d11682be9f541bcc21cfc533ede5e0b5a7862f4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,16 @@\n     private void visitClassDef(DetailAST aAST)\n     {\n         final String className \u003d\n             aAST.findFirstToken(TokenTypes.IDENT).getText();\n         if (isAbstract(aAST)) {\n             // if class has abstract modifier\n-            if (mCheckName \u0026\u0026 !isMatchingClassName(className)) {\n+            if (!mIgnoreName \u0026\u0026 !isMatchingClassName(className)) {\n                 log(aAST.getLineNo(), aAST.getColumnNo(),\n                     \"illegal.abstract.class.name\", className, getFormat());\n             }\n         }\n-        else {\n-            // if class without abstract modifier\n-            if (mCheckAbstractModifier\n-                    \u0026\u0026 isMatchingClassName(className))\n-            {\n-                log(aAST.getLineNo(), aAST.getColumnNo(),\n-                        \"no.abstract.class.modifier\", className);\n-            }\n+        else if (!mIgnoreModifier \u0026\u0026 isMatchingClassName(className)) {\n+            log(aAST.getLineNo(), aAST.getColumnNo(),\n+                \"no.abstract.class.modifier\", className);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "9d11682be9f541bcc21cfc533ede5e0b5a7862f4": {
      "type": "Ybodychange",
      "commitMessage": "Apply patch https://sourceforge.net/tracker/?func\u003ddetail\u0026aid\u003d3043752\u0026group_id\u003d29721\u0026atid\u003d397080\nbefore making edits.\n",
      "commitDate": 1286250478000,
      "commitName": "9d11682be9f541bcc21cfc533ede5e0b5a7862f4",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1285817783000,
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.01,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,21 @@\n     private void visitClassDef(DetailAST aAST)\n     {\n+        final String className \u003d\n+            aAST.findFirstToken(TokenTypes.IDENT).getText();\n         if (isAbstract(aAST)) {\n-            final String className \u003d\n-                aAST.findFirstToken(TokenTypes.IDENT).getText();\n-\n-            if (!isMatchingClassName(className)) {\n+            // if class has abstract modifier\n+            if (mCheckName \u0026\u0026 !isMatchingClassName(className)) {\n                 log(aAST.getLineNo(), aAST.getColumnNo(),\n                     \"illegal.abstract.class.name\", className, getFormat());\n             }\n         }\n+        else {\n+            // if class without abstract modifier\n+            if (mCheckAbstractModifier\n+                    \u0026\u0026 isMatchingClassName(className))\n+            {\n+                log(aAST.getLineNo(), aAST.getColumnNo(),\n+                        \"no.abstract.class.modifier\", className);\n+            }\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.35,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n     private void visitClassDef(DetailAST aAST)\n     {\n         if (isAbstract(aAST)) {\n-            String className \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n+            final String className \u003d\n+                aAST.findFirstToken(TokenTypes.IDENT).getText();\n \n             if (!isMatchingClassName(className)) {\n                 log(aAST.getLineNo(), aAST.getColumnNo(),\n                     \"illegal.abstract.class.name\", className, getFormat());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ec796dc6410345cc6e2a2e4623dd79f6d9b4c2e0": {
      "type": "Yfilerename",
      "commitMessage": "moving/renaming [Illegal]AbstractClassName check to naming package.\n",
      "commitDate": 1062053445000,
      "commitName": "ec796dc6410345cc6e2a2e4623dd79f6d9b4c2e0",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1062052059000,
      "commitNameOld": "d69cc899d097b3ecd4006255da650d4bcc748ca3",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "f06e7b12c34ef7adb9ef3e18db58950ceafee96f": {
      "type": "Yintroduced",
      "commitMessage": "Added IllegalAbstractClassName check (request 750749).\n",
      "commitDate": 1062018879000,
      "commitName": "f06e7b12c34ef7adb9ef3e18db58950ceafee96f",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}