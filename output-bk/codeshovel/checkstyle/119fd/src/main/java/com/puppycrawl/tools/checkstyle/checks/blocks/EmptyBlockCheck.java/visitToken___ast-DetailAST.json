{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "EmptyBlockCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java",
  "functionStartLine": 144,
  "functionEndLine": 169,
  "changeHistory": [
    "fdb2140878cd476d8e71ed3a4e483baa30c98348",
    "350801597ccce93d019ab03f5f171d5acc27e3d9",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
    "b1f81810e73c2421f5ca6ecf766fd2577a5f20b0",
    "23c8774d2e2fd245de1e5df02758fd23702c565e",
    "b219e2ff881703c4b0edeee01de12635531676a9",
    "cea86a6cad3098ebcdb4a88db2e49477b07e0d93",
    "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5",
    "a0012d03eb6a7ebc42f1986f09a8fe698c09eeb0",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
    "3bd6412e39a141b980901f291391ff1bcc4a61f3",
    "267bdf541787643fbe6126605cbfb91dbcde1e91",
    "982b3963ca007c6101f69cf50c010f07292dab0e",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf",
    "11fad553fd96cc00f33e95ae0bc2d6b32a8e1c54",
    "ffb17cde0f6351bdf2f2e8cf655fa7f7a3cae827",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d"
  ],
  "changeHistoryShort": {
    "fdb2140878cd476d8e71ed3a4e483baa30c98348": "Ybodychange",
    "350801597ccce93d019ab03f5f171d5acc27e3d9": "Ybodychange",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": "Ybodychange",
    "b1f81810e73c2421f5ca6ecf766fd2577a5f20b0": "Ybodychange",
    "23c8774d2e2fd245de1e5df02758fd23702c565e": "Ybodychange",
    "b219e2ff881703c4b0edeee01de12635531676a9": "Ybodychange",
    "cea86a6cad3098ebcdb4a88db2e49477b07e0d93": "Ymultichange(Yparameterchange,Ybodychange)",
    "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5": "Ybodychange",
    "a0012d03eb6a7ebc42f1986f09a8fe698c09eeb0": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": "Ybodychange",
    "3bd6412e39a141b980901f291391ff1bcc4a61f3": "Yfilerename",
    "267bdf541787643fbe6126605cbfb91dbcde1e91": "Ybodychange",
    "982b3963ca007c6101f69cf50c010f07292dab0e": "Ybodychange",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": "Ybodychange",
    "11fad553fd96cc00f33e95ae0bc2d6b32a8e1c54": "Ybodychange",
    "ffb17cde0f6351bdf2f2e8cf655fa7f7a3cae827": "Ybodychange",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fdb2140878cd476d8e71ed3a4e483baa30c98348": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4035: Rename STMT in BlockOption class to STATEMENT\n",
      "commitDate": 1498233357000,
      "commitName": "fdb2140878cd476d8e71ed3a4e483baa30c98348",
      "commitAuthor": "Subbu Dantu",
      "commitDateOld": 1497287515000,
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 10.95,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST leftCurly \u003d findLeftCurly(ast);\n         if (leftCurly !\u003d null) {\n-            if (option \u003d\u003d BlockOption.STMT) {\n+            if (option \u003d\u003d BlockOption.STATEMENT) {\n                 final boolean emptyBlock;\n                 if (leftCurly.getType() \u003d\u003d TokenTypes.LCURLY) {\n                     emptyBlock \u003d leftCurly.getNextSibling().getType() !\u003d TokenTypes.CASE_GROUP;\n                 }\n                 else {\n                     emptyBlock \u003d leftCurly.getChildCount() \u003c\u003d 1;\n                 }\n                 if (emptyBlock) {\n                     log(leftCurly.getLineNo(),\n                         leftCurly.getColumnNo(),\n-                        MSG_KEY_BLOCK_NO_STMT,\n+                        MSG_KEY_BLOCK_NO_STATEMENT,\n                         ast.getText());\n                 }\n             }\n             else if (!hasText(leftCurly)) {\n                 log(leftCurly.getLineNo(),\n                     leftCurly.getColumnNo(),\n                     MSG_KEY_BLOCK_EMPTY,\n                     ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "350801597ccce93d019ab03f5f171d5acc27e3d9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3839: One new method to optimise design and detect empty LITERAL_CASE. Added corresponding UTs. Updated documentation\n",
      "commitDate": 1491406861000,
      "commitName": "350801597ccce93d019ab03f5f171d5acc27e3d9",
      "commitAuthor": "Piyush Sharma",
      "commitDateOld": 1488165925000,
      "commitNameOld": "ce21086e087661553f3a774c38362327ee88996a",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 37.51,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,26 @@\n     public void visitToken(DetailAST ast) {\n-        final DetailAST slistToken \u003d ast.findFirstToken(TokenTypes.SLIST);\n-        final DetailAST leftCurly;\n-\n-        if (slistToken \u003d\u003d null) {\n-            leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n-        }\n-        else {\n-            leftCurly \u003d slistToken;\n-        }\n-\n+        final DetailAST leftCurly \u003d findLeftCurly(ast);\n         if (leftCurly !\u003d null) {\n             if (option \u003d\u003d BlockOption.STMT) {\n                 final boolean emptyBlock;\n                 if (leftCurly.getType() \u003d\u003d TokenTypes.LCURLY) {\n                     emptyBlock \u003d leftCurly.getNextSibling().getType() !\u003d TokenTypes.CASE_GROUP;\n                 }\n                 else {\n                     emptyBlock \u003d leftCurly.getChildCount() \u003c\u003d 1;\n                 }\n                 if (emptyBlock) {\n                     log(leftCurly.getLineNo(),\n                         leftCurly.getColumnNo(),\n                         MSG_KEY_BLOCK_NO_STMT,\n                         ast.getText());\n                 }\n             }\n             else if (!hasText(leftCurly)) {\n                 log(leftCurly.getLineNo(),\n                     leftCurly.getColumnNo(),\n                     MSG_KEY_BLOCK_EMPTY,\n                     ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: enforce FinalLocalVariableCheck on checkstyle code\n",
      "commitDate": 1453646135000,
      "commitName": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.59,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST slistToken \u003d ast.findFirstToken(TokenTypes.SLIST);\n         final DetailAST leftCurly;\n \n         if (slistToken \u003d\u003d null) {\n             leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n         }\n         else {\n             leftCurly \u003d slistToken;\n         }\n \n         if (leftCurly !\u003d null) {\n             if (option \u003d\u003d BlockOption.STMT) {\n-                boolean emptyBlock;\n+                final boolean emptyBlock;\n                 if (leftCurly.getType() \u003d\u003d TokenTypes.LCURLY) {\n                     emptyBlock \u003d leftCurly.getNextSibling().getType() !\u003d TokenTypes.CASE_GROUP;\n                 }\n                 else {\n                     emptyBlock \u003d leftCurly.getChildCount() \u003c\u003d 1;\n                 }\n                 if (emptyBlock) {\n                     log(leftCurly.getLineNo(),\n                         leftCurly.getColumnNo(),\n                         MSG_KEY_BLOCK_NO_STMT,\n                         ast.getText());\n                 }\n             }\n             else if (!hasText(leftCurly)) {\n                 log(leftCurly.getLineNo(),\n                     leftCurly.getColumnNo(),\n                     MSG_KEY_BLOCK_EMPTY,\n                     ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b1f81810e73c2421f5ca6ecf766fd2577a5f20b0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2451: removed excess hierarchy from EmptyBlockCheck",
      "commitDate": 1447254478000,
      "commitName": "b1f81810e73c2421f5ca6ecf766fd2577a5f20b0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445038509000,
      "commitNameOld": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 25.65,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST slistToken \u003d ast.findFirstToken(TokenTypes.SLIST);\n         final DetailAST leftCurly;\n \n         if (slistToken \u003d\u003d null) {\n             leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n         }\n         else {\n             leftCurly \u003d slistToken;\n         }\n \n         if (leftCurly !\u003d null) {\n-            if (getAbstractOption() \u003d\u003d BlockOption.STMT) {\n+            if (option \u003d\u003d BlockOption.STMT) {\n                 boolean emptyBlock;\n                 if (leftCurly.getType() \u003d\u003d TokenTypes.LCURLY) {\n                     emptyBlock \u003d leftCurly.getNextSibling().getType() !\u003d TokenTypes.CASE_GROUP;\n                 }\n                 else {\n                     emptyBlock \u003d leftCurly.getChildCount() \u003c\u003d 1;\n                 }\n                 if (emptyBlock) {\n                     log(leftCurly.getLineNo(),\n                         leftCurly.getColumnNo(),\n                         MSG_KEY_BLOCK_NO_STMT,\n                         ast.getText());\n                 }\n             }\n             else if (!hasText(leftCurly)) {\n                 log(leftCurly.getLineNo(),\n                     leftCurly.getColumnNo(),\n                     MSG_KEY_BLOCK_EMPTY,\n                     ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "23c8774d2e2fd245de1e5df02758fd23702c565e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: AvoidInlineConditional violations fixed\n",
      "commitDate": 1439784080000,
      "commitName": "23c8774d2e2fd245de1e5df02758fd23702c565e",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439782863000,
      "commitNameOld": "d56a2a366c6f9e3e8639d492d548ae562b75dc81",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,35 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST slistToken \u003d ast.findFirstToken(TokenTypes.SLIST);\n-        final DetailAST leftCurly \u003d slistToken !\u003d null\n-                ? slistToken : ast.findFirstToken(TokenTypes.LCURLY);\n+        final DetailAST leftCurly;\n+\n+        if (slistToken \u003d\u003d null) {\n+            leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n+        }\n+        else {\n+            leftCurly \u003d slistToken;\n+        }\n+\n         if (leftCurly !\u003d null) {\n             if (getAbstractOption() \u003d\u003d BlockOption.STMT) {\n                 boolean emptyBlock;\n                 if (leftCurly.getType() \u003d\u003d TokenTypes.LCURLY) {\n                     emptyBlock \u003d leftCurly.getNextSibling().getType() !\u003d TokenTypes.CASE_GROUP;\n                 }\n                 else {\n                     emptyBlock \u003d leftCurly.getChildCount() \u003c\u003d 1;\n                 }\n                 if (emptyBlock) {\n                     log(leftCurly.getLineNo(),\n                         leftCurly.getColumnNo(),\n                         MSG_KEY_BLOCK_NO_STMT,\n                         ast.getText());\n                 }\n             }\n             else if (!hasText(leftCurly)) {\n                 log(leftCurly.getLineNo(),\n                     leftCurly.getColumnNo(),\n                     MSG_KEY_BLOCK_EMPTY,\n                     ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b219e2ff881703c4b0edeee01de12635531676a9": {
      "type": "Ybodychange",
      "commitMessage": "Coverage has been increased to 100% in EmptyBlockCheck. Issue #1291\n",
      "commitDate": 1437888714000,
      "commitName": "b219e2ff881703c4b0edeee01de12635531676a9",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 2.98,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST slistToken \u003d ast.findFirstToken(TokenTypes.SLIST);\n         final DetailAST leftCurly \u003d slistToken !\u003d null\n                 ? slistToken : ast.findFirstToken(TokenTypes.LCURLY);\n         if (leftCurly !\u003d null) {\n             if (getAbstractOption() \u003d\u003d BlockOption.STMT) {\n                 boolean emptyBlock;\n                 if (leftCurly.getType() \u003d\u003d TokenTypes.LCURLY) {\n                     emptyBlock \u003d leftCurly.getNextSibling().getType() !\u003d TokenTypes.CASE_GROUP;\n                 }\n                 else {\n                     emptyBlock \u003d leftCurly.getChildCount() \u003c\u003d 1;\n                 }\n                 if (emptyBlock) {\n                     log(leftCurly.getLineNo(),\n                         leftCurly.getColumnNo(),\n                         MSG_KEY_BLOCK_NO_STMT,\n                         ast.getText());\n                 }\n             }\n-            else if (getAbstractOption() \u003d\u003d BlockOption.TEXT\n-                    \u0026\u0026 !hasText(leftCurly)) {\n+            else if (!hasText(leftCurly)) {\n                 log(leftCurly.getLineNo(),\n                     leftCurly.getColumnNo(),\n                     MSG_KEY_BLOCK_EMPTY,\n                     ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cea86a6cad3098ebcdb4a88db2e49477b07e0d93": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, blocks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java\n",
      "commitDate": 1421677949000,
      "commitName": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #537 refactored tests from blocks package.\n",
      "commitDate": 1421431669000,
      "commitName": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5",
      "commitAuthor": "ychulovskyy",
      "commitDateOld": 1420821881000,
      "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 7.06,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST slistToken \u003d aAST.findFirstToken(TokenTypes.SLIST);\n         final DetailAST leftCurly \u003d slistToken !\u003d null\n                 ? slistToken : aAST.findFirstToken(TokenTypes.LCURLY);\n         if (leftCurly !\u003d null) {\n             if (getAbstractOption() \u003d\u003d BlockOption.STMT) {\n                 boolean emptyBlock;\n                 if (leftCurly.getType() \u003d\u003d TokenTypes.LCURLY) {\n                     emptyBlock \u003d leftCurly.getNextSibling().getType() !\u003d TokenTypes.CASE_GROUP;\n                 }\n                 else {\n                     emptyBlock \u003d leftCurly.getChildCount() \u003c\u003d 1;\n                 }\n                 if (emptyBlock) {\n                     log(leftCurly.getLineNo(),\n                         leftCurly.getColumnNo(),\n-                        \"block.noStmt\",\n+                            MSG_KEY_BLOCK_NO_STMT,\n                         aAST.getText());\n                 }\n             }\n             else if (getAbstractOption() \u003d\u003d BlockOption.TEXT\n                     \u0026\u0026 !hasText(leftCurly))\n             {\n                 log(leftCurly.getLineNo(),\n                     leftCurly.getColumnNo(),\n-                    \"block.empty\",\n+                        MSG_KEY_BLOCK_EMPTY,\n                     aAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "a0012d03eb6a7ebc42f1986f09a8fe698c09eeb0": {
      "type": "Ybodychange",
      "commitMessage": "Fixed TODO need to handle LITERAL_SWITCH #235\n",
      "commitDate": 1407798151000,
      "commitName": "a0012d03eb6a7ebc42f1986f09a8fe698c09eeb0",
      "commitAuthor": "Max",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 160.24,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,31 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final DetailAST slistAST \u003d aAST.findFirstToken(TokenTypes.SLIST);\n-        if (slistAST !\u003d null) {\n+        final DetailAST slistToken \u003d aAST.findFirstToken(TokenTypes.SLIST);\n+        final DetailAST leftCurly \u003d slistToken !\u003d null\n+                ? slistToken : aAST.findFirstToken(TokenTypes.LCURLY);\n+        if (leftCurly !\u003d null) {\n             if (getAbstractOption() \u003d\u003d BlockOption.STMT) {\n-                if (slistAST.getChildCount() \u003c\u003d 1) {\n-                    log(slistAST.getLineNo(),\n-                        slistAST.getColumnNo(),\n+                boolean emptyBlock;\n+                if (leftCurly.getType() \u003d\u003d TokenTypes.LCURLY) {\n+                    emptyBlock \u003d leftCurly.getNextSibling().getType() !\u003d TokenTypes.CASE_GROUP;\n+                }\n+                else {\n+                    emptyBlock \u003d leftCurly.getChildCount() \u003c\u003d 1;\n+                }\n+                if (emptyBlock) {\n+                    log(leftCurly.getLineNo(),\n+                        leftCurly.getColumnNo(),\n                         \"block.noStmt\",\n                         aAST.getText());\n                 }\n             }\n             else if (getAbstractOption() \u003d\u003d BlockOption.TEXT\n-                    \u0026\u0026 !hasText(slistAST))\n+                    \u0026\u0026 !hasText(leftCurly))\n             {\n-                log(slistAST.getLineNo(),\n-                    slistAST.getColumnNo(),\n+                log(leftCurly.getLineNo(),\n+                    leftCurly.getColumnNo(),\n                     \"block.empty\",\n                     aAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": {
      "type": "Ybodychange",
      "commitMessage": "poartial fix for #46 - Sonarqube found problems in Checkstyle\n",
      "commitDate": 1386263571000,
      "commitName": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1380946942000,
      "commitNameOld": "788f87df4db1368ee0563e1ba1199177618cc01f",
      "commitAuthorOld": "picomancer",
      "daysBetweenCommits": 61.54,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST slistAST \u003d aAST.findFirstToken(TokenTypes.SLIST);\n         if (slistAST !\u003d null) {\n             if (getAbstractOption() \u003d\u003d BlockOption.STMT) {\n                 if (slistAST.getChildCount() \u003c\u003d 1) {\n                     log(slistAST.getLineNo(),\n                         slistAST.getColumnNo(),\n                         \"block.noStmt\",\n                         aAST.getText());\n                 }\n             }\n-            else if (getAbstractOption() \u003d\u003d BlockOption.TEXT) {\n-                if (!hasText(slistAST)) {\n-                    log(slistAST.getLineNo(),\n-                        slistAST.getColumnNo(),\n-                        \"block.empty\",\n-                        aAST.getText());\n-                }\n+            else if (getAbstractOption() \u003d\u003d BlockOption.TEXT\n+                    \u0026\u0026 !hasText(slistAST))\n+            {\n+                log(slistAST.getLineNo(),\n+                    slistAST.getColumnNo(),\n+                    \"block.empty\",\n+                    aAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3bd6412e39a141b980901f291391ff1bcc4a61f3": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Block checks\n",
      "commitDate": 1054723367000,
      "commitName": "3bd6412e39a141b980901f291391ff1bcc4a61f3",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054719060000,
      "commitNameOld": "a0844ab125394605a6970a23132daa41ed5cecb1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "267bdf541787643fbe6126605cbfb91dbcde1e91": {
      "type": "Ybodychange",
      "commitMessage": "Refactor to improve the AbstractOptionCheck code.\n",
      "commitDate": 1036543226000,
      "commitName": "267bdf541787643fbe6126605cbfb91dbcde1e91",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1036361604000,
      "commitNameOld": "065c1d3bc59e10d0235d8732652d2f2787fbbcd7",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.1,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST slistAST \u003d aAST.findFirstToken(TokenTypes.SLIST);\n         if (slistAST !\u003d null) {\n-            if (mOption \u003d\u003d BlockOption.STMT) {\n+            if (getAbstractOption() \u003d\u003d BlockOption.STMT) {\n                 if (slistAST.getChildCount() \u003c\u003d 1) {\n                     log(slistAST.getLineNo(),\n                         slistAST.getColumnNo(),\n                         \"block.noStmt\",\n                         aAST.getText());\n                 }\n             }\n-            else if (mOption \u003d\u003d BlockOption.TEXT) {\n+            else if (getAbstractOption() \u003d\u003d BlockOption.TEXT) {\n                 if (!hasText(slistAST)) {\n                     log(slistAST.getLineNo(),\n                         slistAST.getColumnNo(),\n                         \"block.empty\",\n                         aAST.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "982b3963ca007c6101f69cf50c010f07292dab0e": {
      "type": "Ybodychange",
      "commitMessage": "empty block check with options\n",
      "commitDate": 1036345563000,
      "commitName": "982b3963ca007c6101f69cf50c010f07292dab0e",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1036239734000,
      "commitNameOld": "3288a81e30ddea194f76bd74f3b509500b864163",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.22,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        // defend against users that change the token set in the config file.\n-        if (aAST.getType() !\u003d TokenTypes.SLIST) {\n-            return;\n-        }\n-\n-        // TODO: port BlockOption.TEXT\n-        if (aAST.getChildCount() \u003d\u003d 0) {\n-            DetailAST parent \u003d aAST.getParent();\n-            String parentText \u003d parent.getText();\n-            if (mCheckFor.contains(parentText)) {\n-                // TODO: i18n\n-                log(aAST.getLineNo(), \"empty \" + parentText + \" block\");\n+        final DetailAST slistAST \u003d aAST.findFirstToken(TokenTypes.SLIST);\n+        if (slistAST !\u003d null) {\n+            if (mOption \u003d\u003d BlockOption.STMT) {\n+                if (slistAST.getChildCount() \u003c\u003d 1) {      \n+                    log(slistAST.getLineNo(),\n+                        slistAST.getColumnNo(),\n+                        \"block.noStmt\",\n+                        aAST.getText());\n+                }   \n+            }\n+            else if (mOption \u003d\u003d BlockOption.TEXT) {\n+                if (!hasText(slistAST)) {\n+                        log(slistAST.getLineNo(),\n+                        slistAST.getColumnNo(),\n+                        \"block.empty\",\n+                        aAST.getText());\n+                }\n             }\n         }\n-\n     }\n\\ No newline at end of file\n"
    },
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": {
      "type": "Ybodychange",
      "commitMessage": "Added a new class TokenTypes that contains all the type constants. This class\nbreaks the circular dependencies - the cost is needing to maintain this class\nwhen a new grammar is introduced.\n",
      "commitDate": 1035008886000,
      "commitName": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1033247113000,
      "commitNameOld": "11fad553fd96cc00f33e95ae0bc2d6b32a8e1c54",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 20.39,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // defend against users that change the token set in the config file.\n-        if (aAST.getType() !\u003d JavaTokenTypes.SLIST) {\n+        if (aAST.getType() !\u003d TokenTypes.SLIST) {\n             return;\n         }\n \n         // TODO: port BlockOption.TEXT\n         if (aAST.getChildCount() \u003d\u003d 0) {\n             DetailAST parent \u003d aAST.getParent();\n             String parentText \u003d parent.getText();\n             if (mCheckFor.contains(parentText)) {\n                 // TODO: i18n\n                 log(aAST.getLineNo(), \"empty \" + parentText + \" block\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "11fad553fd96cc00f33e95ae0bc2d6b32a8e1c54": {
      "type": "Ybodychange",
      "commitMessage": "added TODO comment about incomplete port\n",
      "commitDate": 1033247113000,
      "commitName": "11fad553fd96cc00f33e95ae0bc2d6b32a8e1c54",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1033108888000,
      "commitNameOld": "d077a402da51bb238a7da99d5e2542437b145192",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.6,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // defend against users that change the token set in the config file.\n         if (aAST.getType() !\u003d JavaTokenTypes.SLIST) {\n             return;\n         }\n \n+        // TODO: port BlockOption.TEXT\n         if (aAST.getChildCount() \u003d\u003d 0) {\n             DetailAST parent \u003d aAST.getParent();\n             String parentText \u003d parent.getText();\n             if (mCheckFor.contains(parentText)) {\n                 // TODO: i18n\n                 log(aAST.getLineNo(), \"empty \" + parentText + \" block\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "ffb17cde0f6351bdf2f2e8cf655fa7f7a3cae827": {
      "type": "Ybodychange",
      "commitMessage": "some javadoc and TODO comments\n",
      "commitDate": 1032152891000,
      "commitName": "ffb17cde0f6351bdf2f2e8cf655fa7f7a3cae827",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1032108959000,
      "commitNameOld": "1d528505f9e45f64c40700871823fa3f774abd5c",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.51,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // defend against users that change the token set in the config file.\n         if (aAST.getType() !\u003d JavaTokenTypes.SLIST) {\n             return;\n         }\n \n         if (aAST.getChildCount() \u003d\u003d 0) {\n             DetailAST parent \u003d aAST.getParent();\n             String parentText \u003d parent.getText();\n             if (mCheckFor.contains(parentText)) {\n+                // TODO: i18n\n                 log(aAST.getLineNo(), \"empty \" + parentText + \" block\");\n             }\n         }\n \n     }\n\\ No newline at end of file\n"
    },
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": {
      "type": "Yintroduced",
      "commitMessage": "initial checkin of check implementations\n",
      "commitDate": 1032107737000,
      "commitName": "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d",
      "commitAuthor": "Lars Kühne"
    }
  }
}