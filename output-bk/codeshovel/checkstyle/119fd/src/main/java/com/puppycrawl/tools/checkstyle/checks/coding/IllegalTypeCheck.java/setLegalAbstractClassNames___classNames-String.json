{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "IllegalTypeCheck.java",
  "functionName": "setLegalAbstractClassNames",
  "functionId": "setLegalAbstractClassNames___classNames-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
  "functionStartLine": 448,
  "functionEndLine": 450,
  "changeHistory": [
    "2f00020063cbce94643fdc198dc69b7693382f58",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
    "dfc803a1cc442bafeb5aa375f0d9f0a31d655ff2",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
    "ea4085cd15fefe1e70a495798187c425295c74b6"
  ],
  "changeHistoryShort": {
    "2f00020063cbce94643fdc198dc69b7693382f58": "Ybodychange",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": "Yparameterchange",
    "dfc803a1cc442bafeb5aa375f0d9f0a31d655ff2": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": "Ybodychange",
    "ea4085cd15fefe1e70a495798187c425295c74b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2f00020063cbce94643fdc198dc69b7693382f58": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5008: increased pitest of coding package",
      "commitDate": 1512743008000,
      "commitName": "2f00020063cbce94643fdc198dc69b7693382f58",
      "commitAuthor": "rnveach",
      "commitDateOld": 1512615523000,
      "commitNameOld": "350a5a513d3655a12541b7411c8bf73abba6a0c8",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.48,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,3 @@\n     public void setLegalAbstractClassNames(String... classNames) {\n-        legalAbstractClassNames.clear();\n         Collections.addAll(legalAbstractClassNames, classNames);\n     }\n\\ No newline at end of file\n"
    },
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": {
      "type": "Yparameterchange",
      "commitMessage": "Fix PMD violations from UseVarargs rule, issue #999\n\nThe changes are fully backward-compatible. Method with vararg can be invoked both using array and list of parameters.\n",
      "commitDate": 1430353274000,
      "commitName": "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1429113367000,
      "commitNameOld": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 14.35,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n-    public void setLegalAbstractClassNames(String[] classNames)\n+    public void setLegalAbstractClassNames(String... classNames)\n     {\n         legalAbstractClassNames.clear();\n         Collections.addAll(legalAbstractClassNames, classNames);\n     }\n\\ No newline at end of file\n"
    },
    "dfc803a1cc442bafeb5aa375f0d9f0a31d655ff2": {
      "type": "Ybodychange",
      "commitMessage": "Use Collections.addAll() instead of adding elements individually\n\nAs per javadoc, `Collections.addAll()` may be significantly faster than adding elements individually using a for loop.\n",
      "commitDate": 1423439291000,
      "commitName": "dfc803a1cc442bafeb5aa375f0d9f0a31d655ff2",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1423431987000,
      "commitNameOld": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,5 @@\n     public void setLegalAbstractClassNames(String[] classNames)\n     {\n         legalAbstractClassNames.clear();\n-        for (String element : classNames) {\n-            legalAbstractClassNames.add(element);\n-        }\n+        Collections.addAll(legalAbstractClassNames, classNames);\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": {
      "type": "Ybodychange",
      "commitMessage": "Use the new syntactic sugar \"for loop\".\n\nEnd of the cosmetic changes.\n",
      "commitDate": 1197714527000,
      "commitName": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1197700618000,
      "commitNameOld": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     public void setLegalAbstractClassNames(String[] aClassNames)\n     {\n         mLegalAbstractClassNames.clear();\n-        for (int i \u003d 0; i \u003c aClassNames.length; i++) {\n-            mLegalAbstractClassNames.add(aClassNames[i]);\n+        for (String element : aClassNames) {\n+            mLegalAbstractClassNames.add(element);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ea4085cd15fefe1e70a495798187c425295c74b6": {
      "type": "Yintroduced",
      "commitMessage": "Fix for rfe 1248106 (TYPECAST is now accepted by NoWhitespaceAfter)\n\nFix for rfe 953266 (thanks to Paul Guyot (pguyot) for submitting patch)\nIllegalType can be configured to accept some abstract classes which\nmatches to regexp of illegal type names (property legalAbstractClassNames)\n\nTrailingComment now can be configured to accept some trailing comments\n(such as NOI18N) (property legalComment, rfe 1385344).\n",
      "commitDate": 1135527190000,
      "commitName": "ea4085cd15fefe1e70a495798187c425295c74b6",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}