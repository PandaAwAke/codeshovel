{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "processAST",
  "functionId": "processAST___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 345,
  "functionEndLine": 360,
  "changeHistory": [
    "553af5f4c777d513e7ce570dc32cf6d27654e9c4",
    "ce196814d857a4244a80c51d5151cc35e90b6749",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "e56f3d21ee1a0e8c0eced70ec7990fb03dcb3215",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
    "0a72322796c28266f07df8af6f7e000aa9cf0e48",
    "d3dd0586454d1757c8a188ecb9d2954b244344d4",
    "836e4d1b12158b86ad0cb10505ff09282a39d277",
    "5940050e57f0d83517b81c5fd101ad6e97b99578",
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a",
    "db19bd67dcea375b1b94d76b7267ccbc1a5ecc0b",
    "8fb2acd39b7db6223486f5e06126c7f0a2642a72",
    "24ba45a971569b9702e6bf78c5c07c48beb25464",
    "32f5f97181f9049af5411a5b8f151b51f1c5f165",
    "04ac5dd87c11a2bf7b908b45bbca7933382df515",
    "c75f97dbc2123f550a1acc64886a8bebf4b888cf"
  ],
  "changeHistoryShort": {
    "553af5f4c777d513e7ce570dc32cf6d27654e9c4": "Ybodychange",
    "ce196814d857a4244a80c51d5151cc35e90b6749": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "e56f3d21ee1a0e8c0eced70ec7990fb03dcb3215": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": "Ybodychange",
    "0a72322796c28266f07df8af6f7e000aa9cf0e48": "Ybodychange",
    "d3dd0586454d1757c8a188ecb9d2954b244344d4": "Ybodychange",
    "836e4d1b12158b86ad0cb10505ff09282a39d277": "Ybodychange",
    "5940050e57f0d83517b81c5fd101ad6e97b99578": "Ybodychange",
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a": "Ybodychange",
    "db19bd67dcea375b1b94d76b7267ccbc1a5ecc0b": "Ybodychange",
    "8fb2acd39b7db6223486f5e06126c7f0a2642a72": "Ybodychange",
    "24ba45a971569b9702e6bf78c5c07c48beb25464": "Ybodychange",
    "32f5f97181f9049af5411a5b8f151b51f1c5f165": "Ymultichange(Yrename,Ymodifierchange)",
    "04ac5dd87c11a2bf7b908b45bbca7933382df515": "Yfilerename",
    "c75f97dbc2123f550a1acc64886a8bebf4b888cf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "553af5f4c777d513e7ce570dc32cf6d27654e9c4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2806: fixed JavadocMethod.allowedAnnotations hides bad javadocs",
      "commitDate": 1453987479000,
      "commitName": "553af5f4c777d513e7ce570dc32cf6d27654e9c4",
      "commitAuthor": "rnveach",
      "commitDateOld": 1453646135000,
      "commitNameOld": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 3.95,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,16 @@\n     protected final void processAST(DetailAST ast) {\n-        if ((ast.getType() \u003d\u003d TokenTypes.METHOD_DEF || ast.getType() \u003d\u003d TokenTypes.CTOR_DEF)\n-            \u0026\u0026 getMethodsNumberOfLine(ast) \u003c\u003d minLineCount\n-            || hasAllowedAnnotations(ast)) {\n-            return;\n-        }\n         final Scope theScope \u003d calculateScope(ast);\n         if (shouldCheck(ast, theScope)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock textBlock \u003d contents.getJavadocBefore(ast.getLineNo());\n \n             if (textBlock \u003d\u003d null) {\n                 if (!isMissingJavadocAllowed(ast)) {\n                     log(ast, MSG_JAVADOC_MISSING);\n                 }\n             }\n             else {\n                 checkComment(ast, textBlock);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ce196814d857a4244a80c51d5151cc35e90b6749": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2080: Fix typos in code\n",
      "commitDate": 1445038509000,
      "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1444185186000,
      "commitNameOld": "5f5142b2325051f9ed31130167c73d154d547211",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 9.88,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     protected final void processAST(DetailAST ast) {\n         if ((ast.getType() \u003d\u003d TokenTypes.METHOD_DEF || ast.getType() \u003d\u003d TokenTypes.CTOR_DEF)\n             \u0026\u0026 getMethodsNumberOfLine(ast) \u003c\u003d minLineCount\n             || hasAllowedAnnotations(ast)) {\n             return;\n         }\n         final Scope theScope \u003d calculateScope(ast);\n         if (shouldCheck(ast, theScope)) {\n             final FileContents contents \u003d getFileContents();\n-            final TextBlock cmt \u003d contents.getJavadocBefore(ast.getLineNo());\n+            final TextBlock textBlock \u003d contents.getJavadocBefore(ast.getLineNo());\n \n-            if (cmt \u003d\u003d null) {\n+            if (textBlock \u003d\u003d null) {\n                 if (!isMissingJavadocAllowed(ast)) {\n                     log(ast, MSG_JAVADOC_MISSING);\n                 }\n             }\n             else {\n-                checkComment(ast, cmt);\n+                checkComment(ast, textBlock);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     protected final void processAST(DetailAST ast)\n     {\n         if ((ast.getType() \u003d\u003d TokenTypes.METHOD_DEF || ast.getType() \u003d\u003d TokenTypes.CTOR_DEF)\n-            \u0026\u0026 (getMethodsNumberOfLine(ast) \u003c\u003d minLineCount)\n+            \u0026\u0026 getMethodsNumberOfLine(ast) \u003c\u003d minLineCount\n             || hasAllowedAnnotations(ast))\n         {\n             return;\n         }\n         final Scope theScope \u003d calculateScope(ast);\n         if (shouldCheck(ast, theScope)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock cmt \u003d contents.getJavadocBefore(ast.getLineNo());\n \n             if (cmt \u003d\u003d null) {\n                 if (!isMissingJavadocAllowed(ast)) {\n                     log(ast, MSG_JAVADOC_MISSING);\n                 }\n             }\n             else {\n                 checkComment(ast, cmt);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     protected final void processAST(DetailAST ast)\n     {\n         if ((ast.getType() \u003d\u003d TokenTypes.METHOD_DEF || ast.getType() \u003d\u003d TokenTypes.CTOR_DEF)\n             \u0026\u0026 (getMethodsNumberOfLine(ast) \u003c\u003d minLineCount)\n             || hasAllowedAnnotations(ast))\n         {\n             return;\n         }\n         final Scope theScope \u003d calculateScope(ast);\n         if (shouldCheck(ast, theScope)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock cmt \u003d contents.getJavadocBefore(ast.getLineNo());\n \n             if (cmt \u003d\u003d null) {\n                 if (!isMissingJavadocAllowed(ast)) {\n-                    log(ast, \"javadoc.missing\");\n+                    log(ast, MSG_JAVADOC_MISSING);\n                 }\n             }\n             else {\n                 checkComment(ast, cmt);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "e56f3d21ee1a0e8c0eced70ec7990fb03dcb3215": {
      "type": "Ybodychange",
      "commitMessage": "Update for existing Check: JavadocMethodCheck #319\n",
      "commitDate": 1414021350000,
      "commitName": "e56f3d21ee1a0e8c0eced70ec7990fb03dcb3215",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": 1404651008000,
      "commitNameOld": "7dc94ba7ab9a4e330c088e0fbbd441f78628edb0",
      "commitAuthorOld": "Tobias Baum",
      "daysBetweenCommits": 108.45,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,23 @@\n     protected final void processAST(DetailAST aAST)\n     {\n+        if ((aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF || aAST.getType() \u003d\u003d TokenTypes.CTOR_DEF)\n+            \u0026\u0026 (getMethodsNumberOfLine(aAST) \u003c\u003d mMinLineCount)\n+            || hasAllowedAnnotations(aAST))\n+        {\n+            return;\n+        }\n         final Scope theScope \u003d calculateScope(aAST);\n         if (shouldCheck(aAST, theScope)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock cmt \u003d contents.getJavadocBefore(aAST.getLineNo());\n \n             if (cmt \u003d\u003d null) {\n                 if (!isMissingJavadocAllowed(aAST)) {\n                     log(aAST, \"javadoc.missing\");\n                 }\n             }\n             else {\n                 checkComment(aAST, cmt);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": {
      "type": "Ybodychange",
      "commitMessage": "poartial fix for #46 - Sonarqube found problems in Checkstyle\n",
      "commitDate": 1386263571000,
      "commitName": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1380946942000,
      "commitNameOld": "788f87df4db1368ee0563e1ba1199177618cc01f",
      "commitAuthorOld": "picomancer",
      "daysBetweenCommits": 61.54,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     protected final void processAST(DetailAST aAST)\n     {\n         final Scope theScope \u003d calculateScope(aAST);\n         if (shouldCheck(aAST, theScope)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock cmt \u003d contents.getJavadocBefore(aAST.getLineNo());\n \n             if (cmt \u003d\u003d null) {\n                 if (!isMissingJavadocAllowed(aAST)) {\n                     log(aAST, \"javadoc.missing\");\n                 }\n             }\n             else {\n-                checkComment(aAST, cmt, theScope);\n+                checkComment(aAST, cmt);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0a72322796c28266f07df8af6f7e000aa9cf0e48": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up the allowed use of the {@inheritDoc} tag.\n",
      "commitDate": 1148305756000,
      "commitName": "0a72322796c28266f07df8af6f7e000aa9cf0e48",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1135859700000,
      "commitNameOld": "788b41973d5747c7b4699a853b62168cf0001df6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 144.05,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     protected final void processAST(DetailAST aAST)\n     {\n-        if (shouldCheck(aAST)) {\n+        final Scope theScope \u003d calculateScope(aAST);\n+        if (shouldCheck(aAST, theScope)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock cmt \u003d contents.getJavadocBefore(aAST.getLineNo());\n \n             if (cmt \u003d\u003d null) {\n                 if (!isMissingJavadocAllowed(aAST)) {\n                     log(aAST, \"javadoc.missing\");\n                 }\n             }\n             else {\n-                checkComment(aAST, cmt);\n+                checkComment(aAST, cmt, theScope);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d3dd0586454d1757c8a188ecb9d2954b244344d4": {
      "type": "Ybodychange",
      "commitMessage": "1333159 (A relief hook for JavadocMethodCheck) thanks to Ralf (rakus)\n",
      "commitDate": 1130531388000,
      "commitName": "d3dd0586454d1757c8a188ecb9d2954b244344d4",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1123248811000,
      "commitNameOld": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 84.29,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,16 @@\n     protected final void processAST(DetailAST aAST)\n     {\n         if (shouldCheck(aAST)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock cmt \u003d contents.getJavadocBefore(aAST.getLineNo());\n \n             if (cmt \u003d\u003d null) {\n-                if (!mAllowMissingJavadoc\n-                    \u0026\u0026 !(mAllowMissingPropertyJavadoc\n-                         \u0026\u0026 (isSetterMethod(aAST) || isGetterMethod(aAST))))\n-                {\n+                if (!isMissingJavadocAllowed(aAST)) {\n                     log(aAST, \"javadoc.missing\");\n                 }\n             }\n             else {\n                 checkComment(aAST, cmt);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "836e4d1b12158b86ad0cb10505ff09282a39d277": {
      "type": "Ybodychange",
      "commitMessage": "Support for suppressing errors about missing Javadoc on property accessor\nmethods. Still need to document it in xdocs.\n",
      "commitDate": 1110979283000,
      "commitName": "836e4d1b12158b86ad0cb10505ff09282a39d277",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1106211188000,
      "commitNameOld": "38ee64b6011c7987647fda8cc999c978c2dd094e",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 55.19,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n     protected final void processAST(DetailAST aAST)\n     {\n         if (shouldCheck(aAST)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock cmt \u003d contents.getJavadocBefore(aAST.getLineNo());\n \n             if (cmt \u003d\u003d null) {\n-                if (!mAllowMissingJavadoc) {\n+                if (!mAllowMissingJavadoc\n+                    \u0026\u0026 !(mAllowMissingPropertyJavadoc\n+                         \u0026\u0026 (isSetterMethod(aAST) || isGetterMethod(aAST))))\n+                {\n                     log(aAST, \"javadoc.missing\");\n                 }\n             }\n             else {\n                 checkComment(aAST, cmt);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "5940050e57f0d83517b81c5fd101ad6e97b99578": {
      "type": "Ybodychange",
      "commitMessage": "JavadocMethod check now can be configured to skip missed javadoc (rfe 1060634)\n",
      "commitDate": 1106040024000,
      "commitName": "5940050e57f0d83517b81c5fd101ad6e97b99578",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1105700537000,
      "commitNameOld": "fe3a1a71008698b777215dd3c2836b2da8b1a3a5",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 3.93,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n     protected final void processAST(DetailAST aAST)\n     {\n         if (shouldCheck(aAST)) {\n             final FileContents contents \u003d getFileContents();\n             final TextBlock cmt \u003d contents.getJavadocBefore(aAST.getLineNo());\n \n             if (cmt \u003d\u003d null) {\n-                log(aAST, \"javadoc.missing\");\n+                if (!mAllowMissingJavadoc) {\n+                    log(aAST, \"javadoc.missing\");\n+                }\n             }\n             else {\n                 checkComment(aAST, cmt);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a": {
      "type": "Ybodychange",
      "commitMessage": "Scoping for javadoc checks\n",
      "commitDate": 1080421817000,
      "commitName": "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1074114639000,
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 73.0,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,14 @@\n     protected final void processAST(DetailAST aAST)\n     {\n-        final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n-        final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n-        final Scope targetScope \u003d\n-            ScopeUtils.inInterfaceBlock(aAST)\n-                ? Scope.PUBLIC\n-                : declaredScope;\n+        if (shouldCheck(aAST)) {\n+            final FileContents contents \u003d getFileContents();\n+            final TextBlock cmt \u003d contents.getJavadocBefore(aAST.getLineNo());\n \n-        if (targetScope.isIn(mScope)) {\n-            final Scope surroundingScope \u003d\n-                ScopeUtils.getSurroundingScope(aAST);\n-\n-            if (surroundingScope.isIn(mScope)) {\n-                final FileContents contents \u003d getFileContents();\n-                final TextBlock cmt \u003d\n-                    contents.getJavadocBefore(aAST.getLineNo());\n-\n-                if (cmt \u003d\u003d null) {\n-                    log(aAST, \"javadoc.missing\");\n-                }\n-                else {\n-                    checkComment(aAST, cmt);\n-                }\n+            if (cmt \u003d\u003d null) {\n+                log(aAST, \"javadoc.missing\");\n+            }\n+            else {\n+                checkComment(aAST, cmt);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "db19bd67dcea375b1b94d76b7267ccbc1a5ecc0b": {
      "type": "Ybodychange",
      "commitMessage": "Checnge some check to use new API (I hate wrapping :)\n",
      "commitDate": 1073532659000,
      "commitName": "db19bd67dcea375b1b94d76b7267ccbc1a5ecc0b",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1070909885000,
      "commitNameOld": "72be23f288369fdd9e562999bb9b0e2ff646c897",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 30.36,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,27 @@\n     protected final void processAST(DetailAST aAST)\n     {\n         final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope targetScope \u003d\n             ScopeUtils.inInterfaceBlock(aAST)\n                 ? Scope.PUBLIC\n                 : declaredScope;\n \n         if (targetScope.isIn(mScope)) {\n             final Scope surroundingScope \u003d\n                 ScopeUtils.getSurroundingScope(aAST);\n \n             if (surroundingScope.isIn(mScope)) {\n                 final FileContents contents \u003d getFileContents();\n                 final TextBlock cmt \u003d\n                     contents.getJavadocBefore(aAST.getLineNo());\n \n                 if (cmt \u003d\u003d null) {\n-                    log(aAST.getLineNo(),\n-                        aAST.getColumnNo(),\n-                        \"javadoc.missing\");\n+                    log(aAST, \"javadoc.missing\");\n                 }\n                 else {\n                     checkComment(aAST, cmt);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8fb2acd39b7db6223486f5e06126c7f0a2642a72": {
      "type": "Ybodychange",
      "commitMessage": "replaced Comment class with TextBlock interface, Comment is now a package private implementation\n",
      "commitDate": 1069656302000,
      "commitName": "8fb2acd39b7db6223486f5e06126c7f0a2642a72",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1069576421000,
      "commitNameOld": "24ba45a971569b9702e6bf78c5c07c48beb25464",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.92,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     protected final void processAST(DetailAST aAST)\n     {\n         final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope targetScope \u003d\n             ScopeUtils.inInterfaceBlock(aAST)\n                 ? Scope.PUBLIC\n                 : declaredScope;\n \n         if (targetScope.isIn(mScope)) {\n             final Scope surroundingScope \u003d\n                 ScopeUtils.getSurroundingScope(aAST);\n \n             if (surroundingScope.isIn(mScope)) {\n                 final FileContents contents \u003d getFileContents();\n-                final Comment cmt \u003d\n+                final TextBlock cmt \u003d\n                     contents.getJavadocBefore(aAST.getLineNo());\n \n                 if (cmt \u003d\u003d null) {\n                     log(aAST.getLineNo(),\n                         aAST.getColumnNo(),\n                         \"javadoc.missing\");\n                 }\n                 else {\n                     checkComment(aAST, cmt);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "24ba45a971569b9702e6bf78c5c07c48beb25464": {
      "type": "Ybodychange",
      "commitMessage": "Fix for ArrayIndexOutOfBounds in JavadocStyle (bug 841942 )\n",
      "commitDate": 1069576421000,
      "commitName": "24ba45a971569b9702e6bf78c5c07c48beb25464",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1065635218000,
      "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 45.62,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     protected final void processAST(DetailAST aAST)\n     {\n         final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n         final Scope targetScope \u003d\n             ScopeUtils.inInterfaceBlock(aAST)\n                 ? Scope.PUBLIC\n                 : declaredScope;\n \n         if (targetScope.isIn(mScope)) {\n             final Scope surroundingScope \u003d\n                 ScopeUtils.getSurroundingScope(aAST);\n \n             if (surroundingScope.isIn(mScope)) {\n                 final FileContents contents \u003d getFileContents();\n-                final String[] cmt \u003d\n+                final Comment cmt \u003d\n                     contents.getJavadocBefore(aAST.getLineNo());\n \n                 if (cmt \u003d\u003d null) {\n                     log(aAST.getLineNo(),\n                         aAST.getColumnNo(),\n                         \"javadoc.missing\");\n                 }\n                 else {\n                     checkComment(aAST, cmt);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "32f5f97181f9049af5411a5b8f151b51f1c5f165": {
      "type": "Ymultichange(Yrename,Ymodifierchange)",
      "commitMessage": "Major refactoring to remove duplicate code detected\nby Simian. Just demonstrates the power of the tools for\nfind code that needs refactoring.\n\nI can hardly wait to use Simian on my current project.\n\u003cevil_grin/\u003e\n",
      "commitDate": 1056375080000,
      "commitName": "32f5f97181f9049af5411a5b8f151b51f1c5f165",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yrename",
        "Ymodifierchange"
      ]
    },
    "04ac5dd87c11a2bf7b908b45bbca7933382df515": {
      "type": "Yfilerename",
      "commitMessage": "Moving another Javadoc check to see what is involved.\nA suprisingly small amount. Love the Eclipse refactoring\nsupport having the smarts to do the CVS operations.\n",
      "commitDate": 1054648289000,
      "commitName": "04ac5dd87c11a2bf7b908b45bbca7933382df515",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054647239000,
      "commitNameOld": "2ef6dc6a43ede89c5b5b9091dee83e1e58bb5edc",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c75f97dbc2123f550a1acc64886a8bebf4b888cf": {
      "type": "Yintroduced",
      "commitMessage": "Javadoc method check\n",
      "commitDate": 1036501994000,
      "commitName": "c75f97dbc2123f550a1acc64886a8bebf4b888cf",
      "commitAuthor": "Rick Giles"
    }
  }
}