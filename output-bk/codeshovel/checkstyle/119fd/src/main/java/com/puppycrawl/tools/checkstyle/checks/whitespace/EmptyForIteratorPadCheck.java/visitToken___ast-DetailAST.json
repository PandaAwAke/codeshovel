{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "EmptyForIteratorPadCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java",
  "functionStartLine": 104,
  "functionEndLine": 122,
  "changeHistory": [
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "d2495fd0cf521600f68c639892b142ca9edf2298",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "ee8467d36723b5b3562b4f101e84950a4320ecf1",
    "2e8126e99047befc39560342981b0b8e7cabea21",
    "916417fc6214ab75606d2fbc1d7b511509ffe25b"
  ],
  "changeHistoryShort": {
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "d2495fd0cf521600f68c639892b142ca9edf2298": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "ee8467d36723b5b3562b4f101e84950a4320ecf1": "Ybodychange",
    "2e8126e99047befc39560342981b0b8e7cabea21": "Yfilerename",
    "916417fc6214ab75606d2fbc1d7b511509ffe25b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": 1453387259000,
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for iterator. test pad after semi.\n             final DetailAST semi \u003d ast.getPreviousSibling();\n             final String line \u003d getLines()[semi.getLineNo() - 1];\n             final int after \u003d semi.getColumnNo() + 1;\n             //don\u0027t check if at end of line\n             if (after \u003c line.length()) {\n                 if (option \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(after))) {\n-                    log(semi.getLineNo(), after, WS_FOLLOWED, SEMICOLON);\n+                    log(semi.getLineNo(), after, MSG_WS_FOLLOWED, SEMICOLON);\n                 }\n                 else if (option \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(after))) {\n-                    log(semi.getLineNo(), after, WS_NOT_FOLLOWED, SEMICOLON);\n+                    log(semi.getLineNo(), after, MSG_WS_NOT_FOLLOWED, SEMICOLON);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d2495fd0cf521600f68c639892b142ca9edf2298": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2451: removed excess hierarchy from EmptyForIteratorPadCheck",
      "commitDate": 1447759986000,
      "commitName": "d2495fd0cf521600f68c639892b142ca9edf2298",
      "commitAuthor": "rnveach",
      "commitDateOld": 1440543609000,
      "commitNameOld": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 83.52,
      "commitsBetweenForRepo": 716,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for iterator. test pad after semi.\n             final DetailAST semi \u003d ast.getPreviousSibling();\n             final String line \u003d getLines()[semi.getLineNo() - 1];\n             final int after \u003d semi.getColumnNo() + 1;\n             //don\u0027t check if at end of line\n             if (after \u003c line.length()) {\n-                if (getAbstractOption() \u003d\u003d PadOption.NOSPACE\n+                if (option \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(after))) {\n                     log(semi.getLineNo(), after, WS_FOLLOWED, SEMICOLON);\n                 }\n-                else if (getAbstractOption() \u003d\u003d PadOption.SPACE\n+                else if (option \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(after))) {\n                     log(semi.getLineNo(), after, WS_NOT_FOLLOWED, SEMICOLON);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": 1440543609000,
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440502770000,
      "commitNameOld": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.47,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for iterator. test pad after semi.\n             final DetailAST semi \u003d ast.getPreviousSibling();\n             final String line \u003d getLines()[semi.getLineNo() - 1];\n             final int after \u003d semi.getColumnNo() + 1;\n             //don\u0027t check if at end of line\n             if (after \u003c line.length()) {\n                 if (getAbstractOption() \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(after))) {\n-                    log(semi.getLineNo(), after, WS_FOLLOWED, \";\");\n+                    log(semi.getLineNo(), after, WS_FOLLOWED, SEMICOLON);\n                 }\n                 else if (getAbstractOption() \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(after))) {\n-                    log(semi.getLineNo(), after, WS_NOT_FOLLOWED, \";\");\n+                    log(semi.getLineNo(), after, WS_NOT_FOLLOWED, SEMICOLON);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 83.58,
      "commitsBetweenForRepo": 632,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for iterator. test pad after semi.\n             final DetailAST semi \u003d ast.getPreviousSibling();\n             final String line \u003d getLines()[semi.getLineNo() - 1];\n             final int after \u003d semi.getColumnNo() + 1;\n             //don\u0027t check if at end of line\n             if (after \u003c line.length()) {\n-                if (PadOption.NOSPACE \u003d\u003d getAbstractOption()\n+                if (getAbstractOption() \u003d\u003d PadOption.NOSPACE\n                     \u0026\u0026 Character.isWhitespace(line.charAt(after))) {\n                     log(semi.getLineNo(), after, WS_FOLLOWED, \";\");\n                 }\n-                else if (PadOption.SPACE \u003d\u003d getAbstractOption()\n+                else if (getAbstractOption() \u003d\u003d PadOption.SPACE\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(after))) {\n                     log(semi.getLineNo(), after, WS_NOT_FOLLOWED, \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425602876000,
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void visitToken(DetailAST ast)\n     {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for iterator. test pad after semi.\n             final DetailAST semi \u003d ast.getPreviousSibling();\n             final String line \u003d getLines()[semi.getLineNo() - 1];\n             final int after \u003d semi.getColumnNo() + 1;\n             //don\u0027t check if at end of line\n             if (after \u003c line.length()) {\n-                if ((PadOption.NOSPACE \u003d\u003d getAbstractOption())\n-                    \u0026\u0026 (Character.isWhitespace(line.charAt(after))))\n+                if (PadOption.NOSPACE \u003d\u003d getAbstractOption()\n+                    \u0026\u0026 Character.isWhitespace(line.charAt(after)))\n                 {\n                     log(semi.getLineNo(), after, WS_FOLLOWED, \";\");\n                 }\n-                else if ((PadOption.SPACE \u003d\u003d getAbstractOption())\n+                else if (PadOption.SPACE \u003d\u003d getAbstractOption()\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(after)))\n                 {\n                     log(semi.getLineNo(), after, WS_NOT_FOLLOWED, \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, whitespace package, issue #537\n",
      "commitDate": 1424437365000,
      "commitName": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void visitToken(DetailAST ast)\n     {\n         if (ast.getChildCount() \u003d\u003d 0) {\n             //empty for iterator. test pad after semi.\n             final DetailAST semi \u003d ast.getPreviousSibling();\n             final String line \u003d getLines()[semi.getLineNo() - 1];\n             final int after \u003d semi.getColumnNo() + 1;\n             //don\u0027t check if at end of line\n             if (after \u003c line.length()) {\n                 if ((PadOption.NOSPACE \u003d\u003d getAbstractOption())\n                     \u0026\u0026 (Character.isWhitespace(line.charAt(after))))\n                 {\n-                    log(semi.getLineNo(), after, \"ws.followed\", \";\");\n+                    log(semi.getLineNo(), after, WS_FOLLOWED, \";\");\n                 }\n                 else if ((PadOption.SPACE \u003d\u003d getAbstractOption())\n                          \u0026\u0026 !Character.isWhitespace(line.charAt(after)))\n                 {\n-                    log(semi.getLineNo(), after, \"ws.notFollowed\", \";\");\n+                    log(semi.getLineNo(), after, WS_NOT_FOLLOWED, \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": 1421677248000,
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "ee8467d36723b5b3562b4f101e84950a4320ecf1": {
      "type": "Ybodychange",
      "commitMessage": "Corrected EmptyForIteratorPadCheck errors when line wrap occurs\nat the iterator, bug 777471\n",
      "commitDate": 1059149612000,
      "commitName": "ee8467d36723b5b3562b4f101e84950a4320ecf1",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1055144900000,
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 46.35,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getChildCount() \u003d\u003d 0) {\n-            final String line \u003d getLines()[aAST.getLineNo() - 1];\n-            final int after \u003d aAST.getColumnNo() - 1;\n+            //empty for iterator. test pad after semi.\n+            final DetailAST semi \u003d aAST.getPreviousSibling();\n+            final String line \u003d getLines()[semi.getLineNo() - 1];\n+            final int after \u003d semi.getColumnNo() + 1;\n+            //don\u0027t check if at end of line\n             if (after \u003c line.length()) {\n                 if ((PadOption.NOSPACE \u003d\u003d getAbstractOption())\n                     \u0026\u0026 (Character.isWhitespace(line.charAt(after))))\n                 {\n-                    log(aAST.getLineNo(), after, \"ws.followed\", \";\");\n+                    log(semi.getLineNo(), after, \"ws.followed\", \";\");\n                 }\n                 else if ((PadOption.SPACE \u003d\u003d getAbstractOption())\n-                         \u0026\u0026 !Character.isWhitespace(line.charAt(after))\n-                         \u0026\u0026 (line.charAt(after) !\u003d \u0027)\u0027))\n+                         \u0026\u0026 !Character.isWhitespace(line.charAt(after)))\n                 {\n-                    log(aAST.getLineNo(), after, \"ws.notFollowed\", \";\");\n+                    log(semi.getLineNo(), after, \"ws.notFollowed\", \";\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "2e8126e99047befc39560342981b0b8e7cabea21": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Whitespace checks\n",
      "commitDate": 1054727729000,
      "commitName": "2e8126e99047befc39560342981b0b8e7cabea21",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054723367000,
      "commitNameOld": "3bd6412e39a141b980901f291391ff1bcc4a61f3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "916417fc6214ab75606d2fbc1d7b511509ffe25b": {
      "type": "Yintroduced",
      "commitMessage": "Check for policy of space at an empty for interator.\nAddresses requests 565666, 583725.\nParenPad and WhitespaceAfter no longer check an empty for iterator.\nNot doing so, and using check EmptyForIterator, is less complex than\nproviding properties for ParenPad and WhitespaceAfter.\n",
      "commitDate": 1042316222000,
      "commitName": "916417fc6214ab75606d2fbc1d7b511509ffe25b",
      "commitAuthor": "Rick Giles"
    }
  }
}