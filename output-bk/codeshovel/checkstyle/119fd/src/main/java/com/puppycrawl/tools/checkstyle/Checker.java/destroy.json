{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "Checker.java",
  "functionName": "destroy",
  "functionId": "destroy",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
  "functionStartLine": 174,
  "functionEndLine": 187,
  "changeHistory": [
    "327c0bc843612486ab4ded32a2f01038e1271fd0",
    "8ca6e3a6f7c2dec0c1c961b0d7cc7f3f537686b8",
    "fbaabe83cf78bcaf563443a3fb866931239eb15b",
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "778e844080c9cf97da565368e775c8b980bdcf00",
    "abff1a2489ea8af10e1bc0a335551262d22f44e7",
    "add2bdfb27494bff5fa9c305d9782f57c6170b18",
    "032b3801aa80bff181235ddd05244d07cc5f43f8",
    "dd476d336818a95e58163cd1c4f8cb00be239eae",
    "c85ec6f26ade692103ac27383a87c3402b4d66ca",
    "edf2c95634cd0c657465723eb0dc2e6f1834eeba",
    "0e3fe5643667a53079dbd114e5b1e9aa91fde083",
    "6c304950f62f06cb3c72e46869c3fa3fbdc1e7d7"
  ],
  "changeHistoryShort": {
    "327c0bc843612486ab4ded32a2f01038e1271fd0": "Ybodychange",
    "8ca6e3a6f7c2dec0c1c961b0d7cc7f3f537686b8": "Ybodychange",
    "fbaabe83cf78bcaf563443a3fb866931239eb15b": "Ybodychange",
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "778e844080c9cf97da565368e775c8b980bdcf00": "Ybodychange",
    "abff1a2489ea8af10e1bc0a335551262d22f44e7": "Ybodychange",
    "add2bdfb27494bff5fa9c305d9782f57c6170b18": "Ybodychange",
    "032b3801aa80bff181235ddd05244d07cc5f43f8": "Ybodychange",
    "dd476d336818a95e58163cd1c4f8cb00be239eae": "Ybodychange",
    "c85ec6f26ade692103ac27383a87c3402b4d66ca": "Ybodychange",
    "edf2c95634cd0c657465723eb0dc2e6f1834eeba": "Ymodifierchange",
    "0e3fe5643667a53079dbd114e5b1e9aa91fde083": "Ybodychange",
    "6c304950f62f06cb3c72e46869c3fa3fbdc1e7d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "327c0bc843612486ab4ded32a2f01038e1271fd0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3254: UT to verify all property types and values in XDocs",
      "commitDate": 1515029424000,
      "commitName": "327c0bc843612486ab4ded32a2f01038e1271fd0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1514928265000,
      "commitNameOld": "dabb75d43c7e02317565dde4c5e60f380d3b16b8",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public void destroy() {\n         listeners.clear();\n         fileSetChecks.clear();\n         beforeExecutionFileFilters.clear();\n         filters.clear();\n-        if (cache !\u003d null) {\n+        if (cacheFile !\u003d null) {\n             try {\n-                cache.persist();\n+                cacheFile.persist();\n             }\n             catch (IOException ex) {\n                 throw new IllegalStateException(\"Unable to persist cache file.\", ex);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8ca6e3a6f7c2dec0c1c961b0d7cc7f3f537686b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5264: clear filesets on checker destroy",
      "commitDate": 1510969576000,
      "commitName": "8ca6e3a6f7c2dec0c1c961b0d7cc7f3f537686b8",
      "commitAuthor": "rnveach",
      "commitDateOld": 1508521617000,
      "commitNameOld": "127f729942afa7d645db2e41c1b3ebe4c12be6c4",
      "commitAuthorOld": "crude",
      "daysBetweenCommits": 28.33,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n     public void destroy() {\n         listeners.clear();\n+        fileSetChecks.clear();\n         beforeExecutionFileFilters.clear();\n         filters.clear();\n         if (cache !\u003d null) {\n             try {\n                 cache.persist();\n             }\n             catch (IOException ex) {\n                 throw new IllegalStateException(\"Unable to persist cache file.\", ex);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "fbaabe83cf78bcaf563443a3fb866931239eb15b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2866: added before execution and exclusion file filters",
      "commitDate": 1477176790000,
      "commitName": "fbaabe83cf78bcaf563443a3fb866931239eb15b",
      "commitAuthor": "rnveach",
      "commitDateOld": 1476404860000,
      "commitNameOld": "c2847eae889fbeee9d93e875bcc7f72c3eb9fc0b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 8.93,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     public void destroy() {\n         listeners.clear();\n+        beforeExecutionFileFilters.clear();\n         filters.clear();\n         if (cache !\u003d null) {\n             try {\n                 cache.persist();\n             }\n             catch (IOException ex) {\n                 throw new IllegalStateException(\"Unable to persist cache file.\", ex);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609": {
      "type": "Ybodychange",
      "commitMessage": "Issue #569: Move TreeWalker cache to Checker\n",
      "commitDate": 1455040202000,
      "commitName": "d46c2cf0e9df06bb5f424dbd7645574f082f7609",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 35.73,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,12 @@\n     public void destroy() {\n         listeners.clear();\n         filters.clear();\n+        if (cache !\u003d null) {\n+            try {\n+                cache.persist();\n+            }\n+            catch (IOException ex) {\n+                throw new IllegalStateException(\"Unable to persist cache file.\", ex);\n+            }\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1420999847000,
      "commitNameOld": "8ec1a1a97188c112f4af5cc00caffae2ac0cc530",
      "commitAuthorOld": "Lars Ködderitzsch",
      "daysBetweenCommits": 7.85,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n     public void destroy()\n     {\n-        mListeners.clear();\n-        mFilters.clear();\n+        listeners.clear();\n+        filters.clear();\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "778e844080c9cf97da565368e775c8b980bdcf00": {
      "type": "Ybodychange",
      "commitMessage": "Added removeListener() and removeFilter() to Checker (bug 834367)\n",
      "commitDate": 1068006372000,
      "commitName": "778e844080c9cf97da565368e775c8b980bdcf00",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1066710700000,
      "commitNameOld": "33f75977205625bc5f9620a2c63e16a11f9663a5",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 15.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,5 @@\n     public void destroy()\n     {\n         mListeners.clear();\n+        mFilters.clear();\n     }\n\\ No newline at end of file\n"
    },
    "abff1a2489ea8af10e1bc0a335551262d22f44e7": {
      "type": "Ybodychange",
      "commitMessage": "Made TreeWalker a FileSetCheck and moved the\nprocessing logic from Checker to TreeWalker.\n\nChecker is now only concerned with managing FileSetChecks,\nalthough the setup is still hardcoded in the constructor,\nc.f. TODO comments in Checker constructor.\n\nUncommenting the addFileSetCheck calls for real is\nleft until we have better control our configuration.\n",
      "commitDate": 1037737306000,
      "commitName": "abff1a2489ea8af10e1bc0a335551262d22f44e7",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1037733445000,
      "commitNameOld": "54a09706ec1db32435b09e6b6910813325558f8d",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,4 @@\n     public void destroy()\n     {\n-        mCache.destroy();\n         mListeners.clear();\n     }\n\\ No newline at end of file\n"
    },
    "add2bdfb27494bff5fa9c305d9782f57c6170b18": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug 561616 (ant task should log errors, not infos)\n\nThis required a redesign of the AuditListener interface, the get/setOutputStream methoeds have been removed, as there might be listeners that have no or more than one OutputStream.\n\nThe DefaultLogger now differentiates between info messages (\"started checking file ...\", etc.) and error messages (style errors found by checkstyle) by writing the messages to two different OutputStreams.\n",
      "commitDate": 1025640517000,
      "commitName": "add2bdfb27494bff5fa9c305d9782f57c6170b18",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1025488656000,
      "commitNameOld": "bbe51f6884ac0a961f55310e15ec90411709d970",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.76,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,5 @@\n     public void destroy()\n     {\n         mCache.destroy();\n-\n-        // close all listeners\n-        final Iterator it \u003d mListeners.iterator();\n-        while (it.hasNext()) {\n-            final AuditListener listener \u003d (AuditListener) it.next();\n-            final OutputStream os \u003d listener.getOutputStream();\n-            // close only those that can be closed...\n-            if ((os !\u003d System.out) \u0026\u0026 (os !\u003d System.err) \u0026\u0026 (os !\u003d null)) {\n-                try  {\n-                    os.flush();\n-                    os.close();\n-                }\n-                catch (IOException ex) {\n-                    ex.printStackTrace();\n-                }\n-            }\n-            it.remove();\n-        }\n+        mListeners.clear();\n     }\n\\ No newline at end of file\n"
    },
    "032b3801aa80bff181235ddd05244d07cc5f43f8": {
      "type": "Ybodychange",
      "commitMessage": "fixed checkstyle error (empty exception handler). Do we need a framework for passing internal errors to the outside world, instead of just printing them? I\u0027m not sure how useful printing is if you\u0027re not on the command line...\n",
      "commitDate": 1021438966000,
      "commitName": "032b3801aa80bff181235ddd05244d07cc5f43f8",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1020164209000,
      "commitNameOld": "8f8879df46592e6e35658026c354b804ef328097",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 14.75,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     public void destroy()\n     {\n         mCache.destroy();\n \n         // close all listeners\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final AuditListener listener \u003d (AuditListener) it.next();\n             final OutputStream os \u003d listener.getOutputStream();\n             // close only those that can be closed...\n             if ((os !\u003d System.out) \u0026\u0026 (os !\u003d System.err) \u0026\u0026 (os !\u003d null)) {\n                 try  {\n                     os.flush();\n                     os.close();\n                 }\n-                catch (IOException ignored) {\n+                catch (IOException ex) {\n+                    ex.printStackTrace();\n                 }\n             }\n             it.remove();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "dd476d336818a95e58163cd1c4f8cb00be239eae": {
      "type": "Ybodychange",
      "commitMessage": "fix for bug 528358, was introduced in revision 1.17\n",
      "commitDate": 1016566509000,
      "commitName": "dd476d336818a95e58163cd1c4f8cb00be239eae",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1016101246000,
      "commitNameOld": "b671e6bb1c0652cfc1ccd07355cac99df584eb2f",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.38,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public void destroy()\n     {\n         mCache.destroy();\n \n         // close all listeners\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final AuditListener listener \u003d (AuditListener) it.next();\n             final OutputStream os \u003d listener.getOutputStream();\n             // close only those that can be closed...\n             if ((os !\u003d System.out) \u0026\u0026 (os !\u003d System.err) \u0026\u0026 (os !\u003d null)) {\n                 try  {\n                     os.flush();\n                     os.close();\n                 }\n                 catch (IOException ignored) {\n                 }\n             }\n+            it.remove();\n         }\n-        it.remove();\n     }\n\\ No newline at end of file\n"
    },
    "c85ec6f26ade692103ac27383a87c3402b4d66ca": {
      "type": "Ybodychange",
      "commitMessage": "Merged the Streamable interface into the AuditListener interface. Having them\nseparate served no real purpose at the moment, except to complicate the\nimplementation.\n",
      "commitDate": 1014247148000,
      "commitName": "c85ec6f26ade692103ac27383a87c3402b4d66ca",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1013032508000,
      "commitNameOld": "ea01eaaa85409442aeece8763f0388066bd07bf5",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 14.06,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n     public void destroy()\n     {\n         mCache.destroy();\n \n-        // close all streamable listeners\n+        // close all listeners\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n-            final Object obj \u003d it.next();\n-            if (obj instanceof Streamable) {\n-                final Streamable str \u003d (Streamable) obj;\n-                final OutputStream os \u003d str.getOutputStream();\n-                // close only those that can be closed...\n-                if ((os !\u003d System.out) \u0026\u0026 (os !\u003d System.err) \u0026\u0026 (os !\u003d null)) {\n-                    try  {\n-                        os.flush();\n-                        os.close();\n-                    }\n-                    catch (IOException ignored) {\n-                    }\n+            final AuditListener listener \u003d (AuditListener) it.next();\n+            final OutputStream os \u003d listener.getOutputStream();\n+            // close only those that can be closed...\n+            if ((os !\u003d System.out) \u0026\u0026 (os !\u003d System.err) \u0026\u0026 (os !\u003d null)) {\n+                try  {\n+                    os.flush();\n+                    os.close();\n+                }\n+                catch (IOException ignored) {\n                 }\n             }\n-            it.remove();\n         }\n+        it.remove();\n     }\n\\ No newline at end of file\n"
    },
    "edf2c95634cd0c657465723eb0dc2e6f1834eeba": {
      "type": "Ymodifierchange",
      "commitMessage": "Made Checker \u0026 Configuration public so they can be used outside the package.\nA requested feature to that Checkstyle can be integrated into IDE\u0027s like\nNetBeans, JBuilder.\n",
      "commitDate": 1010302836000,
      "commitName": "edf2c95634cd0c657465723eb0dc2e6f1834eeba",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1010236702000,
      "commitNameOld": "efcb63fd741d3e07f37e986e2d8ab6fe6da8d43b",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.77,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-    void destroy()\n+    public void destroy()\n     {\n         mCache.destroy();\n \n         // close all streamable listeners\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final Object obj \u003d it.next();\n             if (obj instanceof Streamable) {\n                 final Streamable str \u003d (Streamable) obj;\n                 final OutputStream os \u003d str.getOutputStream();\n                 // close only those that can be closed...\n                 if ((os !\u003d System.out) \u0026\u0026 (os !\u003d System.err) \u0026\u0026 (os !\u003d null)) {\n                     try  {\n                         os.flush();\n                         os.close();\n                     }\n                     catch (IOException ignored) {\n                     }\n                 }\n             }\n             it.remove();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0e3fe5643667a53079dbd114e5b1e9aa91fde083": {
      "type": "Ybodychange",
      "commitMessage": "started to incorporate logging events\n",
      "commitDate": 999188004000,
      "commitName": "0e3fe5643667a53079dbd114e5b1e9aa91fde083",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 997020777000,
      "commitNameOld": "6c304950f62f06cb3c72e46869c3fa3fbdc1e7d7",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 25.08,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,24 @@\n     void destroy()\n     {\n         mCache.destroy();\n+\n+        // close all streamable listeners\n+        final Iterator it \u003d mListeners.iterator();\n+        while (it.hasNext()) {\n+            final Object obj \u003d it.next();\n+            if (obj instanceof Streamable) {\n+                final Streamable str \u003d (Streamable) obj;\n+                final OutputStream os \u003d str.getOutputStream();\n+                // close only those that can be closed...\n+                if ((os !\u003d System.out) \u0026\u0026 (os !\u003d System.err) \u0026\u0026 (os !\u003d null)) {\n+                    try  {\n+                        os.flush();\n+                        os.close();\n+                    }\n+                    catch (IOException ignored) {\n+                    }\n+                }\n+            }\n+            it.remove();\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "6c304950f62f06cb3c72e46869c3fa3fbdc1e7d7": {
      "type": "Yintroduced",
      "commitMessage": "added support for caching\n",
      "commitDate": 997020777000,
      "commitName": "6c304950f62f06cb3c72e46869c3fa3fbdc1e7d7",
      "commitAuthor": "Oliver Burn"
    }
  }
}