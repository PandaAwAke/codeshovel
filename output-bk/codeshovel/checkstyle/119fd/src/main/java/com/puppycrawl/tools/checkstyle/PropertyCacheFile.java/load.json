{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "PropertyCacheFile.java",
  "functionName": "load",
  "functionId": "load",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
  "functionStartLine": 114,
  "functionEndLine": 137,
  "changeHistory": [
    "c2847eae889fbeee9d93e875bcc7f72c3eb9fc0b",
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7",
    "f6bec165c9c6b6d8cc430cb0694dd42ccb0b7f69",
    "546f336e25b26d072f96e2cda139b885858ed5b0",
    "2880edd6554400955fb950bf8127311c436d2a7a",
    "ea9ff3965d9c657b5b7bd2d969e075f430635c47"
  ],
  "changeHistoryShort": {
    "c2847eae889fbeee9d93e875bcc7f72c3eb9fc0b": "Ybodychange",
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7": "Ybodychange",
    "f6bec165c9c6b6d8cc430cb0694dd42ccb0b7f69": "Ymodifierchange",
    "546f336e25b26d072f96e2cda139b885858ed5b0": "Ybodychange",
    "2880edd6554400955fb950bf8127311c436d2a7a": "Ybodychange",
    "ea9ff3965d9c657b5b7bd2d969e075f430635c47": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2847eae889fbeee9d93e875bcc7f72c3eb9fc0b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3489: restore config hash on property cache clear",
      "commitDate": 1476404860000,
      "commitName": "c2847eae889fbeee9d93e875bcc7f72c3eb9fc0b",
      "commitAuthor": "rnveach",
      "commitDateOld": 1474426326000,
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 22.9,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n     public void load() throws IOException {\n         // get the current config so if the file isn\u0027t found\n         // the first time the hash will be added to output file\n-        final String currentConfigHash \u003d getHashCodeBasedOnObjectContent(config);\n+        configHash \u003d getHashCodeBasedOnObjectContent(config);\n         if (new File(fileName).exists()) {\n             FileInputStream inStream \u003d null;\n             try {\n                 inStream \u003d new FileInputStream(fileName);\n                 details.load(inStream);\n                 final String cachedConfigHash \u003d details.getProperty(CONFIG_HASH_KEY);\n-                if (!currentConfigHash.equals(cachedConfigHash)) {\n+                if (!configHash.equals(cachedConfigHash)) {\n                     // Detected configuration change - clear cache\n-                    details.clear();\n-                    details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n+                    reset();\n                 }\n             }\n             finally {\n                 Closeables.closeQuietly(inStream);\n             }\n         }\n         else {\n             // put the hash in the file if the file is going to be created\n-            details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n+            reset();\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #407: Fix cache usage in presence of modules which use external resources for configuration (#3092)",
      "commitDate": 1463431992000,
      "commitName": "ecbeaa6e1df7cb021745e111b04395b9fbd509c7",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1460554748000,
      "commitNameOld": "b5d2fc84d781d32d4d3369a4791de3733ee9d42d",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 33.3,
      "commitsBetweenForRepo": 68,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void load() throws IOException {\n         // get the current config so if the file isn\u0027t found\n         // the first time the hash will be added to output file\n-        final String currentConfigHash \u003d getConfigHashCode(config);\n+        final String currentConfigHash \u003d getHashCodeBasedOnObjectContent(config);\n         if (new File(fileName).exists()) {\n             FileInputStream inStream \u003d null;\n             try {\n                 inStream \u003d new FileInputStream(fileName);\n                 details.load(inStream);\n                 final String cachedConfigHash \u003d details.getProperty(CONFIG_HASH_KEY);\n                 if (!currentConfigHash.equals(cachedConfigHash)) {\n                     // Detected configuration change - clear cache\n                     details.clear();\n                     details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n                 }\n             }\n             finally {\n                 Closeables.closeQuietly(inStream);\n             }\n         }\n         else {\n             // put the hash in the file if the file is going to be created\n             details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f6bec165c9c6b6d8cc430cb0694dd42ccb0b7f69": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #957: Resolve problems from PMD DefaultPackage rule\n",
      "commitDate": 1455889109000,
      "commitName": "f6bec165c9c6b6d8cc430cb0694dd42ccb0b7f69",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1455040202000,
      "commitNameOld": "d46c2cf0e9df06bb5f424dbd7645574f082f7609",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 9.83,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n-    void load() throws IOException {\n+    public void load() throws IOException {\n         // get the current config so if the file isn\u0027t found\n         // the first time the hash will be added to output file\n         final String currentConfigHash \u003d getConfigHashCode(config);\n         if (new File(fileName).exists()) {\n             FileInputStream inStream \u003d null;\n             try {\n                 inStream \u003d new FileInputStream(fileName);\n                 details.load(inStream);\n                 final String cachedConfigHash \u003d details.getProperty(CONFIG_HASH_KEY);\n                 if (!currentConfigHash.equals(cachedConfigHash)) {\n                     // Detected configuration change - clear cache\n                     details.clear();\n                     details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n                 }\n             }\n             finally {\n                 Closeables.closeQuietly(inStream);\n             }\n         }\n         else {\n             // put the hash in the file if the file is going to be created\n             details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "546f336e25b26d072f96e2cda139b885858ed5b0": {
      "type": "Ybodychange",
      "commitMessage": "Prevent corrupting Properties with non-String data. #1555\n\nFixes `UseOfPropertiesAsHashtable` inspection violations.\n\nDescription:\n\u003eReports any calls to the java.util.Hashtable methods put(), putAll() or get() on a java.util.Properties object. For reasons lost to history, Properties inherits from Hashtable, but use of those methods is discouraged to prevent corruption of properties values with non-String data.\n",
      "commitDate": 1439007516000,
      "commitName": "546f336e25b26d072f96e2cda139b885858ed5b0",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566538000,
      "commitNameOld": "2880edd6554400955fb950bf8127311c436d2a7a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.1,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     void load() throws IOException {\n         // get the current config so if the file isn\u0027t found\n         // the first time the hash will be added to output file\n         final String currentConfigHash \u003d getConfigHashCode(config);\n         if (new File(fileName).exists()) {\n             FileInputStream inStream \u003d null;\n             try {\n                 inStream \u003d new FileInputStream(fileName);\n                 details.load(inStream);\n                 final String cachedConfigHash \u003d details.getProperty(CONFIG_HASH_KEY);\n                 if (!currentConfigHash.equals(cachedConfigHash)) {\n                     // Detected configuration change - clear cache\n                     details.clear();\n-                    details.put(CONFIG_HASH_KEY, currentConfigHash);\n+                    details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n                 }\n             }\n             finally {\n                 Closeables.closeQuietly(inStream);\n             }\n         }\n         else {\n             // put the hash in the file if the file is going to be created\n-            details.put(CONFIG_HASH_KEY, currentConfigHash);\n+            details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "2880edd6554400955fb950bf8127311c436d2a7a": {
      "type": "Ybodychange",
      "commitMessage": "Decrease scope of variables. #1538\n",
      "commitDate": 1438566538000,
      "commitName": "2880edd6554400955fb950bf8127311c436d2a7a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566537000,
      "commitNameOld": "30438ebdf9fd28a94613e2aaecde776d906349a7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     void load() throws IOException {\n-        FileInputStream inStream \u003d null;\n         // get the current config so if the file isn\u0027t found\n         // the first time the hash will be added to output file\n         final String currentConfigHash \u003d getConfigHashCode(config);\n         if (new File(fileName).exists()) {\n+            FileInputStream inStream \u003d null;\n             try {\n                 inStream \u003d new FileInputStream(fileName);\n                 details.load(inStream);\n                 final String cachedConfigHash \u003d details.getProperty(CONFIG_HASH_KEY);\n                 if (!currentConfigHash.equals(cachedConfigHash)) {\n                     // Detected configuration change - clear cache\n                     details.clear();\n                     details.put(CONFIG_HASH_KEY, currentConfigHash);\n                 }\n             }\n             finally {\n                 Closeables.closeQuietly(inStream);\n             }\n         }\n         else {\n             // put the hash in the file if the file is going to be created\n             details.put(CONFIG_HASH_KEY, currentConfigHash);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ea9ff3965d9c657b5b7bd2d969e075f430635c47": {
      "type": "Yintroduced",
      "commitMessage": "100% UTs coverage for PropertyCacheFile. Refactoring of PropertyCacheFile. #1294\n",
      "commitDate": 1438103538000,
      "commitName": "ea9ff3965d9c657b5b7bd2d969e075f430635c47",
      "commitAuthor": "Roman Ivanov"
    }
  }
}