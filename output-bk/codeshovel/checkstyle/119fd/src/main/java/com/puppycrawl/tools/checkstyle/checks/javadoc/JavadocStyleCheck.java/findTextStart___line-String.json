{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocStyleCheck.java",
  "functionName": "findTextStart",
  "functionId": "findTextStart___line-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java",
  "functionStartLine": 292,
  "functionEndLine": 311,
  "changeHistory": [
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6",
    "242028813d3d993bbb8a61af6c4f214705c4d7da",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "24ba45a971569b9702e6bf78c5c07c48beb25464",
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3"
  ],
  "changeHistoryShort": {
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6": "Ybodychange",
    "242028813d3d993bbb8a61af6c4f214705c4d7da": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "24ba45a971569b9702e6bf78c5c07c48beb25464": "Ybodychange",
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4713: fix all violations from the third part of idea violations\n",
      "commitDate": 1500613458000,
      "commitName": "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1488034522000,
      "commitNameOld": "55aa8cedc60d4faa776d7a36f8ae2d0bed0ada45",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 145.59,
      "commitsBetweenForRepo": 595,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n     private static int findTextStart(String line) {\n         int textStart \u003d -1;\n-        for (int i \u003d 0; i \u003c line.length();) {\n-            if (!Character.isWhitespace(line.charAt(i))) {\n-                if (line.regionMatches(i, \"/**\", 0, \"/**\".length())) {\n-                    i +\u003d 2;\n+        int index \u003d 0;\n+        while (index \u003c line.length()) {\n+            if (!Character.isWhitespace(line.charAt(index))) {\n+                if (line.regionMatches(index, \"/**\", 0, \"/**\".length())) {\n+                    index +\u003d 2;\n                 }\n-                else if (line.regionMatches(i, \"*/\", 0, 2)) {\n-                    i++;\n+                else if (line.regionMatches(index, \"*/\", 0, 2)) {\n+                    index++;\n                 }\n-                else if (line.charAt(i) !\u003d \u0027*\u0027) {\n-                    textStart \u003d i;\n+                else if (line.charAt(index) !\u003d \u0027*\u0027) {\n+                    textStart \u003d index;\n                     break;\n                 }\n             }\n-            i++;\n+            index++;\n         }\n         return textStart;\n     }\n\\ No newline at end of file\n"
    },
    "242028813d3d993bbb8a61af6c4f214705c4d7da": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ModifiedControlVariable violations fixed\n",
      "commitDate": 1439560578000,
      "commitName": "242028813d3d993bbb8a61af6c4f214705c4d7da",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439356761000,
      "commitNameOld": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 2.36,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n     private static int findTextStart(String line) {\n         int textStart \u003d -1;\n-        for (int i \u003d 0; i \u003c line.length(); i++) {\n+        for (int i \u003d 0; i \u003c line.length();) {\n             if (!Character.isWhitespace(line.charAt(i))) {\n                 if (line.regionMatches(i, \"/**\", 0, \"/**\".length())) {\n                     i +\u003d 2;\n                 }\n                 else if (line.regionMatches(i, \"*/\", 0, 2)) {\n                     i++;\n                 }\n                 else if (line.charAt(i) !\u003d \u0027*\u0027) {\n                     textStart \u003d i;\n                     break;\n                 }\n             }\n+            i++;\n         }\n         return textStart;\n     }\n\\ No newline at end of file\n"
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-    private int findTextStart(String line) {\n+    private static int findTextStart(String line) {\n         int textStart \u003d -1;\n         for (int i \u003d 0; i \u003c line.length(); i++) {\n             if (!Character.isWhitespace(line.charAt(i))) {\n                 if (line.regionMatches(i, \"/**\", 0, \"/**\".length())) {\n                     i +\u003d 2;\n                 }\n                 else if (line.regionMatches(i, \"*/\", 0, 2)) {\n                     i++;\n                 }\n                 else if (line.charAt(i) !\u003d \u0027*\u0027) {\n                     textStart \u003d i;\n                     break;\n                 }\n             }\n         }\n         return textStart;\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "24ba45a971569b9702e6bf78c5c07c48beb25464": {
      "type": "Ybodychange",
      "commitMessage": "Fix for ArrayIndexOutOfBounds in JavadocStyle (bug 841942 )\n",
      "commitDate": 1069576421000,
      "commitName": "24ba45a971569b9702e6bf78c5c07c48beb25464",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1069327160000,
      "commitNameOld": "fd6a743fd4b3c9283d62174327dd978bda694892",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 2.88,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private int findTextStart(String aLine)\n     {\n         int textStart \u003d -1;\n         for (int i \u003d 0; i \u003c aLine.length(); i++) {\n             if (!Character.isWhitespace(aLine.charAt(i))) {\n-                if (aLine.regionMatches(i, \"/**\", 0, 3)) {\n+                if (aLine.regionMatches(i, \"/**\", 0, \"/**\".length())) {\n                     i +\u003d 2;\n                 }\n                 else if (aLine.regionMatches(i, \"*/\", 0, 2)) {\n                     i++;\n                 }\n                 else if (aLine.charAt(i) !\u003d \u0027*\u0027) {\n                     textStart \u003d i;\n                     break;\n                 }\n             }\n         }\n         return textStart;\n     }\n\\ No newline at end of file\n"
    },
    "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3": {
      "type": "Yintroduced",
      "commitMessage": "New Javadoc style check from Chris Stillwell.\n",
      "commitDate": 1058185912000,
      "commitName": "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3",
      "commitAuthor": "Oliver Burn"
    }
  }
}