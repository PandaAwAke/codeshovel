{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "getThrows",
  "functionId": "getThrows___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 710,
  "functionEndLine": 728,
  "changeHistory": [
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "ce196814d857a4244a80c51d5151cc35e90b6749",
    "5f5142b2325051f9ed31130167c73d154d547211",
    "22a5c6af715a60746ebfa6c6409dbc9fe3e0e255",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94",
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
    "04ac5dd87c11a2bf7b908b45bbca7933382df515",
    "4e1f8ef98e9e43d6101a00bdecd040377472f852",
    "c75f97dbc2123f550a1acc64886a8bebf4b888cf"
  ],
  "changeHistoryShort": {
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "ce196814d857a4244a80c51d5151cc35e90b6749": "Ybodychange",
    "5f5142b2325051f9ed31130167c73d154d547211": "Ybodychange",
    "22a5c6af715a60746ebfa6c6409dbc9fe3e0e255": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": "Ybodychange",
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d": "Ymultichange(Yreturntypechange,Ybodychange)",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94": "Ybodychange",
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd": "Ybodychange",
    "04ac5dd87c11a2bf7b908b45bbca7933382df515": "Yfilerename",
    "4e1f8ef98e9e43d6101a00bdecd040377472f852": "Ybodychange",
    "c75f97dbc2123f550a1acc64886a8bebf4b888cf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": 1474426326000,
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1473886714000,
      "commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 6.25,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private List\u003cExceptionInfo\u003e getThrows(DetailAST ast) {\n-        final List\u003cExceptionInfo\u003e returnValue \u003d Lists.newArrayList();\n+        final List\u003cExceptionInfo\u003e returnValue \u003d new ArrayList\u003c\u003e();\n         final DetailAST throwsAST \u003d ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.IDENT\n                         || child.getType() \u003d\u003d TokenTypes.DOT) {\n                     final FullIdent ident \u003d FullIdent.createFullIdent(child);\n                     final ExceptionInfo exceptionInfo \u003d new ExceptionInfo(\n                             createClassInfo(new Token(ident), getCurrentClassName()));\n                     returnValue.add(exceptionInfo);\n                 }\n                 child \u003d child.getNextSibling();\n             }\n         }\n         return returnValue;\n     }\n\\ No newline at end of file\n"
    },
    "ce196814d857a4244a80c51d5151cc35e90b6749": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2080: Fix typos in code\n",
      "commitDate": 1445038509000,
      "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1444185186000,
      "commitNameOld": "5f5142b2325051f9ed31130167c73d154d547211",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 9.88,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private List\u003cExceptionInfo\u003e getThrows(DetailAST ast) {\n-        final List\u003cExceptionInfo\u003e retVal \u003d Lists.newArrayList();\n+        final List\u003cExceptionInfo\u003e returnValue \u003d Lists.newArrayList();\n         final DetailAST throwsAST \u003d ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.IDENT\n                         || child.getType() \u003d\u003d TokenTypes.DOT) {\n                     final FullIdent ident \u003d FullIdent.createFullIdent(child);\n                     final ExceptionInfo exceptionInfo \u003d new ExceptionInfo(\n                             createClassInfo(new Token(ident), getCurrentClassName()));\n-                    retVal.add(exceptionInfo);\n+                    returnValue.add(exceptionInfo);\n                 }\n                 child \u003d child.getNextSibling();\n             }\n         }\n-        return retVal;\n+        return returnValue;\n     }\n\\ No newline at end of file\n"
    },
    "5f5142b2325051f9ed31130167c73d154d547211": {
      "type": "Ybodychange",
      "commitMessage": "Issue #985: Fix PMD violations for ShortVariable rule\n",
      "commitDate": 1444185186000,
      "commitName": "5f5142b2325051f9ed31130167c73d154d547211",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1444139777000,
      "commitNameOld": "e2b4e687d7b8f9d6d5e1346d874b90e4567aff81",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.53,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private List\u003cExceptionInfo\u003e getThrows(DetailAST ast) {\n         final List\u003cExceptionInfo\u003e retVal \u003d Lists.newArrayList();\n         final DetailAST throwsAST \u003d ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.IDENT\n                         || child.getType() \u003d\u003d TokenTypes.DOT) {\n-                    final FullIdent fi \u003d FullIdent.createFullIdent(child);\n-                    final ExceptionInfo ei \u003d new ExceptionInfo(createClassInfo(new Token(fi),\n-                            getCurrentClassName()));\n-                    retVal.add(ei);\n+                    final FullIdent ident \u003d FullIdent.createFullIdent(child);\n+                    final ExceptionInfo exceptionInfo \u003d new ExceptionInfo(\n+                            createClassInfo(new Token(ident), getCurrentClassName()));\n+                    retVal.add(exceptionInfo);\n                 }\n                 child \u003d child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "22a5c6af715a60746ebfa6c6409dbc9fe3e0e255": {
      "type": "Ybodychange",
      "commitMessage": "fix for findbugs violation  SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS. Issue #912\n",
      "commitDate": 1428970152000,
      "commitName": "22a5c6af715a60746ebfa6c6409dbc9fe3e0e255",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1426454536000,
      "commitNameOld": "1c15b6a36baa68dc3f2ebdf9baac131e98bb9e04",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 29.12,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private List\u003cExceptionInfo\u003e getThrows(DetailAST ast)\n     {\n         final List\u003cExceptionInfo\u003e retVal \u003d Lists.newArrayList();\n         final DetailAST throwsAST \u003d ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.IDENT\n                         || child.getType() \u003d\u003d TokenTypes.DOT)\n                 {\n                     final FullIdent fi \u003d FullIdent.createFullIdent(child);\n-                    final ExceptionInfo ei \u003d new ExceptionInfo(new Token(fi),\n-                            getCurrentClassName());\n+                    final ExceptionInfo ei \u003d new ExceptionInfo(createClassInfo(new Token(fi),\n+                            getCurrentClassName()));\n                     retVal.add(ei);\n                 }\n                 child \u003d child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private List\u003cExceptionInfo\u003e getThrows(DetailAST ast)\n     {\n         final List\u003cExceptionInfo\u003e retVal \u003d Lists.newArrayList();\n         final DetailAST throwsAST \u003d ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d throwsAST.getFirstChild();\n             while (child !\u003d null) {\n-                if ((child.getType() \u003d\u003d TokenTypes.IDENT)\n-                        || (child.getType() \u003d\u003d TokenTypes.DOT))\n+                if (child.getType() \u003d\u003d TokenTypes.IDENT\n+                        || child.getType() \u003d\u003d TokenTypes.DOT)\n                 {\n                     final FullIdent fi \u003d FullIdent.createFullIdent(child);\n                     final ExceptionInfo ei \u003d new ExceptionInfo(new Token(fi),\n                             getCurrentClassName());\n                     retVal.add(ei);\n                 }\n                 child \u003d child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1208867287000,
      "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 148.96,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private List\u003cExceptionInfo\u003e getThrows(DetailAST aAST)\n     {\n         final List\u003cExceptionInfo\u003e retVal \u003d Lists.newArrayList();\n         final DetailAST throwsAST \u003d aAST\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n-            DetailAST child \u003d (DetailAST) throwsAST.getFirstChild();\n+            DetailAST child \u003d throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if ((child.getType() \u003d\u003d TokenTypes.IDENT)\n                         || (child.getType() \u003d\u003d TokenTypes.DOT))\n                 {\n                     final FullIdent fi \u003d FullIdent.createFullIdent(child);\n                     final ExceptionInfo ei \u003d new ExceptionInfo(new Token(fi),\n                             getCurrentClassName());\n                     retVal.add(ei);\n                 }\n-                child \u003d (DetailAST) child.getNextSibling();\n+                child \u003d child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": {
      "type": "Ybodychange",
      "commitMessage": "Drinking the \"Google Collections\" Kool-Aid.\n\nI like the reduced duplication.\n",
      "commitDate": 1208867287000,
      "commitName": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200295112000,
      "commitNameOld": "4d715df131a0c5ae3a9f2eae6ecf636ab52eda0e",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 99.21,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private List\u003cExceptionInfo\u003e getThrows(DetailAST aAST)\n     {\n-        final List\u003cExceptionInfo\u003e retVal \u003d new ArrayList\u003cExceptionInfo\u003e();\n+        final List\u003cExceptionInfo\u003e retVal \u003d Lists.newArrayList();\n         final DetailAST throwsAST \u003d aAST\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d (DetailAST) throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if ((child.getType() \u003d\u003d TokenTypes.IDENT)\n                         || (child.getType() \u003d\u003d TokenTypes.DOT))\n                 {\n                     final FullIdent fi \u003d FullIdent.createFullIdent(child);\n                     final ExceptionInfo ei \u003d new ExceptionInfo(new Token(fi),\n                             getCurrentClassName());\n                     retVal.add(ei);\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": 1197694270000,
      "commitName": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yreturntypechange",
        "Ybodychange"
      ]
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1148305756000,
      "commitNameOld": "0a72322796c28266f07df8af6f7e000aa9cf0e48",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 45.58,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private List getThrows(DetailAST aAST)\n     {\n         final List retVal \u003d new ArrayList();\n         final DetailAST throwsAST \u003d aAST\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d (DetailAST) throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if ((child.getType() \u003d\u003d TokenTypes.IDENT)\n                         || (child.getType() \u003d\u003d TokenTypes.DOT))\n                 {\n-                    FullIdent fi \u003d FullIdent.createFullIdent(child);\n+                    final FullIdent fi \u003d FullIdent.createFullIdent(child);\n                     final ExceptionInfo ei \u003d new ExceptionInfo(new Token(fi),\n                             getCurrentClassName());\n                     retVal.add(ei);\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94": {
      "type": "Ybodychange",
      "commitMessage": "Fixed 1249707: AbstractTypeAwareCheck doesn\u0027t work with types from typeparm\n\nSome pretty big refactoring for typeaware checks performed.\nAlso added handling for type params.  Current handling algorithm\nhas some preconditions and restriction, but it works for most cases\n(not sure I\u0027ve covered all situation when type param will have name\nof real exception, but I do not think it is critical for now :)\n\nAlso, I\u0027ve added column number for JavadocTag (mainly to be able use\nClassInfo for it).  So, JavadocTypeCheck also affected.\n\nAnd I\u0027ve added new logger for TreeWalker (if we have loggers we should\nuse them :)\n",
      "commitDate": 1123248811000,
      "commitName": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1120383479000,
      "commitNameOld": "b106eab0414affa16fbc0e2dfce511e3aed9d557",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 33.16,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private List getThrows(DetailAST aAST)\n     {\n         final List retVal \u003d new ArrayList();\n         final DetailAST throwsAST \u003d aAST\n             .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d (DetailAST) throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if ((child.getType() \u003d\u003d TokenTypes.IDENT)\n                     || (child.getType() \u003d\u003d TokenTypes.DOT))\n                 {\n+                    FullIdent fi \u003d FullIdent.createFullIdent(child);\n                     final ExceptionInfo ei \u003d\n-                        new ExceptionInfo(FullIdent.createFullIdent(child),\n-                                          getCurrentClassName());\n+                        new ExceptionInfo(new Token(fi), getCurrentClassName());\n                     retVal.add(ei);\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd": {
      "type": "Ybodychange",
      "commitMessage": "merging changes from v3 branch\n",
      "commitDate": 1096996314000,
      "commitName": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1096311350000,
      "commitNameOld": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthorOld": "Michael Studman",
      "daysBetweenCommits": 7.93,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     private List getThrows(DetailAST aAST)\n     {\n         final List retVal \u003d new ArrayList();\n         final DetailAST throwsAST \u003d\n             aAST.findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d (DetailAST) throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if ((child.getType() \u003d\u003d TokenTypes.IDENT)\n                     || (child.getType() \u003d\u003d TokenTypes.DOT))\n                 {\n                     final ExceptionInfo ei \u003d\n-                        new ExceptionInfo(FullIdent.createFullIdent(child));\n+                        new ExceptionInfo(FullIdent.createFullIdent(child),\n+                                          getCurrentClassName());\n                     retVal.add(ei);\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "04ac5dd87c11a2bf7b908b45bbca7933382df515": {
      "type": "Yfilerename",
      "commitMessage": "Moving another Javadoc check to see what is involved.\nA suprisingly small amount. Love the Eclipse refactoring\nsupport having the smarts to do the CVS operations.\n",
      "commitDate": 1054648289000,
      "commitName": "04ac5dd87c11a2bf7b908b45bbca7933382df515",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054647239000,
      "commitNameOld": "2ef6dc6a43ede89c5b5b9091dee83e1e58bb5edc",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "4e1f8ef98e9e43d6101a00bdecd040377472f852": {
      "type": "Ybodychange",
      "commitMessage": "One more option for JavadocMethodCheck\n(allowThrowsTagsForSubclasses, request 540383)\n",
      "commitDate": 1052504065000,
      "commitName": "4e1f8ef98e9e43d6101a00bdecd040377472f852",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1047612173000,
      "commitNameOld": "8dd44cbead07361f2b924a5a4d5d85ace71e4866",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 56.62,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n     private List getThrows(DetailAST aAST)\n     {\n         final List retVal \u003d new ArrayList();\n         final DetailAST throwsAST \u003d\n             aAST.findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST !\u003d null) {\n             DetailAST child \u003d (DetailAST) throwsAST.getFirstChild();\n             while (child !\u003d null) {\n                 if ((child.getType() \u003d\u003d TokenTypes.IDENT)\n                     || (child.getType() \u003d\u003d TokenTypes.DOT))\n                 {\n-                    final FullIdent fi \u003d FullIdent.createFullIdent(child);\n-                    retVal.add(fi);\n+                    final ExceptionInfo ei \u003d \n+                        new ExceptionInfo(FullIdent.createFullIdent(child));\n+                    retVal.add(ei);\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n"
    },
    "c75f97dbc2123f550a1acc64886a8bebf4b888cf": {
      "type": "Yintroduced",
      "commitMessage": "Javadoc method check\n",
      "commitDate": 1036501994000,
      "commitName": "c75f97dbc2123f550a1acc64886a8bebf4b888cf",
      "commitAuthor": "Rick Giles"
    }
  }
}