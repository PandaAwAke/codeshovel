{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "UnusedImportsCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
  "functionStartLine": 148,
  "functionEndLine": 166,
  "changeHistory": [
    "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077",
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0",
    "5ff1834a224cefac74b80a47efff15d113f76a1e",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c75c77dff73b803284ea152105cd64b0fc55d58b",
    "0a4a41f4797c6c5c6a73c6c2ed9b5c173a328a12",
    "30d725458e4b2ca33241559ac876cb90d726a66a",
    "b5c738e6d0118111481daee0afd93b2a2d7d916a",
    "6a275cabe3de0aebd0e7a390563acf5c494a9a56",
    "6125beffc437f970eae276b4a6542265c6547784",
    "ddb334d9e4443c96fed60ff0a0b9210615846315",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d"
  ],
  "changeHistoryShort": {
    "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077": "Ybodychange",
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0": "Ybodychange",
    "5ff1834a224cefac74b80a47efff15d113f76a1e": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c75c77dff73b803284ea152105cd64b0fc55d58b": "Ybodychange",
    "0a4a41f4797c6c5c6a73c6c2ed9b5c173a328a12": "Ybodychange",
    "30d725458e4b2ca33241559ac876cb90d726a66a": "Ybodychange",
    "b5c738e6d0118111481daee0afd93b2a2d7d916a": "Ybodychange",
    "6a275cabe3de0aebd0e7a390563acf5c494a9a56": "Ybodychange",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "ddb334d9e4443c96fed60ff0a0b9210615846315": "Yfilerename",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": "Ybodychange",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077": {
      "type": "Ybodychange",
      "commitMessage": "Fix typos in import and java8 packages. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": 1440739618000,
      "commitName": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440739587000,
      "commitNameOld": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (collect) {\n                 processIdent(ast);\n             }\n         }\n         else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(ast);\n         }\n         else if (ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n             processStaticImport(ast);\n         }\n         else {\n             collect \u003d true;\n             if (processJavadoc) {\n-                collectReferecesFromJavadoc(ast);\n+                collectReferencesFromJavadoc(ast);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0": {
      "type": "Ybodychange",
      "commitMessage": "Fix suspicious getters and setters. #1555\n\nFixes `SuspiciousGetterSetter` inspection violations.\n\nDescription:\n\u003eReports suspicious getter or setter methods. A getter or setter is suspicious if it accesses a different field than would be expected by its name.\n",
      "commitDate": 1440498848000,
      "commitName": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440015295000,
      "commitNameOld": "ea963bb721aafd9584242cedf2781f0294f2b18d",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 5.6,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (collect) {\n                 processIdent(ast);\n             }\n         }\n         else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(ast);\n         }\n         else if (ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n             processStaticImport(ast);\n         }\n         else {\n             collect \u003d true;\n-            if (processingJavadoc) {\n-                processJavadoc(ast);\n+            if (processJavadoc) {\n+                collectReferecesFromJavadoc(ast);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "5ff1834a224cefac74b80a47efff15d113f76a1e": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from AvoidFieldNameMatchingMethodName rule. #984\n",
      "commitDate": 1431536088000,
      "commitName": "5ff1834a224cefac74b80a47efff15d113f76a1e",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1430523168000,
      "commitNameOld": "31421dcdda3b3534f2fcc5c6e88a8fdbc5d15311",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 11.72,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST ast)\n     {\n         if (ast.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (collect) {\n                 processIdent(ast);\n             }\n         }\n         else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(ast);\n         }\n         else if (ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n             processStaticImport(ast);\n         }\n         else {\n             collect \u003d true;\n-            if (processJavadoc) {\n+            if (processingJavadoc) {\n                 processJavadoc(ast);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": 1421678111000,
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c75c77dff73b803284ea152105cd64b0fc55d58b": {
      "type": "Ybodychange",
      "commitMessage": "Optimise when processing javadoc. Speeds up processing by 40%.\n\nNote, turning on this feature slows Checkstyle down by about 63%.\n",
      "commitDate": 1310449233000,
      "commitName": "c75c77dff73b803284ea152105cd64b0fc55d58b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1310444390000,
      "commitNameOld": "5d31b9e6ef9b950a2f04535d2bba6eac446949bc",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (mCollect) {\n                 processIdent(aAST);\n             }\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n             processStaticImport(aAST);\n         }\n-        else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n-            || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n-            || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n-            || (aAST.getType() \u003d\u003d TokenTypes.ANNOTATION_DEF)\n-            || (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF))\n-        {\n+        else {\n             mCollect \u003d true;\n+            if (mProcessJavadoc) {\n+                processJavadoc(aAST);\n+            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0a4a41f4797c6c5c6a73c6c2ed9b5c173a328a12": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug 1860424, incorrectly flagging an import as being unused.\n",
      "commitDate": 1200188144000,
      "commitName": "0a4a41f4797c6c5c6a73c6c2ed9b5c173a328a12",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1197706480000,
      "commitNameOld": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 28.72,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        super.visitToken(aAST);\n         if (aAST.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (mCollect) {\n                 processIdent(aAST);\n             }\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n             processStaticImport(aAST);\n         }\n         else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.ANNOTATION_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF))\n         {\n             mCollect \u003d true;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "30d725458e4b2ca33241559ac876cb90d726a66a": {
      "type": "Ybodychange",
      "commitMessage": "Fix for 1230751\n",
      "commitDate": 1123549453000,
      "commitName": "30d725458e4b2ca33241559ac876cb90d726a66a",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1113483764000,
      "commitNameOld": "b5c738e6d0118111481daee0afd93b2a2d7d916a",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 116.5,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n     public void visitToken(DetailAST aAST)\n     {\n         super.visitToken(aAST);\n         if (aAST.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (mCollect) {\n                 processIdent(aAST);\n             }\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n             processStaticImport(aAST);\n         }\n         else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n-            || (aAST.getType() \u003d\u003d TokenTypes.ANNOTATION_DEF))\n+            || (aAST.getType() \u003d\u003d TokenTypes.ANNOTATION_DEF)\n+            || (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF))\n         {\n             mCollect \u003d true;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b5c738e6d0118111481daee0afd93b2a2d7d916a": {
      "type": "Ybodychange",
      "commitMessage": "Fix for 1098126 - UnusedImportsCheck does not work properly\nwe need to collect information about declared fields and variables.\nAdded some java 1.5 support for RequireThis check, since both\nUnusedImport and RequireThis now have common superclass and it\u0027s not\nvery hard :)\nFixed couple testinputs files to make them compilable.\n",
      "commitDate": 1113483764000,
      "commitName": "b5c738e6d0118111481daee0afd93b2a2d7d916a",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1105267857000,
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 95.09,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     public void visitToken(DetailAST aAST)\n     {\n+        super.visitToken(aAST);\n         if (aAST.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (mCollect) {\n                 processIdent(aAST);\n             }\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n             processStaticImport(aAST);\n         }\n         else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.ANNOTATION_DEF))\n         {\n             mCollect \u003d true;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "6a275cabe3de0aebd0e7a390563acf5c494a9a56": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug where idents were only tracked if inside classes and interfaces - fixed to include enums and annotations.\n",
      "commitDate": 1098183827000,
      "commitName": "6a275cabe3de0aebd0e7a390563acf5c494a9a56",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1096311350000,
      "commitNameOld": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthorOld": "Michael Studman",
      "daysBetweenCommits": 21.67,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (mCollect) {\n                 processIdent(aAST);\n             }\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n             processStaticImport(aAST);\n         }\n         else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n-            || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF))\n+            || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n+            || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n+            || (aAST.getType() \u003d\u003d TokenTypes.ANNOTATION_DEF))\n         {\n             mCollect \u003d true;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": 1096311350000,
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1074114639000,
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 256.91,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (mCollect) {\n                 processIdent(aAST);\n             }\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n+        else if (aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT) {\n+            processStaticImport(aAST);\n+        }\n         else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF))\n         {\n             mCollect \u003d true;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ddb334d9e4443c96fed60ff0a0b9210615846315": {
      "type": "Yfilerename",
      "commitMessage": "Moved the Import checks to a sub-package. That is all\nthe refactoring I have time for over the next few days.\n",
      "commitDate": 1054649602000,
      "commitName": "ddb334d9e4443c96fed60ff0a0b9210615846315",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054648289000,
      "commitNameOld": "04ac5dd87c11a2bf7b908b45bbca7933382df515",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": {
      "type": "Ybodychange",
      "commitMessage": "Added a new class TokenTypes that contains all the type constants. This class\nbreaks the circular dependencies - the cost is needing to maintain this class\nwhen a new grammar is introduced.\n",
      "commitDate": 1035008886000,
      "commitName": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1034552460000,
      "commitNameOld": "63664e0b012593e18c5bb93ba528f27fd93fe0d4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.28,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (aAST.getType() \u003d\u003d JavaTokenTypes.IDENT) {\n+        if (aAST.getType() \u003d\u003d TokenTypes.IDENT) {\n             if (mCollect) {\n                 processIdent(aAST);\n             }\n         }\n-        else if (aAST.getType() \u003d\u003d JavaTokenTypes.IMPORT) {\n+        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n-        else if ((aAST.getType() \u003d\u003d JavaTokenTypes.CLASS_DEF)\n-            || (aAST.getType() \u003d\u003d JavaTokenTypes.INTERFACE_DEF))\n+        else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n+            || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF))\n         {\n             mCollect \u003d true;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": {
      "type": "Yintroduced",
      "commitMessage": "initial checkin of check implementations\n",
      "commitDate": 1032107737000,
      "commitName": "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d",
      "commitAuthor": "Lars Kühne"
    }
  }
}