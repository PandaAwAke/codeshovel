{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "UnusedImportsCheck.java",
  "functionName": "finishTree",
  "functionId": "finishTree___rootAST-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
  "functionStartLine": 108,
  "functionEndLine": 115,
  "changeHistory": [
    "e3686ca4043ac7151512e51cba3e1dcfa44b4352",
    "de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d8286130e83dc672d30cd00eddbf6b5f77112521",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "ddb334d9e4443c96fed60ff0a0b9210615846315",
    "8dd44cbead07361f2b924a5a4d5d85ace71e4866",
    "04b0bd64047e8eee752405a01de145b67f5fb845",
    "e77eef412fe4b41d89fa21b790d7dc00eacb726f",
    "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d"
  ],
  "changeHistoryShort": {
    "e3686ca4043ac7151512e51cba3e1dcfa44b4352": "Ybodychange",
    "de022d2434e58dd633fd50a7f9bb50565a8767b5": "Ybodychange",
    "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d8286130e83dc672d30cd00eddbf6b5f77112521": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "ddb334d9e4443c96fed60ff0a0b9210615846315": "Yfilerename",
    "8dd44cbead07361f2b924a5a4d5d85ace71e4866": "Ybodychange",
    "04b0bd64047e8eee752405a01de145b67f5fb845": "Yparameterchange",
    "e77eef412fe4b41d89fa21b790d7dc00eacb726f": "Ybodychange",
    "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54": "Ybodychange",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3686ca4043ac7151512e51cba3e1dcfa44b4352": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3741: Fix false negative when import is from java.lang package\n",
      "commitDate": 1485127400000,
      "commitName": "e3686ca4043ac7151512e51cba3e1dcfa44b4352",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1474426326000,
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 123.86,
      "commitsBetweenForRepo": 229,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     public void finishTree(DetailAST rootAST) {\n         // loop over all the imports to see if referenced.\n         imports.stream()\n-            .filter(imp -\u003e !referenced.contains(CommonUtils.baseClassName(imp.getText())))\n-            .forEach(imp -\u003e log(imp.getLineNo(),\n-                imp.getColumnNo(),\n-                MSG_KEY, imp.getText()));\n+            .filter(imprt -\u003e isUnusedImport(imprt.getText()))\n+            .forEach(imprt -\u003e log(imprt.getLineNo(),\n+                imprt.getColumnNo(),\n+                MSG_KEY, imprt.getText()));\n     }\n\\ No newline at end of file\n"
    },
    "de022d2434e58dd633fd50a7f9bb50565a8767b5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3233: Resolve IntelijIdea inspection violations for java8 migration (#3434)\n\n",
      "commitDate": 1473337840000,
      "commitName": "de022d2434e58dd633fd50a7f9bb50565a8767b5",
      "commitAuthor": "Mariia Mykhailova",
      "commitDateOld": 1454680863000,
      "commitNameOld": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 215.94,
      "commitsBetweenForRepo": 461,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,8 @@\n     public void finishTree(DetailAST rootAST) {\n         // loop over all the imports to see if referenced.\n-        for (final FullIdent imp : imports) {\n-            if (!referenced.contains(CommonUtils.baseClassName(imp.getText()))) {\n-                log(imp.getLineNo(),\n-                    imp.getColumnNo(),\n-                    MSG_KEY, imp.getText());\n-            }\n-        }\n+        imports.stream()\n+            .filter(imp -\u003e !referenced.contains(CommonUtils.baseClassName(imp.getText())))\n+            .forEach(imp -\u003e log(imp.getLineNo(),\n+                imp.getColumnNo(),\n+                MSG_KEY, imp.getText()));\n     }\n\\ No newline at end of file\n"
    },
    "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0": {
      "type": "Ybodychange",
      "commitMessage": "Fix typos in utlis package. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": 1440739587000,
      "commitName": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     public void finishTree(DetailAST rootAST) {\n         // loop over all the imports to see if referenced.\n         for (final FullIdent imp : imports) {\n-            if (!referenced.contains(CommonUtils.baseClassname(imp.getText()))) {\n+            if (!referenced.contains(CommonUtils.baseClassName(imp.getText()))) {\n                 log(imp.getLineNo(),\n                     imp.getColumnNo(),\n                     MSG_KEY, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": 1440677821000,
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1440677821000,
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     public void finishTree(DetailAST rootAST) {\n         // loop over all the imports to see if referenced.\n         for (final FullIdent imp : imports) {\n-            if (!referenced.contains(Utils.baseClassname(imp.getText()))) {\n+            if (!referenced.contains(CommonUtils.baseClassname(imp.getText()))) {\n                 log(imp.getLineNo(),\n                     imp.getColumnNo(),\n                     MSG_KEY, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, imports package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public void finishTree(DetailAST rootAST)\n     {\n         // loop over all the imports to see if referenced.\n         for (final FullIdent imp : imports) {\n             if (!referenced.contains(Utils.baseClassname(imp.getText()))) {\n                 log(imp.getLineNo(),\n                     imp.getColumnNo(),\n-                    \"import.unused\", imp.getText());\n+                    MSG_KEY, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": 1421678111000,
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d8286130e83dc672d30cd00eddbf6b5f77112521": {
      "type": "Ybodychange",
      "commitMessage": "Make the code \"checkstyle compliant\"\n",
      "commitDate": 1310435277000,
      "commitName": "d8286130e83dc672d30cd00eddbf6b5f77112521",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1310432296000,
      "commitNameOld": "7d097b6fa682f8dcfedd95da2db8fed980c51705",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public void finishTree(DetailAST aRootAST)\n     {\n         // loop over all the imports to see if referenced.\n-        for (FullIdent imp : mImports) {\n+        for (final FullIdent imp : mImports) {\n             if (!mReferenced.contains(Utils.baseClassname(imp.getText()))) {\n                 log(imp.getLineNo(),\n                     imp.getColumnNo(),\n                     \"import.unused\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,11 @@\n     public void finishTree(DetailAST aRootAST)\n     {\n         // loop over all the imports to see if referenced.\n-        final Iterator it \u003d mImports.iterator();\n-        while (it.hasNext()) {\n-            final FullIdent imp \u003d (FullIdent) it.next();\n-\n+        for (FullIdent imp : mImports) {\n             if (!mReferenced.contains(Utils.baseClassname(imp.getText()))) {\n                 log(imp.getLineNo(),\n                     imp.getColumnNo(),\n                     \"import.unused\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ddb334d9e4443c96fed60ff0a0b9210615846315": {
      "type": "Yfilerename",
      "commitMessage": "Moved the Import checks to a sub-package. That is all\nthe refactoring I have time for over the next few days.\n",
      "commitDate": 1054649602000,
      "commitName": "ddb334d9e4443c96fed60ff0a0b9210615846315",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054648289000,
      "commitNameOld": "04ac5dd87c11a2bf7b908b45bbca7933382df515",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "8dd44cbead07361f2b924a5a4d5d85ace71e4866": {
      "type": "Ybodychange",
      "commitMessage": "Refactored out ugly copy/paste code.\n",
      "commitDate": 1047612173000,
      "commitName": "8dd44cbead07361f2b924a5a4d5d85ace71e4866",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1045363824000,
      "commitNameOld": "04b0bd64047e8eee752405a01de145b67f5fb845",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 26.02,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public void finishTree(DetailAST aRootAST)\n     {\n         // loop over all the imports to see if referenced.\n         final Iterator it \u003d mImports.iterator();\n         while (it.hasNext()) {\n             final FullIdent imp \u003d (FullIdent) it.next();\n \n-            if (!mReferenced.contains(basename(imp.getText()))) {\n+            if (!mReferenced.contains(Utils.baseClassname(imp.getText()))) {\n                 log(imp.getLineNo(),\n                     imp.getColumnNo(),\n                     \"import.unused\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "04b0bd64047e8eee752405a01de145b67f5fb845": {
      "type": "Yparameterchange",
      "commitMessage": "Last API change before release (I hope:-). Now when notifying of the start and\nfinish of tree, based the root node. Maybe useful to some checks.\n",
      "commitDate": 1045363824000,
      "commitName": "04b0bd64047e8eee752405a01de145b67f5fb845",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1041068280000,
      "commitNameOld": "e77eef412fe4b41d89fa21b790d7dc00eacb726f",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 49.72,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    public void finishTree()\n+    public void finishTree(DetailAST aRootAST)\n     {\n         // loop over all the imports to see if referenced.\n         final Iterator it \u003d mImports.iterator();\n         while (it.hasNext()) {\n             final FullIdent imp \u003d (FullIdent) it.next();\n \n             if (!mReferenced.contains(basename(imp.getText()))) {\n                 log(imp.getLineNo(),\n                     imp.getColumnNo(),\n                     \"import.unused\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e77eef412fe4b41d89fa21b790d7dc00eacb726f": {
      "type": "Ybodychange",
      "commitMessage": "removed dead code\n",
      "commitDate": 1041068280000,
      "commitName": "e77eef412fe4b41d89fa21b790d7dc00eacb726f",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1039999056000,
      "commitNameOld": "fa0c0353c280c30f2d1cfda01ecfe6597ff46f6b",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 12.38,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,14 @@\n     public void finishTree()\n     {\n         // loop over all the imports to see if referenced.\n         final Iterator it \u003d mImports.iterator();\n         while (it.hasNext()) {\n             final FullIdent imp \u003d (FullIdent) it.next();\n \n             if (!mReferenced.contains(basename(imp.getText()))) {\n                 log(imp.getLineNo(),\n                     imp.getColumnNo(),\n                     \"import.unused\", imp.getText());\n             }\n-//          else if (isIllegalImport(imp.getText())) {\n-//              mMessages.add(imp.getLineNo(), \"import.illegal\", imp.getText());\n-//          }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54": {
      "type": "Ybodychange",
      "commitMessage": "Moved across nearly all the unit tests, just the illegal import to go\n",
      "commitDate": 1033275694000,
      "commitName": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1033108888000,
      "commitNameOld": "d077a402da51bb238a7da99d5e2542437b145192",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,17 @@\n     public void finishTree()\n     {\n         // loop over all the imports to see if referenced.\n         final Iterator it \u003d mImports.iterator();\n         while (it.hasNext()) {\n-            final String imp \u003d (String) it.next();\n-            if (!mReferenced.contains(basename(imp))) {\n-                log(666, \"unused import \" + imp);\n+            final FullIdent imp \u003d (FullIdent) it.next();\n+\n+            if (!mReferenced.contains(basename(imp.getText()))) {\n+                log(imp.getLineNo(),\n+                    imp.getColumnNo(),\n+                    \"import.unused\", imp.getText());\n             }\n+//            else if (isIllegalImport(imp.getText())) {\n+//                mMessages.add(imp.getLineNo(), \"import.illegal\", imp.getText());\n+//            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": {
      "type": "Yintroduced",
      "commitMessage": "initial checkin of check implementations\n",
      "commitDate": 1032107737000,
      "commitName": "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d",
      "commitAuthor": "Lars Kühne"
    }
  }
}