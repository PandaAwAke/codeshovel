{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AbstractExpressionHandler.java",
  "functionName": "checkModifiers",
  "functionId": "checkModifiers",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
  "functionStartLine": 487,
  "functionEndLine": 499,
  "changeHistory": [
    "8c891372187779376158becd95fcaf4e28b8bb8d",
    "4a6e1a3541fc31dc7450de00943fd94a20d9223e",
    "24d7448294b03e49709c8e5588e89c27091ba0f2",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "e3a48d1527341456a798c3f0c1986de6898a8c60",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "7f7db38a097a95c264307123924779380fb40077",
    "661a9b0ddb10922458082573d79e0791ba6f38c2",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955"
  ],
  "changeHistoryShort": {
    "8c891372187779376158becd95fcaf4e28b8bb8d": "Ybodychange",
    "4a6e1a3541fc31dc7450de00943fd94a20d9223e": "Ybodychange",
    "24d7448294b03e49709c8e5588e89c27091ba0f2": "Ybodychange",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Yfilerename",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ybodychange",
    "e3a48d1527341456a798c3f0c1986de6898a8c60": "Ymultichange(Ymodifierchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "7f7db38a097a95c264307123924779380fb40077": "Ybodychange",
    "661a9b0ddb10922458082573d79e0791ba6f38c2": "Ymodifierchange",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": "Ymultichange(Ymovefromfile,Ybodychange)",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c891372187779376158becd95fcaf4e28b8bb8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": 1450282560000,
      "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1450281394000,
      "commitNameOld": "4a6e1a3541fc31dc7450de00943fd94a20d9223e",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     protected void checkModifiers() {\n         final DetailAST modifiers \u003d\n             mainAst.findFirstToken(TokenTypes.MODIFIERS);\n         for (DetailAST modifier \u003d modifiers.getFirstChild();\n              modifier !\u003d null;\n              modifier \u003d modifier.getNextSibling()) {\n             if (isOnStartOfLine(modifier)\n-                \u0026\u0026 !getLevel().isAcceptable(expandedTabsColumnNo(modifier))) {\n+                \u0026\u0026 !getIndent().isAcceptable(expandedTabsColumnNo(modifier))) {\n                 logError(modifier, \"modifier\",\n                     expandedTabsColumnNo(modifier));\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4a6e1a3541fc31dc7450de00943fd94a20d9223e": {
      "type": "Ybodychange",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": 1450281394000,
      "commitName": "4a6e1a3541fc31dc7450de00943fd94a20d9223e",
      "commitAuthor": "rnveach",
      "commitDateOld": 1449581693000,
      "commitNameOld": "6ca2d5279ea5b03dfa91167a9001d55cca5db65d",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 8.1,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     protected void checkModifiers() {\n         final DetailAST modifiers \u003d\n             mainAst.findFirstToken(TokenTypes.MODIFIERS);\n         for (DetailAST modifier \u003d modifiers.getFirstChild();\n              modifier !\u003d null;\n              modifier \u003d modifier.getNextSibling()) {\n-            if (startsLine(modifier)\n+            if (isOnStartOfLine(modifier)\n                 \u0026\u0026 !getLevel().isAcceptable(expandedTabsColumnNo(modifier))) {\n                 logError(modifier, \"modifier\",\n                     expandedTabsColumnNo(modifier));\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "24d7448294b03e49709c8e5588e89c27091ba0f2": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes some `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection\n",
      "commitDate": 1440679495000,
      "commitName": "24d7448294b03e49709c8e5588e89c27091ba0f2",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     protected void checkModifiers() {\n         final DetailAST modifiers \u003d\n             mainAst.findFirstToken(TokenTypes.MODIFIERS);\n         for (DetailAST modifier \u003d modifiers.getFirstChild();\n              modifier !\u003d null;\n              modifier \u003d modifier.getNextSibling()) {\n             if (startsLine(modifier)\n-                \u0026\u0026 !getLevel().accept(expandedTabsColumnNo(modifier))) {\n+                \u0026\u0026 !getLevel().isAcceptable(expandedTabsColumnNo(modifier))) {\n                 logError(modifier, \"modifier\",\n                     expandedTabsColumnNo(modifier));\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Yfilerename",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": 1434649920000,
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": 1434608420000,
      "commitNameOld": "0382b7907b54e95408344863915a847dabc37f12",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.48,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": 1421678099000,
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1414957696000,
      "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
      "commitAuthorOld": "sopov.ivan",
      "daysBetweenCommits": 77.78,
      "commitsBetweenForRepo": 248,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     protected void checkModifiers()\n     {\n         final DetailAST modifiers \u003d\n-            mMainAst.findFirstToken(TokenTypes.MODIFIERS);\n+            mainAst.findFirstToken(TokenTypes.MODIFIERS);\n         for (DetailAST modifier \u003d modifiers.getFirstChild();\n              modifier !\u003d null;\n              modifier \u003d modifier.getNextSibling())\n         {\n             if (startsLine(modifier)\n                 \u0026\u0026 !getLevel().accept(expandedTabsColumnNo(modifier)))\n             {\n                 logError(modifier, \"modifier\",\n                     expandedTabsColumnNo(modifier));\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e3a48d1527341456a798c3f0c1986de6898a8c60": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Update for IndentationCheck. #294\n",
      "commitDate": 1413242511000,
      "commitName": "e3a48d1527341456a798c3f0c1986de6898a8c60",
      "commitAuthor": "maxvetrenko",
      "subchanges": [
        "Ymodifierchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200192438000,
      "commitNameOld": "5a7e221b757e91d49be1aea105eb4b839e653fbd",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 249.37,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     protected final void checkModifiers()\n     {\n         final DetailAST modifiers \u003d\n             mMainAst.findFirstToken(TokenTypes.MODIFIERS);\n-        for (DetailAST modifier \u003d (DetailAST) modifiers.getFirstChild();\n+        for (DetailAST modifier \u003d modifiers.getFirstChild();\n              modifier !\u003d null;\n-             modifier \u003d (DetailAST) modifier.getNextSibling())\n+             modifier \u003d modifier.getNextSibling())\n         {\n             /*\n             if (!areOnSameLine(modifier, prevExpr)) {\n                 continue;\n             }\n             */\n             if (startsLine(modifier)\n                 \u0026\u0026 !getLevel().accept(expandedTabsColumnNo(modifier)))\n             {\n                 logError(modifier, \"modifier\",\n                     expandedTabsColumnNo(modifier));\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152242806000,
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     protected final void checkModifiers()\n     {\n-        DetailAST modifiers \u003d mMainAst.findFirstToken(TokenTypes.MODIFIERS);\n+        final DetailAST modifiers \u003d\n+            mMainAst.findFirstToken(TokenTypes.MODIFIERS);\n         for (DetailAST modifier \u003d (DetailAST) modifiers.getFirstChild();\n              modifier !\u003d null;\n              modifier \u003d (DetailAST) modifier.getNextSibling())\n         {\n             /*\n             if (!areOnSameLine(modifier, prevExpr)) {\n                 continue;\n             }\n             */\n             if (startsLine(modifier)\n                 \u0026\u0026 !getLevel().accept(expandedTabsColumnNo(modifier)))\n             {\n                 logError(modifier, \"modifier\",\n                     expandedTabsColumnNo(modifier));\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "7f7db38a097a95c264307123924779380fb40077": {
      "type": "Ybodychange",
      "commitMessage": "IndentationCheck: Some refactoring and fixes for some TODOs and bugs.\n",
      "commitDate": 1060715940000,
      "commitName": "7f7db38a097a95c264307123924779380fb40077",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1055612861000,
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 59.06,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     protected final void checkModifiers()\n     {\n         DetailAST modifiers \u003d mMainAst.findFirstToken(TokenTypes.MODIFIERS);\n         for (DetailAST modifier \u003d (DetailAST) modifiers.getFirstChild();\n-                modifier !\u003d null;\n-                modifier \u003d (DetailAST) modifier.getNextSibling())\n+             modifier !\u003d null;\n+             modifier \u003d (DetailAST) modifier.getNextSibling())\n         {\n             /*\n             if (!areOnSameLine(modifier, prevExpr)) {\n                 continue;\n             }\n             */\n             if (startsLine(modifier)\n-                \u0026\u0026 expandedTabsColumnNo(modifier) !\u003d getLevel())\n+                \u0026\u0026 !getLevel().accept(expandedTabsColumnNo(modifier)))\n             {\n                 logError(modifier, \"modifier\",\n                     expandedTabsColumnNo(modifier));\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "661a9b0ddb10922458082573d79e0791ba6f38c2": {
      "type": "Ymodifierchange",
      "commitMessage": "Cosmetic changes in ExpressionHandle and LineSet.\nFixed bug with:\nif (foo()\n    || con1\n    || con3)\n{\n}\n\nInput for unit-test modified.\n",
      "commitDate": 1053283707000,
      "commitName": "661a9b0ddb10922458082573d79e0791ba6f38c2",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1053053682000,
      "commitNameOld": "8d9d5e58ac50133f15ad8807bea302ab16aa5071",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-    protected void checkModifiers()\n+    protected final void checkModifiers()\n     {\n         DetailAST modifiers \u003d mMainAst.findFirstToken(TokenTypes.MODIFIERS);\n         for (DetailAST modifier \u003d (DetailAST) modifiers.getFirstChild();\n                 modifier !\u003d null;\n                 modifier \u003d (DetailAST) modifier.getNextSibling())\n         {\n             /*\n             if (!areOnSameLine(modifier, prevExpr)) {\n                 continue;\n             }\n             */\n             if (startsLine(modifier)\n                 \u0026\u0026 expandedTabsColumnNo(modifier) !\u003d getLevel())\n             {\n                 logError(modifier, \"modifier\",\n                     expandedTabsColumnNo(modifier));\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
      "commitDate": 1052639583000,
      "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        "Ymovefromfile",
        "Ybodychange"
      ]
    },
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": {
      "type": "Yintroduced",
      "commitMessage": "added IndentationCheck, contributed by John Richardson\nThis check currently fails to pass checkstyle.checkstyle\nbecause most methods are missing javadoc, I hope somebody\ncan help me adding it\n",
      "commitDate": 1051248087000,
      "commitName": "9aab61241e7970ccfb4a9ee66c8eb7f062d31955",
      "commitAuthor": "Lars Kühne"
    }
  }
}