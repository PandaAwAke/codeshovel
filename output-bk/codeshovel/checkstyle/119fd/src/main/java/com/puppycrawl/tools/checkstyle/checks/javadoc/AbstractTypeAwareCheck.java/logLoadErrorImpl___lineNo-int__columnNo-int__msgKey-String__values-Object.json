{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AbstractTypeAwareCheck.java",
  "functionName": "logLoadErrorImpl",
  "functionId": "logLoadErrorImpl___lineNo-int__columnNo-int__msgKey-String__values-Object",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheck.java",
  "functionStartLine": 273,
  "functionEndLine": 291,
  "changeHistory": [
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
    "f24916302751c0e48d107b68a1b0d61aa81d32a8",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "17754d363645285e49bf4323a1af5762af47a8ea",
    "91db1968e34b4f777ab146e37a827c20b35e5c52",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "104e69edd63edb8d35b6ae63a17934fc5cf49267",
    "275f47aa0f91d635ab853b939d869896ccdb3f0f",
    "788b41973d5747c7b4699a853b62168cf0001df6",
    "70c0d0c5a4455633bc00052f47004566b2fa71b2"
  ],
  "changeHistoryShort": {
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f": "Yfilerename",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": "Ybodychange",
    "f24916302751c0e48d107b68a1b0d61aa81d32a8": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "17754d363645285e49bf4323a1af5762af47a8ea": "Ybodychange",
    "91db1968e34b4f777ab146e37a827c20b35e5c52": "Yparameterchange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "104e69edd63edb8d35b6ae63a17934fc5cf49267": "Ybodychange",
    "275f47aa0f91d635ab853b939d869896ccdb3f0f": "Ybodychange",
    "788b41973d5747c7b4699a853b62168cf0001df6": "Ybodychange",
    "70c0d0c5a4455633bc00052f47004566b2fa71b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f": {
      "type": "Yfilerename",
      "commitMessage": "Issue #4676: move AbstractTypeAwareCheck and ClassResolver to javadoc\n",
      "commitDate": 1501987881000,
      "commitName": "16f91dda1a15e0e3c3d7142a159f17db72c06d0f",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501985382000,
      "commitNameOld": "6cdae0ff01b436cfe387d18b5e1206c6f078376b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this keyword. #1555\n\nFixes `UnnecessaryThis` inspection violations.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n For example:\n ```\n this.a \u003d 3;\n ```\n",
      "commitDate": 1439131302000,
      "commitName": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439087145000,
      "commitNameOld": "2915ccf21a2f350034d9170d0b2e075e61f091ff",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.51,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     protected final void logLoadErrorImpl(int lineNo, int columnNo,\n                                           String msgKey, Object... values) {\n         if (!logLoadErrors) {\n             final LocalizedMessage msg \u003d new LocalizedMessage(lineNo,\n                                                     columnNo,\n                                                     getMessageBundle(),\n                                                     msgKey,\n                                                     values,\n                                                     getSeverityLevel(),\n                                                     getId(),\n-                                                    this.getClass(),\n+                                                    getClass(),\n                                                     null);\n             throw new IllegalStateException(msg.getMessage());\n         }\n \n         if (!suppressLoadErrors) {\n             log(lineNo, columnNo, msgKey, values);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f24916302751c0e48d107b68a1b0d61aa81d32a8": {
      "type": "Ybodychange",
      "commitMessage": "Replace RuntimeException with IllegalStateException. #1555\n\nFixes `BadExceptionThrown` inspection violations.\n\nDescription:\n\u003eReports throw statements which throw inappropriate exceptions. One use of this inspection would be to warn of throw statements which throw overly generic exceptions (e.g. java.lang.Exception or java.io.IOException).\n",
      "commitDate": 1439011156000,
      "commitName": "f24916302751c0e48d107b68a1b0d61aa81d32a8",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439011061000,
      "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     protected final void logLoadErrorImpl(int lineNo, int columnNo,\n                                           String msgKey, Object... values) {\n         if (!logLoadErrors) {\n             final LocalizedMessage msg \u003d new LocalizedMessage(lineNo,\n                                                     columnNo,\n                                                     getMessageBundle(),\n                                                     msgKey,\n                                                     values,\n                                                     getSeverityLevel(),\n                                                     getId(),\n                                                     this.getClass(),\n                                                     null);\n-            throw new RuntimeException(msg.getMessage());\n+            throw new IllegalStateException(msg.getMessage());\n         }\n \n         if (!suppressLoadErrors) {\n             log(lineNo, columnNo, msgKey, values);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": 1421678220000,
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "17754d363645285e49bf4323a1af5762af47a8ea": {
      "type": "Ybodychange",
      "commitMessage": "snapshot of changes - need to refactor\n",
      "commitDate": 1216160862000,
      "commitName": "17754d363645285e49bf4323a1af5762af47a8ea",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1209048548000,
      "commitNameOld": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 82.32,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n     protected final void logLoadErrorImpl(int aLineNo, int aColumnNo,\n                                           String aMsgKey, Object... aValues)\n     {\n         if (!mLogLoadErrors) {\n             final LocalizedMessage msg \u003d new LocalizedMessage(aLineNo,\n                                                     aColumnNo,\n                                                     getMessageBundle(),\n                                                     aMsgKey,\n                                                     aValues,\n                                                     getSeverityLevel(),\n                                                     getId(),\n-                                                    this.getClass());\n+                                                    this.getClass(),\n+                                                    null);\n             throw new RuntimeException(msg.getMessage());\n         }\n \n         if (!mSuppressLoadErrors) {\n             log(aLineNo, aColumnNo, aMsgKey, aValues);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "91db1968e34b4f777ab146e37a827c20b35e5c52": {
      "type": "Yparameterchange",
      "commitMessage": "Using varargs for logging.\n",
      "commitDate": 1198147874000,
      "commitName": "91db1968e34b4f777ab146e37a827c20b35e5c52",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1197700618000,
      "commitNameOld": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.18,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     protected final void logLoadErrorImpl(int aLineNo, int aColumnNo,\n-                                          String aMsgKey, Object[] aValues)\n+                                          String aMsgKey, Object... aValues)\n     {\n         if (!mLogLoadErrors) {\n             final LocalizedMessage msg \u003d new LocalizedMessage(aLineNo,\n                                                     aColumnNo,\n                                                     getMessageBundle(),\n                                                     aMsgKey,\n                                                     aValues,\n                                                     getSeverityLevel(),\n                                                     getId(),\n                                                     this.getClass());\n             throw new RuntimeException(msg.getMessage());\n         }\n \n         if (!mSuppressLoadErrors) {\n             log(aLineNo, aColumnNo, aMsgKey, aValues);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152243235000,
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     protected final void logLoadErrorImpl(int aLineNo, int aColumnNo,\n                                           String aMsgKey, Object[] aValues)\n     {\n         if (!mLogLoadErrors) {\n-            LocalizedMessage msg \u003d new LocalizedMessage(aLineNo,\n+            final LocalizedMessage msg \u003d new LocalizedMessage(aLineNo,\n                                                     aColumnNo,\n                                                     getMessageBundle(),\n                                                     aMsgKey,\n                                                     aValues,\n                                                     getSeverityLevel(),\n                                                     getId(),\n                                                     this.getClass());\n             throw new RuntimeException(msg.getMessage());\n         }\n \n         if (!mSuppressLoadErrors) {\n             log(aLineNo, aColumnNo, aMsgKey, aValues);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "104e69edd63edb8d35b6ae63a17934fc5cf49267": {
      "type": "Ybodychange",
      "commitMessage": "Applied patch (1505376) by Clint Stotesbery to support the\nsuppressLoadErrors property for AbstractTypeAwareCheck (RFE 1491630).\n",
      "commitDate": 1150552148000,
      "commitName": "104e69edd63edb8d35b6ae63a17934fc5cf49267",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1139343434000,
      "commitNameOld": "275f47aa0f91d635ab853b939d869896ccdb3f0f",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 129.73,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n     protected final void logLoadErrorImpl(int aLineNo, int aColumnNo,\n                                           String aMsgKey, Object[] aValues)\n     {\n-        System.out.println(mLogLoadErrors);\n         if (!mLogLoadErrors) {\n             LocalizedMessage msg \u003d new LocalizedMessage(aLineNo,\n                                                     aColumnNo,\n                                                     getMessageBundle(),\n                                                     aMsgKey,\n                                                     aValues,\n                                                     getSeverityLevel(),\n                                                     getId(),\n                                                     this.getClass());\n             throw new RuntimeException(msg.getMessage());\n         }\n-        log(aLineNo, aColumnNo, aMsgKey, aValues);\n+\n+        if (!mSuppressLoadErrors) {\n+            log(aLineNo, aColumnNo, aMsgKey, aValues);\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "275f47aa0f91d635ab853b939d869896ccdb3f0f": {
      "type": "Ybodychange",
      "commitMessage": "Fix for bug 1422462, allow controlling error handling when classloading fails in JavadocMethod check.\nTechnically this change also allows controlling RedundantThrows check, however this deliberately remains undocumented as code must be compilable and hence failing to load a class mentioned in the throws clause of a method is always a configuration problem.\n\nFixed some minor documentation problems like typos and duplicate example code along the way.\n",
      "commitDate": 1139343434000,
      "commitName": "275f47aa0f91d635ab853b939d869896ccdb3f0f",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1135859700000,
      "commitNameOld": "788b41973d5747c7b4699a853b62168cf0001df6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 40.32,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n     protected final void logLoadErrorImpl(int aLineNo, int aColumnNo,\n                                           String aMsgKey, Object[] aValues)\n     {\n-        LocalizedMessage msg \u003d new LocalizedMessage(aLineNo,\n+        System.out.println(mLogLoadErrors);\n+        if (!mLogLoadErrors) {\n+            LocalizedMessage msg \u003d new LocalizedMessage(aLineNo,\n                                                     aColumnNo,\n                                                     getMessageBundle(),\n                                                     aMsgKey,\n                                                     aValues,\n                                                     getSeverityLevel(),\n                                                     getId(),\n                                                     this.getClass());\n-        throw new RuntimeException(msg.getMessage());\n+            throw new RuntimeException(msg.getMessage());\n+        }\n+        log(aLineNo, aColumnNo, aMsgKey, aValues);\n     }\n\\ No newline at end of file\n"
    },
    "788b41973d5747c7b4699a853b62168cf0001df6": {
      "type": "Ybodychange",
      "commitMessage": "Changes to make it possible to identify a module by an id, and then to\nsuppress messages based on the id. The motivation is to allow for finer\ngrained suppressions. For example, can enable multiple instances of the\nRegexp check, and suppress on the individual instance.\n",
      "commitDate": 1135859700000,
      "commitName": "788b41973d5747c7b4699a853b62168cf0001df6",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1134657492000,
      "commitNameOld": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 13.91,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     protected final void logLoadErrorImpl(int aLineNo, int aColumnNo,\n                                           String aMsgKey, Object[] aValues)\n     {\n         LocalizedMessage msg \u003d new LocalizedMessage(aLineNo,\n                                                     aColumnNo,\n                                                     getMessageBundle(),\n                                                     aMsgKey,\n                                                     aValues,\n                                                     getSeverityLevel(),\n+                                                    getId(),\n                                                     this.getClass());\n         throw new RuntimeException(msg.getMessage());\n     }\n\\ No newline at end of file\n"
    },
    "70c0d0c5a4455633bc00052f47004566b2fa71b2": {
      "type": "Yintroduced",
      "commitMessage": "fix for 1048226 - Runtime problems of Checks are logged to checkstyle audit (we will throw exception instead)\n",
      "commitDate": 1105455578000,
      "commitName": "70c0d0c5a4455633bc00052f47004566b2fa71b2",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}