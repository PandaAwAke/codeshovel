{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "ArrayInitHandler.java",
  "functionName": "getNextFirstNonBlankOnLineAfter",
  "functionId": "getNextFirstNonBlankOnLineAfter___lineNo-int__columnNo-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java",
  "functionStartLine": 122,
  "functionEndLine": 135,
  "changeHistory": [
    "6054b46c9b717a03cf000c7884d0256335fc01e9",
    "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c",
    "23c8774d2e2fd245de1e5df02758fd23702c565e",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "e24b54962437789e3178758e06c90df5c2f6bbc1"
  ],
  "changeHistoryShort": {
    "6054b46c9b717a03cf000c7884d0256335fc01e9": "Ybodychange",
    "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c": "Yrename",
    "23c8774d2e2fd245de1e5df02758fd23702c565e": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "e24b54962437789e3178758e06c90df5c2f6bbc1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6054b46c9b717a03cf000c7884d0256335fc01e9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4940: fix MultipleReturnPointsPerMethod idea violation\n",
      "commitDate": 1503206988000,
      "commitName": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1497287515000,
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 68.51,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,14 @@\n     private int getNextFirstNonBlankOnLineAfter(int lineNo, int columnNo) {\n         int realColumnNo \u003d columnNo + 1;\n         final String line \u003d getIndentCheck().getLines()[lineNo - 1];\n         final int lineLength \u003d line.length();\n         while (realColumnNo \u003c lineLength\n                \u0026\u0026 Character.isWhitespace(line.charAt(realColumnNo))) {\n             realColumnNo++;\n         }\n \n         if (realColumnNo \u003d\u003d lineLength) {\n-            return -1;\n+            realColumnNo \u003d -1;\n         }\n-        else {\n-            return realColumnNo;\n-        }\n+        return realColumnNo;\n     }\n\\ No newline at end of file\n"
    },
    "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c": {
      "type": "Yrename",
      "commitMessage": "Fix typos in Indentation check code. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals, and fix them in one click.\n",
      "commitDate": 1440502882000,
      "commitName": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439784080000,
      "commitNameOld": "23c8774d2e2fd245de1e5df02758fd23702c565e",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 8.32,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-    private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo) {\n+    private int getNextFirstNonBlankOnLineAfter(int lineNo, int columnNo) {\n         int realColumnNo \u003d columnNo + 1;\n         final String line \u003d getIndentCheck().getLines()[lineNo - 1];\n         final int lineLength \u003d line.length();\n         while (realColumnNo \u003c lineLength\n                \u0026\u0026 Character.isWhitespace(line.charAt(realColumnNo))) {\n             realColumnNo++;\n         }\n \n         if (realColumnNo \u003d\u003d lineLength) {\n             return -1;\n         }\n         else {\n             return realColumnNo;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "23c8774d2e2fd245de1e5df02758fd23702c565e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: AvoidInlineConditional violations fixed\n",
      "commitDate": 1439784080000,
      "commitName": "23c8774d2e2fd245de1e5df02758fd23702c565e",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439437538000,
      "commitNameOld": "26ffb0af87d8718dd58344d6a95df477fa66f380",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 4.01,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n     private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo) {\n         int realColumnNo \u003d columnNo + 1;\n         final String line \u003d getIndentCheck().getLines()[lineNo - 1];\n         final int lineLength \u003d line.length();\n         while (realColumnNo \u003c lineLength\n                \u0026\u0026 Character.isWhitespace(line.charAt(realColumnNo))) {\n             realColumnNo++;\n         }\n \n-        return realColumnNo \u003d\u003d lineLength ? -1 : realColumnNo;\n+        if (realColumnNo \u003d\u003d lineLength) {\n+            return -1;\n+        }\n+        else {\n+            return realColumnNo;\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo)\n     {\n         int realColumnNo \u003d columnNo + 1;\n         final String line \u003d getIndentCheck().getLines()[lineNo - 1];\n         final int lineLength \u003d line.length();\n-        while ((realColumnNo \u003c lineLength)\n+        while (realColumnNo \u003c lineLength\n                \u0026\u0026 Character.isWhitespace(line.charAt(realColumnNo)))\n         {\n             realColumnNo++;\n         }\n \n-        return (realColumnNo \u003d\u003d lineLength) ? -1 : realColumnNo;\n+        return realColumnNo \u003d\u003d lineLength ? -1 : realColumnNo;\n     }\n\\ No newline at end of file\n"
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": 1421678099000,
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private int getNextFirstNonblankOnLineAfter(int aLineNo, int aColumnNo)\n     {\n         int columnNo \u003d aColumnNo + 1;\n         final String line \u003d getIndentCheck().getLines()[aLineNo - 1];\n         final int lineLength \u003d line.length();\n-        while (columnNo \u003c lineLength\n+        while ((columnNo \u003c lineLength)\n                \u0026\u0026 Character.isWhitespace(line.charAt(columnNo)))\n         {\n             columnNo++;\n         }\n \n         return (columnNo \u003d\u003d lineLength) ? -1 : columnNo;\n     }\n\\ No newline at end of file\n"
    },
    "e24b54962437789e3178758e06c90df5c2f6bbc1": {
      "type": "Yintroduced",
      "commitMessage": "Indentation:\nOne more bug fix to make.\nNow IndentationCheck accepts\nnew int[] {1, 2,\n           3};\n\nbut rejects\nnew int[] { 1,\n    2, 3};\n\nIt\u0027s temporary fix to make Checkstyle\u0027s sources clear\nfrom Indentation check posint of view.\n",
      "commitDate": 1053372259000,
      "commitName": "e24b54962437789e3178758e06c90df5c2f6bbc1",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}