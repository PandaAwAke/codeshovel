{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "Main.java",
  "functionName": "buildOptions",
  "functionId": "buildOptions",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
  "functionStartLine": 707,
  "functionEndLine": 737,
  "changeHistory": [
    "036582d728d2e2bb37f360bb3a74f899f04d587d",
    "fe7655e7d82152b57fd68d37df621d22b47132ad",
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
    "a6ab6053e6b3d421d19764418cba3858c683e6e8",
    "1549ea4822139938296a58f59c38ae14f633c5aa",
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a",
    "25621a3c3391ddf4bc0bb56535d23e73cd293657",
    "c225479c7d3a7b82fec7d26131ac27496d336853",
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
    "ab2f93f9bf61816d84154e636d32c81c05854e24",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "00fb7f0c1852eb015933c7c121284597de29caad",
    "2820c1d09d418935f7e7c410274f86da173eb96b",
    "822384a711290170148b43b5ae390dd4e8cfaf4f",
    "e200d9bf3d07b103e633d56215280e5e7d7a980b"
  ],
  "changeHistoryShort": {
    "036582d728d2e2bb37f360bb3a74f899f04d587d": "Ybodychange",
    "fe7655e7d82152b57fd68d37df621d22b47132ad": "Ybodychange",
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6": "Ybodychange",
    "a6ab6053e6b3d421d19764418cba3858c683e6e8": "Ybodychange",
    "1549ea4822139938296a58f59c38ae14f633c5aa": "Ybodychange",
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a": "Ybodychange",
    "25621a3c3391ddf4bc0bb56535d23e73cd293657": "Ybodychange",
    "c225479c7d3a7b82fec7d26131ac27496d336853": "Ybodychange",
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": "Ybodychange",
    "ab2f93f9bf61816d84154e636d32c81c05854e24": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Yparameterchange",
    "00fb7f0c1852eb015933c7c121284597de29caad": "Ymultichange(Yparameterchange,Ybodychange)",
    "2820c1d09d418935f7e7c410274f86da173eb96b": "Ymultichange(Yparameterchange,Ybodychange)",
    "822384a711290170148b43b5ae390dd4e8cfaf4f": "Ybodychange",
    "e200d9bf3d07b103e633d56215280e5e7d7a980b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "036582d728d2e2bb37f360bb3a74f899f04d587d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4370: Add multi thread mode to checkstyle launcher\n",
      "commitDate": 1499049797000,
      "commitName": "036582d728d2e2bb37f360bb3a74f899f04d587d",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": 1497909220000,
      "commitNameOld": "fe7655e7d82152b57fd68d37df621d22b47132ad",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 13.2,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,31 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n         options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n         options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n         options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n         options.addOption(OPTION_F_NAME, true, String.format(\n                 \"Sets the output format. (%s|%s). Defaults to %s\",\n                 PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n         options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n         options.addOption(OPTION_T_NAME, OPTION_TREE_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file\");\n         options.addOption(OPTION_CAPITAL_T_NAME, OPTION_TREE_COMMENT_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file including comments\");\n         options.addOption(OPTION_J_NAME, OPTION_JAVADOC_TREE_NAME, false,\n                 \"Print Parse tree of the Javadoc comment\");\n         options.addOption(OPTION_CAPITAL_J_NAME, OPTION_TREE_JAVADOC_NAME, false,\n                 \"Print full Abstract Syntax Tree of the file\");\n         options.addOption(OPTION_D_NAME, OPTION_DEBUG_NAME, false,\n                 \"Print all debug logging of CheckStyle utility\");\n         options.addOption(OPTION_E_NAME, OPTION_EXCLUDE_NAME, true,\n                 \"Directory path to exclude from CheckStyle\");\n         options.addOption(OPTION_X_NAME, OPTION_EXCLUDE_REGEXP_NAME, true,\n                 \"Regular expression of directory to exclude from CheckStyle\");\n         options.addOption(OPTION_EXECUTE_IGNORED_MODULES_NAME, false,\n                 \"Allows ignored modules to be run.\");\n+        options.addOption(OPTION_CAPITAL_C_NAME, OPTION_CHECKER_THREADS_NUMBER_NAME, true,\n+                \"(experimental) The number of Checker threads (must be greater than zero)\");\n+        options.addOption(OPTION_CAPITAL_W_NAME, OPTION_TREE_WALKER_THREADS_NUMBER_NAME, true,\n+                \"(experimental) The number of TreeWalker threads (must be greater than zero)\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "fe7655e7d82152b57fd68d37df621d22b47132ad": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3566: added execute ignored modules to CLI",
      "commitDate": 1497909220000,
      "commitName": "fe7655e7d82152b57fd68d37df621d22b47132ad",
      "commitAuthor": "rnveach",
      "commitDateOld": 1497307870000,
      "commitNameOld": "35d5d4d9e8cea4b9fec731b67a15f488d61cdf61",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 6.96,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n         options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n         options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n         options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n         options.addOption(OPTION_F_NAME, true, String.format(\n                 \"Sets the output format. (%s|%s). Defaults to %s\",\n                 PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n         options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n         options.addOption(OPTION_T_NAME, OPTION_TREE_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file\");\n         options.addOption(OPTION_CAPITAL_T_NAME, OPTION_TREE_COMMENT_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file including comments\");\n         options.addOption(OPTION_J_NAME, OPTION_JAVADOC_TREE_NAME, false,\n                 \"Print Parse tree of the Javadoc comment\");\n         options.addOption(OPTION_CAPITAL_J_NAME, OPTION_TREE_JAVADOC_NAME, false,\n                 \"Print full Abstract Syntax Tree of the file\");\n         options.addOption(OPTION_D_NAME, OPTION_DEBUG_NAME, false,\n                 \"Print all debug logging of CheckStyle utility\");\n         options.addOption(OPTION_E_NAME, OPTION_EXCLUDE_NAME, true,\n                 \"Directory path to exclude from CheckStyle\");\n         options.addOption(OPTION_X_NAME, OPTION_EXCLUDE_REGEXP_NAME, true,\n                 \"Regular expression of directory to exclude from CheckStyle\");\n+        options.addOption(OPTION_EXECUTE_IGNORED_MODULES_NAME, false,\n+                \"Allows ignored modules to be run.\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3287: added exclude directory option (#3288)\n\n",
      "commitDate": 1469588124000,
      "commitName": "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
      "commitAuthor": "rnveach",
      "commitDateOld": 1468298833000,
      "commitNameOld": "44119413b68542bb1db3f50d2585834b9d00d1b3",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 14.92,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n         options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n         options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n         options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n         options.addOption(OPTION_F_NAME, true, String.format(\n                 \"Sets the output format. (%s|%s). Defaults to %s\",\n                 PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n         options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n         options.addOption(OPTION_T_NAME, OPTION_TREE_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file\");\n         options.addOption(OPTION_CAPITAL_T_NAME, OPTION_TREE_COMMENT_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file including comments\");\n         options.addOption(OPTION_J_NAME, OPTION_JAVADOC_TREE_NAME, false,\n                 \"Print Parse tree of the Javadoc comment\");\n         options.addOption(OPTION_CAPITAL_J_NAME, OPTION_TREE_JAVADOC_NAME, false,\n                 \"Print full Abstract Syntax Tree of the file\");\n         options.addOption(OPTION_D_NAME, OPTION_DEBUG_NAME, false,\n                 \"Print all debug logging of CheckStyle utility\");\n+        options.addOption(OPTION_E_NAME, OPTION_EXCLUDE_NAME, true,\n+                \"Directory path to exclude from CheckStyle\");\n+        options.addOption(OPTION_X_NAME, OPTION_EXCLUDE_REGEXP_NAME, true,\n+                \"Regular expression of directory to exclude from CheckStyle\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "a6ab6053e6b3d421d19764418cba3858c683e6e8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3086: added debug option",
      "commitDate": 1464355091000,
      "commitName": "a6ab6053e6b3d421d19764418cba3858c683e6e8",
      "commitAuthor": "rnveach",
      "commitDateOld": 1460322482000,
      "commitNameOld": "1549ea4822139938296a58f59c38ae14f633c5aa",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 46.67,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n         options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n         options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n         options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n         options.addOption(OPTION_F_NAME, true, String.format(\n                 \"Sets the output format. (%s|%s). Defaults to %s\",\n                 PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n         options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n         options.addOption(OPTION_T_NAME, OPTION_TREE_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file\");\n         options.addOption(OPTION_CAPITAL_T_NAME, OPTION_TREE_COMMENT_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file including comments\");\n         options.addOption(OPTION_J_NAME, OPTION_JAVADOC_TREE_NAME, false,\n                 \"Print Parse tree of the Javadoc comment\");\n         options.addOption(OPTION_CAPITAL_J_NAME, OPTION_TREE_JAVADOC_NAME, false,\n                 \"Print full Abstract Syntax Tree of the file\");\n+        options.addOption(OPTION_D_NAME, OPTION_DEBUG_NAME, false,\n+                \"Print all debug logging of CheckStyle utility\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "1549ea4822139938296a58f59c38ae14f633c5aa": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3040: New CLI option to print full tree (java+comments+javadoc). (#3078)",
      "commitDate": 1460322482000,
      "commitName": "1549ea4822139938296a58f59c38ae14f633c5aa",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1458220789000,
      "commitNameOld": "68b49fd2843f23f55dc711a89213d59f2acf3a0a",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 24.33,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n         options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n         options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n         options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n         options.addOption(OPTION_F_NAME, true, String.format(\n                 \"Sets the output format. (%s|%s). Defaults to %s\",\n                 PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n         options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n         options.addOption(OPTION_T_NAME, OPTION_TREE_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file\");\n         options.addOption(OPTION_CAPITAL_T_NAME, OPTION_TREE_COMMENT_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file including comments\");\n         options.addOption(OPTION_J_NAME, OPTION_JAVADOC_TREE_NAME, false,\n                 \"Print Parse tree of the Javadoc comment\");\n+        options.addOption(OPTION_CAPITAL_J_NAME, OPTION_TREE_JAVADOC_NAME, false,\n+                \"Print full Abstract Syntax Tree of the file\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #652: New CLI option to print Javadoc comment parse tree\n",
      "commitDate": 1458220789000,
      "commitName": "68b49fd2843f23f55dc711a89213d59f2acf3a0a",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1456240030000,
      "commitNameOld": "25621a3c3391ddf4bc0bb56535d23e73cd293657",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 22.93,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n         options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n         options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n         options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n         options.addOption(OPTION_F_NAME, true, String.format(\n                 \"Sets the output format. (%s|%s). Defaults to %s\",\n                 PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n         options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n         options.addOption(OPTION_T_NAME, OPTION_TREE_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file\");\n         options.addOption(OPTION_CAPITAL_T_NAME, OPTION_TREE_COMMENT_NAME, false,\n                 \"Print Abstract Syntax Tree(AST) of the file including comments\");\n+        options.addOption(OPTION_J_NAME, OPTION_JAVADOC_TREE_NAME, false,\n+                \"Print Parse tree of the Javadoc comment\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "25621a3c3391ddf4bc0bb56535d23e73cd293657": {
      "type": "Ybodychange",
      "commitMessage": "Issue #652: New option to print AST with comment nodes.\n",
      "commitDate": 1456240030000,
      "commitName": "25621a3c3391ddf4bc0bb56535d23e73cd293657",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1455113230000,
      "commitNameOld": "1b72b4905bf3520aa47697cc7d1bcdad8b7ad1e6",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 13.04,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n         options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n         options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n         options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n         options.addOption(OPTION_F_NAME, true, String.format(\n                 \"Sets the output format. (%s|%s). Defaults to %s\",\n                 PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n         options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n-        options.addOption(OPTION_T_NAME, false, \"Print Abstract Syntax Tree(AST) of the file\");\n+        options.addOption(OPTION_T_NAME, OPTION_TREE_NAME, false,\n+                \"Print Abstract Syntax Tree(AST) of the file\");\n+        options.addOption(OPTION_CAPITAL_T_NAME, OPTION_TREE_COMMENT_NAME, false,\n+                \"Print Abstract Syntax Tree(AST) of the file including comments\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "c225479c7d3a7b82fec7d26131ac27496d336853": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2638: Print parse tree from CLI to terminal\n",
      "commitDate": 1454581973000,
      "commitName": "c225479c7d3a7b82fec7d26131ac27496d336853",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1453646135000,
      "commitNameOld": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 10.83,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n         options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n         options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n         options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n         options.addOption(OPTION_F_NAME, true, String.format(\n                 \"Sets the output format. (%s|%s). Defaults to %s\",\n                 PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n         options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n+        options.addOption(OPTION_T_NAME, false, \"Print Abstract Syntax Tree(AST) of the file\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations partial fix\n",
      "commitDate": 1440504773000,
      "commitName": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440042157000,
      "commitNameOld": "da6a8d083cb82a94707146de559911578f39affe",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.35,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,11 @@\n     private static Options buildOptions() {\n         final Options options \u003d new Options();\n-        options.addOption(\"c\", true, \"Sets the check configuration file to use.\");\n-        options.addOption(\"o\", true, \"Sets the output file. Defaults to stdout\");\n-        options.addOption(\"p\", true, \"Loads the properties file\");\n-        options.addOption(\"f\", true, \"Sets the output format. (plain|xml). Defaults to plain\");\n-        options.addOption(\"v\", false, \"Print product version and exit\");\n+        options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");\n+        options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");\n+        options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");\n+        options.addOption(OPTION_F_NAME, true, String.format(\n+                \"Sets the output format. (%s|%s). Defaults to %s\",\n+                PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));\n+        options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");\n         return options;\n     }\n\\ No newline at end of file\n"
    },
    "ab2f93f9bf61816d84154e636d32c81c05854e24": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Delete System.exit() and delegate exit control into separate method.\n\nIssue #596\n",
      "commitDate": 1429852725000,
      "commitName": "ab2f93f9bf61816d84154e636d32c81c05854e24",
      "commitAuthor": "Damian Szczepanik",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Yreturntypechange",
        "Ybodychange"
      ]
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": {
      "type": "Ybodychange",
      "commitMessage": "Use the new syntactic sugar \"for loop\".\n\nEnd of the cosmetic changes.\n",
      "commitDate": 1197714527000,
      "commitName": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1197706480000,
      "commitNameOld": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private static void traverse(File aNode, List\u003cFile\u003e aFiles)\n     {\n         if (aNode.canRead()) {\n             if (aNode.isDirectory()) {\n                 final File[] nodes \u003d aNode.listFiles();\n-                for (int i \u003d 0; i \u003c nodes.length; i++) {\n-                    traverse(nodes[i], aFiles);\n+                for (File element : nodes) {\n+                    traverse(element, aFiles);\n                 }\n             }\n             else if (aNode.isFile()) {\n                 aFiles.add(aNode);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Yparameterchange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    private static void traverse(File aNode, List aFiles)\n+    private static void traverse(File aNode, List\u003cFile\u003e aFiles)\n     {\n         if (aNode.canRead()) {\n             if (aNode.isDirectory()) {\n                 final File[] nodes \u003d aNode.listFiles();\n                 for (int i \u003d 0; i \u003c nodes.length; i++) {\n                     traverse(nodes[i], aFiles);\n                 }\n             }\n             else if (aNode.isFile()) {\n                 aFiles.add(aNode);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "00fb7f0c1852eb015933c7c121284597de29caad": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "FileSetChecks are now responsible for filtering\nout the files they are not interested in, as discussed\non the checkstyle-devel list\n",
      "commitDate": 1045311212000,
      "commitName": "00fb7f0c1852eb015933c7c121284597de29caad",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "2820c1d09d418935f7e7c410274f86da173eb96b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "rfe-652294: added support for specifying file extension for Java files\n",
      "commitDate": 1044149393000,
      "commitName": "2820c1d09d418935f7e7c410274f86da173eb96b",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "822384a711290170148b43b5ae390dd4e8cfaf4f": {
      "type": "Ybodychange",
      "commitMessage": "Changed signature of Checker.process(String[]) to process(File[])\n\nThis is a step towards making TreeWalker a FileSetCheck, next some\nmethods need to be moved around.\n",
      "commitDate": 1037515736000,
      "commitName": "822384a711290170148b43b5ae390dd4e8cfaf4f",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1037475487000,
      "commitNameOld": "2debda611fe487021711aa4acce56651799a778f",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.47,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private static void traverse(File aNode, List aFiles)\n     {\n         if (aNode.canRead()) {\n             if (aNode.isDirectory()) {\n                 final File[] nodes \u003d aNode.listFiles();\n                 for (int i \u003d 0; i \u003c nodes.length; i++) {\n                     traverse(nodes[i], aFiles);\n                 }\n             }\n             else if (aNode.isFile() \u0026\u0026 aNode.getPath().endsWith(\".java\")) {\n-                aFiles.add(aNode.getPath());\n+                aFiles.add(aNode);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e200d9bf3d07b103e633d56215280e5e7d7a980b": {
      "type": "Yintroduced",
      "commitMessage": "545128: implemented \"-r\" recursive option and improved the argument handling\n",
      "commitDate": 1019044792000,
      "commitName": "e200d9bf3d07b103e633d56215280e5e7d7a980b",
      "commitAuthor": "Oliver Burn"
    }
  }
}