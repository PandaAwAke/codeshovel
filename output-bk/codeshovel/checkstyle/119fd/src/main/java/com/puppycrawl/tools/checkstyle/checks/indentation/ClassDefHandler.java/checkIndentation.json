{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "ClassDefHandler.java",
  "functionName": "checkIndentation",
  "functionId": "checkIndentation",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ClassDefHandler.java",
  "functionStartLine": 70,
  "functionEndLine": 95,
  "changeHistory": [
    "e103e3dc10554c90e0c5ed7abe6ea84d8de14304",
    "a0fed4c0e90c488101c4ecb27f3f6a412c8f9a4e",
    "8c891372187779376158becd95fcaf4e28b8bb8d",
    "24d7448294b03e49709c8e5588e89c27091ba0f2",
    "24c13109a52b0b5085b5db2e8b0ae96655d9480c",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "e3a48d1527341456a798c3f0c1986de6898a8c60",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "7f7db38a097a95c264307123924779380fb40077",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955"
  ],
  "changeHistoryShort": {
    "e103e3dc10554c90e0c5ed7abe6ea84d8de14304": "Ybodychange",
    "a0fed4c0e90c488101c4ecb27f3f6a412c8f9a4e": "Ybodychange",
    "8c891372187779376158becd95fcaf4e28b8bb8d": "Ybodychange",
    "24d7448294b03e49709c8e5588e89c27091ba0f2": "Ybodychange",
    "24c13109a52b0b5085b5db2e8b0ae96655d9480c": "Ybodychange",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ybodychange",
    "e3a48d1527341456a798c3f0c1986de6898a8c60": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "7f7db38a097a95c264307123924779380fb40077": "Ybodychange",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": "Ymultichange(Ymovefromfile,Ybodychange)",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e103e3dc10554c90e0c5ed7abe6ea84d8de14304": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3134: Improve support for annotation defintion\n",
      "commitDate": 1498525583000,
      "commitName": "e103e3dc10554c90e0c5ed7abe6ea84d8de14304",
      "commitAuthor": "Vikramaditya Kukreja",
      "commitDateOld": 1487369078000,
      "commitNameOld": "6e8d1e06728b7defbd734253b3818a33676b62bc",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 129.13,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,26 @@\n     public void checkIndentation() {\n         final DetailAST modifiers \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.getChildCount() \u003d\u003d 0) {\n-            final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n-            final int lineStart \u003d getLineStart(ident);\n-            if (!getIndent().isAcceptable(lineStart)) {\n-                logError(ident, \"ident\", lineStart);\n+            if (getMainAst().getType() !\u003d TokenTypes.ANNOTATION_DEF) {\n+                final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n+                final int lineStart \u003d getLineStart(ident);\n+                if (!getIndent().isAcceptable(lineStart)) {\n+                    logError(ident, \"ident\", lineStart);\n+                }\n             }\n-\n         }\n         else {\n             checkModifiers();\n         }\n-\n-        checkWrappingIndentation(getMainAst(), getMainAst().getLastChild());\n+        if (getMainAst().getType() \u003d\u003d TokenTypes.ANNOTATION_DEF) {\n+            final DetailAST atAst \u003d getMainAst().findFirstToken(TokenTypes.AT);\n+            if (isOnStartOfLine(atAst)) {\n+                checkWrappingIndentation(getMainAst(), getListChild(), 0,\n+                        getIndent().getFirstIndentLevel(), false);\n+            }\n+        }\n+        else {\n+            checkWrappingIndentation(getMainAst(), getListChild());\n+        }\n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "a0fed4c0e90c488101c4ecb27f3f6a412c8f9a4e": {
      "type": "Ybodychange",
      "commitMessage": "minor: refactored LineWrappingHandler",
      "commitDate": 1456319336000,
      "commitName": "a0fed4c0e90c488101c4ecb27f3f6a412c8f9a4e",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 50.53,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     public void checkIndentation() {\n         final DetailAST modifiers \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.getChildCount() \u003d\u003d 0) {\n             final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n             final int lineStart \u003d getLineStart(ident);\n             if (!getIndent().isAcceptable(lineStart)) {\n                 logError(ident, \"ident\", lineStart);\n             }\n \n         }\n         else {\n             checkModifiers();\n         }\n \n-        final LineWrappingHandler lineWrap \u003d\n-            new LineWrappingHandler(getIndentCheck(), getMainAst(), getMainAst().getLastChild());\n-        lineWrap.checkIndentation();\n+        checkWrappingIndentation(getMainAst(), getMainAst().getLastChild());\n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "8c891372187779376158becd95fcaf4e28b8bb8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": 1450282560000,
      "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1442754159000,
      "commitNameOld": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 87.13,
      "commitsBetweenForRepo": 493,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void checkIndentation() {\n         final DetailAST modifiers \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.getChildCount() \u003d\u003d 0) {\n             final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n             final int lineStart \u003d getLineStart(ident);\n-            if (!getLevel().isAcceptable(lineStart)) {\n+            if (!getIndent().isAcceptable(lineStart)) {\n                 logError(ident, \"ident\", lineStart);\n             }\n \n         }\n         else {\n             checkModifiers();\n         }\n \n         final LineWrappingHandler lineWrap \u003d\n             new LineWrappingHandler(getIndentCheck(), getMainAst(), getMainAst().getLastChild());\n         lineWrap.checkIndentation();\n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "24d7448294b03e49709c8e5588e89c27091ba0f2": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes some `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection\n",
      "commitDate": 1440679495000,
      "commitName": "24d7448294b03e49709c8e5588e89c27091ba0f2",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439784080000,
      "commitNameOld": "23c8774d2e2fd245de1e5df02758fd23702c565e",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 10.36,
      "commitsBetweenForRepo": 184,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void checkIndentation() {\n         final DetailAST modifiers \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.getChildCount() \u003d\u003d 0) {\n             final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n             final int lineStart \u003d getLineStart(ident);\n-            if (!getLevel().accept(lineStart)) {\n+            if (!getLevel().isAcceptable(lineStart)) {\n                 logError(ident, \"ident\", lineStart);\n             }\n \n         }\n         else {\n             checkModifiers();\n         }\n \n         final LineWrappingHandler lineWrap \u003d\n             new LineWrappingHandler(getIndentCheck(), getMainAst(), getMainAst().getLastChild());\n         lineWrap.checkIndentation();\n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "24c13109a52b0b5085b5db2e8b0ae96655d9480c": {
      "type": "Ybodychange",
      "commitMessage": "IndentationCheck. Refactoring: got rid of anonymous classes.\n",
      "commitDate": 1424273493000,
      "commitName": "24c13109a52b0b5085b5db2e8b0ae96655d9480c",
      "commitAuthor": "Alexey",
      "commitDateOld": 1421678099000,
      "commitNameOld": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 30.04,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,20 @@\n     public void checkIndentation()\n     {\n         final DetailAST modifiers \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.getChildCount() \u003d\u003d 0) {\n             final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n             final int lineStart \u003d getLineStart(ident);\n             if (!getLevel().accept(lineStart)) {\n                 logError(ident, \"ident\", lineStart);\n             }\n \n         }\n         else {\n             checkModifiers();\n         }\n \n         final LineWrappingHandler lineWrap \u003d\n-            new LineWrappingHandler(getIndentCheck(), getMainAst()) {\n-                @Override\n-                public DetailAST findLastNode(DetailAST firstNode)\n-                {\n-                    return firstNode.getLastChild();\n-                }\n-            };\n+            new LineWrappingHandler(getIndentCheck(), getMainAst(), getMainAst().getLastChild());\n         lineWrap.checkIndentation();\n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": 1421678099000,
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1413242511000,
      "commitNameOld": "e3a48d1527341456a798c3f0c1986de6898a8c60",
      "commitAuthorOld": "maxvetrenko",
      "daysBetweenCommits": 97.63,
      "commitsBetweenForRepo": 303,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     public void checkIndentation()\n     {\n         final DetailAST modifiers \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.getChildCount() \u003d\u003d 0) {\n             final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n             final int lineStart \u003d getLineStart(ident);\n             if (!getLevel().accept(lineStart)) {\n                 logError(ident, \"ident\", lineStart);\n             }\n \n         }\n         else {\n             checkModifiers();\n         }\n \n         final LineWrappingHandler lineWrap \u003d\n             new LineWrappingHandler(getIndentCheck(), getMainAst()) {\n                 @Override\n-                public DetailAST findLastNode(DetailAST aFirstNode)\n+                public DetailAST findLastNode(DetailAST firstNode)\n                 {\n-                    return aFirstNode.getLastChild();\n+                    return firstNode.getLastChild();\n                 }\n             };\n         lineWrap.checkIndentation();\n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "e3a48d1527341456a798c3f0c1986de6898a8c60": {
      "type": "Ybodychange",
      "commitMessage": "Update for IndentationCheck. #294\n",
      "commitDate": 1413242511000,
      "commitName": "e3a48d1527341456a798c3f0c1986de6898a8c60",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 223.25,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,26 @@\n     public void checkIndentation()\n     {\n-        // TODO: still need to better deal with the modifiers and \"class\"\n-        checkModifiers();\n+        final DetailAST modifiers \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n+        if (modifiers.getChildCount() \u003d\u003d 0) {\n+            final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n+            final int lineStart \u003d getLineStart(ident);\n+            if (!getLevel().accept(lineStart)) {\n+                logError(ident, \"ident\", lineStart);\n+            }\n \n-        final LineSet lines \u003d new LineSet();\n-\n-        // checks that line with class name starts at correct indentation,\n-        //  and following lines (in implements and extends clauses) are\n-        //  indented at least one level\n-        final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n-        final int lineStart \u003d getLineStart(ident);\n-        if (!getLevel().accept(lineStart)) {\n-            logError(ident, \"ident\", lineStart);\n+        }\n+        else {\n+            checkModifiers();\n         }\n \n-        lines.addLineAndCol(ident.getLineNo(), lineStart);\n-\n-        final DetailAST impl \u003d getMainAst().findFirstToken(\n-            TokenTypes.IMPLEMENTS_CLAUSE);\n-        if ((impl !\u003d null) \u0026\u0026 (impl.getFirstChild() !\u003d null)) {\n-            findSubtreeLines(lines, impl, false);\n-        }\n-\n-        final DetailAST ext \u003d\n-            getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);\n-        if ((ext !\u003d null) \u0026\u0026 (ext.getFirstChild() !\u003d null)) {\n-            findSubtreeLines(lines, ext, false);\n-        }\n-\n-        checkLinesIndent(ident.getLineNo(), lines.lastLine(), getLevel());\n-\n+        final LineWrappingHandler lineWrap \u003d\n+            new LineWrappingHandler(getIndentCheck(), getMainAst()) {\n+                @Override\n+                public DetailAST findLastNode(DetailAST aFirstNode)\n+                {\n+                    return aFirstNode.getLastChild();\n+                }\n+            };\n+        lineWrap.checkIndentation();\n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": {
      "type": "Ybodychange",
      "commitMessage": "Removal of explicit boxing.\n",
      "commitDate": 1198150614000,
      "commitName": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1198131671000,
      "commitNameOld": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public void checkIndentation()\n     {\n         // TODO: still need to better deal with the modifiers and \"class\"\n         checkModifiers();\n \n         final LineSet lines \u003d new LineSet();\n \n         // checks that line with class name starts at correct indentation,\n         //  and following lines (in implements and extends clauses) are\n         //  indented at least one level\n         final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n         final int lineStart \u003d getLineStart(ident);\n         if (!getLevel().accept(lineStart)) {\n             logError(ident, \"ident\", lineStart);\n         }\n \n-        lines.addLineAndCol(new Integer(ident.getLineNo()), lineStart);\n+        lines.addLineAndCol(ident.getLineNo(), lineStart);\n \n         final DetailAST impl \u003d getMainAst().findFirstToken(\n             TokenTypes.IMPLEMENTS_CLAUSE);\n         if ((impl !\u003d null) \u0026\u0026 (impl.getFirstChild() !\u003d null)) {\n             findSubtreeLines(lines, impl, false);\n         }\n \n         final DetailAST ext \u003d\n             getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);\n         if ((ext !\u003d null) \u0026\u0026 (ext.getFirstChild() !\u003d null)) {\n             findSubtreeLines(lines, ext, false);\n         }\n \n         checkLinesIndent(ident.getLineNo(), lines.lastLine(), getLevel());\n \n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152242806000,
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n     public void checkIndentation()\n     {\n         // TODO: still need to better deal with the modifiers and \"class\"\n         checkModifiers();\n \n-        LineSet lines \u003d new LineSet();\n+        final LineSet lines \u003d new LineSet();\n \n         // checks that line with class name starts at correct indentation,\n         //  and following lines (in implements and extends clauses) are\n         //  indented at least one level\n-        DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n-        int lineStart \u003d getLineStart(ident);\n+        final DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n+        final int lineStart \u003d getLineStart(ident);\n         if (!getLevel().accept(lineStart)) {\n             logError(ident, \"ident\", lineStart);\n         }\n \n         lines.addLineAndCol(new Integer(ident.getLineNo()), lineStart);\n \n-        DetailAST impl \u003d getMainAst().findFirstToken(\n+        final DetailAST impl \u003d getMainAst().findFirstToken(\n             TokenTypes.IMPLEMENTS_CLAUSE);\n         if ((impl !\u003d null) \u0026\u0026 (impl.getFirstChild() !\u003d null)) {\n             findSubtreeLines(lines, impl, false);\n         }\n \n-        DetailAST ext \u003d getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);\n+        final DetailAST ext \u003d\n+            getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);\n         if ((ext !\u003d null) \u0026\u0026 (ext.getFirstChild() !\u003d null)) {\n             findSubtreeLines(lines, ext, false);\n         }\n \n         checkLinesIndent(ident.getLineNo(), lines.lastLine(), getLevel());\n \n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130267753000,
      "commitNameOld": "342ae1315c775fa512a5278d901bbd4fb23fd7c1",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 254.34,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public void checkIndentation()\n     {\n         // TODO: still need to better deal with the modifiers and \"class\"\n         checkModifiers();\n \n         LineSet lines \u003d new LineSet();\n \n         // checks that line with class name starts at correct indentation,\n         //  and following lines (in implements and extends clauses) are\n         //  indented at least one level\n         DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n         int lineStart \u003d getLineStart(ident);\n         if (!getLevel().accept(lineStart)) {\n             logError(ident, \"ident\", lineStart);\n         }\n \n         lines.addLineAndCol(new Integer(ident.getLineNo()), lineStart);\n \n         DetailAST impl \u003d getMainAst().findFirstToken(\n             TokenTypes.IMPLEMENTS_CLAUSE);\n-        if (impl !\u003d null \u0026\u0026 impl.getFirstChild() !\u003d null) {\n+        if ((impl !\u003d null) \u0026\u0026 (impl.getFirstChild() !\u003d null)) {\n             findSubtreeLines(lines, impl, false);\n         }\n \n         DetailAST ext \u003d getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);\n-        if (ext !\u003d null \u0026\u0026 ext.getFirstChild() !\u003d null) {\n+        if ((ext !\u003d null) \u0026\u0026 (ext.getFirstChild() !\u003d null)) {\n             findSubtreeLines(lines, ext, false);\n         }\n \n         checkLinesIndent(ident.getLineNo(), lines.lastLine(), getLevel());\n \n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "7f7db38a097a95c264307123924779380fb40077": {
      "type": "Ybodychange",
      "commitMessage": "IndentationCheck: Some refactoring and fixes for some TODOs and bugs.\n",
      "commitDate": 1060715940000,
      "commitName": "7f7db38a097a95c264307123924779380fb40077",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1055144900000,
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 64.48,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public void checkIndentation()\n     {\n         // TODO: still need to better deal with the modifiers and \"class\"\n         checkModifiers();\n \n         LineSet lines \u003d new LineSet();\n \n         // checks that line with class name starts at correct indentation,\n         //  and following lines (in implements and extends clauses) are\n         //  indented at least one level\n         DetailAST ident \u003d getMainAst().findFirstToken(TokenTypes.IDENT);\n         int lineStart \u003d getLineStart(ident);\n-        if (lineStart !\u003d getLevel()) {\n+        if (!getLevel().accept(lineStart)) {\n             logError(ident, \"ident\", lineStart);\n         }\n \n         lines.addLineAndCol(new Integer(ident.getLineNo()), lineStart);\n \n         DetailAST impl \u003d getMainAst().findFirstToken(\n             TokenTypes.IMPLEMENTS_CLAUSE);\n         if (impl !\u003d null \u0026\u0026 impl.getFirstChild() !\u003d null) {\n             findSubtreeLines(lines, impl, false);\n         }\n \n         DetailAST ext \u003d getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);\n         if (ext !\u003d null \u0026\u0026 ext.getFirstChild() !\u003d null) {\n             findSubtreeLines(lines, ext, false);\n         }\n \n         checkLinesIndent(ident.getLineNo(), lines.lastLine(), getLevel());\n \n         super.checkIndentation();\n     }\n\\ No newline at end of file\n"
    },
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
      "commitDate": 1052639583000,
      "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        "Ymovefromfile",
        "Ybodychange"
      ]
    },
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": {
      "type": "Yintroduced",
      "commitMessage": "added IndentationCheck, contributed by John Richardson\nThis check currently fails to pass checkstyle.checkstyle\nbecause most methods are missing javadoc, I hope somebody\ncan help me adding it\n",
      "commitDate": 1051248087000,
      "commitName": "9aab61241e7970ccfb4a9ee66c8eb7f062d31955",
      "commitAuthor": "Lars Kühne"
    }
  }
}