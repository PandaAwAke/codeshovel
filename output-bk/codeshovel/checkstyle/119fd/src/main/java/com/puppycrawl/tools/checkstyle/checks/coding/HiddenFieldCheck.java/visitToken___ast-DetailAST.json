{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "HiddenFieldCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
  "functionStartLine": 199,
  "functionEndLine": 212,
  "changeHistory": [
    "a82ecf6b468600079a0601f51b4d7ff718ae2e79",
    "6784e5bcd5baa6b5086bf8b63709856d685a74c8",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "c38185458ab824874b8465c46b4dc42646440aaa",
    "49d100f325752b15bbee56bfcf99dac223144639",
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
    "6125beffc437f970eae276b4a6542265c6547784",
    "31a9795d84272acee8e5a124e67c416c427813a5",
    "84d33e55d9735a79f1e0e9f692dd92592aa2f055",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "95a5040ccc98d1138a82c9e0ebcfe983651219b6",
    "4d307934ff226b8b1fd79005496b5f4eb832a68d",
    "0b38b65f919bd7b3d8a440c459ce754a4a840b03",
    "74989ba01127916157571418f5a7ad16929fcda5"
  ],
  "changeHistoryShort": {
    "a82ecf6b468600079a0601f51b4d7ff718ae2e79": "Ybodychange",
    "6784e5bcd5baa6b5086bf8b63709856d685a74c8": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "c38185458ab824874b8465c46b4dc42646440aaa": "Ybodychange",
    "49d100f325752b15bbee56bfcf99dac223144639": "Ybodychange",
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd": "Ybodychange",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "31a9795d84272acee8e5a124e67c416c427813a5": "Ybodychange",
    "84d33e55d9735a79f1e0e9f692dd92592aa2f055": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "95a5040ccc98d1138a82c9e0ebcfe983651219b6": "Ybodychange",
    "4d307934ff226b8b1fd79005496b5f4eb832a68d": "Ybodychange",
    "0b38b65f919bd7b3d8a440c459ce754a4a840b03": "Ybodychange",
    "74989ba01127916157571418f5a7ad16929fcda5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a82ecf6b468600079a0601f51b4d7ff718ae2e79": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2175: Add support of lambdas which parameter types are omitted for HiddenFieldCheck\n",
      "commitDate": 1442757520000,
      "commitName": "a82ecf6b468600079a0601f51b4d7ff718ae2e79",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1441991673000,
      "commitNameOld": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 8.86,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n     public void visitToken(DetailAST ast) {\n         final int type \u003d ast.getType();\n         switch (type) {\n             case TokenTypes.VARIABLE_DEF:\n             case TokenTypes.PARAMETER_DEF:\n                 processVariable(ast);\n                 break;\n-\n+            case TokenTypes.LAMBDA:\n+                processLambda(ast);\n+                break;\n             default:\n                 visitOtherTokens(ast, type);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "6784e5bcd5baa6b5086bf8b63709856d685a74c8": {
      "type": "Ybodychange",
      "commitMessage": "HiddenField module can now accept setterCanReturnItsClass attribute. #598\n",
      "commitDate": 1422320667000,
      "commitName": "6784e5bcd5baa6b5086bf8b63709856d685a74c8",
      "commitAuthor": "Dmitri Priimak",
      "commitDateOld": 1421929786000,
      "commitNameOld": "b2eeea93c2b1c9a148a8ecf615637aeea4630638",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 4.52,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,13 @@\n     public void visitToken(DetailAST ast)\n     {\n-        if ((ast.getType() \u003d\u003d TokenTypes.VARIABLE_DEF)\n-            || (ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n-        {\n-            processVariable(ast);\n-            return;\n-        }\n+        final int type \u003d ast.getType();\n+        switch (type) {\n+            case TokenTypes.VARIABLE_DEF:\n+            case TokenTypes.PARAMETER_DEF:\n+                processVariable(ast);\n+                break;\n \n-        //A more thorough check of enum constant class bodies is\n-        //possible (checking for hidden fields against the enum\n-        //class body in addition to enum constant class bodies)\n-        //but not attempted as it seems out of the scope of this\n-        //check.\n-        final DetailAST typeMods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-        final boolean isStaticInnerType \u003d\n-                (typeMods !\u003d null)\n-                        \u0026\u0026 typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n-        final FieldFrame frame \u003d\n-                new FieldFrame(currentFrame, isStaticInnerType);\n-\n-        //add fields to container\n-        final DetailAST objBlock \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n-        // enum constants may not have bodies\n-        if (objBlock !\u003d null) {\n-            DetailAST child \u003d objBlock.getFirstChild();\n-            while (child !\u003d null) {\n-                if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n-                    final String name \u003d\n-                        child.findFirstToken(TokenTypes.IDENT).getText();\n-                    final DetailAST mods \u003d\n-                        child.findFirstToken(TokenTypes.MODIFIERS);\n-                    if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n-                        frame.addStaticField(name);\n-                    }\n-                    else {\n-                        frame.addInstanceField(name);\n-                    }\n-                }\n-                child \u003d child.getNextSibling();\n-            }\n+            default:\n+                visitOtherTokens(ast, type);\n         }\n-        // push container\n-        currentFrame \u003d frame;\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1208867287000,
      "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 148.96,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if ((aAST.getType() \u003d\u003d TokenTypes.VARIABLE_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n         {\n             processVariable(aAST);\n             return;\n         }\n \n         //A more thorough check of enum constant class bodies is\n         //possible (checking for hidden fields against the enum\n         //class body in addition to enum constant class bodies)\n         //but not attempted as it seems out of the scope of this\n         //check.\n         final DetailAST typeMods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final boolean isStaticInnerType \u003d\n                 (typeMods !\u003d null)\n                         \u0026\u0026 typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n         final FieldFrame frame \u003d\n                 new FieldFrame(mCurrentFrame, isStaticInnerType);\n \n         //add fields to container\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         // enum constants may not have bodies\n         if (objBlock !\u003d null) {\n-            DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n+            DetailAST child \u003d objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n                     final String name \u003d\n                         child.findFirstToken(TokenTypes.IDENT).getText();\n                     final DetailAST mods \u003d\n                         child.findFirstToken(TokenTypes.MODIFIERS);\n                     if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n                         frame.addStaticField(name);\n                     }\n                     else {\n                         frame.addInstanceField(name);\n                     }\n                 }\n-                child \u003d (DetailAST) child.getNextSibling();\n+                child \u003d child.getNextSibling();\n             }\n         }\n         // push container\n         mCurrentFrame \u003d frame;\n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1137847382000,
      "commitNameOld": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 166.61,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n-            || aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)\n+        if ((aAST.getType() \u003d\u003d TokenTypes.VARIABLE_DEF)\n+            || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n         {\n             processVariable(aAST);\n             return;\n         }\n \n         //A more thorough check of enum constant class bodies is\n         //possible (checking for hidden fields against the enum\n         //class body in addition to enum constant class bodies)\n         //but not attempted as it seems out of the scope of this\n         //check.\n         final DetailAST typeMods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final boolean isStaticInnerType \u003d\n                 (typeMods !\u003d null)\n                         \u0026\u0026 typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n         final FieldFrame frame \u003d\n                 new FieldFrame(mCurrentFrame, isStaticInnerType);\n \n         //add fields to container\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         // enum constants may not have bodies\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n                     final String name \u003d\n                         child.findFirstToken(TokenTypes.IDENT).getText();\n                     final DetailAST mods \u003d\n                         child.findFirstToken(TokenTypes.MODIFIERS);\n                     if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n                         frame.addStaticField(name);\n                     }\n                     else {\n                         frame.addInstanceField(name);\n                     }\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n         }\n         // push container\n         mCurrentFrame \u003d frame;\n     }\n\\ No newline at end of file\n"
    },
    "c38185458ab824874b8465c46b4dc42646440aaa": {
      "type": "Ybodychange",
      "commitMessage": "Code cleanup\n",
      "commitDate": 1137847382000,
      "commitName": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 81.72,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,45 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n             || aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)\n         {\n             processVariable(aAST);\n             return;\n         }\n \n         //A more thorough check of enum constant class bodies is\n         //possible (checking for hidden fields against the enum\n         //class body in addition to enum constant class bodies)\n         //but not attempted as it seems out of the scope of this\n         //check.\n         final DetailAST typeMods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final boolean isStaticInnerType \u003d\n-            (typeMods \u003d\u003d null)\n-            ? false\n-            : typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n+                (typeMods !\u003d null)\n+                        \u0026\u0026 typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n         final FieldFrame frame \u003d\n-            new FieldFrame(mCurrentFrame, isStaticInnerType);\n+                new FieldFrame(mCurrentFrame, isStaticInnerType);\n \n         //add fields to container\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         // enum constants may not have bodies\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n                     final String name \u003d\n                         child.findFirstToken(TokenTypes.IDENT).getText();\n                     final DetailAST mods \u003d\n                         child.findFirstToken(TokenTypes.MODIFIERS);\n                     if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n                         frame.addStaticField(name);\n                     }\n                     else {\n                         frame.addInstanceField(name);\n                     }\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n         }\n         // push container\n         mCurrentFrame \u003d frame;\n     }\n\\ No newline at end of file\n"
    },
    "49d100f325752b15bbee56bfcf99dac223144639": {
      "type": "Ybodychange",
      "commitMessage": "small refactoring for HiddenFieldCheck\n",
      "commitDate": 1117556189000,
      "commitName": "49d100f325752b15bbee56bfcf99dac223144639",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1115830091000,
      "commitNameOld": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 19.98,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,46 @@\n     public void visitToken(DetailAST aAST)\n     {\n+        if (aAST.getType() \u003d\u003d TokenTypes.VARIABLE_DEF\n+            || aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)\n+        {\n+            processVariable(aAST);\n+            return;\n+        }\n+\n         //A more thorough check of enum constant class bodies is\n         //possible (checking for hidden fields against the enum\n         //class body in addition to enum constant class bodies)\n         //but not attempted as it seems out of the scope of this\n         //check.\n-        if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n-            || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n-            || (aAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF))\n-        {\n-            final DetailAST typeMods \u003d\n-                aAST.findFirstToken(TokenTypes.MODIFIERS);\n-            final boolean isStaticInnerType \u003d\n-                (typeMods \u003d\u003d null)\n-                    ? false\n-                    : typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n-            final FieldFrame frame \u003d\n-                new FieldFrame(mCurrentFrame, isStaticInnerType);\n+        final DetailAST typeMods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n+        final boolean isStaticInnerType \u003d\n+            (typeMods \u003d\u003d null)\n+            ? false\n+            : typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n+        final FieldFrame frame \u003d\n+            new FieldFrame(mCurrentFrame, isStaticInnerType);\n \n-            //add fields to container\n-            final DetailAST objBlock \u003d\n-                aAST.findFirstToken(TokenTypes.OBJBLOCK);\n-            // enum constants may not have bodies\n-            if (objBlock !\u003d null) {\n-                DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n-                while (child !\u003d null) {\n-                    if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n-                        final String name \u003d\n-                            child.findFirstToken(TokenTypes.IDENT).getText();\n-                        final DetailAST mods \u003d\n-                            child.findFirstToken(TokenTypes.MODIFIERS);\n-                        if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n-                            frame.addStaticField(name);\n-                        }\n-                        else {\n-                            frame.addInstanceField(name);\n-                        }\n+        //add fields to container\n+        final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n+        // enum constants may not have bodies\n+        if (objBlock !\u003d null) {\n+            DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n+            while (child !\u003d null) {\n+                if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n+                    final String name \u003d\n+                        child.findFirstToken(TokenTypes.IDENT).getText();\n+                    final DetailAST mods \u003d\n+                        child.findFirstToken(TokenTypes.MODIFIERS);\n+                    if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n+                        frame.addStaticField(name);\n                     }\n-                    child \u003d (DetailAST) child.getNextSibling();\n+                    else {\n+                        frame.addInstanceField(name);\n+                    }\n                 }\n+                child \u003d (DetailAST) child.getNextSibling();\n             }\n-            // push container\n-            mCurrentFrame \u003d frame;\n         }\n-        else {\n-            //must be VARIABLE_DEF or PARAMETER_DEF\n-            processVariable(aAST);\n-        }\n+        // push container\n+        mCurrentFrame \u003d frame;\n     }\n\\ No newline at end of file\n"
    },
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd": {
      "type": "Ybodychange",
      "commitMessage": "merging changes from v3 branch\n",
      "commitDate": 1096996314000,
      "commitName": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1096311350000,
      "commitNameOld": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthorOld": "Michael Studman",
      "daysBetweenCommits": 7.93,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,50 @@\n     public void visitToken(DetailAST aAST)\n     {\n         //A more thorough check of enum constant class bodies is\n         //possible (checking for hidden fields against the enum\n         //class body in addition to enum constant class bodies)\n         //but not attempted as it seems out of the scope of this\n         //check.\n         if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n             || (aAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF))\n         {\n             final DetailAST typeMods \u003d\n                 aAST.findFirstToken(TokenTypes.MODIFIERS);\n             final boolean isStaticInnerType \u003d\n                 (typeMods \u003d\u003d null)\n                     ? false\n                     : typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n-            final FieldFrame frame \u003d new FieldFrame(isStaticInnerType);\n+            final FieldFrame frame \u003d\n+                new FieldFrame(mCurrentFrame, isStaticInnerType);\n \n             //add fields to container\n             final DetailAST objBlock \u003d\n                 aAST.findFirstToken(TokenTypes.OBJBLOCK);\n             // enum constants may not have bodies\n             if (objBlock !\u003d null) {\n                 DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n                 while (child !\u003d null) {\n                     if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n                         final String name \u003d\n                             child.findFirstToken(TokenTypes.IDENT).getText();\n                         final DetailAST mods \u003d\n                             child.findFirstToken(TokenTypes.MODIFIERS);\n                         if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n                             frame.addStaticField(name);\n                         }\n                         else {\n                             frame.addInstanceField(name);\n                         }\n                     }\n                     child \u003d (DetailAST) child.getNextSibling();\n                 }\n             }\n-            mFieldsStack.addLast(frame); //push container\n+            // push container\n+            mCurrentFrame \u003d frame;\n         }\n         else {\n             //must be VARIABLE_DEF or PARAMETER_DEF\n             processVariable(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": 1096311350000,
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1095885114000,
      "commitNameOld": "31a9795d84272acee8e5a124e67c416c427813a5",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 4.93,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,48 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF) {\n-            //find and push fields\n-            final DetailAST classMods \u003d\n+        //A more thorough check of enum constant class bodies is\n+        //possible (checking for hidden fields against the enum\n+        //class body in addition to enum constant class bodies)\n+        //but not attempted as it seems out of the scope of this\n+        //check.\n+        if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n+            || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n+            || (aAST.getType() \u003d\u003d TokenTypes.ENUM_CONSTANT_DEF))\n+        {\n+            final DetailAST typeMods \u003d\n                 aAST.findFirstToken(TokenTypes.MODIFIERS);\n-            final boolean isStaticInnerClass \u003d\n-                classMods.branchContains(TokenTypes.LITERAL_STATIC);\n-            final FieldFrame frame \u003d new FieldFrame(isStaticInnerClass);\n+            final boolean isStaticInnerType \u003d\n+                (typeMods \u003d\u003d null)\n+                    ? false\n+                    : typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n+            final FieldFrame frame \u003d new FieldFrame(isStaticInnerType);\n+\n             //add fields to container\n             final DetailAST objBlock \u003d\n                 aAST.findFirstToken(TokenTypes.OBJBLOCK);\n-            DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n-            while (child !\u003d null) {\n-                if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n-                    final String name \u003d\n-                        child.findFirstToken(TokenTypes.IDENT).getText();\n-                    final DetailAST mods \u003d\n-                        child.findFirstToken(TokenTypes.MODIFIERS);\n-                    if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n-                        frame.addStaticField(name);\n+            // enum constants may not have bodies\n+            if (objBlock !\u003d null) {\n+                DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n+                while (child !\u003d null) {\n+                    if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n+                        final String name \u003d\n+                            child.findFirstToken(TokenTypes.IDENT).getText();\n+                        final DetailAST mods \u003d\n+                            child.findFirstToken(TokenTypes.MODIFIERS);\n+                        if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n+                            frame.addStaticField(name);\n+                        }\n+                        else {\n+                            frame.addInstanceField(name);\n+                        }\n                     }\n-                    else {\n-                        frame.addInstanceField(name);\n-                    }\n+                    child \u003d (DetailAST) child.getNextSibling();\n                 }\n-                child \u003d (DetailAST) child.getNextSibling();\n             }\n             mFieldsStack.addLast(frame); //push container\n         }\n         else {\n             //must be VARIABLE_DEF or PARAMETER_DEF\n             processVariable(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "31a9795d84272acee8e5a124e67c416c427813a5": {
      "type": "Ybodychange",
      "commitMessage": "fix for 1032426\n",
      "commitDate": 1095885114000,
      "commitName": "31a9795d84272acee8e5a124e67c416c427813a5",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1074114639000,
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 251.97,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,35 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF) {\n             //find and push fields\n-            final FieldFrame frame \u003d new FieldFrame();\n+            final DetailAST classMods \u003d\n+                aAST.findFirstToken(TokenTypes.MODIFIERS);\n+            final boolean isStaticInnerClass \u003d\n+                classMods.branchContains(TokenTypes.LITERAL_STATIC);\n+            final FieldFrame frame \u003d new FieldFrame(isStaticInnerClass);\n             //add fields to container\n             final DetailAST objBlock \u003d\n                 aAST.findFirstToken(TokenTypes.OBJBLOCK);\n             DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n                     final String name \u003d\n                         child.findFirstToken(TokenTypes.IDENT).getText();\n                     final DetailAST mods \u003d\n                         child.findFirstToken(TokenTypes.MODIFIERS);\n                     if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n                         frame.addStaticField(name);\n                     }\n                     else {\n                         frame.addInstanceField(name);\n                     }\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n             mFieldsStack.addLast(frame); //push container\n         }\n         else {\n             //must be VARIABLE_DEF or PARAMETER_DEF\n             processVariable(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "84d33e55d9735a79f1e0e9f692dd92592aa2f055": {
      "type": "Ybodychange",
      "commitMessage": "Fixed HiddenFieldCheck error for a local variable of a static\nmethod with same name as an instance field(bug 827713)\n",
      "commitDate": 1067214720000,
      "commitName": "84d33e55d9735a79f1e0e9f692dd92592aa2f055",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1065635218000,
      "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 18.28,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,31 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF) {\n             //find and push fields\n-            final HashSet fieldSet \u003d new HashSet(); //fields container\n+            final FieldFrame frame \u003d new FieldFrame();\n             //add fields to container\n             final DetailAST objBlock \u003d\n                 aAST.findFirstToken(TokenTypes.OBJBLOCK);\n             DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n                     final String name \u003d\n                         child.findFirstToken(TokenTypes.IDENT).getText();\n-                    fieldSet.add(name);\n+                    final DetailAST mods \u003d\n+                        child.findFirstToken(TokenTypes.MODIFIERS);\n+                    if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {\n+                        frame.addStaticField(name);\n+                    }\n+                    else {\n+                        frame.addInstanceField(name);\n+                    }\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n-            mFieldsStack.addLast(fieldSet); //push container\n+            mFieldsStack.addLast(frame); //push container\n         }\n         else {\n             //must be VARIABLE_DEF or PARAMETER_DEF\n             processVariable(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": 1055680780000,
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1055612861000,
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "95a5040ccc98d1138a82c9e0ebcfe983651219b6": {
      "type": "Ybodychange",
      "commitMessage": "Added required tokens.\n",
      "commitDate": 1040208936000,
      "commitName": "95a5040ccc98d1138a82c9e0ebcfe983651219b6",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1039999056000,
      "commitNameOld": "fa0c0353c280c30f2d1cfda01ecfe6597ff46f6b",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 2.43,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        switch (aAST.getType()) {\n-            case TokenTypes.VARIABLE_DEF:\n-                processVariable(aAST);\n-                break;\n-            case TokenTypes.PARAMETER_DEF:\n-                if (mCheckParameters) {\n-                    processVariable(aAST);\n+        if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF) {\n+            //find and push fields\n+            final HashSet fieldSet \u003d new HashSet(); //fields container\n+            //add fields to container\n+            final DetailAST objBlock \u003d\n+                aAST.findFirstToken(TokenTypes.OBJBLOCK);\n+            DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n+            while (child !\u003d null) {\n+                if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n+                    final String name \u003d\n+                        child.findFirstToken(TokenTypes.IDENT).getText();\n+                    fieldSet.add(name);\n                 }\n-                break;\n-            case TokenTypes.CLASS_DEF:\n-                //find and push fields\n-                final HashSet fieldSet \u003d new HashSet(); //fields container\n-                //add fields to container\n-                final DetailAST objBlock \u003d\n-                    aAST.findFirstToken(TokenTypes.OBJBLOCK);\n-                DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n-                while (child !\u003d null) {\n-                    if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n-                        final String name \u003d\n-                            child.findFirstToken(TokenTypes.IDENT).getText();\n-                        fieldSet.add(name);\n-                    }\n-                    child \u003d (DetailAST) child.getNextSibling();\n-                }                \n-                mFieldsStack.addLast(fieldSet); //push container              \n-                break;\n+                child \u003d (DetailAST) child.getNextSibling();\n+            }                \n+            mFieldsStack.addLast(fieldSet); //push container              \n+        }\n+        else {\n+            //must be VARIABLE_DEF or PARAMETER_DEF\n+            processVariable(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4d307934ff226b8b1fd79005496b5f4eb832a68d": {
      "type": "Ybodychange",
      "commitMessage": "Made check independent of order of declarations.\n",
      "commitDate": 1038478286000,
      "commitName": "4d307934ff226b8b1fd79005496b5f4eb832a68d",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1038440789000,
      "commitNameOld": "c62105cfc7510892da46cb6a406b0bfa97c37672",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.43,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,30 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n             case TokenTypes.VARIABLE_DEF:\n                 processVariable(aAST);\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (mCheckParameters) {\n                     processVariable(aAST);\n                 }\n                 break;\n             case TokenTypes.CLASS_DEF:\n-                //push\n-                mFieldsStack.addLast(new HashSet());\n+                //find and push fields\n+                final HashSet fieldSet \u003d new HashSet(); //fields container\n+                //add fields to container\n+                final DetailAST objBlock \u003d\n+                    aAST.findFirstToken(TokenTypes.OBJBLOCK);\n+                DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n+                while (child !\u003d null) {\n+                    if (child.getType() \u003d\u003d TokenTypes.VARIABLE_DEF) {\n+                        final String name \u003d\n+                            child.findFirstToken(TokenTypes.IDENT).getText();\n+                        fieldSet.add(name);\n+                    }\n+                    child \u003d (DetailAST) child.getNextSibling();\n+                }                \n+                mFieldsStack.addLast(fieldSet); //push container              \n                 break;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0b38b65f919bd7b3d8a440c459ce754a4a840b03": {
      "type": "Ybodychange",
      "commitMessage": "strengthened to also check  fields of outer classes, and to check\nparameters by default.\nimproved code coverage.\n",
      "commitDate": 1036714340000,
      "commitName": "0b38b65f919bd7b3d8a440c459ce754a4a840b03",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1036689701000,
      "commitNameOld": "d2a0e41072c8a97195971566c571ef84c7593627",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n             case TokenTypes.VARIABLE_DEF:               \n                 processVariable(aAST);\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (mCheckParameters) {               \n                     processVariable(aAST);\n                 }\n                 break;\n             case TokenTypes.CLASS_DEF:\n                 //push\n                 mFieldsStack.addLast(new HashSet());\n                 break;\n-            default:\n-                break;\n         }\n     }\n\\ No newline at end of file\n"
    },
    "74989ba01127916157571418f5a7ad16929fcda5": {
      "type": "Yintroduced",
      "commitMessage": "Checks whether a local variable or parameter shadows a field.\nThis is the cause for one of the most common logic errors of beginners.\n",
      "commitDate": 1036664455000,
      "commitName": "74989ba01127916157571418f5a7ad16929fcda5",
      "commitAuthor": "Rick Giles"
    }
  }
}