{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "SuppressWarningsHolder.java",
  "functionName": "getAnnotationTarget",
  "functionId": "getAnnotationTarget___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
  "functionStartLine": 334,
  "functionEndLine": 347,
  "changeHistory": [
    "346387c717048391485fb28f877531aab1095de1",
    "dae75fff6161f90941aca9ba0dd902d9b11abcd4",
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc",
    "e8d0f037a2a300da55df6ab28d3459a6af9990d8",
    "d877cb15cfeae5f06a5d546dcc860c2aa32caac4",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "146e2657d319f070a4106cb0e4017fa6b3156949",
    "7f65ac9c09d4e0ae5afa5b4709c7a8a136b6bd7f"
  ],
  "changeHistoryShort": {
    "346387c717048391485fb28f877531aab1095de1": "Ybodychange",
    "dae75fff6161f90941aca9ba0dd902d9b11abcd4": "Ybodychange",
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc": "Ybodychange",
    "e8d0f037a2a300da55df6ab28d3459a6af9990d8": "Ybodychange",
    "d877cb15cfeae5f06a5d546dcc860c2aa32caac4": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "146e2657d319f070a4106cb0e4017fa6b3156949": "Ybodychange",
    "7f65ac9c09d4e0ae5afa5b4709c7a8a136b6bd7f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "346387c717048391485fb28f877531aab1095de1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1551: Fix FinalLocalVariable violations in checkstyle",
      "commitDate": 1446385289000,
      "commitName": "346387c717048391485fb28f877531aab1095de1",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1446329708000,
      "commitNameOld": "9aa49c8f6d2b30577565f87984819e1df0d62d0f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.64,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private static DetailAST getAnnotationTarget(DetailAST ast) {\n-        DetailAST targetAST;\n+        final DetailAST targetAST;\n         final DetailAST parentAST \u003d ast.getParent();\n         switch (parentAST.getType()) {\n             case TokenTypes.MODIFIERS:\n             case TokenTypes.ANNOTATIONS:\n                 targetAST \u003d getAcceptableParent(parentAST);\n                 break;\n             default:\n                 // unexpected container type\n                 throw new IllegalArgumentException(\"Unexpected container AST: \" + parentAST);\n         }\n         return targetAST;\n     }\n\\ No newline at end of file\n"
    },
    "dae75fff6161f90941aca9ba0dd902d9b11abcd4": {
      "type": "Ybodychange",
      "commitMessage": "minor: fixing teamcity violation",
      "commitDate": 1444872193000,
      "commitName": "dae75fff6161f90941aca9ba0dd902d9b11abcd4",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1444870368000,
      "commitNameOld": "99f8726600ebd9f73b86eacf5e44d0335266d8fc",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private static DetailAST getAnnotationTarget(DetailAST ast) {\n-        DetailAST targetAST \u003d null;\n+        DetailAST targetAST;\n         final DetailAST parentAST \u003d ast.getParent();\n         switch (parentAST.getType()) {\n             case TokenTypes.MODIFIERS:\n             case TokenTypes.ANNOTATIONS:\n                 targetAST \u003d getAcceptableParent(parentAST);\n                 break;\n             default:\n                 // unexpected container type\n                 throw new IllegalArgumentException(\"Unexpected container AST: \" + parentAST);\n         }\n         return targetAST;\n     }\n\\ No newline at end of file\n"
    },
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #46: switch case clauses should not have too many lines.\n",
      "commitDate": 1444870368000,
      "commitName": "99f8726600ebd9f73b86eacf5e44d0335266d8fc",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1444312026000,
      "commitNameOld": "74e9b64d933a28eb3eb914245ed6f9c9961e7daf",
      "commitAuthorOld": "St√©phane Galland",
      "daysBetweenCommits": 6.46,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,14 @@\n     private static DetailAST getAnnotationTarget(DetailAST ast) {\n         DetailAST targetAST \u003d null;\n-        DetailAST parentAST \u003d ast.getParent();\n+        final DetailAST parentAST \u003d ast.getParent();\n         switch (parentAST.getType()) {\n             case TokenTypes.MODIFIERS:\n             case TokenTypes.ANNOTATIONS:\n-                parentAST \u003d parentAST.getParent();\n-                switch (parentAST.getType()) {\n-                    case TokenTypes.ANNOTATION_DEF:\n-                    case TokenTypes.PACKAGE_DEF:\n-                    case TokenTypes.CLASS_DEF:\n-                    case TokenTypes.INTERFACE_DEF:\n-                    case TokenTypes.ENUM_DEF:\n-                    case TokenTypes.ENUM_CONSTANT_DEF:\n-                    case TokenTypes.CTOR_DEF:\n-                    case TokenTypes.METHOD_DEF:\n-                    case TokenTypes.PARAMETER_DEF:\n-                    case TokenTypes.VARIABLE_DEF:\n-                    case TokenTypes.ANNOTATION_FIELD_DEF:\n-                    case TokenTypes.TYPE:\n-                    case TokenTypes.LITERAL_NEW:\n-                    case TokenTypes.LITERAL_THROWS:\n-                    case TokenTypes.TYPE_ARGUMENT:\n-                    case TokenTypes.IMPLEMENTS_CLAUSE:\n-                    case TokenTypes.DOT:\n-                        targetAST \u003d parentAST;\n-                        break;\n-                    default:\n-                        // it\u0027s possible case, but shouldn\u0027t be processed here\n-                }\n+                targetAST \u003d getAcceptableParent(parentAST);\n                 break;\n             default:\n                 // unexpected container type\n                 throw new IllegalArgumentException(\"Unexpected container AST: \" + parentAST);\n         }\n         return targetAST;\n     }\n\\ No newline at end of file\n"
    },
    "e8d0f037a2a300da55df6ab28d3459a6af9990d8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1290: Coverage has been increased to 100% in SuppressWarningsHolder.\n",
      "commitDate": 1443661529000,
      "commitName": "e8d0f037a2a300da55df6ab28d3459a6af9990d8",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1443570779000,
      "commitNameOld": "d877cb15cfeae5f06a5d546dcc860c2aa32caac4",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 1.05,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,37 @@\n     private static DetailAST getAnnotationTarget(DetailAST ast) {\n         DetailAST targetAST \u003d null;\n         DetailAST parentAST \u003d ast.getParent();\n         switch (parentAST.getType()) {\n             case TokenTypes.MODIFIERS:\n             case TokenTypes.ANNOTATIONS:\n                 parentAST \u003d parentAST.getParent();\n                 switch (parentAST.getType()) {\n                     case TokenTypes.ANNOTATION_DEF:\n                     case TokenTypes.PACKAGE_DEF:\n                     case TokenTypes.CLASS_DEF:\n                     case TokenTypes.INTERFACE_DEF:\n                     case TokenTypes.ENUM_DEF:\n                     case TokenTypes.ENUM_CONSTANT_DEF:\n                     case TokenTypes.CTOR_DEF:\n                     case TokenTypes.METHOD_DEF:\n                     case TokenTypes.PARAMETER_DEF:\n                     case TokenTypes.VARIABLE_DEF:\n                     case TokenTypes.ANNOTATION_FIELD_DEF:\n                     case TokenTypes.TYPE:\n                     case TokenTypes.LITERAL_NEW:\n                     case TokenTypes.LITERAL_THROWS:\n                     case TokenTypes.TYPE_ARGUMENT:\n                     case TokenTypes.IMPLEMENTS_CLAUSE:\n                     case TokenTypes.DOT:\n                         targetAST \u003d parentAST;\n                         break;\n                     default:\n-                        // unexpected target type\n+                        // it\u0027s possible case, but shouldn\u0027t be processed here\n                 }\n                 break;\n             default:\n                 // unexpected container type\n+                throw new IllegalArgumentException(\"Unexpected container AST: \" + parentAST);\n         }\n         return targetAST;\n     }\n\\ No newline at end of file\n"
    },
    "d877cb15cfeae5f06a5d546dcc860c2aa32caac4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1290: SuppressWarningHolder coverage has been increased\n",
      "commitDate": 1443570779000,
      "commitName": "d877cb15cfeae5f06a5d546dcc860c2aa32caac4",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1442872973000,
      "commitNameOld": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 8.08,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,36 @@\n     private static DetailAST getAnnotationTarget(DetailAST ast) {\n         DetailAST targetAST \u003d null;\n         DetailAST parentAST \u003d ast.getParent();\n-        if (parentAST !\u003d null) {\n-            switch (parentAST.getType()) {\n-                case TokenTypes.MODIFIERS:\n-                case TokenTypes.ANNOTATIONS:\n-                    parentAST \u003d parentAST.getParent();\n-                    if (parentAST !\u003d null) {\n-                        switch (parentAST.getType()) {\n-                            case TokenTypes.ANNOTATION_DEF:\n-                            case TokenTypes.PACKAGE_DEF:\n-                            case TokenTypes.CLASS_DEF:\n-                            case TokenTypes.INTERFACE_DEF:\n-                            case TokenTypes.ENUM_DEF:\n-                            case TokenTypes.ENUM_CONSTANT_DEF:\n-                            case TokenTypes.CTOR_DEF:\n-                            case TokenTypes.METHOD_DEF:\n-                            case TokenTypes.PARAMETER_DEF:\n-                            case TokenTypes.VARIABLE_DEF:\n-                            case TokenTypes.ANNOTATION_FIELD_DEF:\n-                            case TokenTypes.TYPE:\n-                            case TokenTypes.LITERAL_NEW:\n-                            case TokenTypes.LITERAL_THROWS:\n-                            case TokenTypes.TYPE_ARGUMENT:\n-                            case TokenTypes.IMPLEMENTS_CLAUSE:\n-                            case TokenTypes.DOT:\n-                                targetAST \u003d parentAST;\n-                                break;\n-\n-                            default:\n-                                // unexpected target type\n-                        }\n-                    }\n-                    break;\n-\n-                default:\n-                    // unexpected container type\n-            }\n+        switch (parentAST.getType()) {\n+            case TokenTypes.MODIFIERS:\n+            case TokenTypes.ANNOTATIONS:\n+                parentAST \u003d parentAST.getParent();\n+                switch (parentAST.getType()) {\n+                    case TokenTypes.ANNOTATION_DEF:\n+                    case TokenTypes.PACKAGE_DEF:\n+                    case TokenTypes.CLASS_DEF:\n+                    case TokenTypes.INTERFACE_DEF:\n+                    case TokenTypes.ENUM_DEF:\n+                    case TokenTypes.ENUM_CONSTANT_DEF:\n+                    case TokenTypes.CTOR_DEF:\n+                    case TokenTypes.METHOD_DEF:\n+                    case TokenTypes.PARAMETER_DEF:\n+                    case TokenTypes.VARIABLE_DEF:\n+                    case TokenTypes.ANNOTATION_FIELD_DEF:\n+                    case TokenTypes.TYPE:\n+                    case TokenTypes.LITERAL_NEW:\n+                    case TokenTypes.LITERAL_THROWS:\n+                    case TokenTypes.TYPE_ARGUMENT:\n+                    case TokenTypes.IMPLEMENTS_CLAUSE:\n+                    case TokenTypes.DOT:\n+                        targetAST \u003d parentAST;\n+                        break;\n+                    default:\n+                        // unexpected target type\n+                }\n+                break;\n+            default:\n+                // unexpected container type\n         }\n         return targetAST;\n     }\n\\ No newline at end of file\n"
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1436123405000,
      "commitNameOld": "146e2657d319f070a4106cb0e4017fa6b3156949",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 12.4,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n-    private DetailAST getAnnotationTarget(DetailAST ast) {\n+    private static DetailAST getAnnotationTarget(DetailAST ast) {\n         DetailAST targetAST \u003d null;\n         DetailAST parentAST \u003d ast.getParent();\n         if (parentAST !\u003d null) {\n             switch (parentAST.getType()) {\n                 case TokenTypes.MODIFIERS:\n                 case TokenTypes.ANNOTATIONS:\n                     parentAST \u003d parentAST.getParent();\n                     if (parentAST !\u003d null) {\n                         switch (parentAST.getType()) {\n                             case TokenTypes.ANNOTATION_DEF:\n                             case TokenTypes.PACKAGE_DEF:\n                             case TokenTypes.CLASS_DEF:\n                             case TokenTypes.INTERFACE_DEF:\n                             case TokenTypes.ENUM_DEF:\n                             case TokenTypes.ENUM_CONSTANT_DEF:\n                             case TokenTypes.CTOR_DEF:\n                             case TokenTypes.METHOD_DEF:\n                             case TokenTypes.PARAMETER_DEF:\n                             case TokenTypes.VARIABLE_DEF:\n                             case TokenTypes.ANNOTATION_FIELD_DEF:\n                             case TokenTypes.TYPE:\n                             case TokenTypes.LITERAL_NEW:\n                             case TokenTypes.LITERAL_THROWS:\n                             case TokenTypes.TYPE_ARGUMENT:\n                             case TokenTypes.IMPLEMENTS_CLAUSE:\n                             case TokenTypes.DOT:\n                                 targetAST \u003d parentAST;\n                                 break;\n \n                             default:\n                                 // unexpected target type\n                         }\n                     }\n                     break;\n \n                 default:\n                     // unexpected container type\n             }\n         }\n         return targetAST;\n     }\n\\ No newline at end of file\n"
    },
    "146e2657d319f070a4106cb0e4017fa6b3156949": {
      "type": "Ybodychange",
      "commitMessage": "extend target list fo SuppressWarningsHolder, #1158",
      "commitDate": 1436123405000,
      "commitName": "146e2657d319f070a4106cb0e4017fa6b3156949",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1436123405000,
      "commitNameOld": "5844ab2d3460cdb94e16158e9fefb69344577950",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,42 @@\n     private DetailAST getAnnotationTarget(DetailAST ast) {\n         DetailAST targetAST \u003d null;\n         DetailAST parentAST \u003d ast.getParent();\n         if (parentAST !\u003d null) {\n             switch (parentAST.getType()) {\n                 case TokenTypes.MODIFIERS:\n                 case TokenTypes.ANNOTATIONS:\n                     parentAST \u003d parentAST.getParent();\n                     if (parentAST !\u003d null) {\n                         switch (parentAST.getType()) {\n                             case TokenTypes.ANNOTATION_DEF:\n                             case TokenTypes.PACKAGE_DEF:\n                             case TokenTypes.CLASS_DEF:\n                             case TokenTypes.INTERFACE_DEF:\n                             case TokenTypes.ENUM_DEF:\n                             case TokenTypes.ENUM_CONSTANT_DEF:\n                             case TokenTypes.CTOR_DEF:\n                             case TokenTypes.METHOD_DEF:\n                             case TokenTypes.PARAMETER_DEF:\n                             case TokenTypes.VARIABLE_DEF:\n+                            case TokenTypes.ANNOTATION_FIELD_DEF:\n+                            case TokenTypes.TYPE:\n+                            case TokenTypes.LITERAL_NEW:\n+                            case TokenTypes.LITERAL_THROWS:\n+                            case TokenTypes.TYPE_ARGUMENT:\n+                            case TokenTypes.IMPLEMENTS_CLAUSE:\n+                            case TokenTypes.DOT:\n                                 targetAST \u003d parentAST;\n                                 break;\n \n                             default:\n                                 // unexpected target type\n                         }\n                     }\n                     break;\n \n                 default:\n                     // unexpected container type\n             }\n         }\n         return targetAST;\n     }\n\\ No newline at end of file\n"
    },
    "7f65ac9c09d4e0ae5afa5b4709c7a8a136b6bd7f": {
      "type": "Yintroduced",
      "commitMessage": "PMD Rule:ExcessiveMethodLength Priority:3 Avoid really long methods . Issue #744\n",
      "commitDate": 1429635123000,
      "commitName": "7f65ac9c09d4e0ae5afa5b4709c7a8a136b6bd7f",
      "commitAuthor": "Roman Ivanov"
    }
  }
}