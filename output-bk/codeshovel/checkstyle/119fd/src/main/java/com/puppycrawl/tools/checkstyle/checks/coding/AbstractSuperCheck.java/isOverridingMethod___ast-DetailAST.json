{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AbstractSuperCheck.java",
  "functionName": "isOverridingMethod",
  "functionId": "isOverridingMethod___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java",
  "functionStartLine": 180,
  "functionEndLine": 196,
  "changeHistory": [
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
    "5a3f05ec8038daa674666bbaa82d59127aa74f92",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "c828939b0c6d493f45278eed00e2592e502e34f2",
    "3bd39984f24378e4b01148bd02423e3d04c0c851",
    "068a1b4533bbefbb78c51181ff0971fb92c1ef29",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "6125beffc437f970eae276b4a6542265c6547784",
    "bb52a25c6c5d9d6099713cac6fcacea9e0ec2bdd"
  ],
  "changeHistoryShort": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": "Ybodychange",
    "5a3f05ec8038daa674666bbaa82d59127aa74f92": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "c828939b0c6d493f45278eed00e2592e502e34f2": "Ybodychange",
    "3bd39984f24378e4b01148bd02423e3d04c0c851": "Ybodychange",
    "068a1b4533bbefbb78c51181ff0971fb92c1ef29": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "bb52a25c6c5d9d6099713cac6fcacea9e0ec2bdd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for modifiers",
      "commitDate": 1508986494000,
      "commitName": "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
      "commitAuthor": "rnveach",
      "commitDateOld": 1503206988000,
      "commitNameOld": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 66.89,
      "commitsBetweenForRepo": 208,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private boolean isOverridingMethod(DetailAST ast) {\n         boolean overridingMethod \u003d false;\n \n         if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF\n                 \u0026\u0026 !ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n             final DetailAST modifiersAST \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n \n             if (getMethodName().equals(name)\n-                    \u0026\u0026 !modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {\n+                    \u0026\u0026 modifiersAST.findFirstToken(TokenTypes.LITERAL_NATIVE) \u003d\u003d null) {\n                 final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n                 overridingMethod \u003d params.getChildCount() \u003d\u003d 0;\n             }\n         }\n         return overridingMethod;\n     }\n\\ No newline at end of file\n"
    },
    "5a3f05ec8038daa674666bbaa82d59127aa74f92": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violation fixed for AbstractSuperCheck\n",
      "commitDate": 1440741320000,
      "commitName": "5a3f05ec8038daa674666bbaa82d59127aa74f92",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440705239000,
      "commitNameOld": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.42,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n     private boolean isOverridingMethod(DetailAST ast) {\n-        if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n-            || ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n-            return false;\n+        boolean overridingMethod \u003d false;\n+\n+        if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF\n+                \u0026\u0026 !ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n+            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n+            final String name \u003d nameAST.getText();\n+            final DetailAST modifiersAST \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n+\n+            if (getMethodName().equals(name)\n+                    \u0026\u0026 !modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {\n+                final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n+                overridingMethod \u003d params.getChildCount() \u003d\u003d 0;\n+            }\n         }\n-        final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n-        final String name \u003d nameAST.getText();\n-        final DetailAST modifiersAST \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-        if (!getMethodName().equals(name)\n-                || modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {\n-            return false;\n-        }\n-        final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n-        return params.getChildCount() \u003d\u003d 0;\n+        return overridingMethod;\n     }\n\\ No newline at end of file\n"
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": 1440705239000,
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440677821000,
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private boolean isOverridingMethod(DetailAST ast) {\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n-            || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n+            || ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n             return false;\n         }\n         final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n         final DetailAST modifiersAST \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         if (!getMethodName().equals(name)\n                 || modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {\n             return false;\n         }\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n         return params.getChildCount() \u003d\u003d 0;\n     }\n\\ No newline at end of file\n"
    },
    "c828939b0c6d493f45278eed00e2592e502e34f2": {
      "type": "Ybodychange",
      "commitMessage": "Fix for SuperClone and SuperFinalize checks reporting violations on\nnative methods, #1367",
      "commitDate": 1437411854000,
      "commitName": "c828939b0c6d493f45278eed00e2592e502e34f2",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1437372580000,
      "commitNameOld": "3bd39984f24378e4b01148bd02423e3d04c0c851",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.45,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n     private boolean isOverridingMethod(DetailAST ast) {\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n             || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n             return false;\n         }\n         final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n-        if (!getMethodName().equals(name)) {\n+        final DetailAST modifiersAST \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n+        if (!getMethodName().equals(name)\n+                || modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {\n             return false;\n         }\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n         return params.getChildCount() \u003d\u003d 0;\n     }\n\\ No newline at end of file\n"
    },
    "3bd39984f24378e4b01148bd02423e3d04c0c851": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Fix for SuperClone and SuperFinalize checks reporting violations on\"\n\nThis reverts commit 068a1b4533bbefbb78c51181ff0971fb92c1ef29.\n",
      "commitDate": 1437372580000,
      "commitName": "3bd39984f24378e4b01148bd02423e3d04c0c851",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1437372502000,
      "commitNameOld": "068a1b4533bbefbb78c51181ff0971fb92c1ef29",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,13 @@\n     private boolean isOverridingMethod(DetailAST ast) {\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n             || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n             return false;\n         }\n         final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n-        final DetailAST modifiersAST \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-        if (!getMethodName().equals(name)\n-                || modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {\n+        if (!getMethodName().equals(name)) {\n             return false;\n         }\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n         return params.getChildCount() \u003d\u003d 0;\n     }\n\\ No newline at end of file\n"
    },
    "068a1b4533bbefbb78c51181ff0971fb92c1ef29": {
      "type": "Ybodychange",
      "commitMessage": "Fix for SuperClone and SuperFinalize checks reporting violations on\nnative methods, #1367",
      "commitDate": 1437372502000,
      "commitName": "068a1b4533bbefbb78c51181ff0971fb92c1ef29",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1437195084000,
      "commitNameOld": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.05,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n     private boolean isOverridingMethod(DetailAST ast) {\n         if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n             || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {\n             return false;\n         }\n         final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n-        if (!getMethodName().equals(name)) {\n+        final DetailAST modifiersAST \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n+        if (!getMethodName().equals(name)\n+                || modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {\n             return false;\n         }\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n         return params.getChildCount() \u003d\u003d 0;\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437367000,
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private boolean isOverridingMethod(DetailAST ast)\n     {\n-        if ((ast.getType() !\u003d TokenTypes.METHOD_DEF)\n+        if (ast.getType() !\u003d TokenTypes.METHOD_DEF\n             || ScopeUtils.inInterfaceOrAnnotationBlock(ast))\n         {\n             return false;\n         }\n         final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n         if (!getMethodName().equals(name)) {\n             return false;\n         }\n         final DetailAST params \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n-        return (params.getChildCount() \u003d\u003d 0);\n+        return params.getChildCount() \u003d\u003d 0;\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": 1096311350000,
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1074114639000,
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 256.91,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private boolean isOverridingMethod(DetailAST aAST)\n     {\n         if ((aAST.getType() !\u003d TokenTypes.METHOD_DEF)\n-            || ScopeUtils.inInterfaceBlock(aAST))\n+            || ScopeUtils.inInterfaceOrAnnotationBlock(aAST))\n         {\n             return false;\n         }\n         final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n         if (!getMethodName().equals(name)) {\n             return false;\n         }\n         final DetailAST params \u003d aAST.findFirstToken(TokenTypes.PARAMETERS);\n         return (params.getChildCount() \u003d\u003d 0);\n     }\n\\ No newline at end of file\n"
    },
    "bb52a25c6c5d9d6099713cac6fcacea9e0ec2bdd": {
      "type": "Yintroduced",
      "commitMessage": "added check that overriding finalize method calls super.finalize\n",
      "commitDate": 1057569450000,
      "commitName": "bb52a25c6c5d9d6099713cac6fcacea9e0ec2bdd",
      "commitAuthor": "Rick Giles"
    }
  }
}