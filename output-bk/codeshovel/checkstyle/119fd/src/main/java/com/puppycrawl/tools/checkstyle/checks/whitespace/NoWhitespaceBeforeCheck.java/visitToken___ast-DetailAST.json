{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "NoWhitespaceBeforeCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheck.java",
  "functionStartLine": 110,
  "functionEndLine": 128,
  "changeHistory": [
    "97669248fb2402e21cd372380a35d0e312c2a0e8",
    "208cf3d5b6b9b1544c547681f39fad17bc199728",
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
    "9ae0be5921780b18dd61d17c47b05de3c867838e",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "da2328d0f138c2d989056bc876f8698cc53bffe3",
    "e55435125ea57e96f0bf876dd13e78b0ae02cd52",
    "2e8126e99047befc39560342981b0b8e7cabea21",
    "10bae67ca1ba2de70a31317386178266d5396adf",
    "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b"
  ],
  "changeHistoryShort": {
    "97669248fb2402e21cd372380a35d0e312c2a0e8": "Ybodychange",
    "208cf3d5b6b9b1544c547681f39fad17bc199728": "Ybodychange",
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e": "Ybodychange",
    "9ae0be5921780b18dd61d17c47b05de3c867838e": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "da2328d0f138c2d989056bc876f8698cc53bffe3": "Ybodychange",
    "e55435125ea57e96f0bf876dd13e78b0ae02cd52": "Ybodychange",
    "2e8126e99047befc39560342981b0b8e7cabea21": "Yfilerename",
    "10bae67ca1ba2de70a31317386178266d5396adf": "Ybodychange",
    "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "97669248fb2402e21cd372380a35d0e312c2a0e8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5058: handle empty for loop conditions in NoWhitespaceBefore\n",
      "commitDate": 1504844664000,
      "commitName": "97669248fb2402e21cd372380a35d0e312c2a0e8",
      "commitAuthor": "Liam Miller-Cushon",
      "commitDateOld": 1503783215000,
      "commitNameOld": "208cf3d5b6b9b1544c547681f39fad17bc199728",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 12.29,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST ast) {\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         final int before \u003d ast.getColumnNo() - 1;\n \n         if ((before \u003d\u003d -1 || Character.isWhitespace(line.charAt(before)))\n-                \u0026\u0026 !isInEmptyForInitializer(ast)) {\n+                \u0026\u0026 !isInEmptyForInitializerOrCondition(ast)) {\n \n             boolean flag \u003d !allowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n             for (int i \u003d 0; !flag \u0026\u0026 i \u003c\u003d before - 1; i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                     break;\n                 }\n             }\n             if (flag) {\n                 log(ast.getLineNo(), before, MSG_KEY, ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "208cf3d5b6b9b1544c547681f39fad17bc199728": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5003: increased coverage of pitest-checks-whitespace to 98%\n",
      "commitDate": 1503783215000,
      "commitName": "208cf3d5b6b9b1544c547681f39fad17bc199728",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1492820457000,
      "commitNameOld": "c2e420713a743c6abffdf083101d04ec6d780a10",
      "commitAuthorOld": "Dmytro Kytsmen",
      "daysBetweenCommits": 126.88,
      "commitsBetweenForRepo": 540,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST ast) {\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         final int before \u003d ast.getColumnNo() - 1;\n \n-        if ((before \u003c 0 || Character.isWhitespace(line.charAt(before)))\n+        if ((before \u003d\u003d -1 || Character.isWhitespace(line.charAt(before)))\n                 \u0026\u0026 !isInEmptyForInitializer(ast)) {\n \n             boolean flag \u003d !allowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n-            for (int i \u003d 0; !flag \u0026\u0026 i \u003c before; i++) {\n+            for (int i \u003d 0; !flag \u0026\u0026 i \u003c\u003d before - 1; i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                     break;\n                 }\n             }\n             if (flag) {\n                 log(ast.getLineNo(), before, MSG_KEY, ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e": {
      "type": "Ybodychange",
      "commitMessage": "Pull #4102: changed loops to end execution early",
      "commitDate": 1491393573000,
      "commitName": "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
      "commitAuthor": "rnveach",
      "commitDateOld": 1486781310000,
      "commitNameOld": "c9fc6ba17df2a95a6565a1c57315703c2d937644",
      "commitAuthorOld": "Robert Painsi",
      "daysBetweenCommits": 53.38,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n     public void visitToken(DetailAST ast) {\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         final int before \u003d ast.getColumnNo() - 1;\n \n         if ((before \u003c 0 || Character.isWhitespace(line.charAt(before)))\n                 \u0026\u0026 !isInEmptyForInitializer(ast)) {\n \n             boolean flag \u003d !allowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n             for (int i \u003d 0; !flag \u0026\u0026 i \u003c before; i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n+                    break;\n                 }\n             }\n             if (flag) {\n                 log(ast.getLineNo(), before, MSG_KEY, ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "9ae0be5921780b18dd61d17c47b05de3c867838e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: Fixed CyclomaticComplexityCheck violation (partial)\n",
      "commitDate": 1440855671000,
      "commitName": "9ae0be5921780b18dd61d17c47b05de3c867838e",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1440827623000,
      "commitNameOld": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,19 @@\n     public void visitToken(DetailAST ast) {\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         final int before \u003d ast.getColumnNo() - 1;\n \n-        if (before \u003c 0 || Character.isWhitespace(line.charAt(before))) {\n-\n-            // empty FOR initializer?\n-            if (ast.getType() \u003d\u003d TokenTypes.SEMI) {\n-                final DetailAST sibling \u003d ast.getPreviousSibling();\n-                if (sibling !\u003d null\n-                        \u0026\u0026 sibling.getType() \u003d\u003d TokenTypes.FOR_INIT\n-                        \u0026\u0026 sibling.getChildCount() \u003d\u003d 0) {\n-                    return;\n-                }\n-            }\n+        if ((before \u003c 0 || Character.isWhitespace(line.charAt(before)))\n+                \u0026\u0026 !isInEmptyForInitializer(ast)) {\n \n             boolean flag \u003d !allowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n             for (int i \u003d 0; !flag \u0026\u0026 i \u003c before; i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(ast.getLineNo(), before, MSG_KEY, ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425602876000,
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     public void visitToken(DetailAST ast)\n     {\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         final int before \u003d ast.getColumnNo() - 1;\n \n-        if ((before \u003c 0) || Character.isWhitespace(line.charAt(before))) {\n+        if (before \u003c 0 || Character.isWhitespace(line.charAt(before))) {\n \n             // empty FOR initializer?\n             if (ast.getType() \u003d\u003d TokenTypes.SEMI) {\n                 final DetailAST sibling \u003d ast.getPreviousSibling();\n-                if ((sibling !\u003d null)\n-                        \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_INIT)\n-                        \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n+                if (sibling !\u003d null\n+                        \u0026\u0026 sibling.getType() \u003d\u003d TokenTypes.FOR_INIT\n+                        \u0026\u0026 sibling.getChildCount() \u003d\u003d 0)\n                 {\n                     return;\n                 }\n             }\n \n             boolean flag \u003d !allowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n-            for (int i \u003d 0; !flag \u0026\u0026 (i \u003c before); i++) {\n+            for (int i \u003d 0; !flag \u0026\u0026 i \u003c before; i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(ast.getLineNo(), before, MSG_KEY, ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, whitespace package, issue #537\n",
      "commitDate": 1424437365000,
      "commitName": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     public void visitToken(DetailAST ast)\n     {\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         final int before \u003d ast.getColumnNo() - 1;\n \n         if ((before \u003c 0) || Character.isWhitespace(line.charAt(before))) {\n \n             // empty FOR initializer?\n             if (ast.getType() \u003d\u003d TokenTypes.SEMI) {\n                 final DetailAST sibling \u003d ast.getPreviousSibling();\n                 if ((sibling !\u003d null)\n                         \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_INIT)\n                         \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n                 {\n                     return;\n                 }\n             }\n \n             boolean flag \u003d !allowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n             for (int i \u003d 0; !flag \u0026\u0026 (i \u003c before); i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n-                log(ast.getLineNo(), before, \"ws.preceded\", ast.getText());\n+                log(ast.getLineNo(), before, MSG_KEY, ast.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": 1421677248000,
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9": {
      "type": "Ybodychange",
      "commitMessage": "FileContents.getLines performance fix\n",
      "commitDate": 1414957696000,
      "commitName": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
      "commitAuthor": "sopov.ivan",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 243.1,
      "commitsBetweenForRepo": 222,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,30 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final String[] lines \u003d getLines();\n-        final String line \u003d lines[aAST.getLineNo() - 1];\n+        final String line \u003d getLine(aAST.getLineNo() - 1);\n         final int before \u003d aAST.getColumnNo() - 1;\n \n         if ((before \u003c 0) || Character.isWhitespace(line.charAt(before))) {\n \n             // empty FOR initializer?\n             if (aAST.getType() \u003d\u003d TokenTypes.SEMI) {\n                 final DetailAST sibling \u003d aAST.getPreviousSibling();\n                 if ((sibling !\u003d null)\n                         \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_INIT)\n                         \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n                 {\n                     return;\n                 }\n             }\n \n             boolean flag \u003d !mAllowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n             for (int i \u003d 0; !flag \u0026\u0026 (i \u003c before); i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(aAST.getLineNo(), before, \"ws.preceded\", aAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final String[] lines \u003d getLines();\n         final String line \u003d lines[aAST.getLineNo() - 1];\n         final int before \u003d aAST.getColumnNo() - 1;\n \n         if ((before \u003c 0) || Character.isWhitespace(line.charAt(before))) {\n \n             // empty FOR initializer?\n             if (aAST.getType() \u003d\u003d TokenTypes.SEMI) {\n                 final DetailAST sibling \u003d aAST.getPreviousSibling();\n                 if ((sibling !\u003d null)\n                         \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_INIT)\n                         \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n                 {\n                     return;\n                 }\n             }\n \n             boolean flag \u003d !mAllowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n-            for (int i \u003d 0; !flag \u0026\u0026 i \u003c before; i++) {\n+            for (int i \u003d 0; !flag \u0026\u0026 (i \u003c before); i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(aAST.getLineNo(), before, \"ws.preceded\", aAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "da2328d0f138c2d989056bc876f8698cc53bffe3": {
      "type": "Ybodychange",
      "commitMessage": "added new check EmptyForInitializerPad and changed logic in NoWhiteSpaceBefore and ParenPad to fix bug #895072\n",
      "commitDate": 1076844692000,
      "commitName": "da2328d0f138c2d989056bc876f8698cc53bffe3",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1074114639000,
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 31.6,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,31 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final String[] lines \u003d getLines();\n         final String line \u003d lines[aAST.getLineNo() - 1];\n         final int before \u003d aAST.getColumnNo() - 1;\n \n         if ((before \u003c 0) || Character.isWhitespace(line.charAt(before))) {\n+\n+            // empty FOR initializer?\n+            if (aAST.getType() \u003d\u003d TokenTypes.SEMI) {\n+                final DetailAST sibling \u003d aAST.getPreviousSibling();\n+                if ((sibling !\u003d null)\n+                        \u0026\u0026 (sibling.getType() \u003d\u003d TokenTypes.FOR_INIT)\n+                        \u0026\u0026 (sibling.getChildCount() \u003d\u003d 0))\n+                {\n+                    return;\n+                }\n+            }\n+\n             boolean flag \u003d !mAllowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n             for (int i \u003d 0; !flag \u0026\u0026 i \u003c before; i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(aAST.getLineNo(), before, \"ws.preceded\", aAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e55435125ea57e96f0bf876dd13e78b0ae02cd52": {
      "type": "Ybodychange",
      "commitMessage": "corrected misspelling of \"precede\", bug 744342\n",
      "commitDate": 1058178241000,
      "commitName": "e55435125ea57e96f0bf876dd13e78b0ae02cd52",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1055144900000,
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 35.11,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final String[] lines \u003d getLines();\n         final String line \u003d lines[aAST.getLineNo() - 1];\n         final int before \u003d aAST.getColumnNo() - 1;\n \n         if ((before \u003c 0) || Character.isWhitespace(line.charAt(before))) {\n             boolean flag \u003d !mAllowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n             for (int i \u003d 0; !flag \u0026\u0026 i \u003c before; i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n-                log(aAST.getLineNo(), before, \"ws.preceeded\", aAST.getText());\n+                log(aAST.getLineNo(), before, \"ws.preceded\", aAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "2e8126e99047befc39560342981b0b8e7cabea21": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Whitespace checks\n",
      "commitDate": 1054727729000,
      "commitName": "2e8126e99047befc39560342981b0b8e7cabea21",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054723367000,
      "commitNameOld": "3bd6412e39a141b980901f291391ff1bcc4a61f3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "10bae67ca1ba2de70a31317386178266d5396adf": {
      "type": "Ybodychange",
      "commitMessage": "removed unused code\n",
      "commitDate": 1036963281000,
      "commitName": "10bae67ca1ba2de70a31317386178266d5396adf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1036958071000,
      "commitNameOld": "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     public void visitToken(DetailAST aAST)\n     {\n                final String[] lines \u003d getLines();\n         final String line \u003d lines[aAST.getLineNo() - 1];\n         final int before \u003d aAST.getColumnNo() - 1;\n-        final int after \u003d aAST.getColumnNo() + aAST.getText().length();\n \n         if ((before \u003c 0) || Character.isWhitespace(line.charAt(before))) {\n             boolean flag \u003d !mAllowLineBreaks;\n             // verify all characters before \u0027.\u0027 are whitespace\n             for (int i \u003d 0; !flag \u0026\u0026 i \u003c before; i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(aAST.getLineNo(), before, \"ws.preceeded\", aAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b": {
      "type": "Yintroduced",
      "commitMessage": "no whitespace checks for unary operators\n",
      "commitDate": 1036958071000,
      "commitName": "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b",
      "commitAuthor": "Rick Giles"
    }
  }
}