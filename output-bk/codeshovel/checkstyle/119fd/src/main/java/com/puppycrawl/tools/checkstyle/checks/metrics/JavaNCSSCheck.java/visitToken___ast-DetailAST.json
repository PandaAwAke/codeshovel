{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavaNCSSCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
  "functionStartLine": 139,
  "functionEndLine": 156,
  "changeHistory": [
    "de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "06e8a4eaa00e548f52b2483864a31ba9defd0989",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "36c152edea29cb79e3130742098434a415e6eee4"
  ],
  "changeHistoryShort": {
    "de022d2434e58dd633fd50a7f9bb50565a8767b5": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "06e8a4eaa00e548f52b2483864a31ba9defd0989": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "36c152edea29cb79e3130742098434a415e6eee4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de022d2434e58dd633fd50a7f9bb50565a8767b5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3233: Resolve IntelijIdea inspection violations for java8 migration (#3434)\n\n",
      "commitDate": 1473337840000,
      "commitName": "de022d2434e58dd633fd50a7f9bb50565a8767b5",
      "commitAuthor": "Mariia Mykhailova",
      "commitDateOld": 1454680863000,
      "commitNameOld": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 215.94,
      "commitsBetweenForRepo": 461,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n     public void visitToken(DetailAST ast) {\n         final int tokenType \u003d ast.getType();\n \n         if (tokenType \u003d\u003d TokenTypes.CLASS_DEF\n             || tokenType \u003d\u003d TokenTypes.METHOD_DEF\n             || tokenType \u003d\u003d TokenTypes.CTOR_DEF\n             || tokenType \u003d\u003d TokenTypes.STATIC_INIT\n             || tokenType \u003d\u003d TokenTypes.INSTANCE_INIT) {\n             //add a counter for this class/method\n             counters.push(new Counter());\n         }\n \n         //check if token is countable\n         if (isCountable(ast)) {\n             //increment the stacked counters\n-            for (final Counter counter : counters) {\n-                counter.increment();\n-            }\n+            counters.forEach(Counter::increment);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439008721000,
      "commitNameOld": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST ast) {\n         final int tokenType \u003d ast.getType();\n \n-        if (TokenTypes.CLASS_DEF \u003d\u003d tokenType\n-            || TokenTypes.METHOD_DEF \u003d\u003d tokenType\n-            || TokenTypes.CTOR_DEF \u003d\u003d tokenType\n-            || TokenTypes.STATIC_INIT \u003d\u003d tokenType\n-            || TokenTypes.INSTANCE_INIT \u003d\u003d tokenType) {\n+        if (tokenType \u003d\u003d TokenTypes.CLASS_DEF\n+            || tokenType \u003d\u003d TokenTypes.METHOD_DEF\n+            || tokenType \u003d\u003d TokenTypes.CTOR_DEF\n+            || tokenType \u003d\u003d TokenTypes.STATIC_INIT\n+            || tokenType \u003d\u003d TokenTypes.INSTANCE_INIT) {\n             //add a counter for this class/method\n             counters.push(new Counter());\n         }\n \n         //check if token is countable\n         if (isCountable(ast)) {\n             //increment the stacked counters\n             for (final Counter counter : counters) {\n                 counter.increment();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": {
      "type": "Ybodychange",
      "commitMessage": "Rename variables with \u0027standard\u0027 names of unexpected types. #1555\n\nFixes `StandardVariableNames` inspection violations.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n* i, j, k, m, n - int\n* f - float\n* d - double\n* b - byte\n* c, ch - char\n* l - long\n* s, str - String\n",
      "commitDate": 1439008721000,
      "commitName": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439007161000,
      "commitNameOld": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST ast) {\n         final int tokenType \u003d ast.getType();\n \n         if (TokenTypes.CLASS_DEF \u003d\u003d tokenType\n             || TokenTypes.METHOD_DEF \u003d\u003d tokenType\n             || TokenTypes.CTOR_DEF \u003d\u003d tokenType\n             || TokenTypes.STATIC_INIT \u003d\u003d tokenType\n             || TokenTypes.INSTANCE_INIT \u003d\u003d tokenType) {\n             //add a counter for this class/method\n             counters.push(new Counter());\n         }\n \n         //check if token is countable\n         if (isCountable(ast)) {\n             //increment the stacked counters\n-            for (final Counter c : counters) {\n-                c.increment();\n+            for (final Counter counter : counters) {\n+                counter.increment();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void visitToken(DetailAST ast)\n     {\n         final int tokenType \u003d ast.getType();\n \n-        if ((TokenTypes.CLASS_DEF \u003d\u003d tokenType)\n-            || (TokenTypes.METHOD_DEF \u003d\u003d tokenType)\n-            || (TokenTypes.CTOR_DEF \u003d\u003d tokenType)\n-            || (TokenTypes.STATIC_INIT \u003d\u003d tokenType)\n-            || (TokenTypes.INSTANCE_INIT \u003d\u003d tokenType))\n+        if (TokenTypes.CLASS_DEF \u003d\u003d tokenType\n+            || TokenTypes.METHOD_DEF \u003d\u003d tokenType\n+            || TokenTypes.CTOR_DEF \u003d\u003d tokenType\n+            || TokenTypes.STATIC_INIT \u003d\u003d tokenType\n+            || TokenTypes.INSTANCE_INIT \u003d\u003d tokenType)\n         {\n             //add a counter for this class/method\n             counters.push(new Counter());\n         }\n \n         //check if token is countable\n         if (isCountable(ast)) {\n             //increment the stacked counters\n             for (final Counter c : counters) {\n                 c.increment();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, metrics, #512\n",
      "commitDate": 1421677646000,
      "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "06e8a4eaa00e548f52b2483864a31ba9defd0989": {
      "type": "Ybodychange",
      "commitMessage": "Simple implementation of a LIFO Stack that can be used instead of java.util.Vector which is synchronized. Will help performance.\n",
      "commitDate": 1209024589000,
      "commitName": "06e8a4eaa00e548f52b2483864a31ba9defd0989",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200296548000,
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 101.02,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final int tokenType \u003d aAST.getType();\n \n         if ((TokenTypes.CLASS_DEF \u003d\u003d tokenType)\n             || (TokenTypes.METHOD_DEF \u003d\u003d tokenType)\n             || (TokenTypes.CTOR_DEF \u003d\u003d tokenType)\n             || (TokenTypes.STATIC_INIT \u003d\u003d tokenType)\n             || (TokenTypes.INSTANCE_INIT \u003d\u003d tokenType))\n         {\n             //add a counter for this class/method\n             mCounters.push(new Counter());\n         }\n \n         //check if token is countable\n         if (isCountable(aAST)) {\n             //increment the stacked counters\n-            final int size \u003d mCounters.size();\n-            for (int i \u003d 0; i \u003c size; i++) {\n-                (mCounters.get(i)).increment();\n+            for (final Counter c : mCounters) {\n+                c.increment();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final int tokenType \u003d aAST.getType();\n \n         if ((TokenTypes.CLASS_DEF \u003d\u003d tokenType)\n             || (TokenTypes.METHOD_DEF \u003d\u003d tokenType)\n             || (TokenTypes.CTOR_DEF \u003d\u003d tokenType)\n             || (TokenTypes.STATIC_INIT \u003d\u003d tokenType)\n             || (TokenTypes.INSTANCE_INIT \u003d\u003d tokenType))\n         {\n             //add a counter for this class/method\n             mCounters.push(new Counter());\n         }\n \n         //check if token is countable\n         if (isCountable(aAST)) {\n             //increment the stacked counters\n             final int size \u003d mCounters.size();\n             for (int i \u003d 0; i \u003c size; i++) {\n-                ((Counter) mCounters.get(i)).increment();\n+                (mCounters.get(i)).increment();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152242806000,
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        int tokenType \u003d aAST.getType();\n+        final int tokenType \u003d aAST.getType();\n \n         if ((TokenTypes.CLASS_DEF \u003d\u003d tokenType)\n             || (TokenTypes.METHOD_DEF \u003d\u003d tokenType)\n             || (TokenTypes.CTOR_DEF \u003d\u003d tokenType)\n             || (TokenTypes.STATIC_INIT \u003d\u003d tokenType)\n             || (TokenTypes.INSTANCE_INIT \u003d\u003d tokenType))\n         {\n             //add a counter for this class/method\n             mCounters.push(new Counter());\n         }\n \n         //check if token is countable\n         if (isCountable(aAST)) {\n             //increment the stacked counters\n-            int size \u003d mCounters.size();\n+            final int size \u003d mCounters.size();\n             for (int i \u003d 0; i \u003c size; i++) {\n                 ((Counter) mCounters.get(i)).increment();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1137847382000,
      "commitNameOld": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 166.61,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void visitToken(DetailAST aAST)\n     {\n         int tokenType \u003d aAST.getType();\n \n-        if (TokenTypes.CLASS_DEF \u003d\u003d tokenType\n-            || TokenTypes.METHOD_DEF \u003d\u003d tokenType\n-            || TokenTypes.CTOR_DEF \u003d\u003d tokenType\n-            || TokenTypes.STATIC_INIT \u003d\u003d tokenType\n-            || TokenTypes.INSTANCE_INIT \u003d\u003d tokenType)\n+        if ((TokenTypes.CLASS_DEF \u003d\u003d tokenType)\n+            || (TokenTypes.METHOD_DEF \u003d\u003d tokenType)\n+            || (TokenTypes.CTOR_DEF \u003d\u003d tokenType)\n+            || (TokenTypes.STATIC_INIT \u003d\u003d tokenType)\n+            || (TokenTypes.INSTANCE_INIT \u003d\u003d tokenType))\n         {\n             //add a counter for this class/method\n             mCounters.push(new Counter());\n         }\n \n         //check if token is countable\n         if (isCountable(aAST)) {\n             //increment the stacked counters\n             int size \u003d mCounters.size();\n             for (int i \u003d 0; i \u003c size; i++) {\n                 ((Counter) mCounters.get(i)).increment();\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "36c152edea29cb79e3130742098434a415e6eee4": {
      "type": "Yintroduced",
      "commitMessage": "Added check for the ncss metric.\n",
      "commitDate": 1082881159000,
      "commitName": "36c152edea29cb79e3130742098434a415e6eee4",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}