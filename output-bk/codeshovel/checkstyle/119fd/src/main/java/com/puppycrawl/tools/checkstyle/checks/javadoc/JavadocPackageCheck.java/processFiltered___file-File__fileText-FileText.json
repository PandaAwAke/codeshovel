{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocPackageCheck.java",
  "functionName": "processFiltered",
  "functionId": "processFiltered___file-File__fileText-FileText",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
  "functionStartLine": 72,
  "functionEndLine": 97,
  "changeHistory": [
    "5d376284ef0c7b6cb292f206e52f948f3ada331d",
    "ff85e714498a63c4060121f0625be5c76b741a5a",
    "82979737c4201b4913ea30b9c9431e71783d1c02",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "2e4762f1716c8d12c9652aad68cb4558181bb60c",
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
    "f38d8abd42c3e824635e542e6031b3da1997c02e",
    "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960"
  ],
  "changeHistoryShort": {
    "5d376284ef0c7b6cb292f206e52f948f3ada331d": "Ymultichange(Yexceptionschange,Ybodychange)",
    "ff85e714498a63c4060121f0625be5c76b741a5a": "Ybodychange",
    "82979737c4201b4913ea30b9c9431e71783d1c02": "Yparameterchange",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "2e4762f1716c8d12c9652aad68cb4558181bb60c": "Ybodychange",
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": "Ybodychange",
    "f38d8abd42c3e824635e542e6031b3da1997c02e": "Yparameterchange",
    "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5d376284ef0c7b6cb292f206e52f948f3ada331d": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Issue #5127: Fixed NPE in JavadocPackageCheck when relative path is used to run checkstyle CLI\n",
      "commitDate": 1511461389000,
      "commitName": "5d376284ef0c7b6cb292f206e52f948f3ada331d",
      "commitAuthor": "Artem Dudkin",
      "subchanges": [
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "ff85e714498a63c4060121f0625be5c76b741a5a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4945: JavadocPackageCheck should be thread-safe\n",
      "commitDate": 1502976309000,
      "commitName": "ff85e714498a63c4060121f0625be5c76b741a5a",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": 1499372568000,
      "commitNameOld": "82979737c4201b4913ea30b9c9431e71783d1c02",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 41.71,
      "commitsBetweenForRepo": 207,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     protected void processFiltered(File file, FileText fileText) {\n         // Check if already processed directory\n         final File dir \u003d file.getParentFile();\n-        if (!directoriesChecked.contains(dir)) {\n-            directoriesChecked.add(dir);\n-\n+        final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n+        if (!isDirChecked) {\n             // Check for the preferred file.\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n \n             if (packageInfo.exists()) {\n                 if (packageHtml.exists()) {\n                     log(0, MSG_LEGACY_PACKAGE_HTML);\n                 }\n             }\n             else if (!allowLegacy || !packageHtml.exists()) {\n                 log(0, MSG_PACKAGE_INFO);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "82979737c4201b4913ea30b9c9431e71783d1c02": {
      "type": "Yparameterchange",
      "commitMessage": "Issue #3034: FileText should not extends AbstractList\n",
      "commitDate": 1499372568000,
      "commitName": "82979737c4201b4913ea30b9c9431e71783d1c02",
      "commitAuthor": "Timur",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 160.24,
      "commitsBetweenForRepo": 584,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-    protected void processFiltered(File file, List\u003cString\u003e lines) {\n+    protected void processFiltered(File file, FileText fileText) {\n         // Check if already processed directory\n         final File dir \u003d file.getParentFile();\n         if (!directoriesChecked.contains(dir)) {\n             directoriesChecked.add(dir);\n \n             // Check for the preferred file.\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n \n             if (packageInfo.exists()) {\n                 if (packageHtml.exists()) {\n                     log(0, MSG_LEGACY_PACKAGE_HTML);\n                 }\n             }\n             else if (!allowLegacy || !packageHtml.exists()) {\n                 log(0, MSG_PACKAGE_INFO);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": 1464356569000,
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 143.55,
      "commitsBetweenForRepo": 343,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n     protected void processFiltered(File file, List\u003cString\u003e lines) {\n         // Check if already processed directory\n         final File dir \u003d file.getParentFile();\n-        if (directoriesChecked.contains(dir)) {\n-            return;\n-        }\n-        directoriesChecked.add(dir);\n+        if (!directoriesChecked.contains(dir)) {\n+            directoriesChecked.add(dir);\n \n-        // Check for the preferred file.\n-        final File packageInfo \u003d new File(dir, \"package-info.java\");\n-        final File packageHtml \u003d new File(dir, \"package.html\");\n+            // Check for the preferred file.\n+            final File packageInfo \u003d new File(dir, \"package-info.java\");\n+            final File packageHtml \u003d new File(dir, \"package.html\");\n \n-        if (packageInfo.exists()) {\n-            if (packageHtml.exists()) {\n-                log(0, MSG_LEGACY_PACKAGE_HTML);\n+            if (packageInfo.exists()) {\n+                if (packageHtml.exists()) {\n+                    log(0, MSG_LEGACY_PACKAGE_HTML);\n+                }\n             }\n-        }\n-        else if (!allowLegacy || !packageHtml.exists()) {\n-            log(0, MSG_PACKAGE_INFO);\n+            else if (!allowLegacy || !packageHtml.exists()) {\n+                log(0, MSG_PACKAGE_INFO);\n+            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     protected void processFiltered(File file, List\u003cString\u003e lines)\n     {\n         // Check if already processed directory\n         final File dir \u003d file.getParentFile();\n         if (directoriesChecked.contains(dir)) {\n             return;\n         }\n         directoriesChecked.add(dir);\n \n         // Check for the preferred file.\n         final File packageInfo \u003d new File(dir, \"package-info.java\");\n         final File packageHtml \u003d new File(dir, \"package.html\");\n \n         if (packageInfo.exists()) {\n             if (packageHtml.exists()) {\n-                log(0, \"javadoc.legacyPackageHtml\");\n+                log(0, MSG_LEGACY_PACKAGE_HTML);\n             }\n         }\n         else if (!allowLegacy || !packageHtml.exists()) {\n-            log(0, \"javadoc.packageInfo\");\n+            log(0, MSG_PACKAGE_INFO);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "2e4762f1716c8d12c9652aad68cb4558181bb60c": {
      "type": "Ybodychange",
      "commitMessage": "consolidate charset handling.\n",
      "commitDate": 1226225983000,
      "commitName": "2e4762f1716c8d12c9652aad68cb4558181bb60c",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1226223447000,
      "commitNameOld": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n     protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n     {\n         // Check if already processed directory\n         final File dir \u003d aFile.getParentFile();\n         if (mDirectoriesChecked.contains(dir)) {\n             return;\n         }\n         mDirectoriesChecked.add(dir);\n-        \n+\n         // Check for the preferred file.\n         final File packageInfo \u003d new File(dir, \"package-info.java\");\n         final File packageHtml \u003d new File(dir, \"package.html\");\n \n         if (packageInfo.exists()) {\n             if (packageHtml.exists()) {\n                 log(0, \"javadoc.legacyPackageHtml\");\n             }\n-        }   \n-        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n         }\n-        else {\n+        else if (!mAllowLegacy || !packageHtml.exists()) {\n             log(0, \"javadoc.packageInfo\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "A large refactoring to move the functionality of open/reporting on files into Checker and out of FileSetCheck. The advantages are:\n\n- reduces the logic required in each implementation of FileSetCheck.\n\n- reduces, but not eliminates, the number of times a file is reported as being audited.\n\n- reduces the amount of times a file needs to be read in from the file system.\n\nThe motivation is the desire to move more checks to be purely FileSetCheck based, like the TabCharacter check.\n\nI still need to do some tidying up of the documentation, and make Checker support \"charset\".\n",
      "commitDate": 1226223447000,
      "commitName": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Yreturntypechange",
        "Ymodifierchange",
        "Ybodychange"
      ]
    },
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": {
      "type": "Ybodychange",
      "commitMessage": "Drinking the \"Google Collections\" Kool-Aid.\n\nI like the reduced duplication.\n",
      "commitDate": 1208867287000,
      "commitName": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200192438000,
      "commitNameOld": "5a7e221b757e91d49be1aea105eb4b839e653fbd",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 100.4,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     protected final Set\u003cFile\u003e getParentDirs(List\u003cFile\u003e aFiles)\n     {\n-        final Set\u003cFile\u003e directories \u003d new HashSet\u003cFile\u003e();\n+        final Set\u003cFile\u003e directories \u003d Sets.newHashSet();\n         for (File element : aFiles) {\n             final File f \u003d element.getAbsoluteFile();\n             if (f.getName().endsWith(\".java\")) {\n                 final File dir \u003d f.getParentFile();\n                 directories.add(dir); // duplicates are handled automatically\n             }\n         }\n         return directories;\n     }\n\\ No newline at end of file\n"
    },
    "f38d8abd42c3e824635e542e6031b3da1997c02e": {
      "type": "Yparameterchange",
      "commitMessage": "Removed a native array in favour of a List\u003cFile\u003e -- was it worth it??\n\nAdded @Override where possible -- did this as I got bitten by a subtle bug when making the first change. The @Override would have prevented it.\n",
      "commitDate": 1198131671000,
      "commitName": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1198039584000,
      "commitNameOld": "49216b21a1c5fbff3ad93102891abffcda06f4c9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n-    protected final Set\u003cFile\u003e getParentDirs(File[] aFiles)\n+    protected final Set\u003cFile\u003e getParentDirs(List\u003cFile\u003e aFiles)\n     {\n         final Set\u003cFile\u003e directories \u003d new HashSet\u003cFile\u003e();\n         for (File element : aFiles) {\n             final File f \u003d element.getAbsoluteFile();\n             if (f.getName().endsWith(\".java\")) {\n                 final File dir \u003d f.getParentFile();\n                 directories.add(dir); // duplicates are handled automatically\n             }\n         }\n         return directories;\n     }\n\\ No newline at end of file\n"
    },
    "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960": {
      "type": "Yintroduced",
      "commitMessage": "Implementation of a new JavadocPackageCheck - still need the test and the documentation.\n",
      "commitDate": 1198038103000,
      "commitName": "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960",
      "commitAuthor": "Oliver Burn"
    }
  }
}