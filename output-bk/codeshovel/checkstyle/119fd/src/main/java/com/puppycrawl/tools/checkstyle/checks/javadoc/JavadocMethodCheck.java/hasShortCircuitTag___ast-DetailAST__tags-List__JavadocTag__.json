{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "hasShortCircuitTag",
  "functionId": "hasShortCircuitTag___ast-DetailAST__tags-List__JavadocTag__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 517,
  "functionEndLine": 531,
  "changeHistory": [
    "ed5d4d98da5963b658eafaaa3aaee98ba989db65",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
    "9cff1673f1d42910c654e0af5365d68591f104f0",
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d",
    "0a72322796c28266f07df8af6f7e000aa9cf0e48"
  ],
  "changeHistoryShort": {
    "ed5d4d98da5963b658eafaaa3aaee98ba989db65": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": "Yparameterchange",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": "Ybodychange",
    "9cff1673f1d42910c654e0af5365d68591f104f0": "Ybodychange",
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d": "Ymultichange(Yparameterchange,Ybodychange)",
    "0a72322796c28266f07df8af6f7e000aa9cf0e48": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ed5d4d98da5963b658eafaaa3aaee98ba989db65": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: Enforce ReturnCount max\u003d1 in com.puppycrawl.tools.checkstyle.checks.javadoc\n",
      "commitDate": 1493089749000,
      "commitName": "ed5d4d98da5963b658eafaaa3aaee98ba989db65",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": 1491393573000,
      "commitNameOld": "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 19.63,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-    private boolean hasShortCircuitTag(final DetailAST ast,\n-            final List\u003cJavadocTag\u003e tags) {\n+    private boolean hasShortCircuitTag(final DetailAST ast, final List\u003cJavadocTag\u003e tags) {\n+        boolean result \u003d true;\n         // Check if it contains {@inheritDoc} tag\n-        if (tags.size() !\u003d 1\n-                || !tags.get(0).isInheritDocTag()) {\n-            return false;\n+        if (tags.size() \u003d\u003d 1\n+                \u0026\u0026 tags.get(0).isInheritDocTag()) {\n+            // Invalid if private, a constructor, or a static method\n+            if (!JavadocTagInfo.INHERIT_DOC.isValidOn(ast)) {\n+                log(ast, MSG_INVALID_INHERIT_DOC);\n+            }\n         }\n-\n-        // Invalid if private, a constructor, or a static method\n-        if (!JavadocTagInfo.INHERIT_DOC.isValidOn(ast)) {\n-            log(ast, MSG_INVALID_INHERIT_DOC);\n+        else {\n+            result \u003d false;\n         }\n-\n-        return true;\n+        return result;\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437366000,
      "commitNameOld": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private boolean hasShortCircuitTag(final DetailAST ast,\n             final List\u003cJavadocTag\u003e tags)\n     {\n         // Check if it contains {@inheritDoc} tag\n-        if ((tags.size() !\u003d 1)\n-                || !(tags.get(0)).isInheritDocTag())\n+        if (tags.size() !\u003d 1\n+                || !tags.get(0).isInheritDocTag())\n         {\n             return false;\n         }\n \n         // Invalid if private, a constructor, or a static method\n         if (!JavadocTagInfo.INHERIT_DOC.isValidOn(ast)) {\n             log(ast, MSG_INVALID_INHERIT_DOC);\n         }\n \n         return true;\n     }\n\\ No newline at end of file\n"
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private boolean hasShortCircuitTag(final DetailAST ast,\n             final List\u003cJavadocTag\u003e tags)\n     {\n         // Check if it contains {@inheritDoc} tag\n         if ((tags.size() !\u003d 1)\n                 || !(tags.get(0)).isInheritDocTag())\n         {\n             return false;\n         }\n \n         // Invalid if private, a constructor, or a static method\n         if (!JavadocTagInfo.INHERIT_DOC.isValidOn(ast)) {\n-            log(ast, \"javadoc.invalidInheritDoc\");\n+            log(ast, MSG_INVALID_INHERIT_DOC);\n         }\n \n         return true;\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": {
      "type": "Yparameterchange",
      "commitMessage": "poartial fix for #46 - Sonarqube found problems in Checkstyle\n",
      "commitDate": 1386263571000,
      "commitName": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1380946942000,
      "commitNameOld": "788f87df4db1368ee0563e1ba1199177618cc01f",
      "commitAuthorOld": "picomancer",
      "daysBetweenCommits": 61.54,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private boolean hasShortCircuitTag(final DetailAST aAST,\n-            final List\u003cJavadocTag\u003e aTags, final Scope aScope)\n+            final List\u003cJavadocTag\u003e aTags)\n     {\n         // Check if it contains {@inheritDoc} tag\n         if ((aTags.size() !\u003d 1)\n                 || !(aTags.get(0)).isInheritDocTag())\n         {\n             return false;\n         }\n \n         // Invalid if private, a constructor, or a static method\n         if (!JavadocTagInfo.INHERIT_DOC.isValidOn(aAST)) {\n             log(aAST, \"javadoc.invalidInheritDoc\");\n         }\n \n         return true;\n     }\n\\ No newline at end of file\n"
    },
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": {
      "type": "Ybodychange",
      "commitMessage": "record work on patch #2534038 from Travis for new annotation checks. Very good patch as usual from Travis. Shame on me for taking so long to apply it.\n",
      "commitDate": 1237805379000,
      "commitName": "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1237695418000,
      "commitNameOld": "216fcb79f9f5bbd05244364e926f261a90e697d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.27,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,17 @@\n     private boolean hasShortCircuitTag(final DetailAST aAST,\n             final List\u003cJavadocTag\u003e aTags, final Scope aScope)\n     {\n         // Check if it contains {@inheritDoc} tag\n         if ((aTags.size() !\u003d 1)\n                 || !(aTags.get(0)).isInheritDocTag())\n         {\n             return false;\n         }\n \n         // Invalid if private, a constructor, or a static method\n-        if ((aAST.getType() \u003d\u003d TokenTypes.CTOR_DEF)\n-                || (aScope \u003d\u003d Scope.PRIVATE)\n-                || (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF\n-                \u0026\u0026 aAST.branchContains(TokenTypes.LITERAL_STATIC)))\n-        {\n+        if (!JavadocTagInfo.INHERIT_DOC.isValidOn(aAST)) {\n             log(aAST, \"javadoc.invalidInheritDoc\");\n         }\n \n         return true;\n     }\n\\ No newline at end of file\n"
    },
    "9cff1673f1d42910c654e0af5365d68591f104f0": {
      "type": "Ybodychange",
      "commitMessage": "Enhanced JavadocMethod to be more restrictive on where {@inheritDoc} can be used. Also enhanced JavadocPackage  to ensure a package-info.java file contains a comment. Thanks to Travis Schneeberger for providing patch #2294029.\n",
      "commitDate": 1231647012000,
      "commitName": "9cff1673f1d42910c654e0af5365d68591f104f0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1221737656000,
      "commitNameOld": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 114.69,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n     private boolean hasShortCircuitTag(final DetailAST aAST,\n             final List\u003cJavadocTag\u003e aTags, final Scope aScope)\n     {\n         // Check if it contains {@inheritDoc} tag\n         if ((aTags.size() !\u003d 1)\n                 || !(aTags.get(0)).isInheritDocTag())\n         {\n             return false;\n         }\n \n-        // Invalid if private or a constructor\n+        // Invalid if private, a constructor, or a static method\n         if ((aAST.getType() \u003d\u003d TokenTypes.CTOR_DEF)\n-                || (aScope \u003d\u003d Scope.PRIVATE))\n+                || (aScope \u003d\u003d Scope.PRIVATE)\n+                || (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF\n+                \u0026\u0026 aAST.branchContains(TokenTypes.LITERAL_STATIC)))\n         {\n             log(aAST, \"javadoc.invalidInheritDoc\");\n         }\n \n         return true;\n     }\n\\ No newline at end of file\n"
    },
    "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": 1197694270000,
      "commitName": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "0a72322796c28266f07df8af6f7e000aa9cf0e48": {
      "type": "Yintroduced",
      "commitMessage": "Tighten up the allowed use of the {@inheritDoc} tag.\n",
      "commitDate": 1148305756000,
      "commitName": "0a72322796c28266f07df8af6f7e000aa9cf0e48",
      "commitAuthor": "Oliver Burn"
    }
  }
}