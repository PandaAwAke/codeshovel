{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "WriteTagCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java",
  "functionStartLine": 154,
  "functionEndLine": 165,
  "changeHistory": [
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "755eda4d684e71ea18bed69646e07140310b67fc",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "788b41973d5747c7b4699a853b62168cf0001df6",
    "96c668724bc05a11ceb031dda71efe1e9e69480d"
  ],
  "changeHistoryShort": {
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "755eda4d684e71ea18bed69646e07140310b67fc": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "788b41973d5747c7b4699a853b62168cf0001df6": "Ybodychange",
    "96c668724bc05a11ceb031dda71efe1e9e69480d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": 1453387259000,
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     public void visitToken(DetailAST ast) {\n         final FileContents contents \u003d getFileContents();\n         final int lineNo \u003d ast.getLineNo();\n         final TextBlock cmt \u003d\n             contents.getJavadocBefore(lineNo);\n         if (cmt \u003d\u003d null) {\n-            log(lineNo, MISSING_TAG, tag);\n+            log(lineNo, MSG_MISSING_TAG, tag);\n         }\n         else {\n             checkTag(lineNo, cmt.getText());\n         }\n     }\n\\ No newline at end of file\n"
    },
    "755eda4d684e71ea18bed69646e07140310b67fc": {
      "type": "Ybodychange",
      "commitMessage": "Reduce number of parameters in method. #1555\n\nFixes `ParametersPerMethod` inspection violation.\n\nDescription:\n\u003eReports methods with too many parameters. Methods with too many parameters can be a good sign that refactoring is necessary. Methods whose signatures are inherited from library classes are ignored by this inspection.\n",
      "commitDate": 1440159951000,
      "commitName": "755eda4d684e71ea18bed69646e07140310b67fc",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439886329000,
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 3.17,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n     public void visitToken(DetailAST ast) {\n         final FileContents contents \u003d getFileContents();\n         final int lineNo \u003d ast.getLineNo();\n         final TextBlock cmt \u003d\n             contents.getJavadocBefore(lineNo);\n         if (cmt \u003d\u003d null) {\n             log(lineNo, MISSING_TAG, tag);\n         }\n         else {\n-            checkTag(lineNo, cmt.getText(), tag, tagRE, tagFormatRE,\n-                tagFormat);\n+            checkTag(lineNo, cmt.getText());\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public void visitToken(DetailAST ast)\n     {\n         final FileContents contents \u003d getFileContents();\n         final int lineNo \u003d ast.getLineNo();\n         final TextBlock cmt \u003d\n             contents.getJavadocBefore(lineNo);\n         if (cmt \u003d\u003d null) {\n-            log(lineNo, \"type.missingTag\", tag);\n+            log(lineNo, MISSING_TAG, tag);\n         }\n         else {\n             checkTag(lineNo, cmt.getText(), tag, tagRE, tagFormatRE,\n                 tagFormat);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "788b41973d5747c7b4699a853b62168cf0001df6": {
      "type": "Ybodychange",
      "commitMessage": "Changes to make it possible to identify a module by an id, and then to\nsuppress messages based on the id. The motivation is to allow for finer\ngrained suppressions. For example, can enable multiple instances of the\nRegexp check, and suppress on the individual instance.\n",
      "commitDate": 1135859700000,
      "commitName": "788b41973d5747c7b4699a853b62168cf0001df6",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1135582079000,
      "commitNameOld": "96c668724bc05a11ceb031dda71efe1e9e69480d",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 3.21,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,14 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n-        final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n-        final Scope typeScope \u003d\n-            ScopeUtils.inInterfaceBlock(aAST) ? Scope.PUBLIC : declaredScope;\n         final FileContents contents \u003d getFileContents();\n         final int lineNo \u003d aAST.getLineNo();\n         final TextBlock cmt \u003d\n             contents.getJavadocBefore(lineNo);\n         if (cmt \u003d\u003d null) {\n             log(lineNo, \"type.missingTag\", mTag);\n         }\n         else {\n             checkTag(lineNo, cmt.getText(), mTag, mTagRE, mTagFormatRE,\n                 mTagFormat);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "96c668724bc05a11ceb031dda71efe1e9e69480d": {
      "type": "Yintroduced",
      "commitMessage": "Added WriteTag check which outputs a JavaDoc tag as information (patch 902110). Thanks to Daniel Grenner (dgrenner) for contribution.\n",
      "commitDate": 1135582079000,
      "commitName": "96c668724bc05a11ceb031dda71efe1e9e69480d",
      "commitAuthor": "Oleg Sukhodolsky"
    }
  }
}