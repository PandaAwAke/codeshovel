{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "MainFrame.java",
  "functionName": "openFile",
  "functionId": "openFile___sourceFile-File",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/MainFrame.java",
  "functionStartLine": 142,
  "functionEndLine": 153,
  "changeHistory": [
    "e02ffc5681a2919e3028bc2efac572698665f845",
    "1db8309b8611c601afce11fc33a6cb900204a582",
    "88072728fe0676b5d166c6f2251c1e1bd44b0137",
    "ee33ed57cd2c88888e9821a2047f587f07283d98",
    "c922d93b2fbb2c254c2d5236bb449193fb7d5747",
    "af4ecbf9b557808a05c7b84820b4ffd28990ee33",
    "e0887211663929e261910403eb769a093af83783",
    "26513d52336c42432ee21565b253297ba4174530",
    "f0c74333de00353b99ff1e9bfd1365ed4560794c",
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
    "3abc77ef3b19145625806f436ab2e9db1db08d2b",
    "5c9e55ae70af0456e1634211ccac54c40a92cfba",
    "1dacd5303bfe94b9d5476059b6a5676146d96708",
    "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "b3e7e97d30769de05a61c539db3b244fe1e342f4",
    "bbae2f92fd7f65e9a9a4dafcaf431829140e1030",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "ef791720f010bcc2a05da76cac8021085bc71155",
    "6cc11418ffa1c0be34411c0e4a296b748f2a0842",
    "73b6af97e4e2838ed52fb05a207be70ba4f17131",
    "87e4f786a5dfb21fd583c2b609f560a82a430fdf",
    "91875d1901eaf53e869e6179ceb6e45a3ab14e77"
  ],
  "changeHistoryShort": {
    "e02ffc5681a2919e3028bc2efac572698665f845": "Ybodychange",
    "1db8309b8611c601afce11fc33a6cb900204a582": "Ybodychange",
    "88072728fe0676b5d166c6f2251c1e1bd44b0137": "Ybodychange",
    "ee33ed57cd2c88888e9821a2047f587f07283d98": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "c922d93b2fbb2c254c2d5236bb449193fb7d5747": "Ybodychange",
    "af4ecbf9b557808a05c7b84820b4ffd28990ee33": "Ybodychange",
    "e0887211663929e261910403eb769a093af83783": "Ybodychange",
    "26513d52336c42432ee21565b253297ba4174530": "Ybodychange",
    "f0c74333de00353b99ff1e9bfd1365ed4560794c": "Ybodychange",
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f": "Ybodychange",
    "3abc77ef3b19145625806f436ab2e9db1db08d2b": "Ybodychange",
    "5c9e55ae70af0456e1634211ccac54c40a92cfba": "Ybodychange",
    "1dacd5303bfe94b9d5476059b6a5676146d96708": "Ybodychange",
    "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "b3e7e97d30769de05a61c539db3b244fe1e342f4": "Ybodychange",
    "bbae2f92fd7f65e9a9a4dafcaf431829140e1030": "Ybodychange",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": "Ybodychange",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "ef791720f010bcc2a05da76cac8021085bc71155": "Ybodychange",
    "6cc11418ffa1c0be34411c0e4a296b748f2a0842": "Ymodifierchange",
    "73b6af97e4e2838ed52fb05a207be70ba4f17131": "Ybodychange",
    "87e4f786a5dfb21fd583c2b609f560a82a430fdf": "Ybodychange",
    "91875d1901eaf53e869e6179ceb6e45a3ab14e77": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e02ffc5681a2919e3028bc2efac572698665f845": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2609: Refactor MainFrame\n",
      "commitDate": 1455022134000,
      "commitName": "e02ffc5681a2919e3028bc2efac572698665f845",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1454883718000,
      "commitNameOld": "1db8309b8611c601afce11fc33a6cb900204a582",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 1.6,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,12 @@\n     public void openFile(File sourceFile) {\n-        if (sourceFile !\u003d null) {\n-            try {\n-                setTitle(\"Checkstyle GUI : \" + sourceFile.getName());\n-                model.openFile(sourceFile);\n-                reloadAction.setEnabled(true);\n-                textArea.setText(model.getText());\n-                treeTable.setLinePositionMap(model.getLinesToPosition());\n-            }\n-            catch (final CheckstyleException ex) {\n-                JOptionPane.showMessageDialog(this, ex.getMessage());\n-            }\n+        try {\n+            model.openFile(sourceFile);\n+            setTitle(model.getTitle());\n+            reloadAction.setEnabled(model.isReloadActionEnabled());\n+            textArea.setText(model.getText());\n+            treeTable.setLinePositionMap(model.getLinesToPosition());\n+        }\n+        catch (final CheckstyleException ex) {\n+            JOptionPane.showMessageDialog(this, ex.getMessage());\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1db8309b8611c601afce11fc33a6cb900204a582": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2609: Refactor MainFrame\n",
      "commitDate": 1454883718000,
      "commitName": "1db8309b8611c601afce11fc33a6cb900204a582",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1454691279000,
      "commitNameOld": "88072728fe0676b5d166c6f2251c1e1bd44b0137",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 2.23,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,14 @@\n     public void openFile(File sourceFile) {\n         if (sourceFile !\u003d null) {\n             try {\n                 setTitle(\"Checkstyle GUI : \" + sourceFile.getName());\n-                final DetailAST parseTree \u003d model.parseFile(sourceFile);\n-                parseTreeTableModel.setParseTree(parseTree);\n+                model.openFile(sourceFile);\n                 reloadAction.setEnabled(true);\n-\n-                final String[] sourceLines \u003d model.getFileText(sourceFile).toLinesArray();\n-\n-                // clear for each new file\n-                model.clearLinesToPosition();\n-                // starts line counting at 1\n-                model.addLineToPosition(0);\n-\n-                // clean the text area before inserting the lines of the new file\n-                textArea.setText(\"\");\n-\n-                // insert the contents of the file to the text area\n-                for (final String element : sourceLines) {\n-                    model.addLineToPosition(textArea.getText().length());\n-                    textArea.append(element + System.lineSeparator());\n-                }\n-\n+                textArea.setText(model.getText());\n                 treeTable.setLinePositionMap(model.getLinesToPosition());\n             }\n-            catch (final IOException | ANTLRException ex) {\n-                JOptionPane.showMessageDialog(this,\n-                    \"Could not parse\" + sourceFile + \": \" + ex.getMessage());\n+            catch (final CheckstyleException ex) {\n+                JOptionPane.showMessageDialog(this, ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "88072728fe0676b5d166c6f2251c1e1bd44b0137": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2609: Refactor GUI\n",
      "commitDate": 1454691279000,
      "commitName": "88072728fe0676b5d166c6f2251c1e1bd44b0137",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 31.69,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void openFile(File sourceFile) {\n         if (sourceFile !\u003d null) {\n             try {\n-                setTitle(\"Checkstyle : \" + sourceFile.getName());\n+                setTitle(\"Checkstyle GUI : \" + sourceFile.getName());\n                 final DetailAST parseTree \u003d model.parseFile(sourceFile);\n                 parseTreeTableModel.setParseTree(parseTree);\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d model.getFileText(sourceFile).toLinesArray();\n \n                 // clear for each new file\n                 model.clearLinesToPosition();\n                 // starts line counting at 1\n                 model.addLineToPosition(0);\n \n                 // clean the text area before inserting the lines of the new file\n                 textArea.setText(\"\");\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     model.addLineToPosition(textArea.getText().length());\n                     textArea.append(element + System.lineSeparator());\n                 }\n \n                 treeTable.setLinePositionMap(model.getLinesToPosition());\n             }\n             catch (final IOException | ANTLRException ex) {\n                 JOptionPane.showMessageDialog(this,\n                     \"Could not parse\" + sourceFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ee33ed57cd2c88888e9821a2047f587f07283d98": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "Issue #2609: Refactor GUI package\n",
      "commitDate": 1451812818000,
      "commitName": "ee33ed57cd2c88888e9821a2047f587f07283d98",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        "Ymovefromfile",
        "Ybodychange",
        "Yparameterchange"
      ]
    },
    "c922d93b2fbb2c254c2d5236bb449193fb7d5747": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2609: Repair CodeSelector in GUI\n",
      "commitDate": 1450277290000,
      "commitName": "c922d93b2fbb2c254c2d5236bb449193fb7d5747",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1449581945000,
      "commitNameOld": "af4ecbf9b557808a05c7b84820b4ffd28990ee33",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 8.05,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,42 @@\n     public void openFile(File file, final Component parent) {\n         if (file !\u003d null) {\n             try {\n                 Main.getFrame().setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 parseTreeTableModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n                 clearLinesToPosition();\n                 // starts line counting at 1\n                 addLineToPosition(0);\n \n                 //clean the text area before inserting the lines of the new file\n                 if (!textArea.getText().isEmpty()) {\n                     textArea.replaceRange(\"\", 0, textArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     addLineToPosition(textArea.getText().length());\n                     textArea.append(element + System.lineSeparator());\n                 }\n \n                 // move back to the top of the file\n                 textArea.moveCaretPosition(0);\n+                treeTable.setLinePositionMap(linesToPosition);\n             }\n             catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n                         \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "af4ecbf9b557808a05c7b84820b4ffd28990ee33": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2609: Drop abstract class and interface in gui package\n",
      "commitDate": 1449581945000,
      "commitName": "af4ecbf9b557808a05c7b84820b4ffd28990ee33",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1447886435000,
      "commitNameOld": "17fe0633fdc7ecf2a34171c1f103c0eca1fead4a",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 19.62,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n     public void openFile(File file, final Component parent) {\n         if (file !\u003d null) {\n             try {\n                 Main.getFrame().setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n-                parseTreeModel.setParseTree(parseTree);\n+                parseTreeTableModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n                 clearLinesToPosition();\n                 // starts line counting at 1\n                 addLineToPosition(0);\n \n                 //clean the text area before inserting the lines of the new file\n                 if (!textArea.getText().isEmpty()) {\n                     textArea.replaceRange(\"\", 0, textArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     addLineToPosition(textArea.getText().length());\n                     textArea.append(element + System.lineSeparator());\n                 }\n \n                 // move back to the top of the file\n                 textArea.moveCaretPosition(0);\n             }\n             catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n                         \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e0887211663929e261910403eb769a093af83783": {
      "type": "Ybodychange",
      "commitMessage": "Fixes logic bug in gui ParseTreeInfoPanel making linesToPositions assign\nlines to inappropriate positions\n",
      "commitDate": 1440784146000,
      "commitName": "e0887211663929e261910403eb769a093af83783",
      "commitAuthor": "liscju",
      "commitDateOld": 1440705174000,
      "commitNameOld": "8142c804e90f6d24a3a5db736f3f1f576766a9a5",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,41 @@\n     public void openFile(File file, final Component parent) {\n         if (file !\u003d null) {\n             try {\n                 Main.getFrame().setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 parseTreeModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n                 clearLinesToPosition();\n                 // starts line counting at 1\n                 addLineToPosition(0);\n-                // insert the contents of the file to the text area\n-                for (String element : sourceLines) {\n-                    addLineToPosition(textArea.getText().length());\n-                    textArea.append(element + System.lineSeparator());\n-                }\n \n                 //clean the text area before inserting the lines of the new file\n                 if (!textArea.getText().isEmpty()) {\n                     textArea.replaceRange(\"\", 0, textArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n+                    addLineToPosition(textArea.getText().length());\n                     textArea.append(element + System.lineSeparator());\n                 }\n \n                 // move back to the top of the file\n                 textArea.moveCaretPosition(0);\n             }\n             catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n                         \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "26513d52336c42432ee21565b253297ba4174530": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations partial fix\n",
      "commitDate": 1440505228000,
      "commitName": "26513d52336c42432ee21565b253297ba4174530",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440498091000,
      "commitNameOld": "859c809b0562032ab6a24956d20a28e1ff6431dc",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void openFile(File file, final Component parent) {\n         if (file !\u003d null) {\n             try {\n                 Main.getFrame().setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 parseTreeModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n                 clearLinesToPosition();\n                 // starts line counting at 1\n                 addLineToPosition(0);\n                 // insert the contents of the file to the text area\n                 for (String element : sourceLines) {\n                     addLineToPosition(textArea.getText().length());\n-                    textArea.append(element + \"\\n\");\n+                    textArea.append(element + System.lineSeparator());\n                 }\n \n                 //clean the text area before inserting the lines of the new file\n                 if (!textArea.getText().isEmpty()) {\n                     textArea.replaceRange(\"\", 0, textArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n-                    textArea.append(element + \"\\n\");\n+                    textArea.append(element + System.lineSeparator());\n                 }\n \n                 // move back to the top of the file\n                 textArea.moveCaretPosition(0);\n             }\n             catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n                         \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f0c74333de00353b99ff1e9bfd1365ed4560794c": {
      "type": "Ybodychange",
      "commitMessage": "Fix UnsupportedOperationException in GUI. #1718\n",
      "commitDate": 1439782998000,
      "commitName": "f0c74333de00353b99ff1e9bfd1365ed4560794c",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439560811000,
      "commitNameOld": "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 2.57,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void openFile(File file, final Component parent) {\n         if (file !\u003d null) {\n             try {\n                 Main.getFrame().setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 parseTreeModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n-                getLinesToPosition().clear();\n+                clearLinesToPosition();\n                 // starts line counting at 1\n-                getLinesToPosition().add(0);\n+                addLineToPosition(0);\n                 // insert the contents of the file to the text area\n                 for (String element : sourceLines) {\n-                    getLinesToPosition().add(textArea.getText().length());\n+                    addLineToPosition(textArea.getText().length());\n                     textArea.append(element + \"\\n\");\n                 }\n \n                 //clean the text area before inserting the lines of the new file\n                 if (!textArea.getText().isEmpty()) {\n                     textArea.replaceRange(\"\", 0, textArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     textArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 textArea.moveCaretPosition(0);\n             }\n             catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n                         \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MemberName and MethodName violations fixed\n",
      "commitDate": 1439560811000,
      "commitName": "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439437871000,
      "commitNameOld": "29f945e338d6cd9d6382312b54965be2976a5d2a",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 1.42,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void openFile(File file, final Component parent) {\n         if (file !\u003d null) {\n             try {\n                 Main.getFrame().setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 parseTreeModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n-                getLines2position().clear();\n+                getLinesToPosition().clear();\n                 // starts line counting at 1\n-                getLines2position().add(0);\n+                getLinesToPosition().add(0);\n                 // insert the contents of the file to the text area\n                 for (String element : sourceLines) {\n-                    getLines2position().add(jTextArea.getText().length());\n-                    jTextArea.append(element + \"\\n\");\n+                    getLinesToPosition().add(textArea.getText().length());\n+                    textArea.append(element + \"\\n\");\n                 }\n \n                 //clean the text area before inserting the lines of the new file\n-                if (!jTextArea.getText().isEmpty()) {\n-                    jTextArea.replaceRange(\"\", 0, jTextArea.getText()\n+                if (!textArea.getText().isEmpty()) {\n+                    textArea.replaceRange(\"\", 0, textArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n-                    jTextArea.append(element + \"\\n\");\n+                    textArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n-                jTextArea.moveCaretPosition(0);\n+                textArea.moveCaretPosition(0);\n             }\n             catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n                         \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3abc77ef3b19145625806f436ab2e9db1db08d2b": {
      "type": "Ybodychange",
      "commitMessage": "Hide package-visible instance fields. #1555\n\nFixes `PackageVisibleField` inspection violation.\n\nDescription:\n\u003eReports package-visible instance variables. Constants (i.e. variables marked static and final) are not reported.\n",
      "commitDate": 1439085324000,
      "commitName": "3abc77ef3b19145625806f436ab2e9db1db08d2b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439011061000,
      "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void openFile(File file, final Component parent) {\n         if (file !\u003d null) {\n             try {\n-                Main.frame.setTitle(\"Checkstyle : \" + file.getName());\n+                Main.getFrame().setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 parseTreeModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n                  getLines2position().clear();\n                  // starts line counting at 1\n                  getLines2position().add(0);\n                  // insert the contents of the file to the text area\n                  for (String element : sourceLines) {\n                    getLines2position().add(jTextArea.getText().length());\n                    jTextArea.append(element + \"\\n\");\n                  }\n \n                 //clean the text area before inserting the lines of the new file\n                 if (!jTextArea.getText().isEmpty()) {\n                     jTextArea.replaceRange(\"\", 0, jTextArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     jTextArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 jTextArea.moveCaretPosition(0);\n             }\n             catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n                         \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "5c9e55ae70af0456e1634211ccac54c40a92cfba": {
      "type": "Ybodychange",
      "commitMessage": "Use .isEmpty() method instead of comparisons to 0. #1538\n",
      "commitDate": 1438566537000,
      "commitName": "5c9e55ae70af0456e1634211ccac54c40a92cfba",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566092000,
      "commitNameOld": "fd794d428cc0854ddd4d416f0208d49f1ee9cbe1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void openFile(File file, final Component parent) {\n         if (file !\u003d null) {\n             try {\n                 Main.frame.setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 parseTreeModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n                  getLines2position().clear();\n                  // starts line counting at 1\n                  getLines2position().add(0);\n                  // insert the contents of the file to the text area\n                  for (String element : sourceLines) {\n                    getLines2position().add(jTextArea.getText().length());\n                    jTextArea.append(element + \"\\n\");\n                  }\n \n                 //clean the text area before inserting the lines of the new file\n-                if (jTextArea.getText().length() !\u003d 0) {\n+                if (!jTextArea.getText().isEmpty()) {\n                     jTextArea.replaceRange(\"\", 0, jTextArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     jTextArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 jTextArea.moveCaretPosition(0);\n             }\n             catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n                         \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1dacd5303bfe94b9d5476059b6a5676146d96708": {
      "type": "Ybodychange",
      "commitMessage": "Merged catch blocks into one where possible\n\nPull #825\n",
      "commitDate": 1427233706000,
      "commitName": "1dacd5303bfe94b9d5476059b6a5676146d96708",
      "commitAuthor": "Damian Szczepanik",
      "commitDateOld": 1426023398000,
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 14.01,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,47 @@\n     public void openFile(File file, final Component parent)\n     {\n         if (file !\u003d null) {\n             try {\n                 Main.frame.setTitle(\"Checkstyle : \" + file.getName());\n                 final FileText text \u003d new FileText(file.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 parseTreeModel.setParseTree(parseTree);\n                 currentFile \u003d file;\n                 lastDirectory \u003d file.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n \n                 // clear for each new file\n                  getLines2position().clear();\n                  // starts line counting at 1\n                  getLines2position().add(0);\n                  // insert the contents of the file to the text area\n                  for (String element : sourceLines)\n                  {\n                    getLines2position().add(jTextArea.getText().length());\n                    jTextArea.append(element + \"\\n\");\n                  }\n \n                 //clean the text area before inserting the lines of the new file\n                 if (jTextArea.getText().length() !\u003d 0) {\n                     jTextArea.replaceRange(\"\", 0, jTextArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     jTextArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 jTextArea.moveCaretPosition(0);\n             }\n-            catch (final IOException ex) {\n+            catch (final IOException | ANTLRException ex) {\n                 showErrorDialog(\n                         parent,\n-                        \"Could not open \" + file + \": \" + ex.getMessage());\n-            }\n-            catch (final ANTLRException ex) {\n-                showErrorDialog(\n-                        parent,\n-                        \"Could not parse \" + file + \": \" + ex.getMessage());\n+                        \"Could not parse\" + file + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, gui, #512\n",
      "commitDate": 1421677662000,
      "commitName": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "b3e7e97d30769de05a61c539db3b244fe1e342f4": {
      "type": "Ybodychange",
      "commitMessage": "Patch# 3199838: selecting a node in the GUI moves the code pane to the corresponding line. Very nice\n",
      "commitDate": 1334917332000,
      "commitName": "b3e7e97d30769de05a61c539db3b244fe1e342f4",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1286447512000,
      "commitNameOld": "bbae2f92fd7f65e9a9a4dafcaf431829140e1030",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 560.99,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,52 @@\n     public void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n                 Main.frame.setTitle(\"Checkstyle : \" + aFile.getName());\n                 final FileText text \u003d new FileText(aFile.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 mParseTreeModel.setParseTree(parseTree);\n                 mCurrentFile \u003d aFile;\n                 mLastDirectory \u003d aFile.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n+\n+                // clear for each new file\n+                 getLines2position().clear();\n+                 // starts line counting at 1\n+                 getLines2position().add(0);\n+                 // insert the contents of the file to the text area\n+                 for (String element : sourceLines)\n+                 {\n+                   getLines2position().add(mJTextArea.getText().length());\n+                   mJTextArea.append(element + \"\\n\");\n+                 }\n+\n                 //clean the text area before inserting the lines of the new file\n                 if (mJTextArea.getText().length() !\u003d 0) {\n                     mJTextArea.replaceRange(\"\", 0, mJTextArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     mJTextArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 mJTextArea.moveCaretPosition(0);\n             }\n             catch (final IOException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n             catch (final ANTLRException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "bbae2f92fd7f65e9a9a4dafcaf431829140e1030": {
      "type": "Ybodychange",
      "commitMessage": "general clean up\n",
      "commitDate": 1286447512000,
      "commitName": "bbae2f92fd7f65e9a9a4dafcaf431829140e1030",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1286446563000,
      "commitNameOld": "31c8b8561a880f91735349da8afde60fd6e4c34f",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n                 Main.frame.setTitle(\"Checkstyle : \" + aFile.getName());\n                 final FileText text \u003d new FileText(aFile.getAbsoluteFile(),\n                                                    getEncoding());\n                 final DetailAST parseTree \u003d parseFile(text);\n                 mParseTreeModel.setParseTree(parseTree);\n                 mCurrentFile \u003d aFile;\n                 mLastDirectory \u003d aFile.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d text.toLinesArray();\n                 //clean the text area before inserting the lines of the new file\n                 if (mJTextArea.getText().length() !\u003d 0) {\n                     mJTextArea.replaceRange(\"\", 0, mJTextArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n-                for (String element : sourceLines) {\n+                for (final String element : sourceLines) {\n                     mJTextArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 mJTextArea.moveCaretPosition(0);\n             }\n             catch (final IOException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n             catch (final ANTLRException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": {
      "type": "Ybodychange",
      "commitMessage": "Apply patch #2783226 that uses FileText as an implementation for\nList\u003cString\u003e to pass lines around\n",
      "commitDate": 1277730133000,
      "commitName": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1198150614000,
      "commitNameOld": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 921.06,
      "commitsBetweenForRepo": 188,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,40 @@\n     public void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n                 Main.frame.setTitle(\"Checkstyle : \" + aFile.getName());\n-                final DetailAST parseTree \u003d parseFile(aFile.getAbsolutePath());\n+                final FileText text \u003d new FileText(aFile.getAbsoluteFile(),\n+                                                   getEncoding());\n+                final DetailAST parseTree \u003d parseFile(text);\n                 mParseTreeModel.setParseTree(parseTree);\n                 mCurrentFile \u003d aFile;\n                 mLastDirectory \u003d aFile.getParentFile();\n                 reloadAction.setEnabled(true);\n \n-                final String[] sourceLines \u003d Utils.getLines(aFile.getAbsolutePath());\n+                final String[] sourceLines \u003d text.toLinesArray();\n                 //clean the text area before inserting the lines of the new file\n                 if (mJTextArea.getText().length() !\u003d 0) {\n                     mJTextArea.replaceRange(\"\", 0, mJTextArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (String element : sourceLines) {\n                     mJTextArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 mJTextArea.moveCaretPosition(0);\n             }\n             catch (final IOException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n             catch (final ANTLRException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": {
      "type": "Ybodychange",
      "commitMessage": "Use the new syntactic sugar \"for loop\".\n\nEnd of the cosmetic changes.\n",
      "commitDate": 1197714527000,
      "commitName": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152243856000,
      "commitNameOld": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 526.28,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     public void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n                 Main.frame.setTitle(\"Checkstyle : \" + aFile.getName());\n                 final DetailAST parseTree \u003d parseFile(aFile.getAbsolutePath());\n                 mParseTreeModel.setParseTree(parseTree);\n                 mCurrentFile \u003d aFile;\n                 mLastDirectory \u003d aFile.getParentFile();\n                 reloadAction.setEnabled(true);\n \n                 final String[] sourceLines \u003d Utils.getLines(aFile.getAbsolutePath());\n                 //clean the text area before inserting the lines of the new file\n                 if (mJTextArea.getText().length() !\u003d 0) {\n                     mJTextArea.replaceRange(\"\", 0, mJTextArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n-                for (int i \u003d 0; i \u003c sourceLines.length; i++) {\n-                    mJTextArea.append(sourceLines[i] + \"\\n\");\n+                for (String element : sourceLines) {\n+                    mJTextArea.append(element + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 mJTextArea.moveCaretPosition(0);\n             }\n             catch (final IOException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n             catch (final ANTLRException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152242806000,
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     public void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n                 Main.frame.setTitle(\"Checkstyle : \" + aFile.getName());\n                 final DetailAST parseTree \u003d parseFile(aFile.getAbsolutePath());\n                 mParseTreeModel.setParseTree(parseTree);\n                 mCurrentFile \u003d aFile;\n                 mLastDirectory \u003d aFile.getParentFile();\n                 reloadAction.setEnabled(true);\n \n-                String[] sourceLines \u003d Utils.getLines(aFile.getAbsolutePath());\n+                final String[] sourceLines \u003d Utils.getLines(aFile.getAbsolutePath());\n                 //clean the text area before inserting the lines of the new file\n                 if (mJTextArea.getText().length() !\u003d 0) {\n                     mJTextArea.replaceRange(\"\", 0, mJTextArea.getText()\n                             .length());\n                 }\n \n                 // insert the contents of the file to the text area\n                 for (int i \u003d 0; i \u003c sourceLines.length; i++) {\n                     mJTextArea.append(sourceLines[i] + \"\\n\");\n                 }\n \n                 // move back to the top of the file\n                 mJTextArea.moveCaretPosition(0);\n             }\n-            catch (IOException ex) {\n+            catch (final IOException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n-            catch (ANTLRException ex) {\n+            catch (final ANTLRException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ef791720f010bcc2a05da76cac8021085bc71155": {
      "type": "Ybodychange",
      "commitMessage": "Patch to add a TextArea to the GUI.\n",
      "commitDate": 1151841139000,
      "commitName": "ef791720f010bcc2a05da76cac8021085bc71155",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1091377775000,
      "commitNameOld": "6cc11418ffa1c0be34411c0e4a296b748f2a0842",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 699.81,
      "commitsBetweenForRepo": 337,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,38 @@\n     public void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n-                DetailAST parseTree \u003d parseFile(aFile.getAbsolutePath());\n+                Main.frame.setTitle(\"Checkstyle : \" + aFile.getName());\n+                final DetailAST parseTree \u003d parseFile(aFile.getAbsolutePath());\n                 mParseTreeModel.setParseTree(parseTree);\n                 mCurrentFile \u003d aFile;\n                 mLastDirectory \u003d aFile.getParentFile();\n                 reloadAction.setEnabled(true);\n+\n+                String[] sourceLines \u003d Utils.getLines(aFile.getAbsolutePath());\n+                //clean the text area before inserting the lines of the new file\n+                if (mJTextArea.getText().length() !\u003d 0) {\n+                    mJTextArea.replaceRange(\"\", 0, mJTextArea.getText()\n+                            .length());\n+                }\n+\n+                // insert the contents of the file to the text area\n+                for (int i \u003d 0; i \u003c sourceLines.length; i++) {\n+                    mJTextArea.append(sourceLines[i] + \"\\n\");\n+                }\n+\n+                // move back to the top of the file\n+                mJTextArea.moveCaretPosition(0);\n             }\n             catch (IOException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n             catch (ANTLRException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "6cc11418ffa1c0be34411c0e4a296b748f2a0842": {
      "type": "Ymodifierchange",
      "commitMessage": "com.puppycrawl.tools.checkstyle.gui.Main accepts an optional file name in the command line (request 1000102)\n",
      "commitDate": 1091377775000,
      "commitName": "6cc11418ffa1c0be34411c0e4a296b748f2a0842",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1075019819000,
      "commitNameOld": "8150d69c428093246eda2b83e3bc386661bf3646",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 189.33,
      "commitsBetweenForRepo": 116,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-    private void openFile(File aFile, final Component aParent)\n+    public void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n                 DetailAST parseTree \u003d parseFile(aFile.getAbsolutePath());\n                 mParseTreeModel.setParseTree(parseTree);\n                 mCurrentFile \u003d aFile;\n                 mLastDirectory \u003d aFile.getParentFile();\n                 reloadAction.setEnabled(true);\n             }\n             catch (IOException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n             catch (ANTLRException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "73b6af97e4e2838ed52fb05a207be70ba4f17131": {
      "type": "Ybodychange",
      "commitMessage": "Enhancements by Dale King, RFE 740545\n",
      "commitDate": 1053447812000,
      "commitName": "73b6af97e4e2838ed52fb05a207be70ba4f17131",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1037700505000,
      "commitNameOld": "a49d4e972a6bfd26e73e42337ff75d50b4df8959",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 182.26,
      "commitsBetweenForRepo": 613,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n     private void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n                 DetailAST parseTree \u003d parseFile(aFile.getAbsolutePath());\n                 mParseTreeModel.setParseTree(parseTree);\n+                mCurrentFile \u003d aFile;\n+                mLastDirectory \u003d aFile.getParentFile();\n+                reloadAction.setEnabled(true);\n             }\n             catch (IOException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n             catch (ANTLRException ex) {\n                 showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "87e4f786a5dfb21fd583c2b609f560a82a430fdf": {
      "type": "Ybodychange",
      "commitMessage": "Incorporated Rick\u0027s cleanup\n",
      "commitDate": 1035529077000,
      "commitName": "87e4f786a5dfb21fd583c2b609f560a82a430fdf",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1035481881000,
      "commitNameOld": "91875d1901eaf53e869e6179ceb6e45a3ab14e77",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.55,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private void openFile(File aFile, final Component aParent)\n     {\n         if (aFile !\u003d null) {\n             try {\n                 DetailAST parseTree \u003d parseFile(aFile.getAbsolutePath());\n                 mParseTreeModel.setParseTree(parseTree);\n             }\n             catch (IOException ex) {\n-                JOptionPane.showMessageDialog(\n+                showErrorDialog(\n                         aParent,\n                         \"Could not open \" + aFile + \": \" + ex.getMessage());\n             }\n             catch (ANTLRException ex) {\n-                JOptionPane.showMessageDialog(\n+                showErrorDialog(\n                         aParent,\n                         \"Could not parse \" + aFile + \": \" + ex.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "91875d1901eaf53e869e6179ceb6e45a3ab14e77": {
      "type": "Yintroduced",
      "commitMessage": "incorporated drag and drop support, patch contributed by Rick Giles\nDoes not work with Linux/KDE, probably because of java bug #4638443\n",
      "commitDate": 1035481881000,
      "commitName": "91875d1901eaf53e869e6179ceb6e45a3ab14e77",
      "commitAuthor": "Lars Kühne"
    }
  }
}