{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "PackageObjectFactory.java",
  "functionName": "createObject",
  "functionId": "createObject___className-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
  "functionStartLine": 332,
  "functionEndLine": 356,
  "changeHistory": [
    "b024af7dbc3f53863e17147692100381f4165073",
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
    "fcfacfc6ecc20303998e0522ab655775913a7be1",
    "d24405c088612098d48e0ee1f5c9e9f264611ad9",
    "6b82f01378346226e0c999370c0e614cc6af878b",
    "24f73e69dc69add5fb33af0f54af7ad186b285eb",
    "c5c3b7eed3a5c00aee3225742365f6e36ab11dbd",
    "a2bfd59729017b80d4167505fdcfed28d17ca5ee",
    "9f2bf96b2001eb2e3886950a41e076c8a01d57d8",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "fe9057366308642868c25d427c3ee94411b37170",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c",
    "3dfa7b74b029f1dc0c0e07f860773cb9f2f076af",
    "eeba08c1028a79bdc2140476b24ce8d60f04657a",
    "88e89a138aa39f50f7642106cde6568f6e07783f",
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa"
  ],
  "changeHistoryShort": {
    "b024af7dbc3f53863e17147692100381f4165073": "Ybodychange",
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2": "Ybodychange",
    "fcfacfc6ecc20303998e0522ab655775913a7be1": "Ymultichange(Yexceptionschange,Ybodychange)",
    "d24405c088612098d48e0ee1f5c9e9f264611ad9": "Ybodychange",
    "6b82f01378346226e0c999370c0e614cc6af878b": "Ymultichange(Yexceptionschange,Ybodychange)",
    "24f73e69dc69add5fb33af0f54af7ad186b285eb": "Ybodychange",
    "c5c3b7eed3a5c00aee3225742365f6e36ab11dbd": "Ybodychange",
    "a2bfd59729017b80d4167505fdcfed28d17ca5ee": "Ybodychange",
    "9f2bf96b2001eb2e3886950a41e076c8a01d57d8": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "fe9057366308642868c25d427c3ee94411b37170": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c": "Ybodychange",
    "3dfa7b74b029f1dc0c0e07f860773cb9f2f076af": "Ybodychange",
    "eeba08c1028a79bdc2140476b24ce8d60f04657a": "Ybodychange",
    "88e89a138aa39f50f7642106cde6568f6e07783f": "Ymultichange(Yparameterchange,Ybodychange)",
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b024af7dbc3f53863e17147692100381f4165073": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4414: Simple name conflict of Checks from thirdparty checks will cause exception in run time\n",
      "commitDate": 1497476063000,
      "commitName": "b024af7dbc3f53863e17147692100381f4165073",
      "commitAuthor": "Luolc",
      "commitDateOld": 1497287515000,
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 2.18,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private Object createObject(String className) throws CheckstyleException {\n         Class\u003c?\u003e clazz \u003d null;\n \n         try {\n             clazz \u003d Class.forName(className, true, moduleClassLoader);\n         }\n         catch (final ReflectiveOperationException | NoClassDefFoundError ignored) {\n-            // keep looking, ignoring exception\n+            // ignore the exception\n         }\n \n         Object instance \u003d null;\n \n         if (clazz !\u003d null) {\n             try {\n                 final Constructor\u003c?\u003e declaredConstructor \u003d clazz.getDeclaredConstructor();\n                 declaredConstructor.setAccessible(true);\n                 instance \u003d declaredConstructor.newInstance();\n             }\n             catch (final ReflectiveOperationException ex) {\n                 throw new CheckstyleException(\"Unable to instantiate \" + className, ex);\n             }\n         }\n \n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2": {
      "type": "Ybodychange",
      "commitMessage": "spelling: fix some typos in code/javadoc/comments\n",
      "commitDate": 1491395871000,
      "commitName": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": 1485983896000,
      "commitNameOld": "fcfacfc6ecc20303998e0522ab655775913a7be1",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 62.64,
      "commitsBetweenForRepo": 189,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private Object createObject(String className) throws CheckstyleException {\n         Class\u003c?\u003e clazz \u003d null;\n \n         try {\n             clazz \u003d Class.forName(className, true, moduleClassLoader);\n         }\n         catch (final ReflectiveOperationException | NoClassDefFoundError ignored) {\n             // keep looking, ignoring exception\n         }\n \n         Object instance \u003d null;\n \n         if (clazz !\u003d null) {\n             try {\n                 final Constructor\u003c?\u003e declaredConstructor \u003d clazz.getDeclaredConstructor();\n                 declaredConstructor.setAccessible(true);\n                 instance \u003d declaredConstructor.newInstance();\n             }\n             catch (final ReflectiveOperationException ex) {\n-                throw new CheckstyleException(\"Unable to instatiate \" + className, ex);\n+                throw new CheckstyleException(\"Unable to instantiate \" + className, ex);\n             }\n         }\n \n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "fcfacfc6ecc20303998e0522ab655775913a7be1": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Issue #3778: show exception when failed to instantiate class",
      "commitDate": 1485983896000,
      "commitName": "fcfacfc6ecc20303998e0522ab655775913a7be1",
      "commitAuthor": "rnveach",
      "subchanges": [
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "d24405c088612098d48e0ee1f5c9e9f264611ad9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3184: Make hardcoded map with all module names that in checkstyle\n",
      "commitDate": 1482270285000,
      "commitName": "d24405c088612098d48e0ee1f5c9e9f264611ad9",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": 1478669414000,
      "commitNameOld": "8c8fee7432c89b47936c27bcc2c7f60f5cc79923",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 41.68,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private Object createObject(String className) {\n         Object instance \u003d null;\n         try {\n             final Class\u003c?\u003e clazz \u003d Class.forName(className, true, moduleClassLoader);\n             final Constructor\u003c?\u003e declaredConstructor \u003d clazz.getDeclaredConstructor();\n             declaredConstructor.setAccessible(true);\n             instance \u003d declaredConstructor.newInstance();\n         }\n-        catch (final ReflectiveOperationException | NoClassDefFoundError exception) {\n-            LOG.debug(IGNORING_EXCEPTION_MESSAGE, exception);\n+        catch (final ReflectiveOperationException | NoClassDefFoundError ignored) {\n+            // keep looking, ignoring exception\n         }\n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "6b82f01378346226e0c999370c0e614cc6af878b": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Issue #1159: Resolve PMD ExceptionAsFlowControl in PackageObjectFactory\n",
      "commitDate": 1455633134000,
      "commitName": "6b82f01378346226e0c999370c0e614cc6af878b",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "24f73e69dc69add5fb33af0f54af7ad186b285eb": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2425: fixed invalid xml examples in xdocs",
      "commitDate": 1445640940000,
      "commitName": "24f73e69dc69add5fb33af0f54af7ad186b285eb",
      "commitAuthor": "rnveach",
      "commitDateOld": 1441983885000,
      "commitNameOld": "bd9efb5e66d8a99fb1bd616213e4966d088d6932",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 42.33,
      "commitsBetweenForRepo": 256,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private Object createObject(String className)\n         throws CheckstyleException {\n         try {\n             final Class\u003c?\u003e clazz \u003d Class.forName(className, true, moduleClassLoader);\n             final Constructor\u003c?\u003e declaredConstructor \u003d clazz.getDeclaredConstructor();\n             declaredConstructor.setAccessible(true);\n             return declaredConstructor.newInstance();\n         }\n-        catch (final ReflectiveOperationException exception) {\n+        catch (final ReflectiveOperationException | NoClassDefFoundError exception) {\n             throw new CheckstyleException(\"Unable to find class for \" + className, exception);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c5c3b7eed3a5c00aee3225742365f6e36ab11dbd": {
      "type": "Ybodychange",
      "commitMessage": "Decrease visibility of inner classes. #1555\n\nPossibility to instantiate private checks was added.\n\nFixes `PublicInnerClass` inspection violation.\n\nDescription:\n\u003eReports public inner classes.\n",
      "commitDate": 1439955344000,
      "commitName": "c5c3b7eed3a5c00aee3225742365f6e36ab11dbd",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439886329000,
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,12 @@\n     private Object createObject(String className)\n         throws CheckstyleException {\n         try {\n             final Class\u003c?\u003e clazz \u003d Class.forName(className, true, moduleClassLoader);\n-            return clazz.getDeclaredConstructor().newInstance();\n+            final Constructor\u003c?\u003e declaredConstructor \u003d clazz.getDeclaredConstructor();\n+            declaredConstructor.setAccessible(true);\n+            return declaredConstructor.newInstance();\n         }\n         catch (final ReflectiveOperationException exception) {\n             throw new CheckstyleException(\"Unable to find class for \" + className, exception);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "a2bfd59729017b80d4167505fdcfed28d17ca5ee": {
      "type": "Ybodychange",
      "commitMessage": "Replace Class.newInstance() with Constructor.newInstance(). #1555\n\nFixes ClassNewInstance inspection violation.\n\nDescription:\nReports any calls to java.lang.Class.newInstance(). The newInstance method propagates any exception thrown by the no-arg constructor, including checked exceptions. Use of this method effectively bypasses the compile-time exception checking that would otherwise be performed by the compiler. Replacing such a method call with a call to the java.lang.reflect.Constructor.newInstance() method avoids this problem by wrapping any exception thrown by the constructor in a java.lang.reflect.InvocationTargetException.\n",
      "commitDate": 1439007455000,
      "commitName": "a2bfd59729017b80d4167505fdcfed28d17ca5ee",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 15.93,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private Object createObject(String className)\n         throws CheckstyleException {\n         try {\n             final Class\u003c?\u003e clazz \u003d Class.forName(className, true, moduleClassLoader);\n-            return clazz.newInstance();\n+            return clazz.getDeclaredConstructor().newInstance();\n         }\n-        catch (final ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n-            throw new CheckstyleException(\"Unable to find class for \" + className, e);\n+        catch (final ReflectiveOperationException exception) {\n+            throw new CheckstyleException(\"Unable to find class for \" + className, exception);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "9f2bf96b2001eb2e3886950a41e076c8a01d57d8": {
      "type": "Ybodychange",
      "commitMessage": "Delete ///CLOVER comments\n\nIssue #823\n",
      "commitDate": 1426881427000,
      "commitName": "9f2bf96b2001eb2e3886950a41e076c8a01d57d8",
      "commitAuthor": "Damian Szczepanik",
      "commitDateOld": 1426113655000,
      "commitNameOld": "44e274bfbaf09a067726164e01a9c277f4a97090",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 8.89,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,11 @@\n     private Object createObject(String className)\n         throws CheckstyleException\n     {\n         try {\n-            final Class\u003c?\u003e clazz \u003d Class.forName(className, true,\n-                    moduleClassLoader);\n+            final Class\u003c?\u003e clazz \u003d Class.forName(className, true, moduleClassLoader);\n             return clazz.newInstance();\n         }\n-        catch (final ClassNotFoundException e) {\n-            throw new CheckstyleException(\n-                \"Unable to find class for \" + className, e);\n-        }\n-        catch (final InstantiationException e) {\n-            ///CLOVER:OFF\n-            throw new CheckstyleException(\n-                \"Unable to instantiate \" + className, e);\n-            ///CLOVER:ON\n-        }\n-        catch (final IllegalAccessException e) {\n-            ///CLOVER:OFF\n-            throw new CheckstyleException(\n-                \"Unable to instantiate \" + className, e);\n-            ///CLOVER:ON\n+        catch (final ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n+            throw new CheckstyleException(\"Unable to find class for \" + className, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "fe9057366308642868c25d427c3ee94411b37170": {
      "type": "Ybodychange",
      "commitMessage": "Apply patch #1914806 for PackageNamesLoader from Lars Koedderitzsch.\n",
      "commitDate": 1207618517000,
      "commitName": "fe9057366308642868c25d427c3ee94411b37170",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200192438000,
      "commitNameOld": "5a7e221b757e91d49be1aea105eb4b839e653fbd",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 85.95,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n     private Object createObject(String aClassName)\n         throws CheckstyleException\n     {\n         try {\n-            final ClassLoader loader \u003d Thread.currentThread()\n-                    .getContextClassLoader();\n-            final Class\u003c?\u003e clazz \u003d Class.forName(aClassName, true, loader);\n+            final Class\u003c?\u003e clazz \u003d Class.forName(aClassName, true,\n+                    mModuleClassLoader);\n             return clazz.newInstance();\n         }\n         catch (final ClassNotFoundException e) {\n             throw new CheckstyleException(\n                 \"Unable to find class for \" + aClassName, e);\n         }\n         catch (final InstantiationException e) {\n             ///CLOVER:OFF\n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n             ///CLOVER:ON\n         }\n         catch (final IllegalAccessException e) {\n             ///CLOVER:OFF\n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n             ///CLOVER:ON\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private Object createObject(String aClassName)\n         throws CheckstyleException\n     {\n         try {\n             final ClassLoader loader \u003d Thread.currentThread()\n                     .getContextClassLoader();\n-            final Class clazz \u003d Class.forName(aClassName, true, loader);\n+            final Class\u003c?\u003e clazz \u003d Class.forName(aClassName, true, loader);\n             return clazz.newInstance();\n         }\n         catch (final ClassNotFoundException e) {\n             throw new CheckstyleException(\n                 \"Unable to find class for \" + aClassName, e);\n         }\n         catch (final InstantiationException e) {\n             ///CLOVER:OFF\n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n             ///CLOVER:ON\n         }\n         catch (final IllegalAccessException e) {\n             ///CLOVER:OFF\n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n             ///CLOVER:ON\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152243235000,
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private Object createObject(String aClassName)\n         throws CheckstyleException\n     {\n         try {\n             final ClassLoader loader \u003d Thread.currentThread()\n                     .getContextClassLoader();\n             final Class clazz \u003d Class.forName(aClassName, true, loader);\n             return clazz.newInstance();\n         }\n-        catch (ClassNotFoundException e) {\n+        catch (final ClassNotFoundException e) {\n             throw new CheckstyleException(\n                 \"Unable to find class for \" + aClassName, e);\n         }\n-        catch (InstantiationException e) {\n+        catch (final InstantiationException e) {\n             ///CLOVER:OFF\n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n             ///CLOVER:ON\n         }\n-        catch (IllegalAccessException e) {\n+        catch (final IllegalAccessException e) {\n             ///CLOVER:OFF\n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n             ///CLOVER:ON\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c": {
      "type": "Ybodychange",
      "commitMessage": "Fix for infrastructure class loader. Needs to be verified by Lars (of\nEclipse plug-in fame! :-)\n",
      "commitDate": 1127645456000,
      "commitName": "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1105267857000,
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 259.0,
      "commitsBetweenForRepo": 215,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n     private Object createObject(String aClassName)\n         throws CheckstyleException\n     {\n         try {\n-            final Class clazz \u003d Class.forName(aClassName, true, mLoader);\n+            final ClassLoader loader \u003d Thread.currentThread()\n+                    .getContextClassLoader();\n+            final Class clazz \u003d Class.forName(aClassName, true, loader);\n             return clazz.newInstance();\n         }\n         catch (ClassNotFoundException e) {\n             throw new CheckstyleException(\n                 \"Unable to find class for \" + aClassName, e);\n         }\n         catch (InstantiationException e) {\n             ///CLOVER:OFF\n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n             ///CLOVER:ON\n         }\n         catch (IllegalAccessException e) {\n             ///CLOVER:OFF\n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n             ///CLOVER:ON\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3dfa7b74b029f1dc0c0e07f860773cb9f2f076af": {
      "type": "Ybodychange",
      "commitMessage": "Ignore coverage on the untestable\n",
      "commitDate": 1053090675000,
      "commitName": "3dfa7b74b029f1dc0c0e07f860773cb9f2f076af",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1044387167000,
      "commitNameOld": "eeba08c1028a79bdc2140476b24ce8d60f04657a",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 100.74,
      "commitsBetweenForRepo": 189,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n     private Object createObject(String aClassName)\n         throws CheckstyleException\n     {\n         try {\n             final Class clazz \u003d Class.forName(aClassName, true, mLoader);\n             return clazz.newInstance();\n         }\n         catch (ClassNotFoundException e) {\n             throw new CheckstyleException(\n                 \"Unable to find class for \" + aClassName, e);\n         }\n         catch (InstantiationException e) {\n+            ///CLOVER:OFF \n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n+            ///CLOVER:ON \n         }\n         catch (IllegalAccessException e) {\n+            ///CLOVER:OFF \n             throw new CheckstyleException(\n                 \"Unable to instantiate \" + aClassName, e);\n+            ///CLOVER:ON \n         }\n     }\n\\ No newline at end of file\n"
    },
    "eeba08c1028a79bdc2140476b24ce8d60f04657a": {
      "type": "Ybodychange",
      "commitMessage": "CheckstyleException now supports nested exceptions\n",
      "commitDate": 1044387167000,
      "commitName": "eeba08c1028a79bdc2140476b24ce8d60f04657a",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1040020006000,
      "commitNameOld": "88e89a138aa39f50f7642106cde6568f6e07783f",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 50.55,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private Object createObject(String aClassName)\n         throws CheckstyleException\n     {\n         try {\n             final Class clazz \u003d Class.forName(aClassName, true, mLoader);\n             return clazz.newInstance();\n         }\n         catch (ClassNotFoundException e) {\n             throw new CheckstyleException(\n-                \"Unable to find class for \" + aClassName);\n+                \"Unable to find class for \" + aClassName, e);\n         }\n         catch (InstantiationException e) {\n             throw new CheckstyleException(\n-                \"Unable to instantiate \" + aClassName);\n+                \"Unable to instantiate \" + aClassName, e);\n         }\n         catch (IllegalAccessException e) {\n             throw new CheckstyleException(\n-                \"Unable to instantiate \" + aClassName);\n+                \"Unable to instantiate \" + aClassName, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "88e89a138aa39f50f7642106cde6568f6e07783f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Changed implementation of module name resolution from inheritance to delegation approach\n",
      "commitDate": 1040020006000,
      "commitName": "88e89a138aa39f50f7642106cde6568f6e07783f",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa": {
      "type": "Yintroduced",
      "commitMessage": "modified for config XML and mapping names to full class names - see\nposting to checkstyle-devel@lists.sourceforge.net\n",
      "commitDate": 1039114468000,
      "commitName": "16ba5b35f9f346e7cea294afaad7f9211605ecaa",
      "commitAuthor": "Rick Giles"
    }
  }
}