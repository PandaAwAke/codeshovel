{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "Checker.java",
  "functionName": "processFiles",
  "functionId": "processFiles___files-List__File__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
  "functionStartLine": 276,
  "functionEndLine": 306,
  "changeHistory": [
    "327c0bc843612486ab4ded32a2f01038e1271fd0",
    "56cc11416ebdf52dd299d11424fb04fda42fa63f",
    "fbaabe83cf78bcaf563443a3fb866931239eb15b",
    "25a37e5049b7816b34c552899841a978efc37a63",
    "3b9b0d1e92f3b3bd90b50acb61223c9f7e466c16",
    "77acd41cf13e912caf8e68f92550a6e0b928de92",
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609"
  ],
  "changeHistoryShort": {
    "327c0bc843612486ab4ded32a2f01038e1271fd0": "Ybodychange",
    "56cc11416ebdf52dd299d11424fb04fda42fa63f": "Ybodychange",
    "fbaabe83cf78bcaf563443a3fb866931239eb15b": "Ybodychange",
    "25a37e5049b7816b34c552899841a978efc37a63": "Ybodychange",
    "3b9b0d1e92f3b3bd90b50acb61223c9f7e466c16": "Ybodychange",
    "77acd41cf13e912caf8e68f92550a6e0b928de92": "Ybodychange",
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609": "Yintroduced"
  },
  "changeHistoryDetails": {
    "327c0bc843612486ab4ded32a2f01038e1271fd0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3254: UT to verify all property types and values in XDocs",
      "commitDate": 1515029424000,
      "commitName": "327c0bc843612486ab4ded32a2f01038e1271fd0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1514928265000,
      "commitNameOld": "dabb75d43c7e02317565dde4c5e60f380d3b16b8",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n-                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n+                if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n                         || !CommonUtils.matchesFileExtension(file, fileExtensions)\n                         || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n-                if (cache !\u003d null) {\n-                    cache.put(fileName, timestamp);\n+                if (cacheFile !\u003d null) {\n+                    cacheFile.put(fileName, timestamp);\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "56cc11416ebdf52dd299d11424fb04fda42fa63f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3488: save files into cache with no un-suppressed violations",
      "commitDate": 1478807994000,
      "commitName": "56cc11416ebdf52dd299d11424fb04fda42fa63f",
      "commitAuthor": "rnveach",
      "commitDateOld": 1478669414000,
      "commitNameOld": "8c8fee7432c89b47936c27bcc2c7f60f5cc79923",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.6,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                         || !CommonUtils.matchesFileExtension(file, fileExtensions)\n                         || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n+                if (cache !\u003d null) {\n+                    cache.put(fileName, timestamp);\n+                }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n-                if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n-                    cache.put(fileName, timestamp);\n-                }\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "fbaabe83cf78bcaf563443a3fb866931239eb15b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2866: added before execution and exclusion file filters",
      "commitDate": 1477176790000,
      "commitName": "fbaabe83cf78bcaf563443a3fb866931239eb15b",
      "commitAuthor": "rnveach",
      "commitDateOld": 1476404860000,
      "commitNameOld": "c2847eae889fbeee9d93e875bcc7f72c3eb9fc0b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 8.93,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n-                        || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n+                        || !CommonUtils.matchesFileExtension(file, fileExtensions)\n+                        || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n                 if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                     cache.put(fileName, timestamp);\n                 }\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "25a37e5049b7816b34c552899841a978efc37a63": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2226: Replace line-based suppressions with inline ones (#3443)\n\n",
      "commitDate": 1473886714000,
      "commitName": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1473337840000,
      "commitNameOld": "de022d2434e58dd633fd50a7f9bb50565a8767b5",
      "commitAuthorOld": "Mariia Mykhailova",
      "daysBetweenCommits": 6.35,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                         || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                     continue;\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n                 if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                     cache.put(fileName, timestamp);\n                 }\n             }\n+            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n+            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "3b9b0d1e92f3b3bd90b50acb61223c9f7e466c16": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3022: Moved file-started audit event after file extension check\n",
      "commitDate": 1458484963000,
      "commitName": "3b9b0d1e92f3b3bd90b50acb61223c9f7e466c16",
      "commitAuthor": "idarmans",
      "commitDateOld": 1458221995000,
      "commitNameOld": "167dd96d8ca503a472bf003f187191d6b0ce586c",
      "commitAuthorOld": "Rasmus Kaj",
      "daysBetweenCommits": 3.04,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n-                fireFileStarted(fileName);\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                         || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                     continue;\n                 }\n+                fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n                 if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                     cache.put(fileName, timestamp);\n                 }\n             }\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                     + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "77acd41cf13e912caf8e68f92550a6e0b928de92": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2285: Add possibility to track down the name of source file which caused the internal Exception or Error\n",
      "commitDate": 1455650521000,
      "commitName": "77acd41cf13e912caf8e68f92550a6e0b928de92",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1455040202000,
      "commitNameOld": "d46c2cf0e9df06bb5f424dbd7645574f082f7609",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 7.06,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,28 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 fireFileStarted(fileName);\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n-                    || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n+                        || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                     continue;\n                 }\n-                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d Sets.newTreeSet();\n-                try {\n-                    final FileText theText \u003d new FileText(file.getAbsoluteFile(), charset);\n-                    for (final FileSetCheck fsc : fileSetChecks) {\n-                        fileMessages.addAll(fsc.process(file, theText));\n-                    }\n-                }\n-                catch (final IOException ioe) {\n-                    LOG.debug(\"IOException occurred.\", ioe);\n-                    fileMessages.add(new LocalizedMessage(0,\n-                        Definitions.CHECKSTYLE_BUNDLE, \"general.exception\",\n-                        new String[] {ioe.getMessage()}, null, getClass(), null));\n-                }\n+                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n                 if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                     cache.put(fileName, timestamp);\n                 }\n             }\n             catch (Exception ex) {\n-                // We need to catch all exception to put a reason failure(file name) in exception\n+                // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                     + file.getPath(), ex);\n             }\n+            catch (Error error) {\n+                // We need to catch all errors to put a reason failure (file name) in error\n+                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n+            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609": {
      "type": "Yintroduced",
      "commitMessage": "Issue #569: Move TreeWalker cache to Checker\n",
      "commitDate": 1455040202000,
      "commitName": "d46c2cf0e9df06bb5f424dbd7645574f082f7609",
      "commitAuthor": "Andrei Selkin"
    }
  }
}