{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "InnerAssignmentCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java",
  "functionStartLine": 136,
  "functionEndLine": 142,
  "changeHistory": [
    "31f6765fdcf2233ca6c53730c2fc196576557f66",
    "0da1e4d980420f6abb465af441e5ced254698273",
    "27149f3504a2f350b74f456a9bffbae76a460060",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "2554557c1c4dda6cb348ba053a60c17d8ada9f73",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "675c037c85af8347d5b95b0b45f166b8599a9b27",
    "14e0b00df5c0e48e03490c9a4ec82a7adaf8d227",
    "dcca9953bc08d48a1aa3a9224f5d00b0eb1a82c9"
  ],
  "changeHistoryShort": {
    "31f6765fdcf2233ca6c53730c2fc196576557f66": "Ybodychange",
    "0da1e4d980420f6abb465af441e5ced254698273": "Ybodychange",
    "27149f3504a2f350b74f456a9bffbae76a460060": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "2554557c1c4dda6cb348ba053a60c17d8ada9f73": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "675c037c85af8347d5b95b0b45f166b8599a9b27": "Ybodychange",
    "14e0b00df5c0e48e03490c9a4ec82a7adaf8d227": "Ybodychange",
    "dcca9953bc08d48a1aa3a9224f5d00b0eb1a82c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "31f6765fdcf2233ca6c53730c2fc196576557f66": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2080: Fix typos in code\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": 1441403297000,
      "commitName": "31f6765fdcf2233ca6c53730c2fc196576557f66",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1441043008000,
      "commitNameOld": "a1128cd7428ba71035c132a072de0da2e5c4c9cd",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 4.17,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     public void visitToken(DetailAST ast) {\n-        if (!isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)\n+        if (!isInContext(ast, ALLOWED_ASSIGNMENT_CONTEXT)\n                 \u0026\u0026 !isInNoBraceControlStatement(ast)\n                 \u0026\u0026 !isInWhileIdiom(ast)) {\n             log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0da1e4d980420f6abb465af441e5ced254698273": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violations (partial fix)\n",
      "commitDate": 1440047165000,
      "commitName": "0da1e4d980420f6abb465af441e5ced254698273",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440040911000,
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,7 @@\n     public void visitToken(DetailAST ast) {\n-        if (isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)) {\n-            return;\n+        if (!isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)\n+                \u0026\u0026 !isInNoBraceControlStatement(ast)\n+                \u0026\u0026 !isInWhileIdiom(ast)) {\n+            log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n         }\n-\n-        if (isInNoBraceControlStatement(ast)) {\n-            return;\n-        }\n-\n-        if (isInWhileIdiom(ast)) {\n-            return;\n-        }\n-\n-        log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n     }\n\\ No newline at end of file\n"
    },
    "27149f3504a2f350b74f456a9bffbae76a460060": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, coding package, issue #537\n",
      "commitDate": 1424437367000,
      "commitName": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public void visitToken(DetailAST ast)\n     {\n         if (isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)) {\n             return;\n         }\n \n         if (isInNoBraceControlStatement(ast)) {\n             return;\n         }\n \n         if (isInWhileIdiom(ast)) {\n             return;\n         }\n \n-        log(ast.getLineNo(), ast.getColumnNo(), \"assignment.inner.avoid\");\n+        log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "2554557c1c4dda6cb348ba053a60c17d8ada9f73": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug #1195047, InnerAssignment check didn\u0027t find all instances of inner assignments\n",
      "commitDate": 1130053783000,
      "commitName": "2554557c1c4dda6cb348ba053a60c17d8ada9f73",
      "commitAuthor": "Lars K端hne",
      "commitDateOld": 1105267857000,
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars K端hne",
      "daysBetweenCommits": 286.87,
      "commitsBetweenForRepo": 223,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,16 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final DetailAST parent1 \u003d aAST.getParent();\n-        final DetailAST parent2 \u003d parent1.getParent();\n-        final DetailAST parent3 \u003d parent2.getParent();\n-\n-        final boolean assigment \u003d isAssignment(parent1);\n-        final boolean expr \u003d parent1.getType() \u003d\u003d TokenTypes.EXPR;\n-        final boolean exprList \u003d\n-                expr \u0026\u0026 parent2.getType() \u003d\u003d TokenTypes.ELIST;\n-        final boolean methodCall \u003d\n-                exprList \u0026\u0026 parent3.getType() \u003d\u003d TokenTypes.METHOD_CALL;\n-        final boolean ctorCall \u003d\n-                exprList \u0026\u0026 parent3.getType() \u003d\u003d TokenTypes.LITERAL_NEW;\n-\n-        if (assigment || methodCall || ctorCall) {\n-            log(aAST.getLineNo(), aAST.getColumnNo(), \"assignment.inner.avoid\");\n+        if (isInContext(aAST, ALLOWED_ASSIGMENT_CONTEXT)) {\n+            return;\n         }\n+\n+        if (isInNoBraceControlStatement(aAST)) {\n+            return;\n+        }\n+\n+        if (isInWhileIdiom(aAST)) {\n+            return;\n+        }\n+\n+        log(aAST.getLineNo(), aAST.getColumnNo(), \"assignment.inner.avoid\");\n     }\n\\ No newline at end of file\n"
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": 1055680780000,
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1055612861000,
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "675c037c85af8347d5b95b0b45f166b8599a9b27": {
      "type": "Ybodychange",
      "commitMessage": "fixed style problems\n",
      "commitDate": 1035821421000,
      "commitName": "675c037c85af8347d5b95b0b45f166b8599a9b27",
      "commitAuthor": "Lars K端hne",
      "commitDateOld": 1035268654000,
      "commitNameOld": "14e0b00df5c0e48e03490c9a4ec82a7adaf8d227",
      "commitAuthorOld": "Lars K端hne",
      "daysBetweenCommits": 6.4,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        DetailAST parent1 \u003d aAST.getParent();\n-        DetailAST parent2 \u003d parent1.getParent();\n-        DetailAST parent3 \u003d parent2.getParent();\n+        final DetailAST parent1 \u003d aAST.getParent();\n+        final DetailAST parent2 \u003d parent1.getParent();\n+        final DetailAST parent3 \u003d parent2.getParent();\n \n         final boolean assigment \u003d isAssignment(parent1);\n         final boolean expr \u003d parent1.getType() \u003d\u003d TokenTypes.EXPR;\n         final boolean exprList \u003d\n                 expr \u0026\u0026 parent2.getType() \u003d\u003d TokenTypes.ELIST;\n         final boolean methodCall \u003d\n                 exprList \u0026\u0026 parent3.getType() \u003d\u003d TokenTypes.METHOD_CALL;\n         final boolean ctorCall \u003d\n                 exprList \u0026\u0026 parent3.getType() \u003d\u003d TokenTypes.LITERAL_NEW;\n \n         if (assigment || methodCall || ctorCall) {\n             log(aAST.getLineNo(), aAST.getColumnNo(), \"assignment.inner.avoid\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "14e0b00df5c0e48e03490c9a4ec82a7adaf8d227": {
      "type": "Ybodychange",
      "commitMessage": "added javadoc, fixed typo in method name\n",
      "commitDate": 1035268654000,
      "commitName": "14e0b00df5c0e48e03490c9a4ec82a7adaf8d227",
      "commitAuthor": "Lars K端hne",
      "commitDateOld": 1035208496000,
      "commitNameOld": "dcca9953bc08d48a1aa3a9224f5d00b0eb1a82c9",
      "commitAuthorOld": "Lars K端hne",
      "daysBetweenCommits": 0.7,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST aAST)\n     {\n         DetailAST parent1 \u003d aAST.getParent();\n         DetailAST parent2 \u003d parent1.getParent();\n         DetailAST parent3 \u003d parent2.getParent();\n \n-        final boolean assigment \u003d isAssigment(parent1);\n+        final boolean assigment \u003d isAssignment(parent1);\n         final boolean expr \u003d parent1.getType() \u003d\u003d TokenTypes.EXPR;\n         final boolean exprList \u003d\n                 expr \u0026\u0026 parent2.getType() \u003d\u003d TokenTypes.ELIST;\n         final boolean methodCall \u003d\n                 exprList \u0026\u0026 parent3.getType() \u003d\u003d TokenTypes.METHOD_CALL;\n         final boolean ctorCall \u003d\n                 exprList \u0026\u0026 parent3.getType() \u003d\u003d TokenTypes.LITERAL_NEW;\n \n         if (assigment || methodCall || ctorCall) {\n             log(aAST.getLineNo(), aAST.getColumnNo(), \"assignment.inner.avoid\");\n         }\n     }\n\\ No newline at end of file\n"
    },
    "dcca9953bc08d48a1aa3a9224f5d00b0eb1a82c9": {
      "type": "Yintroduced",
      "commitMessage": "added Check for inner assignments\nwow - took me 30 minutes, this is so easy !!!\n",
      "commitDate": 1035208496000,
      "commitName": "dcca9953bc08d48a1aa3a9224f5d00b0eb1a82c9",
      "commitAuthor": "Lars K端hne"
    }
  }
}