{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "MainFrameModel.java",
  "functionName": "openFile",
  "functionId": "openFile___file-File",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/MainFrameModel.java",
  "functionStartLine": 190,
  "functionEndLine": 234,
  "changeHistory": [
    "58327e1dd9707b09f82ae2d4d4ce14c253247154",
    "46fa8090954480eecdeb6e7367f0e30655853f42",
    "b9ff36243f195adf223acc8f272a59e9448a65af",
    "d3a87162452d3f790c1848418ed4388bd27a4aa1",
    "e02ffc5681a2919e3028bc2efac572698665f845",
    "1db8309b8611c601afce11fc33a6cb900204a582",
    "b65660848ab1570826c71671ad207b0d4d4b73ed",
    "ee33ed57cd2c88888e9821a2047f587f07283d98",
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5",
    "f0c74333de00353b99ff1e9bfd1365ed4560794c",
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
    "13900919907b38384a0405d349cfc659b2b3d985",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "b3e7e97d30769de05a61c539db3b244fe1e342f4"
  ],
  "changeHistoryShort": {
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": "Ybodychange",
    "46fa8090954480eecdeb6e7367f0e30655853f42": "Ybodychange",
    "b9ff36243f195adf223acc8f272a59e9448a65af": "Ybodychange",
    "d3a87162452d3f790c1848418ed4388bd27a4aa1": "Ybodychange",
    "e02ffc5681a2919e3028bc2efac572698665f845": "Ybodychange",
    "1db8309b8611c601afce11fc33a6cb900204a582": "Ymultichange(Yrename,Yparameterchange,Yexceptionschange,Ybodychange)",
    "b65660848ab1570826c71671ad207b0d4d4b73ed": "Yfilerename",
    "ee33ed57cd2c88888e9821a2047f587f07283d98": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5": "Ymodifierchange",
    "f0c74333de00353b99ff1e9bfd1365ed4560794c": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f": "Ymultichange(Yrename,Ybodychange)",
    "13900919907b38384a0405d349cfc659b2b3d985": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "b3e7e97d30769de05a61c539db3b244fe1e342f4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5436: Split TreeWalker to TreeWalker and JavaParser\n",
      "commitDate": 1516775986000,
      "commitName": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": 1515079236000,
      "commitNameOld": "0847a10b9430d9fb0a3f44df03e891da906bea47",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 19.64,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void openFile(File file) throws CheckstyleException {\n         if (file !\u003d null) {\n             try {\n                 currentFile \u003d file;\n                 title \u003d \"Checkstyle GUI : \" + file.getName();\n                 reloadActionEnabled \u003d true;\n                 final DetailAST parseTree;\n \n                 switch (parseMode) {\n                     case PLAIN_JAVA:\n-                        parseTree \u003d parseFile(file);\n+                        parseTree \u003d JavaParser.parseFile(file, JavaParser.Options.WITHOUT_COMMENTS);\n                         break;\n                     case JAVA_WITH_COMMENTS:\n                     case JAVA_WITH_JAVADOC_AND_COMMENTS:\n-                        parseTree \u003d parseFileWithComments(file);\n+                        parseTree \u003d JavaParser.parseFile(file, JavaParser.Options.WITH_COMMENTS);\n                         break;\n                     default:\n                         throw new IllegalArgumentException(\"Unknown mode: \" + parseMode);\n                 }\n \n                 parseTreeTableModel.setParseTree(parseTree);\n                 parseTreeTableModel.setParseMode(parseMode);\n                 final String[] sourceLines \u003d getFileText(file).toLinesArray();\n \n                 final List\u003cInteger\u003e linesToPositionTemp \u003d new ArrayList\u003c\u003e();\n                 // starts line counting at 1\n                 linesToPositionTemp.add(0);\n \n                 final StringBuilder sb \u003d new StringBuilder(1024);\n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     linesToPositionTemp.add(sb.length());\n                     sb.append(element).append(System.lineSeparator());\n                 }\n                 linesToPosition \u003d ImmutableList.copyOf(linesToPositionTemp);\n                 text \u003d sb.toString();\n             }\n-            catch (IOException | ANTLRException ex) {\n+            catch (IOException ex) {\n                 final String exceptionMsg \u003d String.format(Locale.ROOT,\n                     \"%s occurred while opening file %s.\",\n                     ex.getClass().getSimpleName(), file.getPath());\n                 throw new CheckstyleException(exceptionMsg, ex);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "46fa8090954480eecdeb6e7367f0e30655853f42": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4812: add report on StringBufferMustHaveInitialCapacity\n",
      "commitDate": 1501186710000,
      "commitName": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1499348997000,
      "commitNameOld": "b9ff36243f195adf223acc8f272a59e9448a65af",
      "commitAuthorOld": "Dmytro Kytsmen",
      "daysBetweenCommits": 21.27,
      "commitsBetweenForRepo": 149,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void openFile(File file) throws CheckstyleException {\n         if (file !\u003d null) {\n             try {\n                 currentFile \u003d file;\n                 title \u003d \"Checkstyle GUI : \" + file.getName();\n                 reloadActionEnabled \u003d true;\n                 final DetailAST parseTree;\n \n                 switch (parseMode) {\n                     case PLAIN_JAVA:\n                         parseTree \u003d parseFile(file);\n                         break;\n                     case JAVA_WITH_COMMENTS:\n                     case JAVA_WITH_JAVADOC_AND_COMMENTS:\n                         parseTree \u003d parseFileWithComments(file);\n                         break;\n                     default:\n                         throw new IllegalArgumentException(\"Unknown mode: \" + parseMode);\n                 }\n \n                 parseTreeTableModel.setParseTree(parseTree);\n                 parseTreeTableModel.setParseMode(parseMode);\n                 final String[] sourceLines \u003d getFileText(file).toLinesArray();\n \n                 final List\u003cInteger\u003e linesToPositionTemp \u003d new ArrayList\u003c\u003e();\n                 // starts line counting at 1\n                 linesToPositionTemp.add(0);\n \n-                final StringBuilder sb \u003d new StringBuilder();\n+                final StringBuilder sb \u003d new StringBuilder(1024);\n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     linesToPositionTemp.add(sb.length());\n                     sb.append(element).append(System.lineSeparator());\n                 }\n                 linesToPosition \u003d ImmutableList.copyOf(linesToPositionTemp);\n                 text \u003d sb.toString();\n             }\n             catch (IOException | ANTLRException ex) {\n                 final String exceptionMsg \u003d String.format(Locale.ROOT,\n                     \"%s occurred while opening file %s.\",\n                     ex.getClass().getSimpleName(), file.getPath());\n                 throw new CheckstyleException(exceptionMsg, ex);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b9ff36243f195adf223acc8f272a59e9448a65af": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3555: refactoring CodeSelectorPModel do double copy of collection in c-tor\n",
      "commitDate": 1499348997000,
      "commitName": "b9ff36243f195adf223acc8f272a59e9448a65af",
      "commitAuthor": "Dmytro Kytsmen",
      "commitDateOld": 1497287515000,
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 23.86,
      "commitsBetweenForRepo": 131,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public void openFile(File file) throws CheckstyleException {\n         if (file !\u003d null) {\n             try {\n                 currentFile \u003d file;\n                 title \u003d \"Checkstyle GUI : \" + file.getName();\n                 reloadActionEnabled \u003d true;\n                 final DetailAST parseTree;\n \n                 switch (parseMode) {\n                     case PLAIN_JAVA:\n                         parseTree \u003d parseFile(file);\n                         break;\n                     case JAVA_WITH_COMMENTS:\n                     case JAVA_WITH_JAVADOC_AND_COMMENTS:\n                         parseTree \u003d parseFileWithComments(file);\n                         break;\n                     default:\n                         throw new IllegalArgumentException(\"Unknown mode: \" + parseMode);\n                 }\n \n                 parseTreeTableModel.setParseTree(parseTree);\n                 parseTreeTableModel.setParseMode(parseMode);\n                 final String[] sourceLines \u003d getFileText(file).toLinesArray();\n \n-                // clear for each new file\n-                linesToPosition.clear();\n+                final List\u003cInteger\u003e linesToPositionTemp \u003d new ArrayList\u003c\u003e();\n                 // starts line counting at 1\n-                linesToPosition.add(0);\n+                linesToPositionTemp.add(0);\n \n                 final StringBuilder sb \u003d new StringBuilder();\n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n-                    linesToPosition.add(sb.length());\n+                    linesToPositionTemp.add(sb.length());\n                     sb.append(element).append(System.lineSeparator());\n                 }\n+                linesToPosition \u003d ImmutableList.copyOf(linesToPositionTemp);\n                 text \u003d sb.toString();\n             }\n             catch (IOException | ANTLRException ex) {\n                 final String exceptionMsg \u003d String.format(Locale.ROOT,\n                     \"%s occurred while opening file %s.\",\n                     ex.getClass().getSimpleName(), file.getPath());\n                 throw new CheckstyleException(exceptionMsg, ex);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d3a87162452d3f790c1848418ed4388bd27a4aa1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #408: Update Checkstyle GUI in order to display Javadoc tokens (#3430)\n\n",
      "commitDate": 1473631997000,
      "commitName": "d3a87162452d3f790c1848418ed4388bd27a4aa1",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1455022134000,
      "commitNameOld": "e02ffc5681a2919e3028bc2efac572698665f845",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 215.39,
      "commitsBetweenForRepo": 459,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,45 @@\n     public void openFile(File file) throws CheckstyleException {\n         if (file !\u003d null) {\n             try {\n                 currentFile \u003d file;\n                 title \u003d \"Checkstyle GUI : \" + file.getName();\n                 reloadActionEnabled \u003d true;\n-                final DetailAST parseTree \u003d parseFile(file);\n+                final DetailAST parseTree;\n+\n+                switch (parseMode) {\n+                    case PLAIN_JAVA:\n+                        parseTree \u003d parseFile(file);\n+                        break;\n+                    case JAVA_WITH_COMMENTS:\n+                    case JAVA_WITH_JAVADOC_AND_COMMENTS:\n+                        parseTree \u003d parseFileWithComments(file);\n+                        break;\n+                    default:\n+                        throw new IllegalArgumentException(\"Unknown mode: \" + parseMode);\n+                }\n+\n                 parseTreeTableModel.setParseTree(parseTree);\n+                parseTreeTableModel.setParseMode(parseMode);\n                 final String[] sourceLines \u003d getFileText(file).toLinesArray();\n \n                 // clear for each new file\n                 linesToPosition.clear();\n                 // starts line counting at 1\n                 linesToPosition.add(0);\n \n                 final StringBuilder sb \u003d new StringBuilder();\n                 // insert the contents of the file to the text area\n                 for (final String element : sourceLines) {\n                     linesToPosition.add(sb.length());\n                     sb.append(element).append(System.lineSeparator());\n                 }\n                 text \u003d sb.toString();\n             }\n             catch (IOException | ANTLRException ex) {\n                 final String exceptionMsg \u003d String.format(Locale.ROOT,\n                     \"%s occurred while opening file %s.\",\n                     ex.getClass().getSimpleName(), file.getPath());\n                 throw new CheckstyleException(exceptionMsg, ex);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e02ffc5681a2919e3028bc2efac572698665f845": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2609: Refactor MainFrame\n",
      "commitDate": 1455022134000,
      "commitName": "e02ffc5681a2919e3028bc2efac572698665f845",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1454883718000,
      "commitNameOld": "1db8309b8611c601afce11fc33a6cb900204a582",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 1.6,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,31 @@\n     public void openFile(File file) throws CheckstyleException {\n-        try {\n-            currentFile \u003d file;\n-            final DetailAST parseTree \u003d parseFile(file);\n-            parseTreeTableModel.setParseTree(parseTree);\n-            final String[] sourceLines \u003d getFileText(file).toLinesArray();\n+        if (file !\u003d null) {\n+            try {\n+                currentFile \u003d file;\n+                title \u003d \"Checkstyle GUI : \" + file.getName();\n+                reloadActionEnabled \u003d true;\n+                final DetailAST parseTree \u003d parseFile(file);\n+                parseTreeTableModel.setParseTree(parseTree);\n+                final String[] sourceLines \u003d getFileText(file).toLinesArray();\n \n-            // clear for each new file\n-            linesToPosition.clear();\n-            // starts line counting at 1\n-            linesToPosition.add(0);\n+                // clear for each new file\n+                linesToPosition.clear();\n+                // starts line counting at 1\n+                linesToPosition.add(0);\n \n-            final StringBuilder sb \u003d new StringBuilder();\n-            // insert the contents of the file to the text area\n-            for (final String element : sourceLines) {\n-                linesToPosition.add(sb.length());\n-                sb.append(element).append(System.lineSeparator());\n+                final StringBuilder sb \u003d new StringBuilder();\n+                // insert the contents of the file to the text area\n+                for (final String element : sourceLines) {\n+                    linesToPosition.add(sb.length());\n+                    sb.append(element).append(System.lineSeparator());\n+                }\n+                text \u003d sb.toString();\n             }\n-            text \u003d sb.toString();\n-        }\n-        catch (IOException | ANTLRException ex) {\n-            final String exceptionMsg \u003d String.format(Locale.ROOT,\n-                \"%s occurred while opening file %s.\",\n-                ex.getClass().getSimpleName(), file.getPath());\n-            throw new CheckstyleException(exceptionMsg, ex);\n+            catch (IOException | ANTLRException ex) {\n+                final String exceptionMsg \u003d String.format(Locale.ROOT,\n+                    \"%s occurred while opening file %s.\",\n+                    ex.getClass().getSimpleName(), file.getPath());\n+                throw new CheckstyleException(exceptionMsg, ex);\n+            }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1db8309b8611c601afce11fc33a6cb900204a582": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Issue #2609: Refactor MainFrame\n",
      "commitDate": 1454883718000,
      "commitName": "1db8309b8611c601afce11fc33a6cb900204a582",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "b65660848ab1570826c71671ad207b0d4d4b73ed": {
      "type": "Yfilerename",
      "commitMessage": "Issue #2609: name \u0027Checkstyle\u0027 was substituted to \u0027Main\u0027 at class name\n",
      "commitDate": 1451915239000,
      "commitName": "b65660848ab1570826c71671ad207b0d4d4b73ed",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1451844776000,
      "commitNameOld": "d10b2c45ffc6c390bade5218b4d315a128485bcf",
      "commitAuthorOld": "liscju",
      "daysBetweenCommits": 0.82,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "ee33ed57cd2c88888e9821a2047f587f07283d98": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "Issue #2609: Refactor GUI package\n",
      "commitDate": 1451812818000,
      "commitName": "ee33ed57cd2c88888e9821a2047f587f07283d98",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        "Ymovefromfile",
        "Ymodifierchange"
      ]
    },
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5": {
      "type": "Ymodifierchange",
      "commitMessage": "Decrease visibility of fields and methods where applicable. #1555\n\nFixes some `WeakerAccess` inspection violations.\n\nDescription:\n\u003eThis inspection reports all fields, methods or classes, found in the specified inspection scope, that may have their access modifier narrowed down.\n",
      "commitDate": 1440705174000,
      "commitName": "8142c804e90f6d24a3a5db736f3f1f576766a9a5",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440505228000,
      "commitNameOld": "26513d52336c42432ee21565b253297ba4174530",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 2.31,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-    void addLineToPosition(int value) {\n+    private void addLineToPosition(int value) {\n         linesToPosition.add(value);\n     }\n\\ No newline at end of file\n"
    },
    "f0c74333de00353b99ff1e9bfd1365ed4560794c": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Fix UnsupportedOperationException in GUI. #1718\n",
      "commitDate": 1439782998000,
      "commitName": "f0c74333de00353b99ff1e9bfd1365ed4560794c",
      "commitAuthor": "Michal Kordas",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Yreturntypechange",
        "Ymodifierchange",
        "Ybodychange"
      ]
    },
    "66d73fe6189267fee3423e2e8d7fc2d68599a43f": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Issue #1566: MemberName and MethodName violations fixed\n",
      "commitDate": 1439560811000,
      "commitName": "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
      "commitAuthor": "Ruslan Diachenko",
      "subchanges": [
        "Yrename",
        "Ybodychange"
      ]
    },
    "13900919907b38384a0405d349cfc659b2b3d985": {
      "type": "Ybodychange",
      "commitMessage": "Return unmodifiable collections from methods. #1555\n\nFixes `ReturnOfCollectionField` inspection violations.\n\nDescription:\n\u003eReports any attempt to return an array or Collection field from a method. Since the array or Collection may have its contents modified by the calling method, this construct may result in an object having its state modified unexpectedly. While occasionally useful for performance reasons, this construct is inherently bug-prone.\n",
      "commitDate": 1439189278000,
      "commitName": "13900919907b38384a0405d349cfc659b2b3d985",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439131302000,
      "commitNameOld": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.67,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n     public List\u003cInteger\u003e getLines2position() {\n-        return lines2position;\n+        return Collections.unmodifiableList(lines2position);\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "b3e7e97d30769de05a61c539db3b244fe1e342f4": {
      "type": "Yintroduced",
      "commitMessage": "Patch# 3199838: selecting a node in the GUI moves the code pane to the corresponding line. Very nice\n",
      "commitDate": 1334917332000,
      "commitName": "b3e7e97d30769de05a61c539db3b244fe1e342f4",
      "commitAuthor": "Oliver Burn"
    }
  }
}