{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AbstractParenPadCheck.java",
  "functionName": "processLeft",
  "functionId": "processLeft___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java",
  "functionStartLine": 91,
  "functionEndLine": 105,
  "changeHistory": [
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "15557f448c4d9287dc19e4013e9d952638e528cd",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2",
    "2e8126e99047befc39560342981b0b8e7cabea21",
    "267bdf541787643fbe6126605cbfb91dbcde1e91",
    "aede54ee77fb0887148db30be804b36758111698"
  ],
  "changeHistoryShort": {
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "15557f448c4d9287dc19e4013e9d952638e528cd": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "2e8126e99047befc39560342981b0b8e7cabea21": "Yfilerename",
    "267bdf541787643fbe6126605cbfb91dbcde1e91": "Ybodychange",
    "aede54ee77fb0887148db30be804b36758111698": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": 1453387259000,
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     protected void processLeft(DetailAST ast) {\n         final String line \u003d getLines()[ast.getLineNo() - 1];\n         final int after \u003d ast.getColumnNo() + 1;\n         if (after \u003c line.length()) {\n             if (option \u003d\u003d PadOption.NOSPACE\n                 \u0026\u0026 Character.isWhitespace(line.charAt(after))) {\n-                log(ast.getLineNo(), after, WS_FOLLOWED, OPEN_PARENTHESIS);\n+                log(ast.getLineNo(), after, MSG_WS_FOLLOWED, OPEN_PARENTHESIS);\n             }\n             else if (option \u003d\u003d PadOption.SPACE\n                      \u0026\u0026 !Character.isWhitespace(line.charAt(after))\n                      \u0026\u0026 line.charAt(after) !\u003d CLOSE_PARENTHESIS) {\n-                log(ast.getLineNo(), after, WS_NOT_FOLLOWED, OPEN_PARENTHESIS);\n+                log(ast.getLineNo(), after, MSG_WS_NOT_FOLLOWED, OPEN_PARENTHESIS);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "15557f448c4d9287dc19e4013e9d952638e528cd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2451: removed excess hierarchy from AbstractParenPadCheck",
      "commitDate": 1447384611000,
      "commitName": "15557f448c4d9287dc19e4013e9d952638e528cd",
      "commitAuthor": "rnveach",
      "commitDateOld": 1440827451000,
      "commitNameOld": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 75.89,
      "commitsBetweenForRepo": 601,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     protected void processLeft(DetailAST ast) {\n         final String line \u003d getLines()[ast.getLineNo() - 1];\n         final int after \u003d ast.getColumnNo() + 1;\n         if (after \u003c line.length()) {\n-            if (getAbstractOption() \u003d\u003d PadOption.NOSPACE\n+            if (option \u003d\u003d PadOption.NOSPACE\n                 \u0026\u0026 Character.isWhitespace(line.charAt(after))) {\n                 log(ast.getLineNo(), after, WS_FOLLOWED, OPEN_PARENTHESIS);\n             }\n-            else if (getAbstractOption() \u003d\u003d PadOption.SPACE\n+            else if (option \u003d\u003d PadOption.SPACE\n                      \u0026\u0026 !Character.isWhitespace(line.charAt(after))\n                      \u0026\u0026 line.charAt(after) !\u003d CLOSE_PARENTHESIS) {\n                 log(ast.getLineNo(), after, WS_NOT_FOLLOWED, OPEN_PARENTHESIS);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": 1440543609000,
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1439084780000,
      "commitNameOld": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 16.88,
      "commitsBetweenForRepo": 294,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     protected void processLeft(DetailAST ast) {\n         final String line \u003d getLines()[ast.getLineNo() - 1];\n         final int after \u003d ast.getColumnNo() + 1;\n         if (after \u003c line.length()) {\n             if (getAbstractOption() \u003d\u003d PadOption.NOSPACE\n                 \u0026\u0026 Character.isWhitespace(line.charAt(after))) {\n-                log(ast.getLineNo(), after, WS_FOLLOWED, \"(\");\n+                log(ast.getLineNo(), after, WS_FOLLOWED, OPEN_PARENTHESIS);\n             }\n             else if (getAbstractOption() \u003d\u003d PadOption.SPACE\n                      \u0026\u0026 !Character.isWhitespace(line.charAt(after))\n-                     \u0026\u0026 line.charAt(after) !\u003d \u0027)\u0027) {\n-                log(ast.getLineNo(), after, WS_NOT_FOLLOWED, \"(\");\n+                     \u0026\u0026 line.charAt(after) !\u003d CLOSE_PARENTHESIS) {\n+                log(ast.getLineNo(), after, WS_NOT_FOLLOWED, OPEN_PARENTHESIS);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": 1439084780000,
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 16.82,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     protected void processLeft(DetailAST ast) {\n         final String line \u003d getLines()[ast.getLineNo() - 1];\n         final int after \u003d ast.getColumnNo() + 1;\n         if (after \u003c line.length()) {\n-            if (PadOption.NOSPACE \u003d\u003d getAbstractOption()\n+            if (getAbstractOption() \u003d\u003d PadOption.NOSPACE\n                 \u0026\u0026 Character.isWhitespace(line.charAt(after))) {\n                 log(ast.getLineNo(), after, WS_FOLLOWED, \"(\");\n             }\n-            else if (PadOption.SPACE \u003d\u003d getAbstractOption()\n+            else if (getAbstractOption() \u003d\u003d PadOption.SPACE\n                      \u0026\u0026 !Character.isWhitespace(line.charAt(after))\n                      \u0026\u0026 line.charAt(after) !\u003d \u0027)\u0027) {\n                 log(ast.getLineNo(), after, WS_NOT_FOLLOWED, \"(\");\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1425602876000,
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     protected void processLeft(DetailAST ast)\n     {\n         final String line \u003d getLines()[ast.getLineNo() - 1];\n         final int after \u003d ast.getColumnNo() + 1;\n         if (after \u003c line.length()) {\n-            if ((PadOption.NOSPACE \u003d\u003d getAbstractOption())\n-                \u0026\u0026 (Character.isWhitespace(line.charAt(after))))\n+            if (PadOption.NOSPACE \u003d\u003d getAbstractOption()\n+                \u0026\u0026 Character.isWhitespace(line.charAt(after)))\n             {\n                 log(ast.getLineNo(), after, WS_FOLLOWED, \"(\");\n             }\n-            else if ((PadOption.SPACE \u003d\u003d getAbstractOption())\n+            else if (PadOption.SPACE \u003d\u003d getAbstractOption()\n                      \u0026\u0026 !Character.isWhitespace(line.charAt(after))\n-                     \u0026\u0026 (line.charAt(after) !\u003d \u0027)\u0027))\n+                     \u0026\u0026 line.charAt(after) !\u003d \u0027)\u0027)\n             {\n                 log(ast.getLineNo(), after, WS_NOT_FOLLOWED, \"(\");\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, whitespace package, issue #537\n",
      "commitDate": 1424437365000,
      "commitName": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     protected void processLeft(DetailAST ast)\n     {\n         final String line \u003d getLines()[ast.getLineNo() - 1];\n         final int after \u003d ast.getColumnNo() + 1;\n         if (after \u003c line.length()) {\n             if ((PadOption.NOSPACE \u003d\u003d getAbstractOption())\n                 \u0026\u0026 (Character.isWhitespace(line.charAt(after))))\n             {\n-                log(ast.getLineNo(), after, \"ws.followed\", \"(\");\n+                log(ast.getLineNo(), after, WS_FOLLOWED, \"(\");\n             }\n             else if ((PadOption.SPACE \u003d\u003d getAbstractOption())\n                      \u0026\u0026 !Character.isWhitespace(line.charAt(after))\n                      \u0026\u0026 (line.charAt(after) !\u003d \u0027)\u0027))\n             {\n-                log(ast.getLineNo(), after, \"ws.notFollowed\", \"(\");\n+                log(ast.getLineNo(), after, WS_NOT_FOLLOWED, \"(\");\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": 1421677248000,
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "bug-750348: added check for typecast parens. Involved\na bit of refactoring.\n",
      "commitDate": 1055139619000,
      "commitName": "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Ymovefromfile",
        "Ymodifierchange"
      ]
    },
    "2e8126e99047befc39560342981b0b8e7cabea21": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Whitespace checks\n",
      "commitDate": 1054727729000,
      "commitName": "2e8126e99047befc39560342981b0b8e7cabea21",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1054723367000,
      "commitNameOld": "3bd6412e39a141b980901f291391ff1bcc4a61f3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "267bdf541787643fbe6126605cbfb91dbcde1e91": {
      "type": "Ybodychange",
      "commitMessage": "Refactor to improve the AbstractOptionCheck code.\n",
      "commitDate": 1036543226000,
      "commitName": "267bdf541787643fbe6126605cbfb91dbcde1e91",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1036361604000,
      "commitNameOld": "065c1d3bc59e10d0235d8732652d2f2787fbbcd7",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.1,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private void processLeft(DetailAST aAST)\n     {\n         final String line \u003d getLines()[aAST.getLineNo() - 1];\n         final int after \u003d aAST.getColumnNo() + 1;\n         if (after \u003c line.length()) {\n-            if ((PadOption.NOSPACE \u003d\u003d mOption)\n+            if ((PadOption.NOSPACE \u003d\u003d getAbstractOption())\n                 \u0026\u0026 (Character.isWhitespace(line.charAt(after))))\n             {\n                 log(aAST.getLineNo(), after, \"ws.followed\", \"(\");\n             }\n-            else if ((PadOption.SPACE \u003d\u003d mOption)\n+            else if ((PadOption.SPACE \u003d\u003d getAbstractOption())\n                      \u0026\u0026 !Character.isWhitespace(line.charAt(after))\n                      \u0026\u0026 (line.charAt(after) !\u003d \u0027)\u0027))\n             {\n                 log(aAST.getLineNo(), after, \"ws.notFollowed\", \"(\");\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "aede54ee77fb0887148db30be804b36758111698": {
      "type": "Yintroduced",
      "commitMessage": "Fully implemented the paren pad check\n",
      "commitDate": 1034517942000,
      "commitName": "aede54ee77fb0887148db30be804b36758111698",
      "commitAuthor": "Oliver Burn"
    }
  }
}