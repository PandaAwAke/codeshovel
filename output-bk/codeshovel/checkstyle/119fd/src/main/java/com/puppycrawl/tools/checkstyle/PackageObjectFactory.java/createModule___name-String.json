{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "PackageObjectFactory.java",
  "functionName": "createModule",
  "functionId": "createModule___name-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
  "functionStartLine": 178,
  "functionEndLine": 213,
  "changeHistory": [
    "620a340c16dc4a77b4d7f81e30cac83d70af49b1",
    "50944531b220370a85e55edc92faf99642c9e8af",
    "b024af7dbc3f53863e17147692100381f4165073",
    "ddeb553834f10570089a033fa1ac1501b74ac358",
    "d24405c088612098d48e0ee1f5c9e9f264611ad9",
    "9eafaedfc010a179c284df98162c4d3ab8ab2645",
    "6b82f01378346226e0c999370c0e614cc6af878b",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
    "bd9efb5e66d8a99fb1bd616213e4966d088d6932",
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "eeba08c1028a79bdc2140476b24ce8d60f04657a",
    "88e89a138aa39f50f7642106cde6568f6e07783f",
    "958d0dae4d97b4122c7e54ce1b1bc23c0b00e6a0",
    "eb68cde2e314d594ccde45e0716fe75b9770fa37",
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa"
  ],
  "changeHistoryShort": {
    "620a340c16dc4a77b4d7f81e30cac83d70af49b1": "Ybodychange",
    "50944531b220370a85e55edc92faf99642c9e8af": "Ybodychange",
    "b024af7dbc3f53863e17147692100381f4165073": "Ybodychange",
    "ddeb553834f10570089a033fa1ac1501b74ac358": "Ybodychange",
    "d24405c088612098d48e0ee1f5c9e9f264611ad9": "Ybodychange",
    "9eafaedfc010a179c284df98162c4d3ab8ab2645": "Ybodychange",
    "6b82f01378346226e0c999370c0e614cc6af878b": "Ybodychange",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": "Ybodychange",
    "bd9efb5e66d8a99fb1bd616213e4966d088d6932": "Ybodychange",
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": "Ybodychange",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "eeba08c1028a79bdc2140476b24ce8d60f04657a": "Ybodychange",
    "88e89a138aa39f50f7642106cde6568f6e07783f": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "958d0dae4d97b4122c7e54ce1b1bc23c0b00e6a0": "Ybodychange",
    "eb68cde2e314d594ccde45e0716fe75b9770fa37": "Ymultichange(Yparameterchange,Ybodychange)",
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "620a340c16dc4a77b4d7f81e30cac83d70af49b1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4916: Adding ability to force load\n",
      "commitDate": 1511662636000,
      "commitName": "620a340c16dc4a77b4d7f81e30cac83d70af49b1",
      "commitAuthor": "kazachka",
      "commitDateOld": 1509231930000,
      "commitNameOld": "50944531b220370a85e55edc92faf99642c9e8af",
      "commitAuthorOld": "BBG",
      "daysBetweenCommits": 28.13,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,36 @@\n     public Object createModule(String name) throws CheckstyleException {\n         Object instance \u003d null;\n         // if the name is a simple class name, try to find it in maps at first\n         if (!name.contains(PACKAGE_SEPARATOR)) {\n-            // find the name in hardcode map\n-            final String fullModuleName \u003d NAME_TO_FULL_MODULE_NAME.get(name);\n-            if (fullModuleName \u003d\u003d null) {\n-                final String fullCheckModuleName \u003d\n-                        NAME_TO_FULL_MODULE_NAME.get(name + CHECK_SUFFIX);\n-                if (fullCheckModuleName !\u003d null) {\n-                    instance \u003d createObject(fullCheckModuleName);\n-                }\n-            }\n-            else {\n-                instance \u003d createObject(fullModuleName);\n-            }\n-\n+            instance \u003d createFromStandardCheckSet(name);\n             // find the name in third party map\n             if (instance \u003d\u003d null) {\n                 if (thirdPartyNameToFullModuleNames \u003d\u003d null) {\n                     thirdPartyNameToFullModuleNames \u003d\n                             generateThirdPartyNameToFullModuleName(moduleClassLoader);\n                 }\n                 instance \u003d createObjectFromMap(name, thirdPartyNameToFullModuleNames);\n             }\n         }\n-\n         if (instance \u003d\u003d null) {\n             instance \u003d createObject(name);\n         }\n+        if (instance \u003d\u003d null\n+                \u0026\u0026 moduleLoadOption \u003d\u003d ModuleLoadOption.TRY_IN_ALL_REGISTERED_PACKAGES) {\n+            instance \u003d createModuleByTryInEachPackage(name);\n+        }\n         if (instance \u003d\u003d null) {\n             String attemptedNames \u003d null;\n             if (!name.contains(PACKAGE_SEPARATOR)) {\n                 final String nameCheck \u003d name + CHECK_SUFFIX;\n                 attemptedNames \u003d joinPackageNamesWithClassName(name, packages)\n                         + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n                         + joinPackageNamesWithClassName(nameCheck, packages);\n             }\n             final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n                 Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n                 new String[] {name, attemptedNames}, null, getClass(), null);\n             throw new CheckstyleException(exceptionMessage.getMessage());\n         }\n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "50944531b220370a85e55edc92faf99642c9e8af": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4456: Disallowing user to use incomplete fully qualified Check names in config file\n",
      "commitDate": 1509231930000,
      "commitName": "50944531b220370a85e55edc92faf99642c9e8af",
      "commitAuthor": "BBG",
      "commitDateOld": 1506566816000,
      "commitNameOld": "9c43a1d1663746b7cd2357e03bfede9f6cedf9ec",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 30.85,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n     public Object createModule(String name) throws CheckstyleException {\n         Object instance \u003d null;\n         // if the name is a simple class name, try to find it in maps at first\n         if (!name.contains(PACKAGE_SEPARATOR)) {\n             // find the name in hardcode map\n             final String fullModuleName \u003d NAME_TO_FULL_MODULE_NAME.get(name);\n             if (fullModuleName \u003d\u003d null) {\n                 final String fullCheckModuleName \u003d\n                         NAME_TO_FULL_MODULE_NAME.get(name + CHECK_SUFFIX);\n                 if (fullCheckModuleName !\u003d null) {\n                     instance \u003d createObject(fullCheckModuleName);\n                 }\n             }\n             else {\n                 instance \u003d createObject(fullModuleName);\n             }\n \n             // find the name in third party map\n             if (instance \u003d\u003d null) {\n                 if (thirdPartyNameToFullModuleNames \u003d\u003d null) {\n                     thirdPartyNameToFullModuleNames \u003d\n                             generateThirdPartyNameToFullModuleName(moduleClassLoader);\n                 }\n                 instance \u003d createObjectFromMap(name, thirdPartyNameToFullModuleNames);\n             }\n         }\n \n         if (instance \u003d\u003d null) {\n             instance \u003d createObject(name);\n         }\n-        final String nameCheck \u003d name + CHECK_SUFFIX;\n         if (instance \u003d\u003d null) {\n-            instance \u003d createObject(nameCheck);\n-        }\n-        if (instance \u003d\u003d null) {\n-            final String attemptedNames \u003d joinPackageNamesWithClassName(name, packages)\n-                    + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n-                    + joinPackageNamesWithClassName(nameCheck, packages);\n+            String attemptedNames \u003d null;\n+            if (!name.contains(PACKAGE_SEPARATOR)) {\n+                final String nameCheck \u003d name + CHECK_SUFFIX;\n+                attemptedNames \u003d joinPackageNamesWithClassName(name, packages)\n+                        + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n+                        + joinPackageNamesWithClassName(nameCheck, packages);\n+            }\n             final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n                 Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n                 new String[] {name, attemptedNames}, null, getClass(), null);\n             throw new CheckstyleException(exceptionMessage.getMessage());\n         }\n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "b024af7dbc3f53863e17147692100381f4165073": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4414: Simple name conflict of Checks from thirdparty checks will cause exception in run time\n",
      "commitDate": 1497476063000,
      "commitName": "b024af7dbc3f53863e17147692100381f4165073",
      "commitAuthor": "Luolc",
      "commitDateOld": 1497287515000,
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 2.18,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,45 @@\n     public Object createModule(String name) throws CheckstyleException {\n         Object instance \u003d null;\n         // if the name is a simple class name, try to find it in maps at first\n         if (!name.contains(PACKAGE_SEPARATOR)) {\n-            instance \u003d createObjectFromMap(name, NAME_TO_FULL_MODULE_NAME);\n+            // find the name in hardcode map\n+            final String fullModuleName \u003d NAME_TO_FULL_MODULE_NAME.get(name);\n+            if (fullModuleName \u003d\u003d null) {\n+                final String fullCheckModuleName \u003d\n+                        NAME_TO_FULL_MODULE_NAME.get(name + CHECK_SUFFIX);\n+                if (fullCheckModuleName !\u003d null) {\n+                    instance \u003d createObject(fullCheckModuleName);\n+                }\n+            }\n+            else {\n+                instance \u003d createObject(fullModuleName);\n+            }\n+\n+            // find the name in third party map\n             if (instance \u003d\u003d null) {\n-                if (thirdPartyNameToFullModuleName \u003d\u003d null) {\n-                    thirdPartyNameToFullModuleName \u003d\n+                if (thirdPartyNameToFullModuleNames \u003d\u003d null) {\n+                    thirdPartyNameToFullModuleNames \u003d\n                             generateThirdPartyNameToFullModuleName(moduleClassLoader);\n                 }\n-                instance \u003d createObjectFromMap(name, thirdPartyNameToFullModuleName);\n+                instance \u003d createObjectFromMap(name, thirdPartyNameToFullModuleNames);\n             }\n         }\n \n         if (instance \u003d\u003d null) {\n             instance \u003d createObject(name);\n         }\n         final String nameCheck \u003d name + CHECK_SUFFIX;\n         if (instance \u003d\u003d null) {\n             instance \u003d createObject(nameCheck);\n         }\n         if (instance \u003d\u003d null) {\n             final String attemptedNames \u003d joinPackageNamesWithClassName(name, packages)\n                     + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n                     + joinPackageNamesWithClassName(nameCheck, packages);\n             final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n                 Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n                 new String[] {name, attemptedNames}, null, getClass(), null);\n             throw new CheckstyleException(exceptionMessage.getMessage());\n         }\n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "ddeb553834f10570089a033fa1ac1501b74ac358": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3607: (using Guava) Use reflection to load Checks base on checkstyle_packages.xml\n",
      "commitDate": 1495140203000,
      "commitName": "ddeb553834f10570089a033fa1ac1501b74ac358",
      "commitAuthor": "Luolc",
      "commitDateOld": 1491395871000,
      "commitNameOld": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 43.34,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,32 @@\n     public Object createModule(String name) throws CheckstyleException {\n-        Object instance \u003d createObjectFromMap(name);\n+        Object instance \u003d null;\n+        // if the name is a simple class name, try to find it in maps at first\n+        if (!name.contains(PACKAGE_SEPARATOR)) {\n+            instance \u003d createObjectFromMap(name, NAME_TO_FULL_MODULE_NAME);\n+            if (instance \u003d\u003d null) {\n+                if (thirdPartyNameToFullModuleName \u003d\u003d null) {\n+                    thirdPartyNameToFullModuleName \u003d\n+                            generateThirdPartyNameToFullModuleName(moduleClassLoader);\n+                }\n+                instance \u003d createObjectFromMap(name, thirdPartyNameToFullModuleName);\n+            }\n+        }\n+\n         if (instance \u003d\u003d null) {\n-            instance \u003d createObjectWithIgnoringProblems(name, getAllPossibleNames(name));\n+            instance \u003d createObject(name);\n+        }\n+        final String nameCheck \u003d name + CHECK_SUFFIX;\n+        if (instance \u003d\u003d null) {\n+            instance \u003d createObject(nameCheck);\n         }\n         if (instance \u003d\u003d null) {\n-            final String nameCheck \u003d name + CHECK_SUFFIX;\n-            instance \u003d createObjectWithIgnoringProblems(nameCheck, getAllPossibleNames(nameCheck));\n-            if (instance \u003d\u003d null) {\n-\n-                final String attemptedNames \u003d joinPackageNamesWithClassName(name, packages)\n-                        + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n-                        + joinPackageNamesWithClassName(nameCheck, packages);\n-                final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n-                    Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n-                    new String[] {name, attemptedNames}, null, getClass(), null);\n-                throw new CheckstyleException(exceptionMessage.getMessage());\n-            }\n+            final String attemptedNames \u003d joinPackageNamesWithClassName(name, packages)\n+                    + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n+                    + joinPackageNamesWithClassName(nameCheck, packages);\n+            final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n+                Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n+                new String[] {name, attemptedNames}, null, getClass(), null);\n+            throw new CheckstyleException(exceptionMessage.getMessage());\n         }\n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "d24405c088612098d48e0ee1f5c9e9f264611ad9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3184: Make hardcoded map with all module names that in checkstyle\n",
      "commitDate": 1482270285000,
      "commitName": "d24405c088612098d48e0ee1f5c9e9f264611ad9",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": 1478669414000,
      "commitNameOld": "8c8fee7432c89b47936c27bcc2c7f60f5cc79923",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 41.68,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,21 @@\n     public Object createModule(String name) throws CheckstyleException {\n-        Object instance \u003d createObjectWithIgnoringProblems(name, getAllPossibleNames(name));\n+        Object instance \u003d createObjectFromMap(name);\n         if (instance \u003d\u003d null) {\n-            final String nameCheck \u003d name + \"Check\";\n+            instance \u003d createObjectWithIgnoringProblems(name, getAllPossibleNames(name));\n+        }\n+        if (instance \u003d\u003d null) {\n+            final String nameCheck \u003d name + CHECK_SUFFIX;\n             instance \u003d createObjectWithIgnoringProblems(nameCheck, getAllPossibleNames(nameCheck));\n             if (instance \u003d\u003d null) {\n \n                 final String attemptedNames \u003d joinPackageNamesWithClassName(name, packages)\n                         + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n                         + joinPackageNamesWithClassName(nameCheck, packages);\n                 final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n                     Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n                     new String[] {name, attemptedNames}, null, getClass(), null);\n                 throw new CheckstyleException(exceptionMessage.getMessage());\n             }\n         }\n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "9eafaedfc010a179c284df98162c4d3ab8ab2645": {
      "type": "Ybodychange",
      "commitMessage": "Pull #3406: Replace Guava\u0027s Joiner with Java 8 native approach\n\n",
      "commitDate": 1473207257000,
      "commitName": "9eafaedfc010a179c284df98162c4d3ab8ab2645",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1455633134000,
      "commitNameOld": "6b82f01378346226e0c999370c0e614cc6af878b",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 203.4,
      "commitsBetweenForRepo": 422,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public Object createModule(String name) throws CheckstyleException {\n         Object instance \u003d createObjectWithIgnoringProblems(name, getAllPossibleNames(name));\n         if (instance \u003d\u003d null) {\n             final String nameCheck \u003d name + \"Check\";\n             instance \u003d createObjectWithIgnoringProblems(nameCheck, getAllPossibleNames(nameCheck));\n             if (instance \u003d\u003d null) {\n \n-                final String attemptedNames \u003d joinPackageNamesWithClassName(name)\n+                final String attemptedNames \u003d joinPackageNamesWithClassName(name, packages)\n                         + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n-                        + joinPackageNamesWithClassName(nameCheck);\n+                        + joinPackageNamesWithClassName(nameCheck, packages);\n                 final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n                     Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n                     new String[] {name, attemptedNames}, null, getClass(), null);\n                 throw new CheckstyleException(exceptionMessage.getMessage());\n             }\n         }\n         return instance;\n     }\n\\ No newline at end of file\n"
    },
    "6b82f01378346226e0c999370c0e614cc6af878b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1159: Resolve PMD ExceptionAsFlowControl in PackageObjectFactory\n",
      "commitDate": 1455633134000,
      "commitName": "6b82f01378346226e0c999370c0e614cc6af878b",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 42.59,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n-    public Object createModule(String name)\n-        throws CheckstyleException {\n-        try {\n-            return doMakeObject(name);\n-        }\n-        catch (final CheckstyleException ignored) {\n-            //try again with suffix \"Check\"\n-            try {\n-                return doMakeObject(name + \"Check\");\n-            }\n-            catch (final CheckstyleException ex) {\n+    public Object createModule(String name) throws CheckstyleException {\n+        Object instance \u003d createObjectWithIgnoringProblems(name, getAllPossibleNames(name));\n+        if (instance \u003d\u003d null) {\n+            final String nameCheck \u003d name + \"Check\";\n+            instance \u003d createObjectWithIgnoringProblems(nameCheck, getAllPossibleNames(nameCheck));\n+            if (instance \u003d\u003d null) {\n+\n+                final String attemptedNames \u003d joinPackageNamesWithClassName(name)\n+                        + STRING_SEPARATOR + nameCheck + STRING_SEPARATOR\n+                        + joinPackageNamesWithClassName(nameCheck);\n                 final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n                     Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n-                    new String[] {name, joinPackageNamesWithClassName(name)},\n-                    null, getClass(), null);\n-                throw new CheckstyleException(exceptionMessage.getMessage(), ex);\n+                    new String[] {name, attemptedNames}, null, getClass(), null);\n+                throw new CheckstyleException(exceptionMessage.getMessage());\n             }\n         }\n+        return instance;\n     }\n\\ No newline at end of file\n"
    },
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2616: Fix CatchParameterName check violations in Checkstyle code\n",
      "commitDate": 1449184604000,
      "commitName": "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1447334843000,
      "commitNameOld": "c171f82794b15cfdac1c076040ed0eff58995d00",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 21.41,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public Object createModule(String name)\n         throws CheckstyleException {\n         try {\n             return doMakeObject(name);\n         }\n         catch (final CheckstyleException ignored) {\n             //try again with suffix \"Check\"\n             try {\n                 return doMakeObject(name + \"Check\");\n             }\n-            catch (final CheckstyleException ex2) {\n+            catch (final CheckstyleException ex) {\n                 final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n                     Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n                     new String[] {name, joinPackageNamesWithClassName(name)},\n                     null, getClass(), null);\n-                throw new CheckstyleException(exceptionMessage.getMessage(), ex2);\n+                throw new CheckstyleException(exceptionMessage.getMessage(), ex);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "bd9efb5e66d8a99fb1bd616213e4966d088d6932": {
      "type": "Ybodychange",
      "commitMessage": "Issue #759: Create wide message for CheckstyleException in PackageObjectFactory\n",
      "commitDate": 1441983885000,
      "commitName": "bd9efb5e66d8a99fb1bd616213e4966d088d6932",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": 1441328775000,
      "commitNameOld": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 7.58,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n     public Object createModule(String name)\n         throws CheckstyleException {\n         try {\n             return doMakeObject(name);\n         }\n         catch (final CheckstyleException ignored) {\n             //try again with suffix \"Check\"\n             try {\n                 return doMakeObject(name + \"Check\");\n             }\n             catch (final CheckstyleException ex2) {\n-                throw new CheckstyleException(\n-                    UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE + name, ex2);\n+                final LocalizedMessage exceptionMessage \u003d new LocalizedMessage(0,\n+                    Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,\n+                    new String[] {name, joinPackageNamesWithClassName(name)},\n+                    null, getClass(), null);\n+                throw new CheckstyleException(exceptionMessage.getMessage(), ex2);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations partial fix\n",
      "commitDate": 1440504773000,
      "commitName": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1440243226000,
      "commitNameOld": "8abfa48f2eb5edaf3f5a2cc2350e4e3c232f4152",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public Object createModule(String name)\n         throws CheckstyleException {\n         try {\n             return doMakeObject(name);\n         }\n         catch (final CheckstyleException ignored) {\n             //try again with suffix \"Check\"\n             try {\n                 return doMakeObject(name + \"Check\");\n             }\n             catch (final CheckstyleException ex2) {\n                 throw new CheckstyleException(\n-                    \"Unable to instantiate \" + name, ex2);\n+                    UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE + name, ex2);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": {
      "type": "Ybodychange",
      "commitMessage": "Rename ignored catch parameters. #1555\n\nFixes `UnusedCatchParameter` inspection violations.\n\nDescription:\nReports any catch parameters that are unused in their corresponding blocks. This inspection will not report any catch parameters named \"ignore\" or \"ignored\". Conversely this inspection will warn on any catch parameters named \"ignore\" or \"ignored\" that are actually used.\n",
      "commitDate": 1439011061000,
      "commitName": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439007455000,
      "commitNameOld": "a2bfd59729017b80d4167505fdcfed28d17ca5ee",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public Object createModule(String name)\n         throws CheckstyleException {\n         try {\n             return doMakeObject(name);\n         }\n-        catch (final CheckstyleException ex) {\n+        catch (final CheckstyleException ignored) {\n             //try again with suffix \"Check\"\n             try {\n                 return doMakeObject(name + \"Check\");\n             }\n             catch (final CheckstyleException ex2) {\n                 throw new CheckstyleException(\n                     \"Unable to instantiate \" + name, ex2);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152243235000,
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public Object createModule(String aName)\n         throws CheckstyleException\n     {\n         try {\n             return doMakeObject(aName);\n         }\n-        catch (CheckstyleException ex) {\n+        catch (final CheckstyleException ex) {\n             //try again with suffix \"Check\"\n             try {\n                 return doMakeObject(aName + \"Check\");\n             }\n-            catch (CheckstyleException ex2) {\n+            catch (final CheckstyleException ex2) {\n                 throw new CheckstyleException(\n                     \"Unable to instantiate \" + aName, ex2);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "eeba08c1028a79bdc2140476b24ce8d60f04657a": {
      "type": "Ybodychange",
      "commitMessage": "CheckstyleException now supports nested exceptions\n",
      "commitDate": 1044387167000,
      "commitName": "eeba08c1028a79bdc2140476b24ce8d60f04657a",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1040020006000,
      "commitNameOld": "88e89a138aa39f50f7642106cde6568f6e07783f",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 50.55,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public Object createModule(String aName)\n         throws CheckstyleException\n     {\n         try {\n             return doMakeObject(aName);\n         }\n         catch (CheckstyleException ex) {\n             //try again with suffix \"Check\"\n             try {\n                 return doMakeObject(aName + \"Check\");\n             }\n             catch (CheckstyleException ex2) {\n                 throw new CheckstyleException(\n-                    \"Unable to instantiate \" + aName);\n+                    \"Unable to instantiate \" + aName, ex2);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "88e89a138aa39f50f7642106cde6568f6e07783f": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Changed implementation of module name resolution from inheritance to delegation approach\n",
      "commitDate": 1040020006000,
      "commitName": "88e89a138aa39f50f7642106cde6568f6e07783f",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Ymodifierchange",
        "Ybodychange"
      ]
    },
    "958d0dae4d97b4122c7e54ce1b1bc23c0b00e6a0": {
      "type": "Ybodychange",
      "commitMessage": "if instantiating with aName fails, try aName + \"Check\" (Lars\u0027 suggestion)\n",
      "commitDate": 1039954207000,
      "commitName": "958d0dae4d97b4122c7e54ce1b1bc23c0b00e6a0",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1039263843000,
      "commitNameOld": "9d4233b0b73e975aa752ff78ba16b40e65ece864",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 7.99,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,20 @@\n     public static Object makeObject(String[] aPackages, ClassLoader aLoader,\n         String aName)\n         throws CheckstyleException\n     {\n         final PackageObjectFactory factory \u003d new PackageObjectFactory();\n-        return factory.doMakeObject(aPackages, aLoader, aName);\n+        try {\n+            return factory.doMakeObject(aPackages, aLoader, aName);\n+        }\n+        catch (CheckstyleException ex) {\n+            //try again with suffix \"Check\"\n+            try {\n+                return factory.\n+                    doMakeObject(aPackages, aLoader, aName + \"Check\");\n+            }\n+            catch (CheckstyleException ex2) {\n+                throw new CheckstyleException(\n+                    \"Unable to instantiate \" + aName);\n+            }\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "eb68cde2e314d594ccde45e0716fe75b9770fa37": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Correct Javadoc\n",
      "commitDate": 1039135106000,
      "commitName": "eb68cde2e314d594ccde45e0716fe75b9770fa37",
      "commitAuthor": "Rick Giles",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "16ba5b35f9f346e7cea294afaad7f9211605ecaa": {
      "type": "Yintroduced",
      "commitMessage": "modified for config XML and mapping names to full class names - see\nposting to checkstyle-devel@lists.sourceforge.net\n",
      "commitDate": 1039114468000,
      "commitName": "16ba5b35f9f346e7cea294afaad7f9211605ecaa",
      "commitAuthor": "Rick Giles"
    }
  }
}