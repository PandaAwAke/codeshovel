{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "InnerAssignmentCheck.java",
  "functionName": "isInContext",
  "functionId": "isInContext___ast-DetailAST__contextSet-int[]",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java",
  "functionStartLine": 226,
  "functionEndLine": 246,
  "changeHistory": [
    "d5129db907a1a405a49bcabeb275ed2e25cb26db",
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1",
    "e6538f822f3fb690d01b3f27aabb6785d9732a29",
    "779d30b7599259bb25f5178cbb28f2a038992553",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "2554557c1c4dda6cb348ba053a60c17d8ada9f73"
  ],
  "changeHistoryShort": {
    "d5129db907a1a405a49bcabeb275ed2e25cb26db": "Ybodychange",
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1": "Ybodychange",
    "e6538f822f3fb690d01b3f27aabb6785d9732a29": "Ybodychange",
    "779d30b7599259bb25f5178cbb28f2a038992553": "Ybodychange",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": "Yparameterchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "2554557c1c4dda6cb348ba053a60c17d8ada9f73": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5129db907a1a405a49bcabeb275ed2e25cb26db": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary local variables. #1555\n\nFixes `UnnecessaryLocalVariable` inspection violations.\n\nDescription:\n\u003eReports unnecessary local variables, which add nothing to the comprehensibility of a method. Variables caught include local variables which are immediately returned, local variables that are immediately assigned to another variable and then not used, and local variables which always have the same value as another local variable or parameter.\n",
      "commitDate": 1440243393000,
      "commitName": "d5129db907a1a405a49bcabeb275ed2e25cb26db",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440047165000,
      "commitNameOld": "0da1e4d980420f6abb465af441e5ced254698273",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 2.27,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     private static boolean isInContext(DetailAST ast, int[]... contextSet) {\n         boolean found \u003d false;\n         for (int[] element : contextSet) {\n             DetailAST current \u003d ast;\n             for (int anElement : element) {\n                 current \u003d current.getParent();\n-                final int expectedType \u003d anElement;\n-                if (current.getType() \u003d\u003d expectedType) {\n+                if (current.getType() \u003d\u003d anElement) {\n                     found \u003d true;\n                 }\n                 else {\n                     found \u003d false;\n                     break;\n                 }\n             }\n \n             if (found) {\n                 break;\n             }\n         }\n         return found;\n     }\n\\ No newline at end of file\n"
    },
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1": {
      "type": "Ybodychange",
      "commitMessage": "Invert if statements with negated conditions. #1555\n\nFixes `NegatedIfElse` inspection violations.\n\nDescription:\n\u003eReports if statements which contain else branches and whose conditions are negated. Flipping the order of the if and else branches will usually increase the clarity of such statements.\n",
      "commitDate": 1439189206000,
      "commitName": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566538000,
      "commitNameOld": "e6538f822f3fb690d01b3f27aabb6785d9732a29",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 7.21,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private static boolean isInContext(DetailAST ast, int[]... contextSet) {\n         boolean found \u003d false;\n         for (int[] element : contextSet) {\n             DetailAST current \u003d ast;\n             for (int anElement : element) {\n                 current \u003d current.getParent();\n                 final int expectedType \u003d anElement;\n-                if (current.getType() !\u003d expectedType) {\n-                    found \u003d false;\n-                    break;\n+                if (current.getType() \u003d\u003d expectedType) {\n+                    found \u003d true;\n                 }\n                 else {\n-                    found \u003d true;\n+                    found \u003d false;\n+                    break;\n                 }\n             }\n \n             if (found) {\n                 break;\n             }\n         }\n         return found;\n     }\n\\ No newline at end of file\n"
    },
    "e6538f822f3fb690d01b3f27aabb6785d9732a29": {
      "type": "Ybodychange",
      "commitMessage": "Replace \u0027for\u0027 loop with \u0027foreach\u0027. #1538\n",
      "commitDate": 1438566538000,
      "commitName": "e6538f822f3fb690d01b3f27aabb6785d9732a29",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437782381000,
      "commitNameOld": "779d30b7599259bb25f5178cbb28f2a038992553",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 9.08,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n     private static boolean isInContext(DetailAST ast, int[]... contextSet) {\n         boolean found \u003d false;\n         for (int[] element : contextSet) {\n             DetailAST current \u003d ast;\n-            final int len \u003d element.length;\n-            for (int j \u003d 0; j \u003c len; j++) {\n+            for (int anElement : element) {\n                 current \u003d current.getParent();\n-                final int expectedType \u003d element[j];\n+                final int expectedType \u003d anElement;\n                 if (current.getType() !\u003d expectedType) {\n                     found \u003d false;\n                     break;\n                 }\n                 else {\n                     found \u003d true;\n                 }\n             }\n \n             if (found) {\n                 break;\n             }\n         }\n         return found;\n     }\n\\ No newline at end of file\n"
    },
    "779d30b7599259bb25f5178cbb28f2a038992553": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Refactoring of InnerAssignmentCheck\n",
      "commitDate": 1437782381000,
      "commitName": "779d30b7599259bb25f5178cbb28f2a038992553",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 1.75,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,23 @@\n     private static boolean isInContext(DetailAST ast, int[]... contextSet) {\n+        boolean found \u003d false;\n         for (int[] element : contextSet) {\n             DetailAST current \u003d ast;\n             final int len \u003d element.length;\n             for (int j \u003d 0; j \u003c len; j++) {\n                 current \u003d current.getParent();\n                 final int expectedType \u003d element[j];\n-                if (current \u003d\u003d null || current.getType() !\u003d expectedType) {\n+                if (current.getType() !\u003d expectedType) {\n+                    found \u003d false;\n                     break;\n                 }\n-                if (j \u003d\u003d len - 1) {\n-                    return true;\n+                else {\n+                    found \u003d true;\n                 }\n             }\n+\n+            if (found) {\n+                break;\n+            }\n         }\n-        return false;\n+        return found;\n     }\n\\ No newline at end of file\n"
    },
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": {
      "type": "Yparameterchange",
      "commitMessage": "Fix PMD violations from UseVarargs rule, issue #999\n\nThe changes are fully backward-compatible. Method with vararg can be invoked both using array and list of parameters.\n",
      "commitDate": 1430353274000,
      "commitName": "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1426023398000,
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 50.11,
      "commitsBetweenForRepo": 246,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-    private static boolean isInContext(DetailAST ast, int[][] contextSet)\n+    private static boolean isInContext(DetailAST ast, int[]... contextSet)\n     {\n         for (int[] element : contextSet) {\n             DetailAST current \u003d ast;\n             final int len \u003d element.length;\n             for (int j \u003d 0; j \u003c len; j++) {\n                 current \u003d current.getParent();\n                 final int expectedType \u003d element[j];\n                 if (current \u003d\u003d null || current.getType() !\u003d expectedType) {\n                     break;\n                 }\n                 if (j \u003d\u003d len - 1) {\n                     return true;\n                 }\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": 1426023398000,
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1424437367000,
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private static boolean isInContext(DetailAST ast, int[][] contextSet)\n     {\n         for (int[] element : contextSet) {\n             DetailAST current \u003d ast;\n             final int len \u003d element.length;\n             for (int j \u003d 0; j \u003c len; j++) {\n                 current \u003d current.getParent();\n                 final int expectedType \u003d element[j];\n-                if ((current \u003d\u003d null) || (current.getType() !\u003d expectedType)) {\n+                if (current \u003d\u003d null || current.getType() !\u003d expectedType) {\n                     break;\n                 }\n                 if (j \u003d\u003d len - 1) {\n                     return true;\n                 }\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": {
      "type": "Ybodychange",
      "commitMessage": "Use the new syntactic sugar \"for loop\".\n\nEnd of the cosmetic changes.\n",
      "commitDate": 1197714527000,
      "commitName": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.82,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private static boolean isInContext(DetailAST aAST, int[][] aContextSet)\n     {\n-        for (int i \u003d 0; i \u003c aContextSet.length; i++) {\n+        for (int[] element : aContextSet) {\n             DetailAST current \u003d aAST;\n-            final int len \u003d aContextSet[i].length;\n+            final int len \u003d element.length;\n             for (int j \u003d 0; j \u003c len; j++) {\n                 current \u003d current.getParent();\n-                final int expectedType \u003d aContextSet[i][j];\n+                final int expectedType \u003d element[j];\n                 if ((current \u003d\u003d null) || (current.getType() !\u003d expectedType)) {\n                     break;\n                 }\n                 if (j \u003d\u003d len - 1) {\n                     return true;\n                 }\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": 1152242806000,
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1133636547000,
      "commitNameOld": "a81008fd6fd383b6acb39866355aae8a750a326f",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 215.35,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private static boolean isInContext(DetailAST aAST, int[][] aContextSet)\n     {\n         for (int i \u003d 0; i \u003c aContextSet.length; i++) {\n             DetailAST current \u003d aAST;\n             final int len \u003d aContextSet[i].length;\n             for (int j \u003d 0; j \u003c len; j++) {\n                 current \u003d current.getParent();\n                 final int expectedType \u003d aContextSet[i][j];\n-                if (current \u003d\u003d null || current.getType() !\u003d expectedType) {\n+                if ((current \u003d\u003d null) || (current.getType() !\u003d expectedType)) {\n                     break;\n                 }\n                 if (j \u003d\u003d len - 1) {\n                     return true;\n                 }\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n"
    },
    "2554557c1c4dda6cb348ba053a60c17d8ada9f73": {
      "type": "Yintroduced",
      "commitMessage": "fixed bug #1195047, InnerAssignment check didn\u0027t find all instances of inner assignments\n",
      "commitDate": 1130053783000,
      "commitName": "2554557c1c4dda6cb348ba053a60c17d8ada9f73",
      "commitAuthor": "Lars Kühne"
    }
  }
}