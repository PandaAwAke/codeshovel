{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "CovariantEqualsCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java",
  "functionStartLine": 74,
  "functionEndLine": 105,
  "changeHistory": [
    "2880edd6554400955fb950bf8127311c436d2a7a",
    "f7309c44049963f36cd332c369cc267244aaaf63",
    "27149f3504a2f350b74f456a9bffbae76a460060",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "08638b5f739d9929698860048c052da2d5f80209",
    "c38185458ab824874b8465c46b4dc42646440aaa",
    "c044038c3b932586c0d384b614254cc2d1838838",
    "d91d824ac797f1901858507d1b7b36b08c499569",
    "a03dc8c1c9b1a7308be5e92324efab3413f6a771",
    "9eb27f99a33fb67020c697bc2e4c5643aee0ae03",
    "e03dd7a0a03f9cf91e466ebee911ef0fa10130a4",
    "71d92d649fabf6cc0a88e9bba1dab411f7fe339a"
  ],
  "changeHistoryShort": {
    "2880edd6554400955fb950bf8127311c436d2a7a": "Ybodychange",
    "f7309c44049963f36cd332c369cc267244aaaf63": "Ybodychange",
    "27149f3504a2f350b74f456a9bffbae76a460060": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": "Ybodychange",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "08638b5f739d9929698860048c052da2d5f80209": "Ybodychange",
    "c38185458ab824874b8465c46b4dc42646440aaa": "Ybodychange",
    "c044038c3b932586c0d384b614254cc2d1838838": "Ybodychange",
    "d91d824ac797f1901858507d1b7b36b08c499569": "Ybodychange",
    "a03dc8c1c9b1a7308be5e92324efab3413f6a771": "Ybodychange",
    "9eb27f99a33fb67020c697bc2e4c5643aee0ae03": "Ybodychange",
    "e03dd7a0a03f9cf91e466ebee911ef0fa10130a4": "Ybodychange",
    "71d92d649fabf6cc0a88e9bba1dab411f7fe339a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2880edd6554400955fb950bf8127311c436d2a7a": {
      "type": "Ybodychange",
      "commitMessage": "Decrease scope of variables. #1538\n",
      "commitDate": 1438566538000,
      "commitName": "2880edd6554400955fb950bf8127311c436d2a7a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1436942781000,
      "commitNameOld": "f7309c44049963f36cd332c369cc267244aaaf63",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 18.79,
      "commitsBetweenForRepo": 219,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void visitToken(DetailAST ast) {\n         equalsMethods.clear();\n-        boolean hasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d objBlock.getFirstChild();\n+            boolean hasEqualsObject \u003d false;\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF\n                         \u0026\u0026 CheckUtils.isEqualsMethod(child)) {\n                     if (isFirstParameterObject(child)) {\n                         hasEqualsObject \u003d true;\n                     }\n                     else {\n                         equalsMethods.add(child);\n                     }\n                 }\n                 child \u003d child.getNextSibling();\n             }\n \n             // report equals method definitions\n             if (!hasEqualsObject) {\n                 for (DetailAST equalsAST : equalsMethods) {\n                     final DetailAST nameNode \u003d equalsAST\n                             .findFirstToken(TokenTypes.IDENT);\n                     log(nameNode.getLineNo(), nameNode.getColumnNo(),\n                             MSG_KEY);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f7309c44049963f36cd332c369cc267244aaaf63": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Refactorgin of CovariantEqualsCheck\n",
      "commitDate": 1436942781000,
      "commitName": "f7309c44049963f36cd332c369cc267244aaaf63",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 58.79,
      "commitsBetweenForRepo": 365,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void visitToken(DetailAST ast) {\n         equalsMethods.clear();\n         boolean hasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF\n                         \u0026\u0026 CheckUtils.isEqualsMethod(child)) {\n-                    if (hasObjectParameter(child)) {\n+                    if (isFirstParameterObject(child)) {\n                         hasEqualsObject \u003d true;\n                     }\n                     else {\n                         equalsMethods.add(child);\n                     }\n                 }\n                 child \u003d child.getNextSibling();\n             }\n \n             // report equals method definitions\n             if (!hasEqualsObject) {\n                 for (DetailAST equalsAST : equalsMethods) {\n                     final DetailAST nameNode \u003d equalsAST\n                             .findFirstToken(TokenTypes.IDENT);\n                     log(nameNode.getLineNo(), nameNode.getColumnNo(),\n                             MSG_KEY);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "27149f3504a2f350b74f456a9bffbae76a460060": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, coding package, issue #537\n",
      "commitDate": 1424437367000,
      "commitName": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public void visitToken(DetailAST ast)\n     {\n         equalsMethods.clear();\n         boolean hasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF\n                         \u0026\u0026 CheckUtils.isEqualsMethod(child))\n                 {\n                     if (hasObjectParameter(child)) {\n                         hasEqualsObject \u003d true;\n                     }\n                     else {\n                         equalsMethods.add(child);\n                     }\n                 }\n                 child \u003d child.getNextSibling();\n             }\n \n             // report equals method definitions\n             if (!hasEqualsObject) {\n                 for (DetailAST equalsAST : equalsMethods) {\n                     final DetailAST nameNode \u003d equalsAST\n                             .findFirstToken(TokenTypes.IDENT);\n                     log(nameNode.getLineNo(), nameNode.getColumnNo(),\n-                            \"covariant.equals\");\n+                            MSG_KEY);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": 1421677214000,
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": {
      "type": "Ybodychange",
      "commitMessage": "poartial fix for #46 - Sonarqube found problems in Checkstyle\n",
      "commitDate": 1386263571000,
      "commitName": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1380946942000,
      "commitNameOld": "788f87df4db1368ee0563e1ba1199177618cc01f",
      "commitAuthorOld": "picomancer",
      "daysBetweenCommits": 61.54,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public void visitToken(DetailAST aAST)\n     {\n         mEqualsMethods.clear();\n         boolean hasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d objBlock.getFirstChild();\n             while (child !\u003d null) {\n-                if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n-                    if (CheckUtils.isEqualsMethod(child)) {\n-                        if (hasObjectParameter(child)) {\n-                            hasEqualsObject \u003d true;\n-                        }\n-                        else {\n-                            mEqualsMethods.add(child);\n-                        }\n+                if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF\n+                        \u0026\u0026 CheckUtils.isEqualsMethod(child))\n+                {\n+                    if (hasObjectParameter(child)) {\n+                        hasEqualsObject \u003d true;\n+                    }\n+                    else {\n+                        mEqualsMethods.add(child);\n                     }\n                 }\n                 child \u003d child.getNextSibling();\n             }\n \n             // report equals method definitions\n             if (!hasEqualsObject) {\n                 for (DetailAST equalsAST : mEqualsMethods) {\n                     final DetailAST nameNode \u003d equalsAST\n                             .findFirstToken(TokenTypes.IDENT);\n                     log(nameNode.getLineNo(), nameNode.getColumnNo(),\n                             \"covariant.equals\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": 1221737656000,
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1208867287000,
      "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 148.96,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public void visitToken(DetailAST aAST)\n     {\n         mEqualsMethods.clear();\n         boolean hasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         if (objBlock !\u003d null) {\n-            DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n+            DetailAST child \u003d objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                     if (CheckUtils.isEqualsMethod(child)) {\n                         if (hasObjectParameter(child)) {\n                             hasEqualsObject \u003d true;\n                         }\n                         else {\n                             mEqualsMethods.add(child);\n                         }\n                     }\n                 }\n-                child \u003d (DetailAST) child.getNextSibling();\n+                child \u003d child.getNextSibling();\n             }\n \n             // report equals method definitions\n             if (!hasEqualsObject) {\n                 for (DetailAST equalsAST : mEqualsMethods) {\n                     final DetailAST nameNode \u003d equalsAST\n                             .findFirstToken(TokenTypes.IDENT);\n                     log(nameNode.getLineNo(), nameNode.getColumnNo(),\n                             \"covariant.equals\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "08638b5f739d9929698860048c052da2d5f80209": {
      "type": "Ybodychange",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": 1197700618000,
      "commitName": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,34 @@\n     public void visitToken(DetailAST aAST)\n     {\n         mEqualsMethods.clear();\n         boolean hasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                     if (CheckUtils.isEqualsMethod(child)) {\n                         if (hasObjectParameter(child)) {\n                             hasEqualsObject \u003d true;\n                         }\n                         else {\n                             mEqualsMethods.add(child);\n                         }\n                     }\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n \n             // report equals method definitions\n             if (!hasEqualsObject) {\n-                final Iterator it \u003d mEqualsMethods.iterator();\n-                while (it.hasNext()) {\n-                    final DetailAST equalsAST \u003d (DetailAST) it.next();\n-                    final DetailAST nameNode \u003d\n-                        equalsAST.findFirstToken(TokenTypes.IDENT);\n-                    log(\n-                        nameNode.getLineNo(),\n-                        nameNode.getColumnNo(),\n-                        \"covariant.equals\");\n+                for (DetailAST equalsAST : mEqualsMethods) {\n+                    final DetailAST nameNode \u003d equalsAST\n+                            .findFirstToken(TokenTypes.IDENT);\n+                    log(nameNode.getLineNo(), nameNode.getColumnNo(),\n+                            \"covariant.equals\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c38185458ab824874b8465c46b4dc42646440aaa": {
      "type": "Ybodychange",
      "commitMessage": "Code cleanup\n",
      "commitDate": 1137847382000,
      "commitName": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 81.72,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     public void visitToken(DetailAST aAST)\n     {\n         mEqualsMethods.clear();\n-        mHasEqualsObject \u003d false;\n+        boolean hasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                     if (CheckUtils.isEqualsMethod(child)) {\n                         if (hasObjectParameter(child)) {\n-                            mHasEqualsObject \u003d true;\n+                            hasEqualsObject \u003d true;\n                         }\n                         else {\n                             mEqualsMethods.add(child);\n                         }\n                     }\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n \n             // report equals method definitions\n-            if (!mHasEqualsObject) {\n+            if (!hasEqualsObject) {\n                 final Iterator it \u003d mEqualsMethods.iterator();\n                 while (it.hasNext()) {\n                     final DetailAST equalsAST \u003d (DetailAST) it.next();\n                     final DetailAST nameNode \u003d\n                         equalsAST.findFirstToken(TokenTypes.IDENT);\n                     log(\n                         nameNode.getLineNo(),\n                         nameNode.getColumnNo(),\n                         \"covariant.equals\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c044038c3b932586c0d384b614254cc2d1838838": {
      "type": "Ybodychange",
      "commitMessage": "Added NPathComplexity, ClassDataAbstractionCoupling,\nBooleanExpressionComplexity and ClassFanOutComplexity checks\ncontributed by Simon Harris (requests 750757, 750758, 750760 and\n750759).\nIsEqualsMethod() moved from CovariantEqualsCheck to ChecUtils.\n\nTODO: add documentation.\n",
      "commitDate": 1073030748000,
      "commitName": "c044038c3b932586c0d384b614254cc2d1838838",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1056709352000,
      "commitNameOld": "5be2f0b7997b8742989117e6e29c5089cea08a8d",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 188.91,
      "commitsBetweenForRepo": 252,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     public void visitToken(DetailAST aAST)\n     {\n         mEqualsMethods.clear();\n         mHasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         if (objBlock !\u003d null) {\n             DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n             while (child !\u003d null) {\n                 if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n-                    if (isEqualsMethod(child)) {\n+                    if (CheckUtils.isEqualsMethod(child)) {\n                         if (hasObjectParameter(child)) {\n                             mHasEqualsObject \u003d true;\n                         }\n                         else {\n                             mEqualsMethods.add(child);\n                         }\n                     }\n                 }\n                 child \u003d (DetailAST) child.getNextSibling();\n             }\n \n             // report equals method definitions\n             if (!mHasEqualsObject) {\n                 final Iterator it \u003d mEqualsMethods.iterator();\n                 while (it.hasNext()) {\n                     final DetailAST equalsAST \u003d (DetailAST) it.next();\n                     final DetailAST nameNode \u003d\n                         equalsAST.findFirstToken(TokenTypes.IDENT);\n                     log(\n                         nameNode.getLineNo(),\n                         nameNode.getColumnNo(),\n                         \"covariant.equals\");\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "d91d824ac797f1901858507d1b7b36b08c499569": {
      "type": "Ybodychange",
      "commitMessage": "guard against null\n",
      "commitDate": 1056709183000,
      "commitName": "d91d824ac797f1901858507d1b7b36b08c499569",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1056707908000,
      "commitNameOld": "a03dc8c1c9b1a7308be5e92324efab3413f6a771",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n     public void visitToken(DetailAST aAST)\n     {\n         mEqualsMethods.clear();\n         mHasEqualsObject \u003d false;\n \n         // examine method definitions for equals methods\n         final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n-        DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n-        while (child !\u003d null) {\n-            if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n-                if (isEqualsMethod(child)) {\n-                    if (hasObjectParameter(child)) {\n-                        mHasEqualsObject \u003d true;\n-                    }\n-                    else {\n-                        mEqualsMethods.add(child);\n+        if (objBlock !\u003d null) {\n+            DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n+            while (child !\u003d null) {\n+                if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n+                    if (isEqualsMethod(child)) {\n+                        if (hasObjectParameter(child)) {\n+                            mHasEqualsObject \u003d true;\n+                        }\n+                        else {\n+                            mEqualsMethods.add(child);\n+                        }\n                     }\n                 }\n+                child \u003d (DetailAST) child.getNextSibling();\n             }\n-            child \u003d (DetailAST) child.getNextSibling();\n-        }\n-\n-        // report equals method definitions\n-        if (!mHasEqualsObject) {\n-            final Iterator it \u003d mEqualsMethods.iterator();\n-            while (it.hasNext()) {\n-                final DetailAST equalsAST \u003d (DetailAST) it.next();\n-                final DetailAST nameNode \u003d\n-                    equalsAST.findFirstToken(TokenTypes.IDENT);\n-                log(\n-                    nameNode.getLineNo(),\n-                    nameNode.getColumnNo(),\n-                    \"covariant.equals\");\n+    \n+            // report equals method definitions\n+            if (!mHasEqualsObject) {\n+                final Iterator it \u003d mEqualsMethods.iterator();\n+                while (it.hasNext()) {\n+                    final DetailAST equalsAST \u003d (DetailAST) it.next();\n+                    final DetailAST nameNode \u003d\n+                        equalsAST.findFirstToken(TokenTypes.IDENT);\n+                    log(\n+                        nameNode.getLineNo(),\n+                        nameNode.getColumnNo(),\n+                        \"covariant.equals\");\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "a03dc8c1c9b1a7308be5e92324efab3413f6a771": {
      "type": "Ybodychange",
      "commitMessage": "simplified algorithm\n",
      "commitDate": 1056707908000,
      "commitName": "a03dc8c1c9b1a7308be5e92324efab3413f6a771",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1056649871000,
      "commitNameOld": "9eb27f99a33fb67020c697bc2e4c5643aee0ae03",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.67,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,36 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n-            if (isEqualsMethod(aAST) \u0026\u0026 !ScopeUtils.inInterfaceBlock(aAST)) {\n-                final DetailAST definer \u003d getDefiner(aAST);\n-                if (mClassStack.isEmpty()) {\n-                    mClassStack.add(new ClassAttributes(definer));\n+        mEqualsMethods.clear();\n+        mHasEqualsObject \u003d false;\n+\n+        // examine method definitions for equals methods\n+        final DetailAST objBlock \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n+        DetailAST child \u003d (DetailAST) objBlock.getFirstChild();\n+        while (child !\u003d null) {\n+            if (child.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n+                if (isEqualsMethod(child)) {\n+                    if (hasObjectParameter(child)) {\n+                        mHasEqualsObject \u003d true;\n+                    }\n+                    else {\n+                        mEqualsMethods.add(child);\n+                    }\n                 }\n-                ClassAttributes attrs \u003d\n-                    (ClassAttributes) mClassStack.getLast();\n-                final DetailAST currentRoot \u003d attrs.getRootAST();\n-                if (definer !\u003d currentRoot) {\n-                    final ClassAttributes definerAttrs \u003d\n-                        new ClassAttributes(definer);\n-                    mClassStack.add(definerAttrs);\n-                    attrs \u003d definerAttrs;\n-                }\n-                if (hasObjectParameter(aAST)) {\n-                    attrs.setHasEqualsObject();\n-                }\n-                else {\n-                    attrs.addEqualsNode(aAST);\n-                }\n+            }\n+            child \u003d (DetailAST) child.getNextSibling();\n+        }\n+\n+        // report equals method definitions\n+        if (!mHasEqualsObject) {\n+            final Iterator it \u003d mEqualsMethods.iterator();\n+            while (it.hasNext()) {\n+                final DetailAST equalsAST \u003d (DetailAST) it.next();\n+                final DetailAST nameNode \u003d\n+                    equalsAST.findFirstToken(TokenTypes.IDENT);\n+                log(\n+                    nameNode.getLineNo(),\n+                    nameNode.getColumnNo(),\n+                    \"covariant.equals\");\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "9eb27f99a33fb67020c697bc2e4c5643aee0ae03": {
      "type": "Ybodychange",
      "commitMessage": "re-ordered tests for efficiency\n",
      "commitDate": 1056649871000,
      "commitName": "9eb27f99a33fb67020c697bc2e4c5643aee0ae03",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1056648302000,
      "commitNameOld": "e03dd7a0a03f9cf91e466ebee911ef0fa10130a4",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,26 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n-            final DetailAST definer \u003d getDefiner(aAST);\n-            final int type \u003d definer.getType();\n-            if ((type \u003d\u003d TokenTypes.CLASS_DEF)\n-                || (type \u003d\u003d TokenTypes.LITERAL_NEW))\n-            {\n+            if (isEqualsMethod(aAST) \u0026\u0026 !ScopeUtils.inInterfaceBlock(aAST)) {\n+                final DetailAST definer \u003d getDefiner(aAST);\n                 if (mClassStack.isEmpty()) {\n                     mClassStack.add(new ClassAttributes(definer));\n                 }\n-                final ClassAttributes attrs \u003d\n-                        (ClassAttributes) mClassStack.getLast();\n+                ClassAttributes attrs \u003d\n+                    (ClassAttributes) mClassStack.getLast();\n                 final DetailAST currentRoot \u003d attrs.getRootAST();\n                 if (definer !\u003d currentRoot) {\n-                    mClassStack.add(new ClassAttributes(definer));\n+                    final ClassAttributes definerAttrs \u003d\n+                        new ClassAttributes(definer);\n+                    mClassStack.add(definerAttrs);\n+                    attrs \u003d definerAttrs;\n                 }\n-                if (!ScopeUtils.inInterfaceBlock(aAST)\n-                    \u0026\u0026 isEqualsMethod(aAST))\n-                {\n-                    if (hasObjectParameter(aAST)) {\n-                        attrs.setHasEqualsObject();\n-                    }\n-                    else {\n-                        attrs.addEqualsNode(aAST);\n-                    }\n+                if (hasObjectParameter(aAST)) {\n+                    attrs.setHasEqualsObject();\n+                }\n+                else {\n+                    attrs.addEqualsNode(aAST);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "e03dd7a0a03f9cf91e466ebee911ef0fa10130a4": {
      "type": "Ybodychange",
      "commitMessage": "handle anonymous classes with CovariantEqualsCheck\n",
      "commitDate": 1056648302000,
      "commitName": "e03dd7a0a03f9cf91e466ebee911ef0fa10130a4",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1056645021000,
      "commitNameOld": "9309a784711a3510b8e8de08b3543fcc4cdb4813",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,30 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF) {\n-            //push\n-            mClassStack.add(new ClassAttributes());\n-        }\n-        else {\n-            // METHOD_DEF\n-            if (!ScopeUtils.inInterfaceBlock(aAST) \u0026\u0026 isEqualsMethod(aAST)) {\n-                final ClassAttributes attrs \u003d\n-                    (ClassAttributes) mClassStack.getLast();\n-                if (hasObjectParameter(aAST)) {\n-                    attrs.setHasEqualsObject();\n+        if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n+            final DetailAST definer \u003d getDefiner(aAST);\n+            final int type \u003d definer.getType();\n+            if ((type \u003d\u003d TokenTypes.CLASS_DEF)\n+                || (type \u003d\u003d TokenTypes.LITERAL_NEW))\n+            {\n+                if (mClassStack.isEmpty()) {\n+                    mClassStack.add(new ClassAttributes(definer));\n                 }\n-                else {\n-                    attrs.addEqualsNode(aAST);\n+                final ClassAttributes attrs \u003d\n+                        (ClassAttributes) mClassStack.getLast();\n+                final DetailAST currentRoot \u003d attrs.getRootAST();\n+                if (definer !\u003d currentRoot) {\n+                    mClassStack.add(new ClassAttributes(definer));\n+                }\n+                if (!ScopeUtils.inInterfaceBlock(aAST)\n+                    \u0026\u0026 isEqualsMethod(aAST))\n+                {\n+                    if (hasObjectParameter(aAST)) {\n+                        attrs.setHasEqualsObject();\n+                    }\n+                    else {\n+                        attrs.addEqualsNode(aAST);\n+                    }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "71d92d649fabf6cc0a88e9bba1dab411f7fe339a": {
      "type": "Yintroduced",
      "commitMessage": "check that a class that defines a covariant equals method also overrides\nequals(java.lang.Object)\n",
      "commitDate": 1056644386000,
      "commitName": "71d92d649fabf6cc0a88e9bba1dab411f7fe339a",
      "commitAuthor": "Rick Giles"
    }
  }
}