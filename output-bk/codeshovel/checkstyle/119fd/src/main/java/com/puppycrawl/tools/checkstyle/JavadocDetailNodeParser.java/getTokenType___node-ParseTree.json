{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocDetailNodeParser.java",
  "functionName": "getTokenType",
  "functionId": "getTokenType___node-ParseTree",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java",
  "functionStartLine": 412,
  "functionEndLine": 426,
  "changeHistory": [
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "ff12c1b012a1b18da8a1cd2101efd0173c612534"
  ],
  "changeHistoryShort": {
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a": "Ymovefromfile",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": "Ybodychange",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "ff12c1b012a1b18da8a1cd2101efd0173c612534": "Yintroduced"
  },
  "changeHistoryDetails": {
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a": {
      "type": "Ymovefromfile",
      "commitMessage": "Issue #652: New CLI option to print Javadoc comment parse tree\n",
      "commitDate": 1458220789000,
      "commitName": "68b49fd2843f23f55dc711a89213d59f2acf3a0a",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1458153137000,
      "commitNameOld": "888594049a74a7d8e9bbdfb5672c07db1f7ba220",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: enforce FinalLocalVariableCheck on checkstyle code\n",
      "commitDate": 1453646135000,
      "commitName": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": 1453387260000,
      "commitNameOld": "28da7d5666e32903523b1f97d830589fcb4bee4c",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static int getTokenType(ParseTree node) {\n-        int tokenType;\n+        final int tokenType;\n \n         if (node.getChildCount() \u003d\u003d 0) {\n             tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n         }\n         else {\n             final String className \u003d getNodeClassNameWithoutContext(node);\n             final String typeName \u003d\n                     CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n             tokenType \u003d JavadocUtils.getTokenId(typeName);\n         }\n \n         return tokenType;\n     }\n\\ No newline at end of file\n"
    },
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": {
      "type": "Ybodychange",
      "commitMessage": "Remove unused assignments. #1555\n\nFixes UnusedAssignment inspection violations.\n\nDescription:\n\u003eThis inspection points out the cases where a variable value is never used after its assignment, i.e.:\n- the variable never gets read after assignment OR\n- the value is always overwritten with another assignment before the next variable read OR\n - the variable initializer is redundant (for one of the above two reasons) OR\n - the variable is never used.\n",
      "commitDate": 1439007161000,
      "commitName": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439007067000,
      "commitNameOld": "7d513f08c27c741105f712dc882fd4c3553f71e7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static int getTokenType(ParseTree node) {\n-        int tokenType \u003d Integer.MIN_VALUE;\n+        int tokenType;\n \n         if (node.getChildCount() \u003d\u003d 0) {\n             tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n         }\n         else {\n             final String className \u003d getNodeClassNameWithoutContext(node);\n             final String typeName \u003d\n                     CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n             tokenType \u003d JavadocUtils.getTokenId(typeName);\n         }\n \n         return tokenType;\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "ff12c1b012a1b18da8a1cd2101efd0173c612534": {
      "type": "Yintroduced",
      "commitMessage": "Issue #49. Added support of Javadoc comments. Extended API to create Javadoc Checks.\n",
      "commitDate": 1413750761000,
      "commitName": "ff12c1b012a1b18da8a1cd2101efd0173c612534",
      "commitAuthor": "Baratali Izmailov"
    }
  }
}