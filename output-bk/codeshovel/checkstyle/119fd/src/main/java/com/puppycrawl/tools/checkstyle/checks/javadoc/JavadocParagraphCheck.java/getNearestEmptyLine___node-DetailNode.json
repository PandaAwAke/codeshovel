{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocParagraphCheck.java",
  "functionName": "getNearestEmptyLine",
  "functionId": "getNearestEmptyLine___node-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
  "functionStartLine": 227,
  "functionEndLine": 237,
  "changeHistory": [
    "4c078ba710068498ca513ce115993e30dab4562a",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b",
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1"
  ],
  "changeHistoryShort": {
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b": "Ybodychange",
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": 1437195084000,
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-    private DetailNode getNearestEmptyLine(DetailNode node) {\n+    private static DetailNode getNearestEmptyLine(DetailNode node) {\n         DetailNode newLine \u003d JavadocUtils.getPreviousSibling(node);\n         while (newLine !\u003d null) {\n             final DetailNode previousSibling \u003d JavadocUtils.getPreviousSibling(newLine);\n             if (newLine.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(newLine)) {\n                 break;\n             }\n             newLine \u003d previousSibling;\n         }\n         return newLine;\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b": {
      "type": "Ybodychange",
      "commitMessage": "Fix false positives in JavadocParagraphCheck #335\n",
      "commitDate": 1414076485000,
      "commitName": "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": 1414002319000,
      "commitNameOld": "443b98cf24c6b6b7090b83603f40ec9c88ab189f",
      "commitAuthorOld": "maxvetrenko",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n     private DetailNode getNearestEmptyLine(DetailNode aNode)\n     {\n         DetailNode newLine \u003d JavadocUtils.getPreviousSibling(aNode);\n         while (newLine !\u003d null) {\n             final DetailNode previousSibling \u003d JavadocUtils.getPreviousSibling(newLine);\n-            if (newLine.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 previousSibling !\u003d null\n-                \u0026\u0026 previousSibling.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK)\n+            if (newLine.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(newLine))\n             {\n                 break;\n             }\n             newLine \u003d previousSibling;\n         }\n         return newLine;\n     }\n\\ No newline at end of file\n"
    },
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1": {
      "type": "Yintroduced",
      "commitMessage": "JavaDocParagraph #315\n",
      "commitDate": 1413874623000,
      "commitName": "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1",
      "commitAuthor": "maxvetrenko"
    }
  }
}