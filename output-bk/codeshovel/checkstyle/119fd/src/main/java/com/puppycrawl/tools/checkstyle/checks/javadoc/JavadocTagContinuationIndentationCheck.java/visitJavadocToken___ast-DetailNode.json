{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocTagContinuationIndentationCheck.java",
  "functionName": "visitJavadocToken",
  "functionId": "visitJavadocToken___ast-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java",
  "functionStartLine": 81,
  "functionEndLine": 97,
  "changeHistory": [
    "7609e96cc998cca40b396eb3f2d7ae82f60fcce1",
    "19ffe1bb1bf4e19b71a49bf0fb61e04ca1bc812a",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "03637bdf8708da7f6dae0f934ee789e3f6ece5e8",
    "dba746ba9387bee04ed362254abb5d9ed35169cd",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "443b98cf24c6b6b7090b83603f40ec9c88ab189f",
    "ca34984cc3dcf86773cf7958f26f3816ae0dc764",
    "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc"
  ],
  "changeHistoryShort": {
    "7609e96cc998cca40b396eb3f2d7ae82f60fcce1": "Ybodychange",
    "19ffe1bb1bf4e19b71a49bf0fb61e04ca1bc812a": "Ybodychange",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "03637bdf8708da7f6dae0f934ee789e3f6ece5e8": "Ybodychange",
    "dba746ba9387bee04ed362254abb5d9ed35169cd": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "443b98cf24c6b6b7090b83603f40ec9c88ab189f": "Yfilerename",
    "ca34984cc3dcf86773cf7958f26f3816ae0dc764": "Ybodychange",
    "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7609e96cc998cca40b396eb3f2d7ae82f60fcce1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4342: Applied requested changes\n",
      "commitDate": 1495136630000,
      "commitName": "7609e96cc998cca40b396eb3f2d7ae82f60fcce1",
      "commitAuthor": "Dmytro Kytsmen",
      "commitDateOld": 1493089749000,
      "commitNameOld": "ed5d4d98da5963b658eafaaa3aaee98ba989db65",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 23.69,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public void visitJavadocToken(DetailNode ast) {\n         if (!isInlineDescription(ast)) {\n             final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(ast);\n             for (DetailNode newlineNode : textNodes) {\n                 final DetailNode textNode \u003d JavadocUtils.getNextSibling(JavadocUtils\n                         .getNextSibling(newlineNode));\n                 if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT) {\n                     final String text \u003d textNode.getText();\n-                    if (!text.trim().isEmpty()\n+                    if (!CommonUtils.isBlank(text.trim())\n                             \u0026\u0026 (text.length() \u003c\u003d offset\n                                     || !text.substring(1, offset + 1).trim().isEmpty())) {\n                         log(textNode.getLineNumber(), MSG_KEY, offset);\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "19ffe1bb1bf4e19b71a49bf0fb61e04ca1bc812a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3170: delete children from javadoc TEXT",
      "commitDate": 1479514545000,
      "commitName": "19ffe1bb1bf4e19b71a49bf0fb61e04ca1bc812a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1478030824000,
      "commitNameOld": "62926b6106cbc22cb73f08c32b964c9e6e8d8b45",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 17.17,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     public void visitJavadocToken(DetailNode ast) {\n         if (!isInlineDescription(ast)) {\n             final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(ast);\n             for (DetailNode newlineNode : textNodes) {\n                 final DetailNode textNode \u003d JavadocUtils.getNextSibling(JavadocUtils\n                         .getNextSibling(newlineNode));\n-                if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT\n-                        \u0026\u0026 textNode.getChildren().length \u003e 1) {\n-                    final DetailNode whitespace \u003d JavadocUtils.getFirstChild(textNode);\n-                    if (whitespace.getText().length() - 1 \u003c offset) {\n+                if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT) {\n+                    final String text \u003d textNode.getText();\n+                    if (!text.trim().isEmpty()\n+                            \u0026\u0026 (text.length() \u003c\u003d offset\n+                                    || !text.substring(1, offset + 1).trim().isEmpty())) {\n                         log(textNode.getLineNumber(), MSG_KEY, offset);\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": 1464356569000,
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 143.55,
      "commitsBetweenForRepo": 343,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     public void visitJavadocToken(DetailNode ast) {\n-        if (isInlineDescription(ast)) {\n-            return;\n-        }\n-        final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(ast);\n-        for (DetailNode newlineNode : textNodes) {\n-            final DetailNode textNode \u003d JavadocUtils.getNextSibling(JavadocUtils\n-                    .getNextSibling(newlineNode));\n-            if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT\n-                    \u0026\u0026 textNode.getChildren().length \u003e 1) {\n-                final DetailNode whitespace \u003d JavadocUtils.getFirstChild(textNode);\n-                if (whitespace.getText().length() - 1 \u003c offset) {\n-                    log(textNode.getLineNumber(), MSG_KEY, offset);\n+        if (!isInlineDescription(ast)) {\n+            final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(ast);\n+            for (DetailNode newlineNode : textNodes) {\n+                final DetailNode textNode \u003d JavadocUtils.getNextSibling(JavadocUtils\n+                        .getNextSibling(newlineNode));\n+                if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT\n+                        \u0026\u0026 textNode.getChildren().length \u003e 1) {\n+                    final DetailNode whitespace \u003d JavadocUtils.getFirstChild(textNode);\n+                    if (whitespace.getText().length() - 1 \u003c offset) {\n+                        log(textNode.getLineNumber(), MSG_KEY, offset);\n+                    }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "03637bdf8708da7f6dae0f934ee789e3f6ece5e8": {
      "type": "Ybodychange",
      "commitMessage": "Add test coverage to JavadocTagContinuationIndentation check. #1308\n",
      "commitDate": 1436899548000,
      "commitName": "03637bdf8708da7f6dae0f934ee789e3f6ece5e8",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 58.29,
      "commitsBetweenForRepo": 357,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n     public void visitJavadocToken(DetailNode ast) {\n         if (isInlineDescription(ast)) {\n             return;\n         }\n         final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(ast);\n         for (DetailNode newlineNode : textNodes) {\n             final DetailNode textNode \u003d JavadocUtils.getNextSibling(JavadocUtils\n                     .getNextSibling(newlineNode));\n             if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT\n                     \u0026\u0026 textNode.getChildren().length \u003e 1) {\n                 final DetailNode whitespace \u003d JavadocUtils.getFirstChild(textNode);\n-                if (whitespace.getType() \u003d\u003d JavadocTokenTypes.WS\n-                        \u0026\u0026 whitespace.getText().length() - 1 \u003c offset) {\n+                if (whitespace.getText().length() - 1 \u003c offset) {\n                     log(textNode.getLineNumber(), MSG_KEY, offset);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "dba746ba9387bee04ed362254abb5d9ed35169cd": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from PrematureDeclaration rule. #948\n",
      "commitDate": 1431536292000,
      "commitName": "dba746ba9387bee04ed362254abb5d9ed35169cd",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1430523168000,
      "commitNameOld": "31421dcdda3b3534f2fcc5c6e88a8fdbc5d15311",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 11.73,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public void visitJavadocToken(DetailNode ast)\n     {\n-        final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(ast);\n         if (isInlineDescription(ast)) {\n             return;\n         }\n+        final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(ast);\n         for (DetailNode newlineNode : textNodes) {\n             final DetailNode textNode \u003d JavadocUtils.getNextSibling(JavadocUtils\n                     .getNextSibling(newlineNode));\n             if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT\n                     \u0026\u0026 textNode.getChildren().length \u003e 1)\n             {\n                 final DetailNode whitespace \u003d JavadocUtils.getFirstChild(textNode);\n                 if (whitespace.getType() \u003d\u003d JavadocTokenTypes.WS\n                         \u0026\u0026 whitespace.getText().length() - 1 \u003c offset)\n                 {\n                     log(textNode.getLineNumber(), MSG_KEY, offset);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": 1424437366000,
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": 1424294072000,
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public void visitJavadocToken(DetailNode ast)\n     {\n         final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(ast);\n         if (isInlineDescription(ast)) {\n             return;\n         }\n         for (DetailNode newlineNode : textNodes) {\n             final DetailNode textNode \u003d JavadocUtils.getNextSibling(JavadocUtils\n                     .getNextSibling(newlineNode));\n             if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT\n                     \u0026\u0026 textNode.getChildren().length \u003e 1)\n             {\n                 final DetailNode whitespace \u003d JavadocUtils.getFirstChild(textNode);\n                 if (whitespace.getType() \u003d\u003d JavadocTokenTypes.WS\n                         \u0026\u0026 whitespace.getText().length() - 1 \u003c offset)\n                 {\n-                    log(textNode.getLineNumber(), \"tag.continuation.indent\", offset);\n+                    log(textNode.getLineNumber(), MSG_KEY, offset);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": 1421677262000,
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "443b98cf24c6b6b7090b83603f40ec9c88ab189f": {
      "type": "Yfilerename",
      "commitMessage": "Update google_checks.xml and minor refactoring. #320\n",
      "commitDate": 1414002319000,
      "commitName": "443b98cf24c6b6b7090b83603f40ec9c88ab189f",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": 1414001762000,
      "commitNameOld": "371c73fe60f63ef58abf814db76e8b2d7289800b",
      "commitAuthorOld": "maxvetrenko",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "ca34984cc3dcf86773cf7958f26f3816ae0dc764": {
      "type": "Ybodychange",
      "commitMessage": "Fix false positives in JavaDocTagContinuationIndentationCheck #323\n",
      "commitDate": 1413986856000,
      "commitName": "ca34984cc3dcf86773cf7958f26f3816ae0dc764",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": 1413867640000,
      "commitNameOld": "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc",
      "commitAuthorOld": "maxvetrenko",
      "daysBetweenCommits": 1.38,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,21 @@\n     public void visitJavadocToken(DetailNode aAst)\n     {\n-        final List\u003cDetailNode\u003e textNodes \u003d getAllTextNodes(aAst);\n-\n-        for (DetailNode textNode : textNodes.subList(1, textNodes.size())) {\n-            final DetailNode whitespaceNode \u003d JavadocUtils.getFirstChild(textNode);\n-\n-            if (whitespaceNode.getType() \u003d\u003d JavadocTokenTypes.WS\n-                    \u0026\u0026 whitespaceNode.getText().length() - 1 !\u003d mOffset)\n+        final List\u003cDetailNode\u003e textNodes \u003d getAllNewlineNodes(aAst);\n+        if (isInlineDescription(aAst)) {\n+            return;\n+        }\n+        for (DetailNode newlineNode : textNodes) {\n+            final DetailNode textNode \u003d JavadocUtils.getNextSibling(JavadocUtils\n+                    .getNextSibling(newlineNode));\n+            if (textNode !\u003d null \u0026\u0026 textNode.getType() \u003d\u003d JavadocTokenTypes.TEXT\n+                    \u0026\u0026 textNode.getChildren().length \u003e 1)\n             {\n-                log(textNode.getLineNumber(), \"tag.continuation.indent\", mOffset);\n+                final DetailNode whitespace \u003d JavadocUtils.getFirstChild(textNode);\n+                if (whitespace.getType() \u003d\u003d JavadocTokenTypes.WS\n+                        \u0026\u0026 whitespace.getText().length() - 1 \u003c mOffset)\n+                {\n+                    log(textNode.getLineNumber(), \"tag.continuation.indent\", mOffset);\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc": {
      "type": "Yintroduced",
      "commitMessage": "JavaDocTagСontinuationIndentation #308\n",
      "commitDate": 1413867640000,
      "commitName": "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc",
      "commitAuthor": "maxvetrenko"
    }
  }
}