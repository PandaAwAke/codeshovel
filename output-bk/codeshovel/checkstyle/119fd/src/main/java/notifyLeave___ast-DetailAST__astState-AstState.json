{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "notifyLeave___ast-DetailAST__astState-AstState",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 409,
  "changeHistory": [
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
    "0fe31dfdf954242756eec703576cda4c8f561f1d",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f2b19f10806dc89807888a772de34177c36c602b",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "9074e6953f601352d6e0829ea67d194a1fdf4a1a",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf",
    "19257b2cdb950aac0b729ee8a3a979e5605163f9"
  ],
  "changeHistoryShort": {
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479": "Ybodychange",
    "0fe31dfdf954242756eec703576cda4c8f561f1d": "Ybodychange",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": "Ybodychange",
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f2b19f10806dc89807888a772de34177c36c602b": "Ybodychange",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "9074e6953f601352d6e0829ea67d194a1fdf4a1a": "Ybodychange",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": "Ybodychange",
    "19257b2cdb950aac0b729ee8a3a979e5605163f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2551: renamed Check to AbstractCheck",
      "commitDate": 1454680863000,
      "commitName": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthor": "rnveach",
      "commitDateOld": 1453646135000,
      "commitNameOld": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 11.98,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private void notifyLeave(DetailAST ast, AstState astState) {\n-        final Collection\u003cCheck\u003e visitors \u003d getListOfChecks(ast, astState);\n+        final Collection\u003cAbstractCheck\u003e visitors \u003d getListOfChecks(ast, astState);\n \n         if (visitors !\u003d null) {\n-            for (Check check : visitors) {\n+            for (AbstractCheck check : visitors) {\n                 check.leaveToken(ast);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0fe31dfdf954242756eec703576cda4c8f561f1d": {
      "type": "Ybodychange",
      "commitMessage": "Source files should not have any duplicated blocks. Issue #46\n",
      "commitDate": 1440046886000,
      "commitName": "0fe31dfdf954242756eec703576cda4c8f561f1d",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1439886329000,
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 1.86,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,9 @@\n     private void notifyLeave(DetailAST ast, AstState astState) {\n-        Collection\u003cCheck\u003e visitors;\n-        final String tokenType \u003d Utils.getTokenName(ast.getType());\n+        final Collection\u003cCheck\u003e visitors \u003d getListOfChecks(ast, astState);\n \n-        if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n-            if (!tokenToCommentChecks.containsKey(tokenType)) {\n-                return;\n+        if (visitors !\u003d null) {\n+            for (Check check : visitors) {\n+                check.leaveToken(ast);\n             }\n-            visitors \u003d tokenToCommentChecks.get(tokenType);\n-        }\n-        else {\n-            if (!tokenToOrdinaryChecks.containsKey(tokenType)) {\n-                return;\n-            }\n-            visitors \u003d tokenToOrdinaryChecks.get(tokenType);\n-        }\n-\n-        for (Check check : visitors) {\n-            check.leaveToken(ast);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": {
      "type": "Ybodychange",
      "commitMessage": "Rename variables with \u0027standard\u0027 names of unexpected types. #1555\n\nFixes `StandardVariableNames` inspection violations.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n* i, j, k, m, n - int\n* f - float\n* d - double\n* b - byte\n* c, ch - char\n* l - long\n* s, str - String\n",
      "commitDate": 1439008721000,
      "commitName": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439007161000,
      "commitNameOld": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void notifyLeave(DetailAST ast, AstState astState) {\n         Collection\u003cCheck\u003e visitors;\n         final String tokenType \u003d Utils.getTokenName(ast.getType());\n \n         if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n             if (!tokenToCommentChecks.containsKey(tokenType)) {\n                 return;\n             }\n             visitors \u003d tokenToCommentChecks.get(tokenType);\n         }\n         else {\n             if (!tokenToOrdinaryChecks.containsKey(tokenType)) {\n                 return;\n             }\n             visitors \u003d tokenToOrdinaryChecks.get(tokenType);\n         }\n \n-        for (Check ch : visitors) {\n-            ch.leaveToken(ast);\n+        for (Check check : visitors) {\n+            check.leaveToken(ast);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037": {
      "type": "Ybodychange",
      "commitMessage": "Findbugs violation: api.TokenTypes do System.exit(...). #923\n",
      "commitDate": 1431729119000,
      "commitName": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1431535637000,
      "commitNameOld": "466b1ebb31bcfda5cf2bbf3091b6bccb5fa8f000",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void notifyLeave(DetailAST ast, AstState astState)\n     {\n         Collection\u003cCheck\u003e visitors;\n-        final String tokenType \u003d TokenTypes.getTokenName(ast.getType());\n+        final String tokenType \u003d Utils.getTokenName(ast.getType());\n \n         if (astState \u003d\u003d AstState.WITH_COMMENTS) {\n             if (!tokenToCommentChecks.containsKey(tokenType)) {\n                 return;\n             }\n             visitors \u003d tokenToCommentChecks.get(tokenType);\n         }\n         else {\n             if (!tokenToOrdinaryChecks.containsKey(tokenType)) {\n                 return;\n             }\n             visitors \u003d tokenToOrdinaryChecks.get(tokenType);\n         }\n \n         for (Check ch : visitors) {\n             ch.leaveToken(ast);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f2b19f10806dc89807888a772de34177c36c602b": {
      "type": "Ybodychange",
      "commitMessage": "fix for MultiMap empty collections garbage\n",
      "commitDate": 1415151014000,
      "commitName": "f2b19f10806dc89807888a772de34177c36c602b",
      "commitAuthor": "Vladimir Sitnikov",
      "commitDateOld": 1413609550000,
      "commitNameOld": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 17.84,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n     private void notifyLeave(DetailAST aAST, AstState aAstState)\n     {\n         Collection\u003cCheck\u003e visitors;\n         final String tokenType \u003d TokenTypes.getTokenName(aAST.getType());\n \n         if (aAstState \u003d\u003d AstState.WITH_COMMENTS) {\n+            if (!mTokenToCommentChecks.containsKey(tokenType)) {\n+                return;\n+            }\n             visitors \u003d mTokenToCommentChecks.get(tokenType);\n         }\n         else {\n+            if (!mTokenToOrdinaryChecks.containsKey(tokenType)) {\n+                return;\n+            }\n             visitors \u003d mTokenToOrdinaryChecks.get(tokenType);\n         }\n \n         for (Check ch : visitors) {\n             ch.leaveToken(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #49. Added support of single-line and block comments\n",
      "commitDate": 1413609550000,
      "commitName": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": {
      "type": "Ybodychange",
      "commitMessage": "Drinking the \"Google Collections\" Kool-Aid.\n\nI like the reduced duplication.\n",
      "commitDate": 1208867287000,
      "commitName": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200352313000,
      "commitNameOld": "315033ff5647ef9896130573d9212fee6fe141db",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 98.55,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,8 @@\n     private void notifyLeave(DetailAST aAST)\n     {\n-        final List\u003cCheck\u003e visitors \u003d mTokenToChecks.get(TokenTypes\n-                .getTokenName(aAST.getType()));\n-        if (visitors !\u003d null) {\n-            for (Check ch : visitors) {\n-                ch.leaveToken(aAST);\n-            }\n+        final Collection\u003cCheck\u003e visitors \u003d\n+            mTokenToChecks.get(TokenTypes.getTokenName(aAST.getType()));\n+        for (Check ch : visitors) {\n+            ch.leaveToken(aAST);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,10 @@\n     private void notifyLeave(DetailAST aAST)\n     {\n-        final ArrayList visitors \u003d\n-            (ArrayList) mTokenToChecks.get(\n-                TokenTypes.getTokenName(aAST.getType()));\n+        final List\u003cCheck\u003e visitors \u003d mTokenToChecks.get(TokenTypes\n+                .getTokenName(aAST.getType()));\n         if (visitors !\u003d null) {\n-            for (int i \u003d 0; i \u003c visitors.size(); i++) {\n-                final Check check \u003d (Check) visitors.get(i);\n-                check.leaveToken(aAST);\n+            for (Check ch : visitors) {\n+                ch.leaveToken(aAST);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "9074e6953f601352d6e0829ea67d194a1fdf4a1a": {
      "type": "Ybodychange",
      "commitMessage": "removed context hashmaps\n",
      "commitDate": 1041927327000,
      "commitName": "9074e6953f601352d6e0829ea67d194a1fdf4a1a",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1040983106000,
      "commitNameOld": "2149a9c42dce7a3913cca83755c8f562b0442929",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n     private void notifyLeave(DetailAST aAST)\n     {\n         final ArrayList visitors \u003d\n             (ArrayList) mTokenToChecks.get(\n                 TokenTypes.getTokenName(aAST.getType()));\n         if (visitors !\u003d null) {\n             for (int i \u003d 0; i \u003c visitors.size(); i++) {\n                 final Check check \u003d (Check) visitors.get(i);\n-                // TODO: need to setup the token context\n                 check.leaveToken(aAST);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": {
      "type": "Ybodychange",
      "commitMessage": "Added a new class TokenTypes that contains all the type constants. This class\nbreaks the circular dependencies - the cost is needing to maintain this class\nwhen a new grammar is introduced.\n",
      "commitDate": 1035008886000,
      "commitName": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1034552460000,
      "commitNameOld": "63664e0b012593e18c5bb93ba528f27fd93fe0d4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.28,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     private void notifyLeave(DetailAST aAST)\n     {\n         final ArrayList visitors \u003d\n-            (ArrayList) mTokenToChecks.get(getTokenName(aAST.getType()));\n+            (ArrayList) mTokenToChecks.get(TokenTypes.getTokenName(\n+                                               aAST.getType()));\n         if (visitors !\u003d null) {\n             for (int i \u003d 0; i \u003c visitors.size(); i++) {\n                 final Check check \u003d (Check) visitors.get(i);\n                 // TODO: need to setup the token context\n                 check.leaveToken(aAST);\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "19257b2cdb950aac0b729ee8a3a979e5605163f9": {
      "type": "Yintroduced",
      "commitMessage": "Added the tree walker (with all the bugs hopefully marked with TODO:\ncomments). Currently keeping the old grammars around so we can checkstyle the\nnew checkstyle will old version. Kind of a version of boot strapping. :-)\n",
      "commitDate": 1032093857000,
      "commitName": "19257b2cdb950aac0b729ee8a3a979e5605163f9",
      "commitAuthor": "Oliver Burn"
    }
  }
}