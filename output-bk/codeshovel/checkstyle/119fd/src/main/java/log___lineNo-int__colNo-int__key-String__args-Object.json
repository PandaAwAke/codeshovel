{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "log___lineNo-int__colNo-int__key-String__args-Object",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 169,
  "changeHistory": [
    "6fbda7a39d91a24661a6c6100ced93a2815b9bc5",
    "a244f057057913003dd17e952ee76a844f0fb76b",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "61f25fbed0f49e67e18b988eb47c86d72544ac23",
    "17754d363645285e49bf4323a1af5762af47a8ea",
    "91db1968e34b4f777ab146e37a827c20b35e5c52",
    "788b41973d5747c7b4699a853b62168cf0001df6",
    "6db0b3effd48f02d741b2202338d710b1b254910",
    "205cbab8af785b1cddb9c4123ff3fa8b63dcbe1c",
    "d216ec75255a120ce7c24e51da7df63a2b9864de"
  ],
  "changeHistoryShort": {
    "6fbda7a39d91a24661a6c6100ced93a2815b9bc5": "Ybodychange",
    "a244f057057913003dd17e952ee76a844f0fb76b": "Ybodychange",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": "Ybodychange",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "61f25fbed0f49e67e18b988eb47c86d72544ac23": "Ymodifierchange",
    "17754d363645285e49bf4323a1af5762af47a8ea": "Ybodychange",
    "91db1968e34b4f777ab146e37a827c20b35e5c52": "Yparameterchange",
    "788b41973d5747c7b4699a853b62168cf0001df6": "Ybodychange",
    "6db0b3effd48f02d741b2202338d710b1b254910": "Ybodychange",
    "205cbab8af785b1cddb9c4123ff3fa8b63dcbe1c": "Ybodychange",
    "d216ec75255a120ce7c24e51da7df63a2b9864de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6fbda7a39d91a24661a6c6100ced93a2815b9bc5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4917: Remove thread-unsafe context from the AbstractFileSetCheck\n",
      "commitDate": 1506189806000,
      "commitName": "6fbda7a39d91a24661a6c6100ced93a2815b9bc5",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": 1500613711000,
      "commitNameOld": "4f90a1367d63bb7109a0e0975e43e96fcff18760",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 64.54,
      "commitsBetweenForRepo": 262,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public final void log(int lineNo, int colNo, String key,\n             Object... args) {\n-        messageCollector.add(\n+        MESSAGE_COLLECTOR.get().add(\n                 new LocalizedMessage(lineNo,\n                         colNo,\n                         getMessageBundle(),\n                         key,\n                         args,\n                         getSeverityLevel(),\n                         getId(),\n                         getClass(),\n                         getCustomMessages().get(key)));\n     }\n\\ No newline at end of file\n"
    },
    "a244f057057913003dd17e952ee76a844f0fb76b": {
      "type": "Ybodychange",
      "commitMessage": "Remove calls to simple getters withing classes. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": 1440497151000,
      "commitName": "a244f057057913003dd17e952ee76a844f0fb76b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440159454000,
      "commitNameOld": "584f7ee1232be96284255540e7249023c327ca8f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.91,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public final void log(int lineNo, int colNo, String key,\n             Object... args) {\n-        getMessageCollector().add(\n-            new LocalizedMessage(lineNo,\n-                                 colNo,\n-                                 getMessageBundle(),\n-                                 key,\n-                                 args,\n-                                 getSeverityLevel(),\n-                                 getId(),\n-                                 getClass(),\n-                                 getCustomMessages().get(key)));\n+        messageCollector.add(\n+                new LocalizedMessage(lineNo,\n+                        colNo,\n+                        getMessageBundle(),\n+                        key,\n+                        args,\n+                        getSeverityLevel(),\n+                        getId(),\n+                        getClass(),\n+                        getCustomMessages().get(key)));\n     }\n\\ No newline at end of file\n"
    },
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this keyword. #1555\n\nFixes `UnnecessaryThis` inspection violations.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n For example:\n ```\n this.a \u003d 3;\n ```\n",
      "commitDate": 1439131302000,
      "commitName": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437604735000,
      "commitNameOld": "864cf936cfa75116153e5f195a833edaf64a90cf",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 17.67,
      "commitsBetweenForRepo": 230,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public final void log(int lineNo, int colNo, String key,\n             Object... args) {\n         getMessageCollector().add(\n             new LocalizedMessage(lineNo,\n                                  colNo,\n                                  getMessageBundle(),\n                                  key,\n                                  args,\n                                  getSeverityLevel(),\n                                  getId(),\n-                                 this.getClass(),\n-                                 this.getCustomMessages().get(key)));\n+                                 getClass(),\n+                                 getCustomMessages().get(key)));\n     }\n\\ No newline at end of file\n"
    },
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, api, #512\n",
      "commitDate": 1421677181000,
      "commitName": "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "61f25fbed0f49e67e18b988eb47c86d72544ac23": {
      "type": "Ymodifierchange",
      "commitMessage": "start of refactoring to consolidate all the regexp checks.\n",
      "commitDate": 1229944895000,
      "commitName": "61f25fbed0f49e67e18b988eb47c86d72544ac23",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1226225983000,
      "commitNameOld": "2e4762f1716c8d12c9652aad68cb4558181bb60c",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 43.04,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    protected final void log(int aLineNo, int aColNo, String aKey,\n+    public final void log(int aLineNo, int aColNo, String aKey,\n             Object... aArgs)\n     {\n         getMessageCollector().add(\n             new LocalizedMessage(aLineNo,\n                                  aColNo,\n                                  getMessageBundle(),\n                                  aKey,\n                                  aArgs,\n                                  getSeverityLevel(),\n                                  getId(),\n                                  this.getClass(),\n                                  this.getCustomMessages().get(aKey)));\n     }\n\\ No newline at end of file\n"
    },
    "17754d363645285e49bf4323a1af5762af47a8ea": {
      "type": "Ybodychange",
      "commitMessage": "snapshot of changes - need to refactor\n",
      "commitDate": 1216160862000,
      "commitName": "17754d363645285e49bf4323a1af5762af47a8ea",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1209413417000,
      "commitNameOld": "fa3199e2bc7d0498ce49fc2bb0b7899c6ace23d4",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 78.1,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n     protected final void log(int aLineNo, int aColNo, String aKey,\n             Object... aArgs)\n     {\n         getMessageCollector().add(\n             new LocalizedMessage(aLineNo,\n                                  aColNo,\n                                  getMessageBundle(),\n                                  aKey,\n                                  aArgs,\n                                  getSeverityLevel(),\n                                  getId(),\n-                                 this.getClass()));\n+                                 this.getClass(),\n+                                 this.getCustomMessages().get(aKey)));\n     }\n\\ No newline at end of file\n"
    },
    "91db1968e34b4f777ab146e37a827c20b35e5c52": {
      "type": "Yparameterchange",
      "commitMessage": "Using varargs for logging.\n",
      "commitDate": 1198147874000,
      "commitName": "91db1968e34b4f777ab146e37a827c20b35e5c52",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1198131671000,
      "commitNameOld": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.19,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-    protected final void log(int aLineNo, int aColNo,\n-                             String aKey, Object[] aArgs)\n+    protected final void log(int aLineNo, int aColNo, String aKey,\n+            Object... aArgs)\n     {\n         getMessageCollector().add(\n             new LocalizedMessage(aLineNo,\n                                  aColNo,\n                                  getMessageBundle(),\n                                  aKey,\n                                  aArgs,\n                                  getSeverityLevel(),\n                                  getId(),\n                                  this.getClass()));\n     }\n\\ No newline at end of file\n"
    },
    "788b41973d5747c7b4699a853b62168cf0001df6": {
      "type": "Ybodychange",
      "commitMessage": "Changes to make it possible to identify a module by an id, and then to\nsuppress messages based on the id. The motivation is to allow for finer\ngrained suppressions. For example, can enable multiple instances of the\nRegexp check, and suppress on the individual instance.\n",
      "commitDate": 1135859700000,
      "commitName": "788b41973d5747c7b4699a853b62168cf0001df6",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 58.72,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     protected final void log(int aLineNo, int aColNo,\n                              String aKey, Object[] aArgs)\n     {\n         getMessageCollector().add(\n             new LocalizedMessage(aLineNo,\n                                  aColNo,\n                                  getMessageBundle(),\n                                  aKey,\n                                  aArgs,\n                                  getSeverityLevel(),\n+                                 getId(),\n                                  this.getClass()));\n     }\n\\ No newline at end of file\n"
    },
    "6db0b3effd48f02d741b2202338d710b1b254910": {
      "type": "Ybodychange",
      "commitMessage": "Code cleanup to force the class name for the cause of the message to be\nlogged. Required as part of changes I am making for RFE 756416.\n",
      "commitDate": 1057402055000,
      "commitName": "6db0b3effd48f02d741b2202338d710b1b254910",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1055144900000,
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 26.12,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     protected final void log(int aLineNo, int aColNo,\n                              String aKey, Object[] aArgs)\n     {\n         getMessageCollector().add(\n             new LocalizedMessage(aLineNo,\n                                  aColNo,\n                                  getMessageBundle(),\n                                  aKey,\n                                  aArgs,\n                                  getSeverityLevel(),\n-                                 this.getClass().getName()));\n+                                 this.getClass()));\n     }\n\\ No newline at end of file\n"
    },
    "205cbab8af785b1cddb9c4123ff3fa8b63dcbe1c": {
      "type": "Ybodychange",
      "commitMessage": "Added sourceName property to LocalizedMessage and AuditEvent.\nChecks pass the class name as the sourceName to LocalizedMessage constructors.\n",
      "commitDate": 1052499610000,
      "commitName": "205cbab8af785b1cddb9c4123ff3fa8b63dcbe1c",
      "commitAuthor": "Rick Giles",
      "commitDateOld": 1051172333000,
      "commitNameOld": "5ace399de6c8963584b1fbe08007721433c4bad3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 15.36,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n     protected final void log(int aLineNo, int aColNo,\n                              String aKey, Object[] aArgs)\n     {\n         getMessageCollector().add(\n             new LocalizedMessage(aLineNo,\n                                  aColNo,\n                                  getMessageBundle(),\n                                  aKey,\n                                  aArgs,\n-                                 getSeverityLevel()));\n+                                 getSeverityLevel(),\n+                                 this.getClass().getName()));\n     }\n\\ No newline at end of file\n"
    },
    "d216ec75255a120ce7c24e51da7df63a2b9864de": {
      "type": "Yintroduced",
      "commitMessage": "Major refactorings to allow the use of SeverityLevels in FileSetChecks\nas well as in Checks and to simplify logging of messages in FileSetChecks.\n\nIntroduction of a new class called AbstractViolationReporter, from which\nboth Check and FileSetCheck are derived.\n\nSeverity is passed to submodules by means of the Contextualizable\nmechanism. This means that the user can f.ex. set severity to INFO\nin a TreeWalker and all Checks below that TreeWalker will use severity INFO.\n",
      "commitDate": 1048708350000,
      "commitName": "d216ec75255a120ce7c24e51da7df63a2b9864de",
      "commitAuthor": "Lars KÃ¼hne"
    }
  }
}