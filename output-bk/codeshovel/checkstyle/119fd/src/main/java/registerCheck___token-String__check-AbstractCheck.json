{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "registerCheck___token-String__check-AbstractCheck",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 296,
  "changeHistory": [
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
    "0bff657f61fcc60186e3800f5dc5d1b69652c246",
    "4d8d047f465f9eb101390da63ee62a735fbedba5",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037",
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "d28a2aa39ef15132757260a5e0b3ec03d6ae28f3",
    "19257b2cdb950aac0b729ee8a3a979e5605163f9"
  ],
  "changeHistoryShort": {
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479": "Yparameterchange",
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c": "Ybodychange",
    "0bff657f61fcc60186e3800f5dc5d1b69652c246": "Ymultichange(Yexceptionschange,Ybodychange)",
    "4d8d047f465f9eb101390da63ee62a735fbedba5": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037": "Ybodychange",
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "d28a2aa39ef15132757260a5e0b3ec03d6ae28f3": "Ybodychange",
    "19257b2cdb950aac0b729ee8a3a979e5605163f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479": {
      "type": "Yparameterchange",
      "commitMessage": "Issue #2551: renamed Check to AbstractCheck",
      "commitDate": 1454680863000,
      "commitName": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthor": "rnveach",
      "commitDateOld": 1453646135000,
      "commitNameOld": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 11.98,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    private void registerCheck(String token, Check check) throws CheckstyleException {\n+    private void registerCheck(String token, AbstractCheck check) throws CheckstyleException {\n         if (check.isCommentNodesRequired()) {\n             tokenToCommentChecks.put(token, check);\n         }\n         else if (TokenUtils.isCommentType(token)) {\n             final String message \u003d String.format(Locale.ROOT, \"Check \u0027%s\u0027 waits for comment type \"\n                     + \"token (\u0027%s\u0027) and should override \u0027isCommentNodesRequired()\u0027 \"\n                     + \"method to return \u0027true\u0027\", check.getClass().getName(), token);\n             throw new CheckstyleException(message);\n         }\n         else {\n             tokenToOrdinaryChecks.put(token, check);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1217: fixes for violations from \u0027forbiddenapis\u0027 verification tool\n",
      "commitDate": 1444779430000,
      "commitName": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": 1444178762000,
      "commitNameOld": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 6.95,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void registerCheck(String token, Check check) throws CheckstyleException {\n         if (check.isCommentNodesRequired()) {\n             tokenToCommentChecks.put(token, check);\n         }\n         else if (TokenUtils.isCommentType(token)) {\n-            final String message \u003d String.format(\"Check \u0027%s\u0027 waits for comment type \"\n+            final String message \u003d String.format(Locale.ROOT, \"Check \u0027%s\u0027 waits for comment type \"\n                     + \"token (\u0027%s\u0027) and should override \u0027isCommentNodesRequired()\u0027 \"\n                     + \"method to return \u0027true\u0027\", check.getClass().getName(), token);\n             throw new CheckstyleException(message);\n         }\n         else {\n             tokenToOrdinaryChecks.put(token, check);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "0bff657f61fcc60186e3800f5dc5d1b69652c246": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Issue #2129: logging as WARN for misconfigurated Check is changed to Exception, we should fail fast.\n",
      "commitDate": 1442193564000,
      "commitName": "0bff657f61fcc60186e3800f5dc5d1b69652c246",
      "commitAuthor": "Roman Ivanov",
      "subchanges": [
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "4d8d047f465f9eb101390da63ee62a735fbedba5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2080: Fix typos in code\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": 1441541856000,
      "commitName": "4d8d047f465f9eb101390da63ee62a735fbedba5",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1441169486000,
      "commitNameOld": "ed280ebd0bb2ad9ea37897ab13c9b9279aa9ad11",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 4.31,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void registerCheck(String token, Check check) {\n         if (check.isCommentNodesRequired()) {\n             tokenToCommentChecks.put(token, check);\n         }\n         else if (TokenUtils.isCommentType(token)) {\n             final String message \u003d String.format(\"Check \u0027%s\u0027 waits for comment type \"\n-                    + \"token (\u0027%s\u0027) and should override \u0027isCommentNodesRequred()\u0027 \"\n+                    + \"token (\u0027%s\u0027) and should override \u0027isCommentNodesRequired()\u0027 \"\n                     + \"method to return \u0027true\u0027\", check.getClass().getName(), token);\n             LOG.warn(message);\n         }\n         else {\n             tokenToOrdinaryChecks.put(token, check);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": 1440677821000,
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": 1440677821000,
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void registerCheck(String token, Check check) {\n         if (check.isCommentNodesRequired()) {\n             tokenToCommentChecks.put(token, check);\n         }\n-        else if (Utils.isCommentType(token)) {\n+        else if (TokenUtils.isCommentType(token)) {\n             final String message \u003d String.format(\"Check \u0027%s\u0027 waits for comment type \"\n                     + \"token (\u0027%s\u0027) and should override \u0027isCommentNodesRequred()\u0027 \"\n                     + \"method to return \u0027true\u0027\", check.getClass().getName(), token);\n             LOG.warn(message);\n         }\n         else {\n             tokenToOrdinaryChecks.put(token, check);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037": {
      "type": "Ybodychange",
      "commitMessage": "Findbugs violation: api.TokenTypes do System.exit(...). #923\n",
      "commitDate": 1431729119000,
      "commitName": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1431535637000,
      "commitNameOld": "466b1ebb31bcfda5cf2bbf3091b6bccb5fa8f000",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void registerCheck(String token, Check check)\n     {\n         if (check.isCommentNodesRequired()) {\n             tokenToCommentChecks.put(token, check);\n         }\n-        else if (TokenTypes.isCommentType(token)) {\n+        else if (Utils.isCommentType(token)) {\n             final String message \u003d String.format(\"Check \u0027%s\u0027 waits for comment type \"\n                     + \"token (\u0027%s\u0027) and should override \u0027isCommentNodesRequred()\u0027 \"\n                     + \"method to return \u0027true\u0027\", check.getClass().getName(), token);\n             LOG.warn(message);\n         }\n         else {\n             tokenToOrdinaryChecks.put(token, check);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from \u0027logging-jakarta\u0027 ruleset, issue #871\n",
      "commitDate": 1428961380000,
      "commitName": "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1428792106000,
      "commitNameOld": "7dd24c8c35572b5db3e5c905d440e813cfe2538c",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     private void registerCheck(String token, Check check)\n     {\n         if (check.isCommentNodesRequired()) {\n             tokenToCommentChecks.put(token, check);\n         }\n         else if (TokenTypes.isCommentType(token)) {\n-            LOG.warn(\"Check \u0027\"\n-                    + check.getClass().getName()\n-                    + \"\u0027 waits for comment type token (\u0027\"\n-                    + token\n-                    + \"\u0027) and should override \u0027isCommentNodesRequred()\u0027\"\n-                    + \" method to return \u0027true\u0027\");\n+            final String message \u003d String.format(\"Check \u0027%s\u0027 waits for comment type \"\n+                    + \"token (\u0027%s\u0027) and should override \u0027isCommentNodesRequred()\u0027 \"\n+                    + \"method to return \u0027true\u0027\", check.getClass().getName(), token);\n+            LOG.warn(message);\n         }\n         else {\n             tokenToOrdinaryChecks.put(token, check);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #49. Added support of single-line and block comments\n",
      "commitDate": 1413609550000,
      "commitName": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1413609550000,
      "commitNameOld": "59014fa7539bdbaacda4325454964492db0c6109",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,17 @@\n     private void registerCheck(String aToken, Check aCheck)\n     {\n-        mTokenToChecks.put(aToken, aCheck);\n+        if (aCheck.isCommentNodesRequired()) {\n+            mTokenToCommentChecks.put(aToken, aCheck);\n+        }\n+        else if (TokenTypes.isCommentType(aToken)) {\n+            LOG.warn(\"Check \u0027\"\n+                    + aCheck.getClass().getName()\n+                    + \"\u0027 waits for comment type token (\u0027\"\n+                    + aToken\n+                    + \"\u0027) and should override \u0027isCommentNodesRequred()\u0027\"\n+                    + \" method to return \u0027true\u0027\");\n+        }\n+        else {\n+            mTokenToOrdinaryChecks.put(aToken, aCheck);\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": {
      "type": "Ybodychange",
      "commitMessage": "Drinking the \"Google Collections\" Kool-Aid.\n\nI like the reduced duplication.\n",
      "commitDate": 1208867287000,
      "commitName": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200352313000,
      "commitNameOld": "315033ff5647ef9896130573d9212fee6fe141db",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 98.55,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,4 @@\n     private void registerCheck(String aToken, Check aCheck)\n     {\n-        List\u003cCheck\u003e visitors \u003d mTokenToChecks.get(aToken);\n-        if (visitors \u003d\u003d null) {\n-            visitors \u003d new ArrayList\u003cCheck\u003e();\n-            mTokenToChecks.put(aToken, visitors);\n-        }\n-\n-        visitors.add(aCheck);\n+        mTokenToChecks.put(aToken, aCheck);\n     }\n\\ No newline at end of file\n"
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": 1197706480000,
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void registerCheck(String aToken, Check aCheck)\n     {\n-        ArrayList visitors \u003d (ArrayList) mTokenToChecks.get(aToken);\n+        List\u003cCheck\u003e visitors \u003d mTokenToChecks.get(aToken);\n         if (visitors \u003d\u003d null) {\n-            visitors \u003d new ArrayList();\n+            visitors \u003d new ArrayList\u003cCheck\u003e();\n             mTokenToChecks.put(aToken, visitors);\n         }\n \n         visitors.add(aCheck);\n     }\n\\ No newline at end of file\n"
    },
    "d28a2aa39ef15132757260a5e0b3ec03d6ae28f3": {
      "type": "Ybodychange",
      "commitMessage": "Call the lifecycle methods (beginTree, ...) of a\nCheck even if the Check does not visit any tokens.\n\nThis is required for Checks that do not operate on\nthe parse tree, e.g. the Header Checks\n",
      "commitDate": 1033235208000,
      "commitName": "d28a2aa39ef15132757260a5e0b3ec03d6ae28f3",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1033108888000,
      "commitNameOld": "d077a402da51bb238a7da99d5e2542437b145192",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.46,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n     private void registerCheck(String aToken, Check aCheck)\n     {\n         ArrayList visitors \u003d (ArrayList) mTokenToChecks.get(aToken);\n         if (visitors \u003d\u003d null) {\n             visitors \u003d new ArrayList();\n             mTokenToChecks.put(aToken, visitors);\n         }\n \n         visitors.add(aCheck);\n-        mAllChecks.add(aCheck);\n     }\n\\ No newline at end of file\n"
    },
    "19257b2cdb950aac0b729ee8a3a979e5605163f9": {
      "type": "Yintroduced",
      "commitMessage": "Added the tree walker (with all the bugs hopefully marked with TODO:\ncomments). Currently keeping the old grammars around so we can checkstyle the\nnew checkstyle will old version. Kind of a version of boot strapping. :-)\n",
      "commitDate": 1032093857000,
      "commitName": "19257b2cdb950aac0b729ee8a3a979e5605163f9",
      "commitAuthor": "Oliver Burn"
    }
  }
}