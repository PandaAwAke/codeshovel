{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "resolveEntity___publicId-String__systemId-String",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 120,
  "changeHistory": [
    "06ff5677fa5a19afe3f55078fff79ead61068a51",
    "154f120d7b71c30ec64f3ef801fb080a24a21c4a",
    "bf9325be913ce46a1427232c455f4830b574ba44",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
    "ef540c2c72b08b4416599c165c52212be2204984",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "b8eb2537c18ca43a99f749c0dfc02a06a25a4967",
    "fe9057366308642868c25d427c3ee94411b37170",
    "262209477f39964a63103613f3e2c985da083371",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c",
    "4c43406153cb5abc6c394a32625af9a7b1c6811e",
    "433209f256f2f87310b4546cb08218dbdb110556",
    "384b21e73586345c8622cc3c0a0f1abc59168a03",
    "57a28c890cc5bed67231e8d016ec1673c13c63be",
    "9c48e3107db92a01d904c6d89afdfa60a0837f32",
    "76ae23935169b24f54520da482e6ceb26cd890a6",
    "d451459484b992e59cc8e5ad0ae987b79980b648",
    "52fa4751683a81185d9c4c11cf5e39c6d69e4afa"
  ],
  "changeHistoryShort": {
    "06ff5677fa5a19afe3f55078fff79ead61068a51": "Yfilerename",
    "154f120d7b71c30ec64f3ef801fb080a24a21c4a": "Ybodychange",
    "bf9325be913ce46a1427232c455f4830b574ba44": "Ybodychange",
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": "Ybodychange",
    "ef540c2c72b08b4416599c165c52212be2204984": "Ybodychange",
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "b8eb2537c18ca43a99f749c0dfc02a06a25a4967": "Ymultichange(Yexceptionschange,Ybodychange)",
    "fe9057366308642868c25d427c3ee94411b37170": "Ybodychange",
    "262209477f39964a63103613f3e2c985da083371": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c": "Ybodychange",
    "4c43406153cb5abc6c394a32625af9a7b1c6811e": "Ybodychange",
    "433209f256f2f87310b4546cb08218dbdb110556": "Yfilerename",
    "384b21e73586345c8622cc3c0a0f1abc59168a03": "Ybodychange",
    "57a28c890cc5bed67231e8d016ec1673c13c63be": "Yexceptionschange",
    "9c48e3107db92a01d904c6d89afdfa60a0837f32": "Yexceptionschange",
    "76ae23935169b24f54520da482e6ceb26cd890a6": "Ymultichange(Ymovefromfile,Ybodychange)",
    "d451459484b992e59cc8e5ad0ae987b79980b648": "Ybodychange",
    "52fa4751683a81185d9c4c11cf5e39c6d69e4afa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "06ff5677fa5a19afe3f55078fff79ead61068a51": {
      "type": "Yfilerename",
      "commitMessage": "Issue #5338: moved, renamed and removed abstact declaration from AbstractLoader. Also moved and renamed AbstractLoaderTest and fixed suppressions for intellij idea and checkstyle\n",
      "commitDate": 1513969683000,
      "commitName": "06ff5677fa5a19afe3f55078fff79ead61068a51",
      "commitAuthor": "Roman_Zhigunov",
      "commitDateOld": 1513955634000,
      "commitNameOld": "952a97db47130898379893c4da09cbb05c25f019",
      "commitAuthorOld": "vaano94",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "154f120d7b71c30ec64f3ef801fb080a24a21c4a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: Enforce ReturnCount max\u003d1 in com.puppycrawl.tools.checkstyle.api\n",
      "commitDate": 1493349546000,
      "commitName": "154f120d7b71c30ec64f3ef801fb080a24a21c4a",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 90.53,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n     public InputSource resolveEntity(String publicId, String systemId)\n             throws SAXException, IOException {\n+        final InputSource inputSource;\n         if (publicIdToResourceNameMap.keySet().contains(publicId)) {\n             final String dtdResourceName \u003d\n                     publicIdToResourceNameMap.get(publicId);\n             final ClassLoader loader \u003d\n                 getClass().getClassLoader();\n             final InputStream dtdIs \u003d\n                 loader.getResourceAsStream(dtdResourceName);\n \n-            return new InputSource(dtdIs);\n+            inputSource \u003d new InputSource(dtdIs);\n         }\n-        return super.resolveEntity(publicId, systemId);\n+        else {\n+            inputSource \u003d super.resolveEntity(publicId, systemId);\n+        }\n+        return inputSource;\n     }\n\\ No newline at end of file\n"
    },
    "bf9325be913ce46a1427232c455f4830b574ba44": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2639: adjust AbbreviationAsWordInName in checkstyle_checks.xml to catch unexpected abbreviations\n",
      "commitDate": 1448157067000,
      "commitName": "bf9325be913ce46a1427232c455f4830b574ba44",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1444178762000,
      "commitNameOld": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.05,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public InputSource resolveEntity(String publicId, String systemId)\n         throws SAXException, IOException {\n         if (publicIdToResourceNameMap.keySet().contains(publicId)) {\n             final String dtdResourceName \u003d\n                     publicIdToResourceNameMap.get(publicId);\n             final ClassLoader loader \u003d\n                 getClass().getClassLoader();\n-            final InputStream dtdIS \u003d\n+            final InputStream dtdIs \u003d\n                 loader.getResourceAsStream(dtdResourceName);\n \n-            return new InputSource(dtdIS);\n+            return new InputSource(dtdIs);\n         }\n         return super.resolveEntity(publicId, systemId);\n     }\n\\ No newline at end of file\n"
    },
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this keyword. #1555\n\nFixes `UnnecessaryThis` inspection violations.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n For example:\n ```\n this.a \u003d 3;\n ```\n",
      "commitDate": 1439131302000,
      "commitName": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1437631122000,
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 17.36,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public InputSource resolveEntity(String publicId, String systemId)\n         throws SAXException, IOException {\n         if (publicIdToResourceNameMap.keySet().contains(publicId)) {\n             final String dtdResourceName \u003d\n                     publicIdToResourceNameMap.get(publicId);\n             final ClassLoader loader \u003d\n-                this.getClass().getClassLoader();\n+                getClass().getClassLoader();\n             final InputStream dtdIS \u003d\n                 loader.getResourceAsStream(dtdResourceName);\n \n             return new InputSource(dtdIS);\n         }\n         return super.resolveEntity(publicId, systemId);\n     }\n\\ No newline at end of file\n"
    },
    "ef540c2c72b08b4416599c165c52212be2204984": {
      "type": "Ybodychange",
      "commitMessage": "100% Uts coverage for AbstractLoader , unreachable code was removed. #1295\n",
      "commitDate": 1437615768000,
      "commitName": "ef540c2c72b08b4416599c165c52212be2204984",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1431863229000,
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 66.58,
      "commitsBetweenForRepo": 447,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,14 @@\n     public InputSource resolveEntity(String publicId, String systemId)\n         throws SAXException, IOException {\n         if (publicIdToResourceNameMap.keySet().contains(publicId)) {\n             final String dtdResourceName \u003d\n                     publicIdToResourceNameMap.get(publicId);\n             final ClassLoader loader \u003d\n                 this.getClass().getClassLoader();\n             final InputStream dtdIS \u003d\n                 loader.getResourceAsStream(dtdResourceName);\n-            if (dtdIS \u003d\u003d null) {\n-                throw new SAXException(\n-                    \"Unable to load internal dtd \" + dtdResourceName);\n-            }\n+\n             return new InputSource(dtdIS);\n         }\n         return super.resolveEntity(publicId, systemId);\n     }\n\\ No newline at end of file\n"
    },
    "b94bac0719851b65b59b4aafc5bd3ef029321ed7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, api, #512\n",
      "commitDate": 1421677181000,
      "commitName": "b94bac0719851b65b59b4aafc5bd3ef029321ed7",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "b8eb2537c18ca43a99f749c0dfc02a06a25a4967": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "remove a hack not required for JDK5+\n",
      "commitDate": 1287312991000,
      "commitName": "b8eb2537c18ca43a99f749c0dfc02a06a25a4967",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "fe9057366308642868c25d427c3ee94411b37170": {
      "type": "Ybodychange",
      "commitMessage": "Apply patch #1914806 for PackageNamesLoader from Lars Koedderitzsch.\n",
      "commitDate": 1207618517000,
      "commitName": "fe9057366308642868c25d427c3ee94411b37170",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1200296548000,
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 84.75,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n         throws SAXException\n     {\n         if (mPublicIdToResourceNameMap.keySet().contains(aPublicId)) {\n             final String dtdResourceName \u003d\n                     mPublicIdToResourceNameMap.get(aPublicId);\n             final ClassLoader loader \u003d\n-                Thread.currentThread().getContextClassLoader();\n+                this.getClass().getClassLoader();\n             final InputStream dtdIS \u003d\n                 loader.getResourceAsStream(dtdResourceName);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n                     \"Unable to load internal dtd \" + dtdResourceName);\n             }\n             return new InputSource(dtdIS);\n         }\n         // This is a hack to workaround problem with SAX\n         // DefaultHeader.resolveEntity():\n         // sometimes it throws SAX- and IO- exceptions\n         // sometime SAX only :(\n         try {\n             if (false) {\n                 throw new IOException(\"\");\n             }\n             return super.resolveEntity(aPublicId, aSystemId);\n         }\n         catch (final IOException e) {\n             throw new SAXException(\"\" + e, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "262209477f39964a63103613f3e2c985da083371": {
      "type": "Ybodychange",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": 1197697256000,
      "commitName": "262209477f39964a63103613f3e2c985da083371",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1169909494000,
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.62,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n         throws SAXException\n     {\n         if (mPublicIdToResourceNameMap.keySet().contains(aPublicId)) {\n             final String dtdResourceName \u003d\n-                    (String) mPublicIdToResourceNameMap.get(aPublicId);\n+                    mPublicIdToResourceNameMap.get(aPublicId);\n             final ClassLoader loader \u003d\n                 Thread.currentThread().getContextClassLoader();\n             final InputStream dtdIS \u003d\n                 loader.getResourceAsStream(dtdResourceName);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n                     \"Unable to load internal dtd \" + dtdResourceName);\n             }\n             return new InputSource(dtdIS);\n         }\n         // This is a hack to workaround problem with SAX\n         // DefaultHeader.resolveEntity():\n         // sometimes it throws SAX- and IO- exceptions\n         // sometime SAX only :(\n         try {\n             if (false) {\n                 throw new IOException(\"\");\n             }\n             return super.resolveEntity(aPublicId, aSystemId);\n         }\n         catch (final IOException e) {\n             throw new SAXException(\"\" + e, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1130786628000,
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.35,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n         throws SAXException\n     {\n         if (mPublicIdToResourceNameMap.keySet().contains(aPublicId)) {\n             final String dtdResourceName \u003d\n                     (String) mPublicIdToResourceNameMap.get(aPublicId);\n             final ClassLoader loader \u003d\n                 Thread.currentThread().getContextClassLoader();\n             final InputStream dtdIS \u003d\n                 loader.getResourceAsStream(dtdResourceName);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n                     \"Unable to load internal dtd \" + dtdResourceName);\n             }\n             return new InputSource(dtdIS);\n         }\n         // This is a hack to workaround problem with SAX\n         // DefaultHeader.resolveEntity():\n         // sometimes it throws SAX- and IO- exceptions\n         // sometime SAX only :(\n         try {\n             if (false) {\n                 throw new IOException(\"\");\n             }\n             return super.resolveEntity(aPublicId, aSystemId);\n         }\n-        catch (IOException e) {\n+        catch (final IOException e) {\n             throw new SAXException(\"\" + e, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c": {
      "type": "Ybodychange",
      "commitMessage": "Fix for infrastructure class loader. Needs to be verified by Lars (of\nEclipse plug-in fame! :-)\n",
      "commitDate": 1127645456000,
      "commitName": "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1105267857000,
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 259.0,
      "commitsBetweenForRepo": 215,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n         throws SAXException\n     {\n         if (mPublicIdToResourceNameMap.keySet().contains(aPublicId)) {\n             final String dtdResourceName \u003d\n                     (String) mPublicIdToResourceNameMap.get(aPublicId);\n-            final InputStream dtdIS \u003d getClass().getClassLoader()\n-                .getResourceAsStream(dtdResourceName);\n+            final ClassLoader loader \u003d\n+                Thread.currentThread().getContextClassLoader();\n+            final InputStream dtdIS \u003d\n+                loader.getResourceAsStream(dtdResourceName);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n                     \"Unable to load internal dtd \" + dtdResourceName);\n             }\n             return new InputSource(dtdIS);\n         }\n         // This is a hack to workaround problem with SAX\n         // DefaultHeader.resolveEntity():\n         // sometimes it throws SAX- and IO- exceptions\n         // sometime SAX only :(\n         try {\n             if (false) {\n                 throw new IOException(\"\");\n             }\n             return super.resolveEntity(aPublicId, aSystemId);\n         }\n         catch (IOException e) {\n             throw new SAXException(\"\" + e, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "4c43406153cb5abc6c394a32625af9a7b1c6811e": {
      "type": "Ybodychange",
      "commitMessage": "Upped dtd version to 1.2\n\nEntity resolver for configuration files now handles\nall previous versions of the configuration DTD locally, without\naccessing the internet (bug 909987)\n",
      "commitDate": 1078557308000,
      "commitName": "4c43406153cb5abc6c394a32625af9a7b1c6811e",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1075113548000,
      "commitNameOld": "433209f256f2f87310b4546cb08218dbdb110556",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 39.86,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n         throws SAXException\n     {\n-        if (mPublicId.equals(aPublicId)) {\n+        if (mPublicIdToResourceNameMap.keySet().contains(aPublicId)) {\n+            final String dtdResourceName \u003d\n+                    (String) mPublicIdToResourceNameMap.get(aPublicId);\n             final InputStream dtdIS \u003d getClass().getClassLoader()\n-                .getResourceAsStream(mDtdResourceName);\n+                .getResourceAsStream(dtdResourceName);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n-                    \"Unable to load internal dtd \" + mDtdResourceName);\n+                    \"Unable to load internal dtd \" + dtdResourceName);\n             }\n             return new InputSource(dtdIS);\n         }\n         // This is a hack to workaround problem with SAX\n         // DefaultHeader.resolveEntity():\n         // sometimes it throws SAX- and IO- exceptions\n         // sometime SAX only :(\n         try {\n             if (false) {\n                 throw new IOException(\"\");\n             }\n             return super.resolveEntity(aPublicId, aSystemId);\n         }\n         catch (IOException e) {\n             throw new SAXException(\"\" + e, e);\n         }\n     }\n\\ No newline at end of file\n"
    },
    "433209f256f2f87310b4546cb08218dbdb110556": {
      "type": "Yfilerename",
      "commitMessage": "A refactoring to remove the circular dependency between the checkstyle and\ncheckstyle.filters packages. I moved AbstractLoader to the checkstyle.api\npackage. I moved the SuppressionsLoader to the checkstyle.filters package.\n\nI found the dependencies using the neat Pasta tool which I recommend. It is\navailable from http://javacentral.compuware.com/pasta/ for free.\n",
      "commitDate": 1075113548000,
      "commitName": "433209f256f2f87310b4546cb08218dbdb110556",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1075040247000,
      "commitNameOld": "74b57239f50c2596574541202a007f98faf917d4",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "384b21e73586345c8622cc3c0a0f1abc59168a03": {
      "type": "Ybodychange",
      "commitMessage": "Workaround for DefaultHandler.resolveEntity() throws problem.\n",
      "commitDate": 1074003980000,
      "commitName": "384b21e73586345c8622cc3c0a0f1abc59168a03",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1056711878000,
      "commitNameOld": "768256c32a3e397f837ce27602bda49e3c5e0062",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 200.14,
      "commitsBetweenForRepo": 271,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,26 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n         throws SAXException\n     {\n         if (mPublicId.equals(aPublicId)) {\n             final InputStream dtdIS \u003d getClass().getClassLoader()\n                 .getResourceAsStream(mDtdResourceName);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n                     \"Unable to load internal dtd \" + mDtdResourceName);\n             }\n             return new InputSource(dtdIS);\n         }\n-\n-        return super.resolveEntity(aPublicId, aSystemId);\n+        // This is a hack to workaround problem with SAX\n+        // DefaultHeader.resolveEntity():\n+        // sometimes it throws SAX- and IO- exceptions\n+        // sometime SAX only :(\n+        try {\n+            if (false) {\n+                throw new IOException(\"\");\n+            }\n+            return super.resolveEntity(aPublicId, aSystemId);\n+        }\n+        catch (IOException e) {\n+            throw new SAXException(\"\" + e, e);\n+        }\n     }\n\\ No newline at end of file\n"
    },
    "57a28c890cc5bed67231e8d016ec1673c13c63be": {
      "type": "Yexceptionschange",
      "commitMessage": "Compiles under JDK 1.3.1 and ANT 1.4.1\n",
      "commitDate": 1044534586000,
      "commitName": "57a28c890cc5bed67231e8d016ec1673c13c63be",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1044359144000,
      "commitNameOld": "c13f6dd07d38a702143f7f78f74c59548e1f8453",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.03,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n-        throws SAXException, IOException\n+        throws SAXException\n     {\n         if (mPublicId.equals(aPublicId)) {\n             final InputStream dtdIS \u003d getClass().getClassLoader()\n                 .getResourceAsStream(mDtdResourceName);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n                     \"Unable to load internal dtd \" + mDtdResourceName);\n             }\n             return new InputSource(dtdIS);\n         }\n \n         return super.resolveEntity(aPublicId, aSystemId);\n     }\n\\ No newline at end of file\n"
    },
    "9c48e3107db92a01d904c6d89afdfa60a0837f32": {
      "type": "Yexceptionschange",
      "commitMessage": "Fix compilation under JDK 1.3.x\n",
      "commitDate": 1044358664000,
      "commitName": "9c48e3107db92a01d904c6d89afdfa60a0837f32",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1039266172000,
      "commitNameOld": "76ae23935169b24f54520da482e6ceb26cd890a6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 58.94,
      "commitsBetweenForRepo": 240,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n-        throws SAXException\n+        throws SAXException, IOException\n     {\n         if (mPublicId.equals(aPublicId)) {\n             final InputStream dtdIS \u003d getClass().getClassLoader()\n                 .getResourceAsStream(mDtdResourceName);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n                     \"Unable to load internal dtd \" + mDtdResourceName);\n             }\n             return new InputSource(dtdIS);\n         }\n \n         return super.resolveEntity(aPublicId, aSystemId);\n     }\n\\ No newline at end of file\n"
    },
    "76ae23935169b24f54520da482e6ceb26cd890a6": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Refactoring to move all the XML parsing logic into a\ncommon place.\n",
      "commitDate": 1039266172000,
      "commitName": "76ae23935169b24f54520da482e6ceb26cd890a6",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Ymovefromfile",
        "Ybodychange"
      ]
    },
    "d451459484b992e59cc8e5ad0ae987b79980b648": {
      "type": "Ybodychange",
      "commitMessage": "Remove dead code\n",
      "commitDate": 1039231769000,
      "commitName": "d451459484b992e59cc8e5ad0ae987b79980b648",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1039231716000,
      "commitNameOld": "52fa4751683a81185d9c4c11cf5e39c6d69e4afa",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     public InputSource resolveEntity(String aPublicId, String aSystemId)\n         throws SAXException\n     {\n         if (CONFIG_DTD_PUBLIC_ID.equals(aPublicId)) {\n-            final InputStream dtdIS \u003d\n-//            Thread.currentThread().getContextClassLoader()\n-            getClass().getClassLoader()\n-                    .getResourceAsStream(CONFIG_DTD_RESOURCE);\n+            final InputStream dtdIS \u003d getClass().getClassLoader()\n+                .getResourceAsStream(CONFIG_DTD_RESOURCE);\n             if (dtdIS \u003d\u003d null) {\n                 throw new SAXException(\n                     \"Unable to load internal dtd \" + CONFIG_DTD_RESOURCE);\n             }\n             return new InputSource(dtdIS);\n         }\n \n         return super.resolveEntity(aPublicId, aSystemId);\n     }\n\\ No newline at end of file\n"
    },
    "52fa4751683a81185d9c4c11cf5e39c6d69e4afa": {
      "type": "Yintroduced",
      "commitMessage": "Changed to make the XML be validated using the DTD. The\nDTD is located using a technique that gets it from the JAR\nfile. Idea \"borrowed\" from Struts.\n",
      "commitDate": 1039231716000,
      "commitName": "52fa4751683a81185d9c4c11cf5e39c6d69e4afa",
      "commitAuthor": "Oliver Burn"
    }
  }
}