{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "java",
  "functionId": "parse___contents-FileContents",
  "sourceFilePath": "src/main/java",
  "functionStartLine": 0,
  "functionEndLine": 104,
  "changeHistory": [
    "58327e1dd9707b09f82ae2d4d4ce14c253247154",
    "2f5115bce66f153ddfa02306505c1e81af942ff5",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
    "7dd24c8c35572b5db3e5c905d440e813cfe2538c",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
    "59014fa7539bdbaacda4325454964492db0c6109",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
    "7065b0d9dc232313d2dfd43fa882d24736e87ade",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "083ab98e4a451f1a982db89616535d9c0388b50b",
    "6125beffc437f970eae276b4a6542265c6547784",
    "3b5e5d728bf1b8d222c538f7cfc92cab0805eb1f",
    "c4c966c9712ae2c9ce8f2f215598477d4b59586f",
    "93390fbc8a6952bbb20571ac1b18a705814fc219",
    "4cbd709c019cf1b69796858506d673f7b66d37c7",
    "7af9e82fc16545a8153b529fba91df0fb310e2e6",
    "c28f32e2a8067514aefbc198f24744401c1a8c87"
  ],
  "changeHistoryShort": {
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
    "2f5115bce66f153ddfa02306505c1e81af942ff5": "Ybodychange",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": "Ybodychange",
    "7dd24c8c35572b5db3e5c905d440e813cfe2538c": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": "Ybodychange",
    "59014fa7539bdbaacda4325454964492db0c6109": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": "Ybodychange",
    "7065b0d9dc232313d2dfd43fa882d24736e87ade": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "083ab98e4a451f1a982db89616535d9c0388b50b": "Ybodychange",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "3b5e5d728bf1b8d222c538f7cfc92cab0805eb1f": "Yexceptionschange",
    "c4c966c9712ae2c9ce8f2f215598477d4b59586f": "Ybodychange",
    "93390fbc8a6952bbb20571ac1b18a705814fc219": "Ymovefromfile",
    "4cbd709c019cf1b69796858506d673f7b66d37c7": "Ybodychange",
    "7af9e82fc16545a8153b529fba91df0fb310e2e6": "Ymultichange(Yparameterchange,Ybodychange)",
    "c28f32e2a8067514aefbc198f24744401c1a8c87": "Yintroduced"
  },
  "changeHistoryDetails": {
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
      "commitMessage": "Issue #5436: Split TreeWalker to TreeWalker and JavaParser\n",
      "commitDate": 1516775986000,
      "commitName": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
      "commitAuthor": "Pavel Bludov",
      "subchanges": [
        "Ymovefromfile",
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "2f5115bce66f153ddfa02306505c1e81af942ff5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4398: increase coverage of pitest-checkstyle-tree-walker to 100%\n",
      "commitDate": 1503389155000,
      "commitName": "2f5115bce66f153ddfa02306505c1e81af942ff5",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1500928695000,
      "commitNameOld": "6d9e8ece85007117e048fef55469623b830f9446",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 28.48,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n     public static DetailAST parse(FileContents contents)\n             throws RecognitionException, TokenStreamException {\n         final String fullText \u003d contents.getText().getFullText().toString();\n         final Reader reader \u003d new StringReader(fullText);\n         final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(reader);\n-        lexer.setFilename(contents.getFileName());\n         lexer.setCommentListener(contents);\n-        lexer.setTreatAssertAsKeyword(true);\n-        lexer.setTreatEnumAsKeyword(true);\n         lexer.setTokenObjectClass(\"antlr.CommonHiddenStreamToken\");\n \n         final TokenStreamHiddenTokenFilter filter \u003d\n                 new TokenStreamHiddenTokenFilter(lexer);\n         filter.hide(TokenTypes.SINGLE_LINE_COMMENT);\n         filter.hide(TokenTypes.BLOCK_COMMENT_BEGIN);\n \n         final GeneratedJavaRecognizer parser \u003d\n             new GeneratedJavaRecognizer(filter);\n         parser.setFilename(contents.getFileName());\n         parser.setASTNodeClass(DetailAST.class.getName());\n         parser.compilationUnit();\n \n         return (DetailAST) parser.getAST();\n     }\n\\ No newline at end of file\n"
    },
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": {
      "type": "Ybodychange",
      "commitMessage": "Issue #985: Fix PMD violations for ShortVariable rule\n",
      "commitDate": 1444178762000,
      "commitName": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1442193564000,
      "commitNameOld": "0bff657f61fcc60186e3800f5dc5d1b69652c246",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 22.98,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public static DetailAST parse(FileContents contents)\n         throws RecognitionException, TokenStreamException {\n         final String fullText \u003d contents.getText().getFullText().toString();\n-        final Reader sr \u003d new StringReader(fullText);\n-        final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(sr);\n+        final Reader reader \u003d new StringReader(fullText);\n+        final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(reader);\n         lexer.setFilename(contents.getFileName());\n         lexer.setCommentListener(contents);\n         lexer.setTreatAssertAsKeyword(true);\n         lexer.setTreatEnumAsKeyword(true);\n         lexer.setTokenObjectClass(\"antlr.CommonHiddenStreamToken\");\n \n         final TokenStreamHiddenTokenFilter filter \u003d\n                 new TokenStreamHiddenTokenFilter(lexer);\n         filter.hide(TokenTypes.SINGLE_LINE_COMMENT);\n         filter.hide(TokenTypes.BLOCK_COMMENT_BEGIN);\n \n         final GeneratedJavaRecognizer parser \u003d\n             new GeneratedJavaRecognizer(filter);\n         parser.setFilename(contents.getFileName());\n         parser.setASTNodeClass(DetailAST.class.getName());\n         parser.compilationUnit();\n \n         return (DetailAST) parser.getAST();\n     }\n\\ No newline at end of file\n"
    },
    "7dd24c8c35572b5db3e5c905d440e813cfe2538c": {
      "type": "Ybodychange",
      "commitMessage": "fix for Findbugs violations NM_CONFUSING. Issue #912\n",
      "commitDate": 1428792106000,
      "commitName": "7dd24c8c35572b5db3e5c905d440e813cfe2538c",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1427233706000,
      "commitNameOld": "1dacd5303bfe94b9d5476059b6a5676146d96708",
      "commitAuthorOld": "Damian Szczepanik",
      "daysBetweenCommits": 18.04,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public static DetailAST parse(FileContents contents)\n         throws RecognitionException, TokenStreamException\n     {\n         final String fullText \u003d contents.getText().getFullText().toString();\n         final Reader sr \u003d new StringReader(fullText);\n         final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(sr);\n-        lexer.setFilename(contents.getFilename());\n+        lexer.setFilename(contents.getFileName());\n         lexer.setCommentListener(contents);\n         lexer.setTreatAssertAsKeyword(true);\n         lexer.setTreatEnumAsKeyword(true);\n         lexer.setTokenObjectClass(\"antlr.CommonHiddenStreamToken\");\n \n         final TokenStreamHiddenTokenFilter filter \u003d\n                 new TokenStreamHiddenTokenFilter(lexer);\n         filter.hide(TokenTypes.SINGLE_LINE_COMMENT);\n         filter.hide(TokenTypes.BLOCK_COMMENT_BEGIN);\n \n         final GeneratedJavaRecognizer parser \u003d\n             new GeneratedJavaRecognizer(filter);\n-        parser.setFilename(contents.getFilename());\n+        parser.setFilename(contents.getFileName());\n         parser.setASTNodeClass(DetailAST.class.getName());\n         parser.compilationUnit();\n \n         return (DetailAST) parser.getAST();\n     }\n\\ No newline at end of file\n"
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": 1421678312000,
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #49. Added support of single-line and block comments\n",
      "commitDate": 1413609550000,
      "commitName": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1413609550000,
      "commitNameOld": "59014fa7539bdbaacda4325454964492db0c6109",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public static DetailAST parse(FileContents aContents)\n-            throws RecognitionException, TokenStreamException\n+        throws RecognitionException, TokenStreamException\n     {\n         final String fullText \u003d aContents.getText().getFullText().toString();\n         final Reader sr \u003d new StringReader(fullText);\n         final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(sr);\n         lexer.setFilename(aContents.getFilename());\n         lexer.setCommentListener(aContents);\n         lexer.setTreatAssertAsKeyword(true);\n         lexer.setTreatEnumAsKeyword(true);\n         lexer.setTokenObjectClass(\"antlr.CommonHiddenStreamToken\");\n \n-        TokenStreamHiddenTokenFilter filter \u003d new TokenStreamHiddenTokenFilter(\n-                lexer);\n+        final TokenStreamHiddenTokenFilter filter \u003d\n+                new TokenStreamHiddenTokenFilter(lexer);\n         filter.hide(TokenTypes.SINGLE_LINE_COMMENT);\n         filter.hide(TokenTypes.BLOCK_COMMENT_BEGIN);\n \n         final GeneratedJavaRecognizer parser \u003d\n-                new GeneratedJavaRecognizer(filter);\n+            new GeneratedJavaRecognizer(filter);\n         parser.setFilename(aContents.getFilename());\n         parser.setASTNodeClass(DetailAST.class.getName());\n         parser.compilationUnit();\n \n         return (DetailAST) parser.getAST();\n     }\n\\ No newline at end of file\n"
    },
    "59014fa7539bdbaacda4325454964492db0c6109": {
      "type": "Ybodychange",
      "commitMessage": "Issue #49. Added comments support to antlr grammar. Added new token types to TokenTypes class.\nTreeWalker treats comment nodes as hidden (skips them). Changed superclass of DetailAST to CommonASTWithHiddenTokens.\n",
      "commitDate": 1413609550000,
      "commitName": "59014fa7539bdbaacda4325454964492db0c6109",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1393953491000,
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 227.5,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,25 @@\n     public static DetailAST parse(FileContents aContents)\n-        throws RecognitionException, TokenStreamException\n+            throws RecognitionException, TokenStreamException\n     {\n         final String fullText \u003d aContents.getText().getFullText().toString();\n         final Reader sr \u003d new StringReader(fullText);\n         final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(sr);\n         lexer.setFilename(aContents.getFilename());\n         lexer.setCommentListener(aContents);\n         lexer.setTreatAssertAsKeyword(true);\n         lexer.setTreatEnumAsKeyword(true);\n+        lexer.setTokenObjectClass(\"antlr.CommonHiddenStreamToken\");\n+\n+        TokenStreamHiddenTokenFilter filter \u003d new TokenStreamHiddenTokenFilter(\n+                lexer);\n+        filter.hide(TokenTypes.SINGLE_LINE_COMMENT);\n+        filter.hide(TokenTypes.BLOCK_COMMENT_BEGIN);\n \n         final GeneratedJavaRecognizer parser \u003d\n-            new GeneratedJavaRecognizer(lexer);\n+                new GeneratedJavaRecognizer(filter);\n         parser.setFilename(aContents.getFilename());\n         parser.setASTNodeClass(DetailAST.class.getName());\n         parser.compilationUnit();\n \n         return (DetailAST) parser.getAST();\n     }\n\\ No newline at end of file\n"
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": 1393953491000,
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": 1393482905000,
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": {
      "type": "Ybodychange",
      "commitMessage": "Apply patch #2783226 that uses FileText as an implementation for\nList\u003cString\u003e to pass lines around\n",
      "commitDate": 1277730133000,
      "commitName": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1266029835000,
      "commitNameOld": "523080bbf2be11354b94b851ac85d06e7e8a2c14",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 135.42,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n     public static DetailAST parse(FileContents aContents)\n         throws RecognitionException, TokenStreamException\n     {\n-        final Reader sar \u003d new StringArrayReader(aContents.getLines());\n-        final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(sar);\n+        final String fullText \u003d aContents.getText().getFullText().toString();\n+        final Reader sr \u003d new StringReader(fullText);\n+        final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(sr);\n         lexer.setFilename(aContents.getFilename());\n         lexer.setCommentListener(aContents);\n         lexer.setTreatAssertAsKeyword(true);\n         lexer.setTreatEnumAsKeyword(true);\n \n         final GeneratedJavaRecognizer parser \u003d\n             new GeneratedJavaRecognizer(lexer);\n         parser.setFilename(aContents.getFilename());\n         parser.setASTNodeClass(DetailAST.class.getName());\n         parser.compilationUnit();\n \n         return (DetailAST) parser.getAST();\n     }\n\\ No newline at end of file\n"
    },
    "7065b0d9dc232313d2dfd43fa882d24736e87ade": {
      "type": "Ybodychange",
      "commitMessage": "Another point of no return - remove fall back parsing to Java 1.3 syntax.\n",
      "commitDate": 1198133032000,
      "commitName": "7065b0d9dc232313d2dfd43fa882d24736e87ade",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1198131671000,
      "commitNameOld": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public static DetailAST parse(FileContents aContents)\n         throws RecognitionException, TokenStreamException\n     {\n-        DetailAST rootAST \u003d null;\n+        final Reader sar \u003d new StringArrayReader(aContents.getLines());\n+        final GeneratedJavaLexer lexer \u003d new GeneratedJavaLexer(sar);\n+        lexer.setFilename(aContents.getFilename());\n+        lexer.setCommentListener(aContents);\n+        lexer.setTreatAssertAsKeyword(true);\n+        lexer.setTreatEnumAsKeyword(true);\n \n-        try {\n-            rootAST \u003d parse(aContents, true, true, true);\n-        }\n-        catch (final RecognitionException exception) {\n-            try {\n-                rootAST \u003d parse(aContents, true, true, false);\n-            }\n-            catch (final RecognitionException exception2) {\n-                rootAST \u003d parse(aContents, false, false, false);\n-            }\n-        }\n-        return rootAST;\n+        final GeneratedJavaRecognizer parser \u003d\n+            new GeneratedJavaRecognizer(lexer);\n+        parser.setFilename(aContents.getFilename());\n+        parser.setASTNodeClass(DetailAST.class.getName());\n+        parser.compilationUnit();\n+\n+        return (DetailAST) parser.getAST();\n     }\n\\ No newline at end of file\n"
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": 1152243856000,
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1152243235000,
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public static DetailAST parse(FileContents aContents)\n         throws RecognitionException, TokenStreamException\n     {\n         DetailAST rootAST \u003d null;\n \n         try {\n             rootAST \u003d parse(aContents, true, true, true);\n         }\n-        catch (RecognitionException exception) {\n+        catch (final RecognitionException exception) {\n             try {\n                 rootAST \u003d parse(aContents, true, true, false);\n             }\n-            catch (RecognitionException exception2) {\n+            catch (final RecognitionException exception2) {\n                 rootAST \u003d parse(aContents, false, false, false);\n             }\n         }\n         return rootAST;\n     }\n\\ No newline at end of file\n"
    },
    "083ab98e4a451f1a982db89616535d9c0388b50b": {
      "type": "Ybodychange",
      "commitMessage": "Folded all three Java grammars into one with optional assert/enum keyword treatment.\n",
      "commitDate": 1097239153000,
      "commitName": "083ab98e4a451f1a982db89616535d9c0388b50b",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1096311350000,
      "commitNameOld": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthorOld": "Michael Studman",
      "daysBetweenCommits": 10.74,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n     public static DetailAST parse(\n         FileContents aContents)\n         throws RecognitionException, TokenStreamException\n     {\n-        DetailAST rootAST;\n+        DetailAST rootAST \u003d null;\n \n         try {\n-            rootAST \u003d parse(\n-                GeneratedJava15Lexer.class, SilentJava15Recognizer.class,\n-                aContents);\n+            rootAST \u003d parse(aContents, true, true, true);\n         }\n         catch (RecognitionException exception) {\n-            rootAST \u003d parse(\n-                GeneratedJavaLexer.class, GeneratedJavaRecognizer.class,\n-                aContents);\n+            try {\n+                rootAST \u003d parse(aContents, true, true, false);\n+            }\n+            catch (RecognitionException exception2) {\n+                rootAST \u003d parse(aContents, false, false, false);\n+            }\n         }\n         return rootAST;\n     }\n\\ No newline at end of file\n"
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": 1096311350000,
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": 1093527252000,
      "commitNameOld": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 32.22,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,18 @@\n-    public static DetailAST parse(FileContents aContents)\n+    public static DetailAST parse(\n+        FileContents aContents)\n         throws RecognitionException, TokenStreamException\n     {\n         DetailAST rootAST;\n+\n         try {\n-            // try the 1.4 grammar first, this will succeed for\n-            // all code that compiles without any warnings in JDK 1.4,\n-            // that should cover most cases\n-            final Reader sar \u003d new StringArrayReader(aContents.getLines());\n-            final GeneratedJava14Lexer jl \u003d new GeneratedJava14Lexer(sar);\n-            jl.setFilename(aContents.getFilename());\n-            jl.setCommentListener(aContents);\n-\n-            final GeneratedJava14Recognizer jr \u003d\n-                new SilentJava14Recognizer(jl);\n-            jr.setFilename(aContents.getFilename());\n-            jr.setASTNodeClass(DetailAST.class.getName());\n-            jr.compilationUnit();\n-            rootAST \u003d (DetailAST) jr.getAST();\n+            rootAST \u003d parse(\n+                GeneratedJava15Lexer.class, SilentJava15Recognizer.class,\n+                aContents);\n         }\n-        catch (RecognitionException re) {\n-            // Parsing might have failed because the checked\n-            // file contains \"assert\" as an identifier. Retry with a\n-            // grammar that treats \"assert\" as an identifier\n-            // and not as a keyword\n-\n-            // Arghh - the pain - duplicate code!\n-            final Reader sar \u003d new StringArrayReader(aContents.getLines());\n-            final GeneratedJavaLexer jl \u003d new GeneratedJavaLexer(sar);\n-            jl.setFilename(aContents.getFilename());\n-            jl.setCommentListener(aContents);\n-\n-            final GeneratedJavaRecognizer jr \u003d new GeneratedJavaRecognizer(jl);\n-            jr.setFilename(aContents.getFilename());\n-            jr.setASTNodeClass(DetailAST.class.getName());\n-            jr.compilationUnit();\n-            rootAST \u003d (DetailAST) jr.getAST();\n+        catch (RecognitionException exception) {\n+            rootAST \u003d parse(\n+                GeneratedJavaLexer.class, GeneratedJavaRecognizer.class,\n+                aContents);\n         }\n         return rootAST;\n     }\n\\ No newline at end of file\n"
    },
    "3b5e5d728bf1b8d222c538f7cfc92cab0805eb1f": {
      "type": "Yexceptionschange",
      "commitMessage": "Fix checkstyle errors\n",
      "commitDate": 1090411333000,
      "commitName": "3b5e5d728bf1b8d222c538f7cfc92cab0805eb1f",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1090410804000,
      "commitNameOld": "09dd78602f86ca6c996d1a79672c7614c5e42b96",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static DetailAST parse(FileContents aContents)\n-        throws TokenStreamException, RecognitionException\n+        throws RecognitionException, TokenStreamException\n     {\n         DetailAST rootAST;\n         try {\n             // try the 1.4 grammar first, this will succeed for\n             // all code that compiles without any warnings in JDK 1.4,\n             // that should cover most cases\n             final Reader sar \u003d new StringArrayReader(aContents.getLines());\n             final GeneratedJava14Lexer jl \u003d new GeneratedJava14Lexer(sar);\n             jl.setFilename(aContents.getFilename());\n             jl.setCommentListener(aContents);\n \n             final GeneratedJava14Recognizer jr \u003d\n                 new SilentJava14Recognizer(jl);\n             jr.setFilename(aContents.getFilename());\n             jr.setASTNodeClass(DetailAST.class.getName());\n             jr.compilationUnit();\n             rootAST \u003d (DetailAST) jr.getAST();\n         }\n         catch (RecognitionException re) {\n             // Parsing might have failed because the checked\n             // file contains \"assert\" as an identifier. Retry with a\n             // grammar that treats \"assert\" as an identifier\n             // and not as a keyword\n \n             // Arghh - the pain - duplicate code!\n             final Reader sar \u003d new StringArrayReader(aContents.getLines());\n             final GeneratedJavaLexer jl \u003d new GeneratedJavaLexer(sar);\n             jl.setFilename(aContents.getFilename());\n             jl.setCommentListener(aContents);\n \n             final GeneratedJavaRecognizer jr \u003d new GeneratedJavaRecognizer(jl);\n             jr.setFilename(aContents.getFilename());\n             jr.setASTNodeClass(DetailAST.class.getName());\n             jr.compilationUnit();\n             rootAST \u003d (DetailAST) jr.getAST();\n         }\n         return rootAST;\n     }\n\\ No newline at end of file\n"
    },
    "c4c966c9712ae2c9ce8f2f215598477d4b59586f": {
      "type": "Ybodychange",
      "commitMessage": "Fix grammar build process (RFE 827781)\n",
      "commitDate": 1068741173000,
      "commitName": "c4c966c9712ae2c9ce8f2f215598477d4b59586f",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": 1062563740000,
      "commitNameOld": "1e7bbb8cd8a0d8d2167792e917c7cb79a36b20b0",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 71.5,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static DetailAST parse(FileContents aContents)\n         throws TokenStreamException, RecognitionException\n     {\n         DetailAST rootAST;\n         try {\n             // try the 1.4 grammar first, this will succeed for\n             // all code that compiles without any warnings in JDK 1.4,\n             // that should cover most cases\n             final Reader sar \u003d new StringArrayReader(aContents.getLines());\n             final GeneratedJava14Lexer jl \u003d new GeneratedJava14Lexer(sar);\n             jl.setFilename(aContents.getFilename());\n-            jl.setFileContents(aContents);\n+            jl.setCommentListener(aContents);\n \n             final GeneratedJava14Recognizer jr \u003d\n                 new SilentJava14Recognizer(jl);\n             jr.setFilename(aContents.getFilename());\n             jr.setASTNodeClass(DetailAST.class.getName());\n             jr.compilationUnit();\n             rootAST \u003d (DetailAST) jr.getAST();\n         }\n         catch (RecognitionException re) {\n             // Parsing might have failed because the checked\n             // file contains \"assert\" as an identifier. Retry with a\n             // grammar that treats \"assert\" as an identifier\n             // and not as a keyword\n \n             // Arghh - the pain - duplicate code!\n             final Reader sar \u003d new StringArrayReader(aContents.getLines());\n             final GeneratedJavaLexer jl \u003d new GeneratedJavaLexer(sar);\n             jl.setFilename(aContents.getFilename());\n-            jl.setFileContents(aContents);\n+            jl.setCommentListener(aContents);\n \n             final GeneratedJavaRecognizer jr \u003d new GeneratedJavaRecognizer(jl);\n             jr.setFilename(aContents.getFilename());\n             jr.setASTNodeClass(DetailAST.class.getName());\n             jr.compilationUnit();\n             rootAST \u003d (DetailAST) jr.getAST();\n         }\n         return rootAST;\n     }\n\\ No newline at end of file\n"
    },
    "93390fbc8a6952bbb20571ac1b18a705814fc219": {
      "type": "Ymovefromfile",
      "commitMessage": "moved parse() from Checker to TreeWalker\n",
      "commitDate": 1037520335000,
      "commitName": "93390fbc8a6952bbb20571ac1b18a705814fc219",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": 1037517455000,
      "commitNameOld": "62133d954155f6ca9a1ace7a1d88898d654ab375",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "4cbd709c019cf1b69796858506d673f7b66d37c7": {
      "type": "Ybodychange",
      "commitMessage": "This is a really enjoyable commit to make. I have finally got to remove the\nugly Verifier class. The only remaining check are based on the new fileset\ncheck that Lars putting together. Magic. :-)\n",
      "commitDate": 1037161281000,
      "commitName": "4cbd709c019cf1b69796858506d673f7b66d37c7",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": 1036555078000,
      "commitNameOld": "5fc3ff2bfbed94f88e1af95f38e970a832e4dbe6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 7.02,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static DetailAST parse(FileContents aContents)\n         throws TokenStreamException, RecognitionException\n     {\n         DetailAST rootAST;\n         try {\n             // try the 1.4 grammar first, this will succeed for\n             // all code that compiles without any warnings in JDK 1.4,\n             // that should cover most cases\n             final Reader sar \u003d new StringArrayReader(aContents.getLines());\n-            final Java14Lexer jl \u003d new Java14Lexer(sar);\n+            final GeneratedJava14Lexer jl \u003d new GeneratedJava14Lexer(sar);\n             jl.setFilename(aContents.getFilename());\n             jl.setFileContents(aContents);\n \n-            final Java14Recognizer jr \u003d\n-                new NEWSilentJava14Recognizer(jl);\n+            final GeneratedJava14Recognizer jr \u003d\n+                new SilentJava14Recognizer(jl);\n             jr.setFilename(aContents.getFilename());\n             jr.setASTNodeClass(DetailAST.class.getName());\n             jr.compilationUnit();\n             rootAST \u003d (DetailAST) jr.getAST();\n         }\n         catch (RecognitionException re) {\n             // Parsing might have failed because the checked\n             // file contains \"assert\" as an identifier. Retry with a\n             // grammar that treats \"assert\" as an identifier\n             // and not as a keyword\n \n             // Arghh - the pain - duplicate code!\n             final Reader sar \u003d new StringArrayReader(aContents.getLines());\n-            final JavaLexer jl \u003d new JavaLexer(sar);\n+            final GeneratedJavaLexer jl \u003d new GeneratedJavaLexer(sar);\n             jl.setFilename(aContents.getFilename());\n             jl.setFileContents(aContents);\n \n-            final JavaRecognizer jr \u003d new JavaRecognizer(jl);\n+            final GeneratedJavaRecognizer jr \u003d new GeneratedJavaRecognizer(jl);\n             jr.setFilename(aContents.getFilename());\n             jr.setASTNodeClass(DetailAST.class.getName());\n             jr.compilationUnit();\n             rootAST \u003d (DetailAST) jr.getAST();\n         }\n         return rootAST;\n     }\n\\ No newline at end of file\n"
    },
    "7af9e82fc16545a8153b529fba91df0fb310e2e6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Refactored the comment manager class to having a file contents class. This\nclass has the file name, lines and comments.\n",
      "commitDate": 1035466470000,
      "commitName": "7af9e82fc16545a8153b529fba91df0fb310e2e6",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        "Yparameterchange",
        "Ybodychange"
      ]
    },
    "c28f32e2a8067514aefbc198f24744401c1a8c87": {
      "type": "Yintroduced",
      "commitMessage": "cleanup of duplicate parsing code in Checker and gui\n",
      "commitDate": 1035284715000,
      "commitName": "c28f32e2a8067514aefbc198f24744401c1a8c87",
      "commitAuthor": "Lars Kühne"
    }
  }
}