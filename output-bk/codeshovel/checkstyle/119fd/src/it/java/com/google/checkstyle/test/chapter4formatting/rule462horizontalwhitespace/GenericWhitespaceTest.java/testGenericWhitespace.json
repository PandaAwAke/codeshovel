{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "GenericWhitespaceTest.java",
  "functionName": "testGenericWhitespace",
  "functionId": "testGenericWhitespace",
  "sourceFilePath": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/GenericWhitespaceTest.java",
  "functionStartLine": 67,
  "functionEndLine": 107,
  "changeHistory": [
    "cf436f1d9806016cb1886b5d7ec397f56aedc824",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "662cb2e20e296d1546bb7c845e4661dcdcc77855",
    "36206fcfd0cee5acd4e4a31bb9549aea09920bbf",
    "344ea5c012d1814441b5758013a2b035c6e1613a",
    "80f66e1c88a92925c9e44a99792ac6b23ef22447",
    "437986510709d7abc64b59c72779343ac5e77599"
  ],
  "changeHistoryShort": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": "Ybodychange",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": "Yrename",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ybodychange",
    "662cb2e20e296d1546bb7c845e4661dcdcc77855": "Ybodychange",
    "36206fcfd0cee5acd4e4a31bb9549aea09920bbf": "Ymovefromfile",
    "344ea5c012d1814441b5758013a2b035c6e1613a": "Ybodychange",
    "80f66e1c88a92925c9e44a99792ac6b23ef22447": "Yexceptionschange",
    "437986510709d7abc64b59c72779343ac5e77599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4592: merged module test support and fileset test support",
      "commitDate": 1501657005000,
      "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501610201000,
      "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n     public void testGenericWhitespace() throws Exception {\n         final String msgPreceded \u003d \"ws.preceded\";\n         final String msgFollowed \u003d \"ws.followed\";\n         final String msgNotPreceded \u003d \"ws.notPreceded\";\n         final String msgIllegalFollow \u003d \"ws.illegalFollow\";\n-        final Configuration checkConfig \u003d getCheckConfig(\"GenericWhitespace\");\n+        final Configuration checkConfig \u003d getModuleConfig(\"GenericWhitespace\");\n \n         final String[] expected \u003d {\n             \"16:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:23: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"16:43: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:45: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:53: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:20: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:22: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:30: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:52: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:54: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:59: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:61: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:69: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"30:17: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u003c\"),\n             \"30:21: \" + getCheckMessage(checkConfig.getMessages(), msgIllegalFollow, \"\u003e\"),\n             \"42:21: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"42:30: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"60:60: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u0026\"),\n             \"63:60: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n         };\n \n         final String filePath \u003d getPath(\"InputGenericWhitespace.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": {
      "type": "Yrename",
      "commitMessage": "Issue #4518: fix pmd violations for TestClassWithoutTestCases\n",
      "commitDate": 1498315848000,
      "commitName": "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 148.01,
      "commitsBetweenForRepo": 501,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n-    public void genericWhitespaceTest() throws Exception {\n+    public void testGenericWhitespace() throws Exception {\n         final String msgPreceded \u003d \"ws.preceded\";\n         final String msgFollowed \u003d \"ws.followed\";\n         final String msgNotPreceded \u003d \"ws.notPreceded\";\n         final String msgIllegalFollow \u003d \"ws.illegalFollow\";\n         final Configuration checkConfig \u003d getCheckConfig(\"GenericWhitespace\");\n \n         final String[] expected \u003d {\n             \"16:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:23: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"16:43: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:45: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:53: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:20: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:22: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:30: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:52: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:54: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:59: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:61: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:69: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"30:17: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u003c\"),\n             \"30:21: \" + getCheckMessage(checkConfig.getMessages(), msgIllegalFollow, \"\u003e\"),\n             \"42:21: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"42:30: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"60:60: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u0026\"),\n             \"63:60: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n         };\n \n         final String filePath \u003d getPath(\"InputGenericWhitespace.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": 1447384120000,
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447252721000,
      "commitNameOld": "6c49a05cb65fe91c3d71ebd301f6b3a3a49f020f",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.52,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n     public void genericWhitespaceTest() throws Exception {\n         final String msgPreceded \u003d \"ws.preceded\";\n         final String msgFollowed \u003d \"ws.followed\";\n         final String msgNotPreceded \u003d \"ws.notPreceded\";\n         final String msgIllegalFollow \u003d \"ws.illegalFollow\";\n-        final Configuration checkConfig \u003d builder.getCheckConfig(\"GenericWhitespace\");\n+        final Configuration checkConfig \u003d getCheckConfig(\"GenericWhitespace\");\n \n         final String[] expected \u003d {\n             \"16:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:23: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"16:43: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:45: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:53: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:20: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:22: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:30: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:52: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:54: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:59: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:61: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:69: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"30:17: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u003c\"),\n             \"30:21: \" + getCheckMessage(checkConfig.getMessages(), msgIllegalFollow, \"\u003e\"),\n             \"42:21: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"42:30: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"60:60: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u0026\"),\n             \"63:60: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"InputGenericWhitespace\");\n+        final String filePath \u003d getPath(\"InputGenericWhitespace.java\");\n \n-        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "662cb2e20e296d1546bb7c845e4661dcdcc77855": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2540: unify it input file names for chapter4formatting",
      "commitDate": 1447163412000,
      "commitName": "662cb2e20e296d1546bb7c845e4661dcdcc77855",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447076334000,
      "commitNameOld": "36206fcfd0cee5acd4e4a31bb9549aea09920bbf",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.01,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n     public void genericWhitespaceTest() throws Exception {\n         final String msgPreceded \u003d \"ws.preceded\";\n         final String msgFollowed \u003d \"ws.followed\";\n         final String msgNotPreceded \u003d \"ws.notPreceded\";\n         final String msgIllegalFollow \u003d \"ws.illegalFollow\";\n         final Configuration checkConfig \u003d builder.getCheckConfig(\"GenericWhitespace\");\n \n         final String[] expected \u003d {\n             \"16:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:23: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"16:43: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:45: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:53: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:20: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:22: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:30: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:52: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:54: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:59: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:61: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:69: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"30:17: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u003c\"),\n             \"30:21: \" + getCheckMessage(checkConfig.getMessages(), msgIllegalFollow, \"\u003e\"),\n             \"42:21: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"42:30: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"60:60: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u0026\"),\n             \"63:60: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"GenericWhitespaceInput\");\n+        final String filePath \u003d builder.getFilePath(\"InputGenericWhitespace\");\n \n         final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "36206fcfd0cee5acd4e4a31bb9549aea09920bbf": {
      "type": "Ymovefromfile",
      "commitMessage": "Issue #2557: made tests only cover one subject",
      "commitDate": 1447076334000,
      "commitName": "36206fcfd0cee5acd4e4a31bb9549aea09920bbf",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447076334000,
      "commitNameOld": "5f5fc6da1a50e87524cc7741cab5c663fa4af9e2",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "344ea5c012d1814441b5758013a2b035c6e1613a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2421: enabling checking on it folder",
      "commitDate": 1445797820000,
      "commitName": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445782886000,
      "commitNameOld": "a2ae6fa3a82abc0562772af74de80bee2f927cd8",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n     public void genericWhitespaceTest() throws Exception {\n-        String msgPreceded \u003d \"ws.preceded\";\n-        String msgFollowed \u003d \"ws.followed\";\n-        String msgNotPreceded \u003d \"ws.notPreceded\";\n-        String msgIllegalFollow \u003d \"ws.illegalFollow\";\n-        Configuration checkConfig \u003d builder.getCheckConfig(\"GenericWhitespace\");\n+        final String msgPreceded \u003d \"ws.preceded\";\n+        final String msgFollowed \u003d \"ws.followed\";\n+        final String msgNotPreceded \u003d \"ws.notPreceded\";\n+        final String msgIllegalFollow \u003d \"ws.illegalFollow\";\n+        final Configuration checkConfig \u003d builder.getCheckConfig(\"GenericWhitespace\");\n \n         final String[] expected \u003d {\n             \"16:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:23: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"16:43: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:45: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:53: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:20: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:22: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:30: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:52: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:54: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:59: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:61: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:69: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"30:17: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u003c\"),\n             \"30:21: \" + getCheckMessage(checkConfig.getMessages(), msgIllegalFollow, \"\u003e\"),\n             \"42:21: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"42:30: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"60:60: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u0026\"),\n             \"63:60: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n         };\n \n-        String filePath \u003d builder.getFilePath(\"GenericWhitespaceInput\");\n+        final String filePath \u003d builder.getFilePath(\"GenericWhitespaceInput\");\n \n-        Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "80f66e1c88a92925c9e44a99792ac6b23ef22447": {
      "type": "Yexceptionschange",
      "commitMessage": "Use only one exception on throws list for tests. #1555\n\nFixes `MultipleExceptionsDeclaredOnTestMethod` inspection violation\n\nDescription:\n\u003eReports JUnit test methods with more than one exception declared in the throws clause. Such a throws clause can be more concisely declared as `throws Exception`.\n",
      "commitDate": 1440498266000,
      "commitName": "80f66e1c88a92925c9e44a99792ac6b23ef22447",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440243521000,
      "commitNameOld": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.95,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,42 @@\n-    public void genericWhitespaceTest() throws IOException, Exception\n-    {\n+    public void genericWhitespaceTest() throws Exception {\n         String msgPreceded \u003d \"ws.preceded\";\n         String msgFollowed \u003d \"ws.followed\";\n         String msgNotPreceded \u003d \"ws.notPreceded\";\n         String msgIllegalFollow \u003d \"ws.illegalFollow\";\n         Configuration checkConfig \u003d builder.getCheckConfig(\"GenericWhitespace\");\n         \n         \n         final String[] expected \u003d {\n             \"16:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:23: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"16:43: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"16:45: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"16:53: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:13: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:15: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:20: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:22: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:30: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:32: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:52: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:54: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:59: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"17:61: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003c\"),\n             \"17:69: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"17:71: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003e\"),\n             \"30:17: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u003c\"),\n             \"30:21: \" + getCheckMessage(checkConfig.getMessages(), msgIllegalFollow, \"\u003e\"),\n             \"42:21: \" + getCheckMessage(checkConfig.getMessages(), msgPreceded, \"\u003c\"),\n             \"42:30: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n             \"60:60: \" + getCheckMessage(checkConfig.getMessages(), msgNotPreceded, \"\u0026\"),\n             \"63:60: \" + getCheckMessage(checkConfig.getMessages(), msgFollowed, \"\u003e\"),\n         };\n \n         String filePath \u003d builder.getFilePath(\"GenericWhitespaceInput\");\n \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "437986510709d7abc64b59c72779343ac5e77599": {
      "type": "Yintroduced",
      "commitMessage": "Integrate google-style-config-test as Integration Test. #863\n",
      "commitDate": 1433731038000,
      "commitName": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthor": "Roman Ivanov"
    }
  }
}