{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "CommentsIndentationTest.java",
  "functionName": "testCommentIsAtTheEndOfBlock",
  "functionId": "testCommentIsAtTheEndOfBlock",
  "sourceFilePath": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java",
  "functionStartLine": 36,
  "functionEndLine": 100,
  "changeHistory": [
    "cf436f1d9806016cb1886b5d7ec397f56aedc824",
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "662cb2e20e296d1546bb7c845e4661dcdcc77855",
    "e21676f52f3d68294122244cea63b4ecbe92de8f",
    "344ea5c012d1814441b5758013a2b035c6e1613a",
    "df5eac375738952fdaa3bbf7de41965aa01a8cb6"
  ],
  "changeHistoryShort": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": "Ybodychange",
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": "Ybodychange",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ybodychange",
    "662cb2e20e296d1546bb7c845e4661dcdcc77855": "Ybodychange",
    "e21676f52f3d68294122244cea63b4ecbe92de8f": "Ymultichange(Yrename,Ybodychange)",
    "344ea5c012d1814441b5758013a2b035c6e1613a": "Ybodychange",
    "df5eac375738952fdaa3bbf7de41965aa01a8cb6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4592: merged module test support and fileset test support",
      "commitDate": 1501657005000,
      "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501610201000,
      "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,65 +1,65 @@\n     public void testCommentIsAtTheEndOfBlock() throws Exception {\n         final String[] expected \u003d {\n             \"18: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 17, 25, 8),\n             \"33: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 35, 5, 4),\n             \"37: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 36, 0, 8),\n             \"47: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 46, 15, 12),\n             \"49: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 45, 10, 8),\n             \"54: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 53, 13, 8),\n             \"74: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 70, 18, 8),\n             \"88: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 85, 31, 8),\n             \"100: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 98, 21, 8),\n             \"115: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 116, 29, 12),\n             \"138: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 131, 26, 8),\n             \"164: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 161, 33, 8),\n             \"174: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 173, 21, 8),\n             \"186: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 184, 34, 8),\n             \"208: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 206, 26, 8),\n             \"214: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 213, 0, 8),\n             \"228: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 225, 12, 8),\n             \"234: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 233, 0, 8),\n             \"248: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 245, 12, 8),\n             \"255: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 252, 0, 8),\n             \"265: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 264, 14, 8),\n             \"271: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 269, 9, 8),\n             \"277: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 276, 9, 8),\n             \"316: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 315, 9, 8),\n             \"322: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 323, 0, 4),\n             \"336: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 333, 0, 8),\n             \"355: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 352, 9, 8),\n             };\n \n-        final Configuration checkConfig \u003d getCheckConfig(\"CommentsIndentation\");\n+        final Configuration checkConfig \u003d getModuleConfig(\"CommentsIndentation\");\n         final String filePath \u003d\n             getPath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
      "commitDate": 1464613701000,
      "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 146.53,
      "commitsBetweenForRepo": 359,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,65 +1,65 @@\n     public void testCommentIsAtTheEndOfBlock() throws Exception {\n         final String[] expected \u003d {\n             \"18: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 17, 25, 8),\n             \"33: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 35, 5, 4),\n             \"37: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 36, 0, 8),\n             \"47: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 46, 15, 12),\n             \"49: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n-                48, 10, 8),\n+                45, 10, 8),\n             \"54: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 53, 13, 8),\n             \"74: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 70, 18, 8),\n             \"88: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 85, 31, 8),\n             \"100: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 98, 21, 8),\n             \"115: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 116, 29, 12),\n             \"138: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 131, 26, 8),\n             \"164: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 161, 33, 8),\n             \"174: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 173, 21, 8),\n             \"186: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 184, 34, 8),\n             \"208: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 206, 26, 8),\n             \"214: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 213, 0, 8),\n             \"228: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 225, 12, 8),\n             \"234: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 233, 0, 8),\n             \"248: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 245, 12, 8),\n             \"255: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 252, 0, 8),\n             \"265: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 264, 14, 8),\n             \"271: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 269, 9, 8),\n             \"277: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 276, 9, 8),\n             \"316: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 315, 9, 8),\n             \"322: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 323, 0, 4),\n             \"336: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n-                337, 0, 4),\n+                333, 0, 8),\n             \"355: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 352, 9, 8),\n             };\n \n         final Configuration checkConfig \u003d getCheckConfig(\"CommentsIndentation\");\n         final String filePath \u003d\n             getPath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": 1447384120000,
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447252721000,
      "commitNameOld": "6c49a05cb65fe91c3d71ebd301f6b3a3a49f020f",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.52,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,65 +1,65 @@\n     public void testCommentIsAtTheEndOfBlock() throws Exception {\n         final String[] expected \u003d {\n             \"18: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 17, 25, 8),\n             \"33: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 35, 5, 4),\n             \"37: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 36, 0, 8),\n             \"47: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 46, 15, 12),\n             \"49: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 48, 10, 8),\n             \"54: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 53, 13, 8),\n             \"74: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 70, 18, 8),\n             \"88: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 85, 31, 8),\n             \"100: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 98, 21, 8),\n             \"115: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 116, 29, 12),\n             \"138: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 131, 26, 8),\n             \"164: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 161, 33, 8),\n             \"174: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 173, 21, 8),\n             \"186: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 184, 34, 8),\n             \"208: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 206, 26, 8),\n             \"214: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 213, 0, 8),\n             \"228: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 225, 12, 8),\n             \"234: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 233, 0, 8),\n             \"248: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 245, 12, 8),\n             \"255: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 252, 0, 8),\n             \"265: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 264, 14, 8),\n             \"271: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 269, 9, 8),\n             \"277: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 276, 9, 8),\n             \"316: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 315, 9, 8),\n             \"322: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 323, 0, 4),\n             \"336: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 337, 0, 4),\n             \"355: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 352, 9, 8),\n             };\n \n-        final Configuration checkConfig \u003d builder.getCheckConfig(\"CommentsIndentation\");\n+        final Configuration checkConfig \u003d getCheckConfig(\"CommentsIndentation\");\n         final String filePath \u003d\n-            builder.getFilePath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock\");\n+            getPath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock.java\");\n \n-        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "662cb2e20e296d1546bb7c845e4661dcdcc77855": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2540: unify it input file names for chapter4formatting",
      "commitDate": 1447163412000,
      "commitName": "662cb2e20e296d1546bb7c845e4661dcdcc77855",
      "commitAuthor": "rnveach",
      "commitDateOld": 1446331712000,
      "commitNameOld": "e21676f52f3d68294122244cea63b4ecbe92de8f",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 9.63,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,65 +1,65 @@\n     public void testCommentIsAtTheEndOfBlock() throws Exception {\n         final String[] expected \u003d {\n             \"18: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 17, 25, 8),\n             \"33: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 35, 5, 4),\n             \"37: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 36, 0, 8),\n             \"47: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 46, 15, 12),\n             \"49: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 48, 10, 8),\n             \"54: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 53, 13, 8),\n             \"74: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 70, 18, 8),\n             \"88: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 85, 31, 8),\n             \"100: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 98, 21, 8),\n             \"115: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 116, 29, 12),\n             \"138: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 131, 26, 8),\n             \"164: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 161, 33, 8),\n             \"174: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 173, 21, 8),\n             \"186: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 184, 34, 8),\n             \"208: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 206, 26, 8),\n             \"214: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 213, 0, 8),\n             \"228: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 225, 12, 8),\n             \"234: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 233, 0, 8),\n             \"248: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 245, 12, 8),\n             \"255: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 252, 0, 8),\n             \"265: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 264, 14, 8),\n             \"271: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 269, 9, 8),\n             \"277: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 276, 9, 8),\n             \"316: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 315, 9, 8),\n             \"322: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 323, 0, 4),\n             \"336: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 337, 0, 4),\n             \"355: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",\n                 352, 9, 8),\n             };\n \n         final Configuration checkConfig \u003d builder.getCheckConfig(\"CommentsIndentation\");\n         final String filePath \u003d\n-            builder.getFilePath(\"CommentsIndentationCommentIsAtTheEndOfBlockInput\");\n+            builder.getFilePath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock\");\n \n         final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "e21676f52f3d68294122244cea63b4ecbe92de8f": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Issue #2078: Update ITs for CommentsIndentationCheck\n",
      "commitDate": 1446331712000,
      "commitName": "e21676f52f3d68294122244cea63b4ecbe92de8f",
      "commitAuthor": "Andrei Selkin",
      "subchanges": [
        "Yrename",
        "Ybodychange"
      ]
    },
    "344ea5c012d1814441b5758013a2b035c6e1613a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2421: enabling checking on it folder",
      "commitDate": 1445797820000,
      "commitName": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445711708000,
      "commitNameOld": "617178cb1f9cbb2535862b6e1d6c351f5635d242",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,25 @@\n     public void commentsIndentationTest() throws Exception {\n \n         final String[] expected \u003d {\n-            \"1: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\", 2, 1, 0),\n-            \"13: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\", 14, 8, 6),\n-            \"23: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\", 24, 8, 4),\n-            \"25: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\", 27, 8, 4),\n-            \"28: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\", 31, 8, 4),\n-            \"50: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\", 51, 23, 19),\n-            \"51: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\", 53, 19, 32),\n+            \"1: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", 2, 1, 0),\n+            \"13: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", 14, 8, 6),\n+            \"23: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.block\", 24, 8, 4),\n+            \"25: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.block\", 27, 8, 4),\n+            \"28: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.block\", 31, 8, 4),\n+            \"50: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", 51, 23, 19),\n+            \"51: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.block\", 53, 19, 32),\n         };\n \n-        Configuration checkConfig \u003d builder.getCheckConfig(\"CommentsIndentation\");\n-        String filePath \u003d builder.getFilePath(\"CommentsIndentationInput\");\n+        final Configuration checkConfig \u003d builder.getCheckConfig(\"CommentsIndentation\");\n+        final String filePath \u003d builder.getFilePath(\"CommentsIndentationInput\");\n \n-        Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "df5eac375738952fdaa3bbf7de41965aa01a8cb6": {
      "type": "Yintroduced",
      "commitMessage": "Added new Check: CommentsIndentationCheck, issue #333\n",
      "commitDate": 1439024061000,
      "commitName": "df5eac375738952fdaa3bbf7de41965aa01a8cb6",
      "commitAuthor": "Andrei Selkin"
    }
  }
}