{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "JavadocParagraphTest.java",
  "functionName": "testJavadocParagraphIncorrect",
  "functionId": "testJavadocParagraphIncorrect",
  "sourceFilePath": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule712paragraphs/JavadocParagraphTest.java",
  "functionStartLine": 48,
  "functionEndLine": 94,
  "changeHistory": [
    "cf436f1d9806016cb1886b5d7ec397f56aedc824",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "344ea5c012d1814441b5758013a2b035c6e1613a",
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293",
    "bb3f80410619472799c401651c43afb761f7906e",
    "437986510709d7abc64b59c72779343ac5e77599"
  ],
  "changeHistoryShort": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": "Ybodychange",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": "Yrename",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ybodychange",
    "344ea5c012d1814441b5758013a2b035c6e1613a": "Ybodychange",
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293": "Yexceptionschange",
    "bb3f80410619472799c401651c43afb761f7906e": "Ybodychange",
    "437986510709d7abc64b59c72779343ac5e77599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4592: merged module test support and fileset test support",
      "commitDate": 1501657005000,
      "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501610201000,
      "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n     public void testJavadocParagraphIncorrect() throws Exception {\n \n         final String msgBefore \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.line.before\");\n         final String msgRed \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.redundant.paragraph\");\n         final String msgMisplaced \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.misplaced.tag\");\n \n         final String[] expected \u003d {\n             \"5: \" + msgMisplaced,\n             \"5: \" + msgBefore,\n             \"6: \" + msgMisplaced,\n             \"6: \" + msgBefore,\n             \"12: \" + msgMisplaced,\n             \"12: \" + msgBefore,\n             \"14: \" + msgMisplaced,\n             \"21: \" + msgBefore,\n             \"30: \" + msgRed,\n             \"31: \" + msgMisplaced,\n             \"31: \" + msgBefore,\n             \"32: \" + msgMisplaced,\n             \"32: \" + msgBefore,\n             \"33: \" + msgMisplaced,\n             \"33: \" + msgBefore,\n             \"37: \" + msgMisplaced,\n             \"37: \" + msgBefore,\n             \"43: \" + msgMisplaced,\n             \"43: \" + msgRed,\n             \"46: \" + msgMisplaced,\n             \"48: \" + msgMisplaced,\n             \"48: \" + msgBefore,\n             \"49: \" + msgMisplaced,\n             \"49: \" + msgBefore,\n             \"59: \" + msgRed,\n             \"68: \" + msgMisplaced,\n             \"68: \" + msgBefore,\n             \"70: \" + msgMisplaced,\n             \"73: \" + msgMisplaced,\n             \"73: \" + msgBefore,\n         };\n \n-        final Configuration checkConfig \u003d getCheckConfig(\"JavadocParagraph\");\n+        final Configuration checkConfig \u003d getModuleConfig(\"JavadocParagraph\");\n         final String filePath \u003d getPath(\"InputIncorrectJavadocParagraphCheck.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": {
      "type": "Yrename",
      "commitMessage": "Issue #4518: fix pmd violations for TestClassWithoutTestCases\n",
      "commitDate": 1498315848000,
      "commitName": "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 148.01,
      "commitsBetweenForRepo": 501,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n-    public void javadocParagraphIncorrectTest() throws Exception {\n+    public void testJavadocParagraphIncorrect() throws Exception {\n \n         final String msgBefore \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.line.before\");\n         final String msgRed \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.redundant.paragraph\");\n         final String msgMisplaced \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.misplaced.tag\");\n \n         final String[] expected \u003d {\n             \"5: \" + msgMisplaced,\n             \"5: \" + msgBefore,\n             \"6: \" + msgMisplaced,\n             \"6: \" + msgBefore,\n             \"12: \" + msgMisplaced,\n             \"12: \" + msgBefore,\n             \"14: \" + msgMisplaced,\n             \"21: \" + msgBefore,\n             \"30: \" + msgRed,\n             \"31: \" + msgMisplaced,\n             \"31: \" + msgBefore,\n             \"32: \" + msgMisplaced,\n             \"32: \" + msgBefore,\n             \"33: \" + msgMisplaced,\n             \"33: \" + msgBefore,\n             \"37: \" + msgMisplaced,\n             \"37: \" + msgBefore,\n             \"43: \" + msgMisplaced,\n             \"43: \" + msgRed,\n             \"46: \" + msgMisplaced,\n             \"48: \" + msgMisplaced,\n             \"48: \" + msgBefore,\n             \"49: \" + msgMisplaced,\n             \"49: \" + msgBefore,\n             \"59: \" + msgRed,\n             \"68: \" + msgMisplaced,\n             \"68: \" + msgBefore,\n             \"70: \" + msgMisplaced,\n             \"73: \" + msgMisplaced,\n             \"73: \" + msgBefore,\n         };\n \n         final Configuration checkConfig \u003d getCheckConfig(\"JavadocParagraph\");\n         final String filePath \u003d getPath(\"InputIncorrectJavadocParagraphCheck.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": 1447384120000,
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447252721000,
      "commitNameOld": "6c49a05cb65fe91c3d71ebd301f6b3a3a49f020f",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.52,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n     public void javadocParagraphIncorrectTest() throws Exception {\n \n         final String msgBefore \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.line.before\");\n         final String msgRed \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.redundant.paragraph\");\n         final String msgMisplaced \u003d getCheckMessage(JavadocParagraphCheck.class,\n                 \"javadoc.paragraph.misplaced.tag\");\n \n         final String[] expected \u003d {\n             \"5: \" + msgMisplaced,\n             \"5: \" + msgBefore,\n             \"6: \" + msgMisplaced,\n             \"6: \" + msgBefore,\n             \"12: \" + msgMisplaced,\n             \"12: \" + msgBefore,\n             \"14: \" + msgMisplaced,\n             \"21: \" + msgBefore,\n             \"30: \" + msgRed,\n             \"31: \" + msgMisplaced,\n             \"31: \" + msgBefore,\n             \"32: \" + msgMisplaced,\n             \"32: \" + msgBefore,\n             \"33: \" + msgMisplaced,\n             \"33: \" + msgBefore,\n             \"37: \" + msgMisplaced,\n             \"37: \" + msgBefore,\n             \"43: \" + msgMisplaced,\n             \"43: \" + msgRed,\n             \"46: \" + msgMisplaced,\n             \"48: \" + msgMisplaced,\n             \"48: \" + msgBefore,\n             \"49: \" + msgMisplaced,\n             \"49: \" + msgBefore,\n             \"59: \" + msgRed,\n             \"68: \" + msgMisplaced,\n             \"68: \" + msgBefore,\n             \"70: \" + msgMisplaced,\n             \"73: \" + msgMisplaced,\n             \"73: \" + msgBefore,\n         };\n \n-        final Configuration checkConfig \u003d builder.getCheckConfig(\"JavadocParagraph\");\n-        final String filePath \u003d builder.getFilePath(\"InputIncorrectJavadocParagraphCheck\");\n+        final Configuration checkConfig \u003d getCheckConfig(\"JavadocParagraph\");\n+        final String filePath \u003d getPath(\"InputIncorrectJavadocParagraphCheck.java\");\n \n-        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "344ea5c012d1814441b5758013a2b035c6e1613a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2421: enabling checking on it folder",
      "commitDate": 1445797820000,
      "commitName": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445737158000,
      "commitNameOld": "464a7dd3fe17a40645608981fceb78e5d832c938",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.7,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,48 @@\n     public void javadocParagraphIncorrectTest() throws Exception {\n \n-        String msgBefore \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.line.before\");\n-        String msgRed \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.redundant.paragraph\");\n-        String msgMisplaced \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.misplaced.tag\");\n+        final String msgBefore \u003d getCheckMessage(JavadocParagraphCheck.class,\n+                \"javadoc.paragraph.line.before\");\n+        final String msgRed \u003d getCheckMessage(JavadocParagraphCheck.class,\n+                \"javadoc.paragraph.redundant.paragraph\");\n+        final String msgMisplaced \u003d getCheckMessage(JavadocParagraphCheck.class,\n+                \"javadoc.paragraph.misplaced.tag\");\n \n         final String[] expected \u003d {\n             \"5: \" + msgMisplaced,\n             \"5: \" + msgBefore,\n             \"6: \" + msgMisplaced,\n             \"6: \" + msgBefore,\n             \"12: \" + msgMisplaced,\n             \"12: \" + msgBefore,\n             \"14: \" + msgMisplaced,\n             \"21: \" + msgBefore,\n             \"30: \" + msgRed,\n             \"31: \" + msgMisplaced,\n             \"31: \" + msgBefore,\n             \"32: \" + msgMisplaced,\n             \"32: \" + msgBefore,\n             \"33: \" + msgMisplaced,\n             \"33: \" + msgBefore,\n             \"37: \" + msgMisplaced,\n             \"37: \" + msgBefore,\n             \"43: \" + msgMisplaced,\n             \"43: \" + msgRed,\n             \"46: \" + msgMisplaced,\n             \"48: \" + msgMisplaced,\n             \"48: \" + msgBefore,\n             \"49: \" + msgMisplaced,\n             \"49: \" + msgBefore,\n             \"59: \" + msgRed,\n             \"68: \" + msgMisplaced,\n             \"68: \" + msgBefore,\n             \"70: \" + msgMisplaced,\n             \"73: \" + msgMisplaced,\n             \"73: \" + msgBefore,\n         };\n \n-        Configuration checkConfig \u003d builder.getCheckConfig(\"JavadocParagraph\");\n-        String filePath \u003d builder.getFilePath(\"InputIncorrectJavadocParagraphCheck\");\n+        final Configuration checkConfig \u003d builder.getCheckConfig(\"JavadocParagraph\");\n+        final String filePath \u003d builder.getFilePath(\"InputIncorrectJavadocParagraphCheck\");\n \n-        Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293": {
      "type": "Yexceptionschange",
      "commitMessage": "Remove duplicates in throws lists. #1555\n\nFixes `DuplicateThrows` inspection violations.\n\nDescription:\n\u003eThis inspection reports duplicate exceptions in a method throws list.\n",
      "commitDate": 1440243435000,
      "commitName": "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566092000,
      "commitNameOld": "fd794d428cc0854ddd4d416f0208d49f1ee9cbe1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 19.41,
      "commitsBetweenForRepo": 308,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n-    public void javadocParagraphIncorrectTest() throws IOException, Exception {\n+    public void javadocParagraphIncorrectTest() throws Exception {\n \n         String msgBefore \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.line.before\");\n         String msgRed \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.redundant.paragraph\");\n         String msgMisplaced \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.misplaced.tag\");\n \n         final String[] expected \u003d {\n                 \"5: \" + msgMisplaced,\n                 \"5: \" + msgBefore,\n                 \"6: \" + msgMisplaced,\n                 \"6: \" + msgBefore,\n                 \"12: \" + msgMisplaced,\n                 \"12: \" + msgBefore,\n                 \"14: \" + msgMisplaced,\n                 \"21: \" + msgBefore,\n                 \"30: \" + msgRed,\n                 \"31: \" + msgMisplaced,\n                 \"31: \" + msgBefore,\n                 \"32: \" + msgMisplaced,\n                 \"32: \" + msgBefore,\n                 \"33: \" + msgMisplaced,\n                 \"33: \" + msgBefore,\n                 \"37: \" + msgMisplaced,\n                 \"37: \" + msgBefore,\n                 \"43: \" + msgMisplaced,\n                 \"43: \" + msgRed,\n                 \"46: \" + msgMisplaced,\n                 \"48: \" + msgMisplaced,\n                 \"48: \" + msgBefore,\n                 \"49: \" + msgMisplaced,\n                 \"49: \" + msgBefore,\n                 \"59: \" + msgRed,\n                 \"68: \" + msgMisplaced,\n                 \"68: \" + msgBefore,\n                 \"70: \" + msgMisplaced,\n                 \"73: \" + msgMisplaced,\n                 \"73: \" + msgBefore,\n         };\n \n         Configuration checkConfig \u003d builder.getCheckConfig(\"JavadocParagraph\");\n         String filePath \u003d builder.getFilePath(\"InputIncorrectJavadocParagraphCheck\");\n         \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "bb3f80410619472799c401651c43afb761f7906e": {
      "type": "Ybodychange",
      "commitMessage": "fix JavadocParagraph allows new line before the next paragraph, #1332",
      "commitDate": 1437315604000,
      "commitName": "bb3f80410619472799c401651c43afb761f7906e",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": 1434037127000,
      "commitNameOld": "13087245589b5c5ea7d732bb939c6ab2504fcd26",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 37.95,
      "commitsBetweenForRepo": 282,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,45 @@\n     public void javadocParagraphIncorrectTest() throws IOException, Exception {\n \n         String msgBefore \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.line.before\");\n         String msgRed \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.redundant.paragraph\");\n+        String msgMisplaced \u003d getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.misplaced.tag\");\n \n         final String[] expected \u003d {\n-        \t\"5: \" + msgBefore,\n-        \t\"6: \" + msgBefore,\n-        \t\"12: \" + msgBefore,\n-        \t\"21: \" + msgBefore,\n-        \t\"30: \" + msgRed,\n-        \t\"31: \" + msgBefore,\n-        \t\"32: \" + msgBefore,\n-        \t\"33: \" + msgBefore,\n-        \t\"37: \" + msgBefore,\n-        \t\"43: \" + msgRed,\n-        \t\"48: \" + msgBefore,\n-        \t\"49: \" + msgBefore,\n-        \t\"59: \" + msgRed,\n-        \t\"68: \" + msgBefore,\n-        \t\"73: \" + msgBefore,\n+                \"5: \" + msgMisplaced,\n+                \"5: \" + msgBefore,\n+                \"6: \" + msgMisplaced,\n+                \"6: \" + msgBefore,\n+                \"12: \" + msgMisplaced,\n+                \"12: \" + msgBefore,\n+                \"14: \" + msgMisplaced,\n+                \"21: \" + msgBefore,\n+                \"30: \" + msgRed,\n+                \"31: \" + msgMisplaced,\n+                \"31: \" + msgBefore,\n+                \"32: \" + msgMisplaced,\n+                \"32: \" + msgBefore,\n+                \"33: \" + msgMisplaced,\n+                \"33: \" + msgBefore,\n+                \"37: \" + msgMisplaced,\n+                \"37: \" + msgBefore,\n+                \"43: \" + msgMisplaced,\n+                \"43: \" + msgRed,\n+                \"46: \" + msgMisplaced,\n+                \"48: \" + msgMisplaced,\n+                \"48: \" + msgBefore,\n+                \"49: \" + msgMisplaced,\n+                \"49: \" + msgBefore,\n+                \"59: \" + msgRed,\n+                \"68: \" + msgMisplaced,\n+                \"68: \" + msgBefore,\n+                \"70: \" + msgMisplaced,\n+                \"73: \" + msgMisplaced,\n+                \"73: \" + msgBefore,\n         };\n \n         Configuration checkConfig \u003d builder.getCheckConfig(\"JavadocParagraph\");\n         String filePath \u003d builder.getFilePath(\"InputIncorrectJavadocParagraphCheck\");\n         \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "437986510709d7abc64b59c72779343ac5e77599": {
      "type": "Yintroduced",
      "commitMessage": "Integrate google-style-config-test as Integration Test. #863\n",
      "commitDate": 1433731038000,
      "commitName": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthor": "Roman Ivanov"
    }
  }
}