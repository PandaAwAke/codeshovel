{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "TypeNameTest.java",
  "functionName": "testTypeName",
  "functionId": "testTypeName",
  "sourceFilePath": "src/it/java/com/google/checkstyle/test/chapter5naming/rule522typenames/TypeNameTest.java",
  "functionStartLine": 35,
  "functionEndLine": 83,
  "changeHistory": [
    "cf436f1d9806016cb1886b5d7ec397f56aedc824",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "701d2a690766fa7c3775aabce3c6b5ce90918a75",
    "344ea5c012d1814441b5758013a2b035c6e1613a",
    "8d898f7cebde3594233ab124c56d3de8ffac8b20",
    "f23a34503bd238450576a34a1ee37d9ee1042bb1",
    "437986510709d7abc64b59c72779343ac5e77599"
  ],
  "changeHistoryShort": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": "Ybodychange",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": "Yrename",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ybodychange",
    "701d2a690766fa7c3775aabce3c6b5ce90918a75": "Ybodychange",
    "344ea5c012d1814441b5758013a2b035c6e1613a": "Ybodychange",
    "8d898f7cebde3594233ab124c56d3de8ffac8b20": "Yexceptionschange",
    "f23a34503bd238450576a34a1ee37d9ee1042bb1": "Ybodychange",
    "437986510709d7abc64b59c72779343ac5e77599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4592: merged module test support and fileset test support",
      "commitDate": 1501657005000,
      "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501610201000,
      "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n     public void testTypeName() throws Exception {\n \n-        final Configuration checkConfig \u003d getCheckConfig(\"TypeName\");\n+        final Configuration checkConfig \u003d getModuleConfig(\"TypeName\");\n         final String msgKey \u003d \"name.invalidPattern\";\n         final String format \u003d \"^[A-Z][a-zA-Z0-9]*$\";\n \n         final String[] expected \u003d {\n             \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\",\n                 format),\n             \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\",\n                 format),\n             \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\",\n                 format),\n             \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\",\n                 format),\n             \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\",\n                 format),\n             \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\",\n                 format),\n             \"19:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_ValidName\", format),\n             \"21:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Valid_Name\", format),\n             \"23:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ValidName_\", format),\n             \"27:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Foo\", format),\n             \"29:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo_o\", format),\n             \"31:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_\", format),\n             \"33:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Foo\", format),\n             \"35:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo$o\", format),\n             \"37:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$\", format),\n             \"41:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_FooEnum\", format),\n             \"43:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_Enum\", format),\n             \"45:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum_\", format),\n             \"47:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$FooEnum\", format),\n             \"49:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$Enum\", format),\n             \"51:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum$\", format),\n             \"53:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaa\", format),\n             \"55:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bbb\", format),\n             \"57:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ccc\", format),\n             \"61:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Annotation\", format),\n             \"63:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot_ation\", format),\n             \"65:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation_\", format),\n             \"67:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Annotation\", format),\n             \"69:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot$ation\", format),\n             \"71:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation$\", format),\n         };\n \n         final String filePath \u003d getPath(\"InputTypeName.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": {
      "type": "Yrename",
      "commitMessage": "Issue #4518: fix pmd violations for TestClassWithoutTestCases\n",
      "commitDate": 1498315848000,
      "commitName": "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 148.01,
      "commitsBetweenForRepo": 501,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n-    public void typeNameTest() throws Exception {\n+    public void testTypeName() throws Exception {\n \n         final Configuration checkConfig \u003d getCheckConfig(\"TypeName\");\n         final String msgKey \u003d \"name.invalidPattern\";\n         final String format \u003d \"^[A-Z][a-zA-Z0-9]*$\";\n \n         final String[] expected \u003d {\n             \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\",\n                 format),\n             \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\",\n                 format),\n             \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\",\n                 format),\n             \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\",\n                 format),\n             \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\",\n                 format),\n             \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\",\n                 format),\n             \"19:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_ValidName\", format),\n             \"21:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Valid_Name\", format),\n             \"23:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ValidName_\", format),\n             \"27:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Foo\", format),\n             \"29:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo_o\", format),\n             \"31:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_\", format),\n             \"33:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Foo\", format),\n             \"35:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo$o\", format),\n             \"37:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$\", format),\n             \"41:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_FooEnum\", format),\n             \"43:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_Enum\", format),\n             \"45:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum_\", format),\n             \"47:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$FooEnum\", format),\n             \"49:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$Enum\", format),\n             \"51:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum$\", format),\n             \"53:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaa\", format),\n             \"55:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bbb\", format),\n             \"57:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ccc\", format),\n             \"61:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Annotation\", format),\n             \"63:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot_ation\", format),\n             \"65:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation_\", format),\n             \"67:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Annotation\", format),\n             \"69:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot$ation\", format),\n             \"71:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation$\", format),\n         };\n \n         final String filePath \u003d getPath(\"InputTypeName.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": 1447384120000,
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447252721000,
      "commitNameOld": "6c49a05cb65fe91c3d71ebd301f6b3a3a49f020f",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.52,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n     public void typeNameTest() throws Exception {\n \n-        final Configuration checkConfig \u003d builder.getCheckConfig(\"TypeName\");\n+        final Configuration checkConfig \u003d getCheckConfig(\"TypeName\");\n         final String msgKey \u003d \"name.invalidPattern\";\n         final String format \u003d \"^[A-Z][a-zA-Z0-9]*$\";\n \n         final String[] expected \u003d {\n             \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\",\n                 format),\n             \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\",\n                 format),\n             \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\",\n                 format),\n             \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\",\n                 format),\n             \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\",\n                 format),\n             \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\",\n                 format),\n             \"19:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_ValidName\", format),\n             \"21:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Valid_Name\", format),\n             \"23:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ValidName_\", format),\n             \"27:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Foo\", format),\n             \"29:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo_o\", format),\n             \"31:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_\", format),\n             \"33:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Foo\", format),\n             \"35:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo$o\", format),\n             \"37:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$\", format),\n             \"41:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_FooEnum\", format),\n             \"43:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_Enum\", format),\n             \"45:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum_\", format),\n             \"47:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$FooEnum\", format),\n             \"49:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$Enum\", format),\n             \"51:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum$\", format),\n             \"53:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaa\", format),\n             \"55:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bbb\", format),\n             \"57:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ccc\", format),\n             \"61:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Annotation\", format),\n             \"63:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot_ation\", format),\n             \"65:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation_\", format),\n             \"67:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Annotation\", format),\n             \"69:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot$ation\", format),\n             \"71:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation$\", format),\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"InputTypeName\");\n+        final String filePath \u003d getPath(\"InputTypeName.java\");\n \n-        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "701d2a690766fa7c3775aabce3c6b5ce90918a75": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2540: unify it input file names for chapter5naming",
      "commitDate": 1447163458000,
      "commitName": "701d2a690766fa7c3775aabce3c6b5ce90918a75",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445797820000,
      "commitNameOld": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 15.81,
      "commitsBetweenForRepo": 120,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n     public void typeNameTest() throws Exception {\n \n         final Configuration checkConfig \u003d builder.getCheckConfig(\"TypeName\");\n         final String msgKey \u003d \"name.invalidPattern\";\n         final String format \u003d \"^[A-Z][a-zA-Z0-9]*$\";\n \n         final String[] expected \u003d {\n             \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\",\n                 format),\n             \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\",\n                 format),\n             \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\",\n                 format),\n             \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\",\n                 format),\n             \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\",\n                 format),\n             \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\",\n                 format),\n             \"19:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_ValidName\", format),\n             \"21:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Valid_Name\", format),\n             \"23:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ValidName_\", format),\n             \"27:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Foo\", format),\n             \"29:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo_o\", format),\n             \"31:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_\", format),\n             \"33:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Foo\", format),\n             \"35:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo$o\", format),\n             \"37:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$\", format),\n             \"41:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_FooEnum\", format),\n             \"43:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_Enum\", format),\n             \"45:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum_\", format),\n             \"47:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$FooEnum\", format),\n             \"49:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$Enum\", format),\n             \"51:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum$\", format),\n             \"53:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaa\", format),\n             \"55:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bbb\", format),\n             \"57:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ccc\", format),\n             \"61:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Annotation\", format),\n             \"63:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot_ation\", format),\n             \"65:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation_\", format),\n             \"67:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Annotation\", format),\n             \"69:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot$ation\", format),\n             \"71:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation$\", format),\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"TypeNameInput\");\n+        final String filePath \u003d builder.getFilePath(\"InputTypeName\");\n \n         final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "344ea5c012d1814441b5758013a2b035c6e1613a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2421: enabling checking on it folder",
      "commitDate": 1445797820000,
      "commitName": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445728646000,
      "commitNameOld": "111cbbaf2adda7ff25b1cafee99468d2adb6c6c8",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,50 @@\n     public void typeNameTest() throws Exception {\n \n-        Configuration checkConfig \u003d builder.getCheckConfig(\"TypeName\");\n-        String msgKey \u003d \"name.invalidPattern\";\n-        String format \u003d \"^[A-Z][a-zA-Z0-9]*$\";\n+        final Configuration checkConfig \u003d builder.getCheckConfig(\"TypeName\");\n+        final String msgKey \u003d \"name.invalidPattern\";\n+        final String format \u003d \"^[A-Z][a-zA-Z0-9]*$\";\n \n         final String[] expected \u003d {\n-            \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\", format),\n-            \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\", format),\n-            \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\", format),\n-            \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\", format),\n-            \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\", format),\n-            \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\", format),\n+            \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\",\n+                format),\n+            \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\",\n+                format),\n+            \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\",\n+                format),\n+            \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\",\n+                format),\n+            \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\",\n+                format),\n+            \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\",\n+                format),\n             \"19:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_ValidName\", format),\n             \"21:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Valid_Name\", format),\n             \"23:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ValidName_\", format),\n             \"27:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Foo\", format),\n             \"29:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo_o\", format),\n             \"31:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_\", format),\n             \"33:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Foo\", format),\n             \"35:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo$o\", format),\n             \"37:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$\", format),\n             \"41:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_FooEnum\", format),\n             \"43:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_Enum\", format),\n             \"45:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum_\", format),\n             \"47:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$FooEnum\", format),\n             \"49:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$Enum\", format),\n             \"51:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum$\", format),\n             \"53:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaa\", format),\n             \"55:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bbb\", format),\n             \"57:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ccc\", format),\n             \"61:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Annotation\", format),\n             \"63:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot_ation\", format),\n             \"65:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation_\", format),\n             \"67:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Annotation\", format),\n             \"69:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot$ation\", format),\n             \"71:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation$\", format),\n         };\n \n-        String filePath \u003d builder.getFilePath(\"TypeNameInput\");\n+        final String filePath \u003d builder.getFilePath(\"TypeNameInput\");\n \n-        Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "8d898f7cebde3594233ab124c56d3de8ffac8b20": {
      "type": "Yexceptionschange",
      "commitMessage": "Simplify throws list in test code. #1555\n\nFixes `MultipleExceptionsDeclaredOnTestMethod` inspection violations.\n\nDescription:\n\u003eReports JUnit test methods with more than one exception declared in the throws clause. Such a throws clause can be more concisely declared as `throws Exception`.\n",
      "commitDate": 1440162407000,
      "commitName": "8d898f7cebde3594233ab124c56d3de8ffac8b20",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1439577552000,
      "commitNameOld": "f23a34503bd238450576a34a1ee37d9ee1042bb1",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 6.77,
      "commitsBetweenForRepo": 123,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n-    public void typeNameTest() throws IOException, Exception {\n+    public void typeNameTest() throws Exception {\n \n         Configuration checkConfig \u003d builder.getCheckConfig(\"TypeName\");\n         String msgKey \u003d \"name.invalidPattern\";\n         String format \u003d \"^[A-Z][a-zA-Z0-9]*$\";\n \n         final String[] expected \u003d {\n             \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\", format),\n             \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\", format),\n             \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\", format),\n             \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\", format),\n             \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\", format),\n             \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\", format),\n             \"19:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_ValidName\", format),\n             \"21:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Valid_Name\", format),\n             \"23:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ValidName_\", format),\n             \"27:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Foo\", format),\n             \"29:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo_o\", format),\n             \"31:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_\", format),\n             \"33:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Foo\", format),\n             \"35:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo$o\", format),\n             \"37:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$\", format),\n             \"41:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_FooEnum\", format),\n             \"43:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_Enum\", format),\n             \"45:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum_\", format),\n             \"47:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$FooEnum\", format),\n             \"49:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$Enum\", format),\n             \"51:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum$\", format),\n             \"53:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaa\", format),\n             \"55:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bbb\", format),\n             \"57:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ccc\", format),\n             \"61:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Annotation\", format),\n             \"63:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot_ation\", format),\n             \"65:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation_\", format),\n             \"67:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Annotation\", format),\n             \"69:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot$ation\", format),\n             \"71:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation$\", format),\n         };\n \n         String filePath \u003d builder.getFilePath(\"TypeNameInput\");\n \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "f23a34503bd238450576a34a1ee37d9ee1042bb1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1243: Useless Class variables\n",
      "commitDate": 1439577552000,
      "commitName": "f23a34503bd238450576a34a1ee37d9ee1042bb1",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": 1438566092000,
      "commitNameOld": "fd794d428cc0854ddd4d416f0208d49f1ee9cbe1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 11.71,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,44 @@\n     public void typeNameTest() throws IOException, Exception {\n-        \n+\n         Configuration checkConfig \u003d builder.getCheckConfig(\"TypeName\");\n-        Class\u003cTypeNameCheck\u003e clazz \u003d TypeNameCheck.class;\n         String msgKey \u003d \"name.invalidPattern\";\n         String format \u003d \"^[A-Z][a-zA-Z0-9]*$\";\n \n         final String[] expected \u003d {\n             \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\", format),\n             \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\", format),\n             \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\", format),\n             \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\", format),\n             \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\", format),\n             \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\", format),\n             \"19:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_ValidName\", format),\n             \"21:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Valid_Name\", format),\n             \"23:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ValidName_\", format),\n             \"27:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Foo\", format),\n             \"29:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo_o\", format),\n             \"31:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_\", format),\n             \"33:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Foo\", format),\n             \"35:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Fo$o\", format),\n             \"37:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$\", format),\n             \"41:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_FooEnum\", format),\n             \"43:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo_Enum\", format),\n             \"45:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum_\", format),\n             \"47:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$FooEnum\", format),\n             \"49:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Foo$Enum\", format),\n             \"51:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"FooEnum$\", format),\n             \"53:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaa\", format),\n             \"55:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bbb\", format),\n             \"57:6: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ccc\", format),\n             \"61:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_Annotation\", format),\n             \"63:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot_ation\", format),\n             \"65:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation_\", format),\n             \"67:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$Annotation\", format),\n             \"69:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annot$ation\", format),\n             \"71:12: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"Annotation$\", format),\n         };\n-        \n+\n         String filePath \u003d builder.getFilePath(\"TypeNameInput\");\n-        \n+\n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "437986510709d7abc64b59c72779343ac5e77599": {
      "type": "Yintroduced",
      "commitMessage": "Integrate google-style-config-test as Integration Test. #863\n",
      "commitDate": 1433731038000,
      "commitName": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthor": "Roman Ivanov"
    }
  }
}