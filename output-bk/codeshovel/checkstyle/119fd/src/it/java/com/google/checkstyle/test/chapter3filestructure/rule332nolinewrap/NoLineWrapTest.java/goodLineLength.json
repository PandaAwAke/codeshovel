{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "NoLineWrapTest.java",
  "functionName": "goodLineLength",
  "functionId": "goodLineLength",
  "sourceFilePath": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java",
  "functionStartLine": 64,
  "functionEndLine": 76,
  "changeHistory": [
    "cf436f1d9806016cb1886b5d7ec397f56aedc824",
    "c29af9d03619dfbf64f68185f8b1f1720f2f9676",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "21c8c76f930874dd6556ac5ad059c69a2c32642f",
    "344ea5c012d1814441b5758013a2b035c6e1613a",
    "80f66e1c88a92925c9e44a99792ac6b23ef22447",
    "437986510709d7abc64b59c72779343ac5e77599"
  ],
  "changeHistoryShort": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": "Ybodychange",
    "c29af9d03619dfbf64f68185f8b1f1720f2f9676": "Ybodychange",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ybodychange",
    "21c8c76f930874dd6556ac5ad059c69a2c32642f": "Ybodychange",
    "344ea5c012d1814441b5758013a2b035c6e1613a": "Ybodychange",
    "80f66e1c88a92925c9e44a99792ac6b23ef22447": "Yexceptionschange",
    "437986510709d7abc64b59c72779343ac5e77599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4592: merged module test support and fileset test support",
      "commitDate": 1501657005000,
      "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501610201000,
      "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public void goodLineLength() throws Exception {\n \n         final int maxLineLength \u003d 100;\n         final String[] expected \u003d {\n             \"5: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 112),\n             \"29: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 113),\n         };\n \n-        final Configuration checkConfig \u003d getCheckConfig(\"LineLength\");\n+        final Configuration checkConfig \u003d getModuleConfig(\"LineLength\");\n         final String filePath \u003d getPath(\"InputLineLength.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "c29af9d03619dfbf64f68185f8b1f1720f2f9676": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT input file locations with tests.",
      "commitDate": 1447384120000,
      "commitName": "c29af9d03619dfbf64f68185f8b1f1720f2f9676",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447384120000,
      "commitNameOld": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,14 @@\n     public void goodLineLength() throws Exception {\n \n         final int maxLineLength \u003d 100;\n         final String[] expected \u003d {\n             \"5: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 112),\n-            \"29: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 183),\n-            \"46: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n-            \"47: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 124),\n-            \"48: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 113),\n-            \"50: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n-            \"53: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n-            \"57: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n+            \"29: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 113),\n         };\n \n         final Configuration checkConfig \u003d getCheckConfig(\"LineLength\");\n         final String filePath \u003d getPath(\"InputLineLength.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": 1447384120000,
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447252721000,
      "commitNameOld": "6c49a05cb65fe91c3d71ebd301f6b3a3a49f020f",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.52,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void goodLineLength() throws Exception {\n \n         final int maxLineLength \u003d 100;\n         final String[] expected \u003d {\n             \"5: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 112),\n             \"29: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 183),\n             \"46: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n             \"47: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 124),\n             \"48: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 113),\n             \"50: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n             \"53: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n             \"57: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n         };\n \n-        final Configuration checkConfig \u003d builder.getCheckConfig(\"LineLength\");\n-        final String filePath \u003d builder.getFilePath(\"InputLineLength\");\n+        final Configuration checkConfig \u003d getCheckConfig(\"LineLength\");\n+        final String filePath \u003d getPath(\"InputLineLength.java\");\n \n-        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "21c8c76f930874dd6556ac5ad059c69a2c32642f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2161: unify it input file names for chapter3filestructure",
      "commitDate": 1446988168000,
      "commitName": "21c8c76f930874dd6556ac5ad059c69a2c32642f",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445797820000,
      "commitNameOld": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 13.78,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void goodLineLength() throws Exception {\n \n         final int maxLineLength \u003d 100;\n         final String[] expected \u003d {\n             \"5: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 112),\n             \"29: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 183),\n             \"46: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n             \"47: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 124),\n             \"48: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 113),\n             \"50: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n             \"53: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n             \"57: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n         };\n \n         final Configuration checkConfig \u003d builder.getCheckConfig(\"LineLength\");\n-        final String filePath \u003d builder.getFilePath(\"LineLengthInput2\");\n+        final String filePath \u003d builder.getFilePath(\"InputLineLength\");\n \n         final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "344ea5c012d1814441b5758013a2b035c6e1613a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2421: enabling checking on it folder",
      "commitDate": 1445797820000,
      "commitName": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445737158000,
      "commitNameOld": "464a7dd3fe17a40645608981fceb78e5d832c938",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.7,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void goodLineLength() throws Exception {\n \n-        int maxLineLength \u003d 100;\n+        final int maxLineLength \u003d 100;\n         final String[] expected \u003d {\n             \"5: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 112),\n             \"29: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 183),\n             \"46: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n             \"47: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 124),\n             \"48: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 113),\n             \"50: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n             \"53: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n             \"57: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n         };\n \n-        Configuration checkConfig \u003d builder.getCheckConfig(\"LineLength\");\n-        String filePath \u003d builder.getFilePath(\"LineLengthInput2\");\n+        final Configuration checkConfig \u003d builder.getCheckConfig(\"LineLength\");\n+        final String filePath \u003d builder.getFilePath(\"LineLengthInput2\");\n \n-        Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "80f66e1c88a92925c9e44a99792ac6b23ef22447": {
      "type": "Yexceptionschange",
      "commitMessage": "Use only one exception on throws list for tests. #1555\n\nFixes `MultipleExceptionsDeclaredOnTestMethod` inspection violation\n\nDescription:\n\u003eReports JUnit test methods with more than one exception declared in the throws clause. Such a throws clause can be more concisely declared as `throws Exception`.\n",
      "commitDate": 1440498266000,
      "commitName": "80f66e1c88a92925c9e44a99792ac6b23ef22447",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440243521000,
      "commitNameOld": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.95,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-    public void goodLineLength() throws IOException, Exception {\n+    public void goodLineLength() throws Exception {\n \n         int maxLineLength \u003d 100;\n         final String[] expected \u003d {\n                 \"5: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 112),\n                 \"29: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 183),\n                 \"46: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n                 \"47: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 124),\n                 \"48: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 113),\n                 \"50: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n                 \"53: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 131),\n                 \"57: \" + getCheckMessage(LineLengthCheck.class, \"maxLineLen\", maxLineLength, 116),\n         };\n \n         Configuration checkConfig \u003d builder.getCheckConfig(\"LineLength\");\n         String filePath \u003d builder.getFilePath(\"LineLengthInput2\");\n \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "437986510709d7abc64b59c72779343ac5e77599": {
      "type": "Yintroduced",
      "commitMessage": "Integrate google-style-config-test as Integration Test. #863\n",
      "commitDate": 1433731038000,
      "commitName": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthor": "Roman Ivanov"
    }
  }
}