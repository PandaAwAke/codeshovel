{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "MemberNameTest.java",
  "functionName": "testMemberName",
  "functionId": "testMemberName",
  "sourceFilePath": "src/it/java/com/google/checkstyle/test/chapter5naming/rule525nonconstantfieldnames/MemberNameTest.java",
  "functionStartLine": 37,
  "functionEndLine": 60,
  "changeHistory": [
    "596e64aa7354654ec5052e743c5e01b9c9456e99",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "701d2a690766fa7c3775aabce3c6b5ce90918a75",
    "344ea5c012d1814441b5758013a2b035c6e1613a",
    "dc0a1a2fccdf6a642b05dee98206c7dd487162bd",
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293",
    "437986510709d7abc64b59c72779343ac5e77599"
  ],
  "changeHistoryShort": {
    "596e64aa7354654ec5052e743c5e01b9c9456e99": "Ybodychange",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": "Yrename",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ybodychange",
    "701d2a690766fa7c3775aabce3c6b5ce90918a75": "Ybodychange",
    "344ea5c012d1814441b5758013a2b035c6e1613a": "Ybodychange",
    "dc0a1a2fccdf6a642b05dee98206c7dd487162bd": "Ybodychange",
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293": "Yexceptionschange",
    "437986510709d7abc64b59c72779343ac5e77599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "596e64aa7354654ec5052e743c5e01b9c9456e99": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5228: fixed violations in it for test makeup",
      "commitDate": 1511048845000,
      "commitName": "596e64aa7354654ec5052e743c5e01b9c9456e99",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501657005000,
      "commitNameOld": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 108.7,
      "commitsBetweenForRepo": 288,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n     public void testMemberName() throws Exception {\n \n+        final Configuration checkConfig \u003d getModuleConfig(\"MemberName\");\n+        final String format \u003d checkConfig.getAttribute(\"format\");\n         final String[] expected \u003d {\n             \"5:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPublic\", format),\n             \"6:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mProtected\", format),\n             \"7:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage\", format),\n             \"8:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPrivate\", format),\n             \"10:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_public\", format),\n             \"11:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"prot_ected\", format),\n             \"12:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"package_\", format),\n             \"13:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"priva$te\", format),\n             \"20:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"ABC\", format),\n             \"21:15: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"C_D_E\", format),\n             \"23:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$mPublic\", format),\n             \"24:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPro$tected\", format),\n             \"25:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage$\", format),\n         };\n \n         final String filePath \u003d getPath(\"InputMemberNameBasic.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": {
      "type": "Yrename",
      "commitMessage": "Issue #4518: fix pmd violations for TestClassWithoutTestCases\n",
      "commitDate": 1498315848000,
      "commitName": "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 148.01,
      "commitsBetweenForRepo": 501,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n-    public void memberNameTest() throws Exception {\n+    public void testMemberName() throws Exception {\n \n         final String[] expected \u003d {\n             \"5:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPublic\", format),\n             \"6:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mProtected\", format),\n             \"7:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage\", format),\n             \"8:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPrivate\", format),\n             \"10:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_public\", format),\n             \"11:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"prot_ected\", format),\n             \"12:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"package_\", format),\n             \"13:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"priva$te\", format),\n             \"20:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"ABC\", format),\n             \"21:15: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"C_D_E\", format),\n             \"23:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$mPublic\", format),\n             \"24:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPro$tected\", format),\n             \"25:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage$\", format),\n         };\n \n         final String filePath \u003d getPath(\"InputMemberNameBasic.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": 1447384120000,
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447163458000,
      "commitNameOld": "701d2a690766fa7c3775aabce3c6b5ce90918a75",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 2.55,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void memberNameTest() throws Exception {\n \n         final String[] expected \u003d {\n             \"5:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPublic\", format),\n             \"6:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mProtected\", format),\n             \"7:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage\", format),\n             \"8:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPrivate\", format),\n             \"10:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_public\", format),\n             \"11:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"prot_ected\", format),\n             \"12:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"package_\", format),\n             \"13:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"priva$te\", format),\n             \"20:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"ABC\", format),\n             \"21:15: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"C_D_E\", format),\n             \"23:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$mPublic\", format),\n             \"24:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPro$tected\", format),\n             \"25:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage$\", format),\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"InputMemberNameBasic\");\n+        final String filePath \u003d getPath(\"InputMemberNameBasic.java\");\n \n-        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "701d2a690766fa7c3775aabce3c6b5ce90918a75": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2540: unify it input file names for chapter5naming",
      "commitDate": 1447163458000,
      "commitName": "701d2a690766fa7c3775aabce3c6b5ce90918a75",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445797820000,
      "commitNameOld": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 15.81,
      "commitsBetweenForRepo": 120,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void memberNameTest() throws Exception {\n \n         final String[] expected \u003d {\n             \"5:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPublic\", format),\n             \"6:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mProtected\", format),\n             \"7:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage\", format),\n             \"8:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPrivate\", format),\n             \"10:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_public\", format),\n             \"11:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"prot_ected\", format),\n             \"12:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"package_\", format),\n             \"13:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"priva$te\", format),\n             \"20:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"ABC\", format),\n             \"21:15: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"C_D_E\", format),\n             \"23:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$mPublic\", format),\n             \"24:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPro$tected\", format),\n             \"25:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage$\", format),\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"MemberNameInput_Basic\");\n+        final String filePath \u003d builder.getFilePath(\"InputMemberNameBasic\");\n \n         final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "344ea5c012d1814441b5758013a2b035c6e1613a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2421: enabling checking on it folder",
      "commitDate": 1445797820000,
      "commitName": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445728646000,
      "commitNameOld": "111cbbaf2adda7ff25b1cafee99468d2adb6c6c8",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void memberNameTest() throws Exception {\n \n         final String[] expected \u003d {\n             \"5:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPublic\", format),\n             \"6:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mProtected\", format),\n             \"7:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage\", format),\n             \"8:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPrivate\", format),\n             \"10:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_public\", format),\n             \"11:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"prot_ected\", format),\n             \"12:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"package_\", format),\n             \"13:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"priva$te\", format),\n             \"20:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"ABC\", format),\n             \"21:15: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"C_D_E\", format),\n             \"23:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$mPublic\", format),\n             \"24:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPro$tected\", format),\n             \"25:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage$\", format),\n         };\n \n-        String filePath \u003d builder.getFilePath(\"MemberNameInput_Basic\");\n+        final String filePath \u003d builder.getFilePath(\"MemberNameInput_Basic\");\n \n-        Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "dc0a1a2fccdf6a642b05dee98206c7dd487162bd": {
      "type": "Ybodychange",
      "commitMessage": "Mark fields as private static final in test code. #1555\n\nFixes `FieldMayBeStatic` inspection violations in test code.\n\nDescription:\n\u003eReports any instance variables which may safely be made static. A field may be static if it is declared final, and is initialized with a constant\n",
      "commitDate": 1440498001000,
      "commitName": "dc0a1a2fccdf6a642b05dee98206c7dd487162bd",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440243435000,
      "commitNameOld": "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.95,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void memberNameTest() throws Exception {\n \n         final String[] expected \u003d {\n-            \"5:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPublic\", format),\n-            \"6:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mProtected\", format),\n-            \"7:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPackage\", format),\n-            \"8:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPrivate\", format),\n-            \"10:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_public\", format),\n-            \"11:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"prot_ected\", format),\n-            \"12:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"package_\", format),\n-            \"13:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"priva$te\", format),\n-            \"20:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ABC\", format),\n-            \"21:15: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"C_D_E\", format),\n-            \"23:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$mPublic\", format),\n-            \"24:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPro$tected\", format),\n-            \"25:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPackage$\", format),\n+            \"5:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPublic\", format),\n+            \"6:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mProtected\", format),\n+            \"7:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage\", format),\n+            \"8:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPrivate\", format),\n+            \"10:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_public\", format),\n+            \"11:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"prot_ected\", format),\n+            \"12:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"package_\", format),\n+            \"13:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"priva$te\", format),\n+            \"20:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"ABC\", format),\n+            \"21:15: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"C_D_E\", format),\n+            \"23:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$mPublic\", format),\n+            \"24:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPro$tected\", format),\n+            \"25:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage$\", format),\n         };\n \n         String filePath \u003d builder.getFilePath(\"MemberNameInput_Basic\");\n \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293": {
      "type": "Yexceptionschange",
      "commitMessage": "Remove duplicates in throws lists. #1555\n\nFixes `DuplicateThrows` inspection violations.\n\nDescription:\n\u003eThis inspection reports duplicate exceptions in a method throws list.\n",
      "commitDate": 1440243435000,
      "commitName": "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440042009000,
      "commitNameOld": "697895a2056ecb1fdde0ba1f21a10cb96fc91322",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.33,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n-    public void memberNameTest() throws IOException, Exception {\n+    public void memberNameTest() throws Exception {\n \n         final String[] expected \u003d {\n             \"5:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPublic\", format),\n             \"6:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mProtected\", format),\n             \"7:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPackage\", format),\n             \"8:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPrivate\", format),\n             \"10:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_public\", format),\n             \"11:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"prot_ected\", format),\n             \"12:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"package_\", format),\n             \"13:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"priva$te\", format),\n             \"20:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ABC\", format),\n             \"21:15: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"C_D_E\", format),\n             \"23:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$mPublic\", format),\n             \"24:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPro$tected\", format),\n             \"25:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPackage$\", format),\n         };\n \n         String filePath \u003d builder.getFilePath(\"MemberNameInput_Basic\");\n \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "437986510709d7abc64b59c72779343ac5e77599": {
      "type": "Yintroduced",
      "commitMessage": "Integrate google-style-config-test as Integration Test. #863\n",
      "commitDate": 1433731038000,
      "commitName": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthor": "Roman Ivanov"
    }
  }
}