{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AnnotationLocationTest.java",
  "functionName": "testAnnotation",
  "functionId": "testAnnotation",
  "sourceFilePath": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule485annotations/AnnotationLocationTest.java",
  "functionStartLine": 36,
  "functionEndLine": 62,
  "changeHistory": [
    "cf436f1d9806016cb1886b5d7ec397f56aedc824",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
    "96393a3dd9fbe50fce27ad233efa029d4830881b",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "662cb2e20e296d1546bb7c845e4661dcdcc77855",
    "344ea5c012d1814441b5758013a2b035c6e1613a",
    "16512bb1e7e31bedece4a745dad9c5960f141fca",
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293",
    "437986510709d7abc64b59c72779343ac5e77599"
  ],
  "changeHistoryShort": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": "Ybodychange",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": "Yrename",
    "96393a3dd9fbe50fce27ad233efa029d4830881b": "Ybodychange",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ybodychange",
    "662cb2e20e296d1546bb7c845e4661dcdcc77855": "Ybodychange",
    "344ea5c012d1814441b5758013a2b035c6e1613a": "Ybodychange",
    "16512bb1e7e31bedece4a745dad9c5960f141fca": "Ybodychange",
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293": "Yexceptionschange",
    "437986510709d7abc64b59c72779343ac5e77599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4592: merged module test support and fileset test support",
      "commitDate": 1501657005000,
      "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501610201000,
      "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     public void testAnnotation() throws Exception {\n \n         final Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n         getCheckMessage(clazz, \"annotation.location.alone\");\n-        final Configuration checkConfig \u003d getCheckConfig(\"AnnotationLocation\",\n+        final Configuration checkConfig \u003d getModuleConfig(\"AnnotationLocation\",\n                 \"AnnotationLocationMostCases\");\n \n         final String msgLocationAlone \u003d \"annotation.location.alone\";\n         final String msgLocation \u003d \"annotation.location\";\n         final String[] expected \u003d {\n             \"3: \" + getCheckMessage(clazz, msgLocationAlone, \"MyAnnotation1\"),\n             \"20: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation1\", \"8\", \"4\"),\n             \"27: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"7\", \"4\"),\n             \"31: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"8\", \"4\"),\n             \"32: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation3\", \"6\", \"4\"),\n             \"33: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation4\", \"10\", \"4\"),\n             \"54: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"58: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"78: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"11\", \"8\"),\n             \"81: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"10\", \"8\"),\n             \"90: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"1\", \"0\"),\n         };\n \n         final String filePath \u003d getPath(\"InputAnnotationLocation.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": {
      "type": "Yrename",
      "commitMessage": "Issue #4518: fix pmd violations for TestClassWithoutTestCases\n",
      "commitDate": 1498315848000,
      "commitName": "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 148.01,
      "commitsBetweenForRepo": 501,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n-    public void annotationTest() throws Exception {\n+    public void testAnnotation() throws Exception {\n \n         final Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n         getCheckMessage(clazz, \"annotation.location.alone\");\n         final Configuration checkConfig \u003d getCheckConfig(\"AnnotationLocation\",\n                 \"AnnotationLocationMostCases\");\n \n         final String msgLocationAlone \u003d \"annotation.location.alone\";\n         final String msgLocation \u003d \"annotation.location\";\n         final String[] expected \u003d {\n             \"3: \" + getCheckMessage(clazz, msgLocationAlone, \"MyAnnotation1\"),\n             \"20: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation1\", \"8\", \"4\"),\n             \"27: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"7\", \"4\"),\n             \"31: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"8\", \"4\"),\n             \"32: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation3\", \"6\", \"4\"),\n             \"33: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation4\", \"10\", \"4\"),\n             \"54: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"58: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"78: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"11\", \"8\"),\n             \"81: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"10\", \"8\"),\n             \"90: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"1\", \"0\"),\n         };\n \n         final String filePath \u003d getPath(\"InputAnnotationLocation.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "96393a3dd9fbe50fce27ad233efa029d4830881b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3678: update ITs to load certain config by id if there few of them in file\n",
      "commitDate": 1483113634000,
      "commitName": "96393a3dd9fbe50fce27ad233efa029d4830881b",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": 1451953543000,
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 360.65,
      "commitsBetweenForRepo": 729,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n     public void annotationTest() throws Exception {\n \n         final Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n         getCheckMessage(clazz, \"annotation.location.alone\");\n-        final Configuration checkConfig \u003d getCheckConfig(\"AnnotationLocation\");\n+        final Configuration checkConfig \u003d getCheckConfig(\"AnnotationLocation\",\n+                \"AnnotationLocationMostCases\");\n \n         final String msgLocationAlone \u003d \"annotation.location.alone\";\n         final String msgLocation \u003d \"annotation.location\";\n         final String[] expected \u003d {\n             \"3: \" + getCheckMessage(clazz, msgLocationAlone, \"MyAnnotation1\"),\n             \"20: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation1\", \"8\", \"4\"),\n             \"27: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"7\", \"4\"),\n             \"31: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"8\", \"4\"),\n             \"32: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation3\", \"6\", \"4\"),\n             \"33: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation4\", \"10\", \"4\"),\n             \"54: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"58: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"78: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"11\", \"8\"),\n             \"81: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"10\", \"8\"),\n             \"90: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"1\", \"0\"),\n         };\n \n         final String filePath \u003d getPath(\"InputAnnotationLocation.java\");\n \n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": 1447384120000,
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447252721000,
      "commitNameOld": "6c49a05cb65fe91c3d71ebd301f6b3a3a49f020f",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.52,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     public void annotationTest() throws Exception {\n \n         final Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n         getCheckMessage(clazz, \"annotation.location.alone\");\n-        final Configuration checkConfig \u003d builder.getCheckConfig(\"AnnotationLocation\");\n+        final Configuration checkConfig \u003d getCheckConfig(\"AnnotationLocation\");\n \n         final String msgLocationAlone \u003d \"annotation.location.alone\";\n         final String msgLocation \u003d \"annotation.location\";\n         final String[] expected \u003d {\n             \"3: \" + getCheckMessage(clazz, msgLocationAlone, \"MyAnnotation1\"),\n             \"20: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation1\", \"8\", \"4\"),\n             \"27: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"7\", \"4\"),\n             \"31: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"8\", \"4\"),\n             \"32: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation3\", \"6\", \"4\"),\n             \"33: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation4\", \"10\", \"4\"),\n             \"54: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"58: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"78: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"11\", \"8\"),\n             \"81: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"10\", \"8\"),\n             \"90: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"1\", \"0\"),\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"InputAnnotationLocation\");\n+        final String filePath \u003d getPath(\"InputAnnotationLocation.java\");\n \n-        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "662cb2e20e296d1546bb7c845e4661dcdcc77855": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2540: unify it input file names for chapter4formatting",
      "commitDate": 1447163412000,
      "commitName": "662cb2e20e296d1546bb7c845e4661dcdcc77855",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445797820000,
      "commitNameOld": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 15.81,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     public void annotationTest() throws Exception {\n \n         final Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n         getCheckMessage(clazz, \"annotation.location.alone\");\n         final Configuration checkConfig \u003d builder.getCheckConfig(\"AnnotationLocation\");\n \n         final String msgLocationAlone \u003d \"annotation.location.alone\";\n         final String msgLocation \u003d \"annotation.location\";\n         final String[] expected \u003d {\n             \"3: \" + getCheckMessage(clazz, msgLocationAlone, \"MyAnnotation1\"),\n             \"20: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation1\", \"8\", \"4\"),\n             \"27: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"7\", \"4\"),\n             \"31: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"8\", \"4\"),\n             \"32: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation3\", \"6\", \"4\"),\n             \"33: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation4\", \"10\", \"4\"),\n             \"54: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"58: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"78: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"11\", \"8\"),\n             \"81: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"10\", \"8\"),\n             \"90: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"1\", \"0\"),\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"AnnotationLocationInput\");\n+        final String filePath \u003d builder.getFilePath(\"InputAnnotationLocation\");\n \n         final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "344ea5c012d1814441b5758013a2b035c6e1613a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2421: enabling checking on it folder",
      "commitDate": 1445797820000,
      "commitName": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445728646000,
      "commitNameOld": "111cbbaf2adda7ff25b1cafee99468d2adb6c6c8",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     public void annotationTest() throws Exception {\n \n-        Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n+        final Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n         getCheckMessage(clazz, \"annotation.location.alone\");\n-        Configuration checkConfig \u003d builder.getCheckConfig(\"AnnotationLocation\");\n+        final Configuration checkConfig \u003d builder.getCheckConfig(\"AnnotationLocation\");\n \n-        String msgLocationAlone \u003d \"annotation.location.alone\";\n-        String msgLocation \u003d \"annotation.location\";\n+        final String msgLocationAlone \u003d \"annotation.location.alone\";\n+        final String msgLocation \u003d \"annotation.location\";\n         final String[] expected \u003d {\n             \"3: \" + getCheckMessage(clazz, msgLocationAlone, \"MyAnnotation1\"),\n             \"20: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation1\", \"8\", \"4\"),\n             \"27: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"7\", \"4\"),\n             \"31: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"8\", \"4\"),\n             \"32: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation3\", \"6\", \"4\"),\n             \"33: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation4\", \"10\", \"4\"),\n             \"54: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"58: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"78: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"11\", \"8\"),\n             \"81: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"10\", \"8\"),\n             \"90: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"1\", \"0\"),\n         };\n \n-        String filePath \u003d builder.getFilePath(\"AnnotationLocationInput\");\n+        final String filePath \u003d builder.getFilePath(\"AnnotationLocationInput\");\n \n-        Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "16512bb1e7e31bedece4a745dad9c5960f141fca": {
      "type": "Ybodychange",
      "commitMessage": "Decrease scope of variables. #1555\n\nFixes `TooBroadScope` inspection violations.\n\nDescription:\n\u003eReports any variable declarations of which the scope can be narrowed. Especially useful for \"Pascal style\" declarations at the start of a method, but variables with too broad a scope are also often left over after refactorings.\n",
      "commitDate": 1440243677000,
      "commitName": "16512bb1e7e31bedece4a745dad9c5960f141fca",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440243435000,
      "commitNameOld": "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     public void annotationTest() throws Exception {\n         \n         Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n-        String msgLocation \u003d \"annotation.location\";\n-        String msgLocationAlone \u003d \"annotation.location.alone\";\n         getCheckMessage(clazz, \"annotation.location.alone\");\n         Configuration checkConfig \u003d builder.getCheckConfig(\"AnnotationLocation\");\n \n+        String msgLocationAlone \u003d \"annotation.location.alone\";\n+        String msgLocation \u003d \"annotation.location\";\n         final String[] expected \u003d {\n             \"3: \" + getCheckMessage(clazz, msgLocationAlone, \"MyAnnotation1\"),\n             \"20: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation1\", \"8\", \"4\"),\n             \"27: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"7\", \"4\"),\n             \"31: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"8\", \"4\"),\n             \"32: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation3\", \"6\", \"4\"),\n             \"33: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation4\", \"10\", \"4\"),\n             \"54: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"58: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"78: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"11\", \"8\"),\n             \"81: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"10\", \"8\"),\n             \"90: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"1\", \"0\"),\n         };\n \n         String filePath \u003d builder.getFilePath(\"AnnotationLocationInput\");\n \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293": {
      "type": "Yexceptionschange",
      "commitMessage": "Remove duplicates in throws lists. #1555\n\nFixes `DuplicateThrows` inspection violations.\n\nDescription:\n\u003eThis inspection reports duplicate exceptions in a method throws list.\n",
      "commitDate": 1440243435000,
      "commitName": "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1438566092000,
      "commitNameOld": "fd794d428cc0854ddd4d416f0208d49f1ee9cbe1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 19.41,
      "commitsBetweenForRepo": 308,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n-    public void annotationTest() throws IOException, Exception {\n+    public void annotationTest() throws Exception {\n         \n         Class\u003cAnnotationLocationCheck\u003e clazz \u003d AnnotationLocationCheck.class;\n         String msgLocation \u003d \"annotation.location\";\n         String msgLocationAlone \u003d \"annotation.location.alone\";\n         getCheckMessage(clazz, \"annotation.location.alone\");\n         Configuration checkConfig \u003d builder.getCheckConfig(\"AnnotationLocation\");\n \n         final String[] expected \u003d {\n             \"3: \" + getCheckMessage(clazz, msgLocationAlone, \"MyAnnotation1\"),\n             \"20: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation1\", \"8\", \"4\"),\n             \"27: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"7\", \"4\"),\n             \"31: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"8\", \"4\"),\n             \"32: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation3\", \"6\", \"4\"),\n             \"33: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation4\", \"10\", \"4\"),\n             \"54: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"58: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"12\", \"8\"),\n             \"78: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"11\", \"8\"),\n             \"81: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"10\", \"8\"),\n             \"90: \" + getCheckMessage(clazz, msgLocation, \"MyAnnotation2\", \"1\", \"0\"),\n         };\n \n         String filePath \u003d builder.getFilePath(\"AnnotationLocationInput\");\n \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "437986510709d7abc64b59c72779343ac5e77599": {
      "type": "Yintroduced",
      "commitMessage": "Integrate google-style-config-test as Integration Test. #863\n",
      "commitDate": 1433731038000,
      "commitName": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthor": "Roman Ivanov"
    }
  }
}