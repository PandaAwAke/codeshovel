{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "AbbreviationAsWordInNameTest.java",
  "functionName": "testAbbreviationAsWordInName",
  "functionId": "testAbbreviationAsWordInName",
  "sourceFilePath": "src/it/java/com/google/checkstyle/test/chapter5naming/rule53camelcase/AbbreviationAsWordInNameTest.java",
  "functionStartLine": 41,
  "functionEndLine": 61,
  "changeHistory": [
    "cf436f1d9806016cb1886b5d7ec397f56aedc824",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
    "a103ccf92ba26a1b7bfb4296f9d9ce85ca6dea79",
    "65865d1adcf6e1579b7323d56117186db1ad96eb",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "344ea5c012d1814441b5758013a2b035c6e1613a",
    "8d898f7cebde3594233ab124c56d3de8ffac8b20",
    "1634b49d11a6edf5a4180dd6460b22f08adcb0e0",
    "437986510709d7abc64b59c72779343ac5e77599"
  ],
  "changeHistoryShort": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": "Ybodychange",
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": "Yrename",
    "a103ccf92ba26a1b7bfb4296f9d9ce85ca6dea79": "Ybodychange",
    "65865d1adcf6e1579b7323d56117186db1ad96eb": "Ybodychange",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ybodychange",
    "344ea5c012d1814441b5758013a2b035c6e1613a": "Ybodychange",
    "8d898f7cebde3594233ab124c56d3de8ffac8b20": "Yexceptionschange",
    "1634b49d11a6edf5a4180dd6460b22f08adcb0e0": "Ybodychange",
    "437986510709d7abc64b59c72779343ac5e77599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4592: merged module test support and fileset test support",
      "commitDate": 1501657005000,
      "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthor": "rnveach",
      "commitDateOld": 1501610201000,
      "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void testAbbreviationAsWordInName() throws Exception {\n \n         final int maxCapitalCount \u003d 2;\n \n         final String[] expected \u003d {\n             \"50: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"52: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"54: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n             \"58: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"60: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"62: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n             \"67: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"69: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"71: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n         };\n \n         final String filePath \u003d getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\");\n \n-        final Configuration checkConfig \u003d getCheckConfig(\"AbbreviationAsWordInName\");\n+        final Configuration checkConfig \u003d getModuleConfig(\"AbbreviationAsWordInName\");\n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7": {
      "type": "Yrename",
      "commitMessage": "Issue #4518: fix pmd violations for TestClassWithoutTestCases\n",
      "commitDate": 1498315848000,
      "commitName": "dbd98074e85974695a1ebd5ea1fcd2d0369e6de7",
      "commitAuthor": "vasilyeva",
      "commitDateOld": 1487369078000,
      "commitNameOld": "a103ccf92ba26a1b7bfb4296f9d9ce85ca6dea79",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 126.7,
      "commitsBetweenForRepo": 428,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-    public void abbreviationAsWordInNameTest() throws Exception {\n+    public void testAbbreviationAsWordInName() throws Exception {\n \n         final int maxCapitalCount \u003d 2;\n \n         final String[] expected \u003d {\n             \"50: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"52: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"54: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n             \"58: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"60: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"62: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n             \"67: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"69: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"71: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n         };\n \n         final String filePath \u003d getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\");\n \n         final Configuration checkConfig \u003d getCheckConfig(\"AbbreviationAsWordInName\");\n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "a103ccf92ba26a1b7bfb4296f9d9ce85ca6dea79": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3721: expanded message and documentation AbbreviationAsWordInName",
      "commitDate": 1487369078000,
      "commitName": "a103ccf92ba26a1b7bfb4296f9d9ce85ca6dea79",
      "commitAuthor": "rnveach",
      "commitDateOld": 1485527514000,
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 21.31,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void abbreviationAsWordInNameTest() throws Exception {\n \n-        final int maxCapitalCount \u003d 1;\n+        final int maxCapitalCount \u003d 2;\n \n         final String[] expected \u003d {\n             \"50: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"52: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"54: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n             \"58: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"60: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"62: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n             \"67: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n             \"69: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n             \"71: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n         };\n \n         final String filePath \u003d getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\");\n \n         final Configuration checkConfig \u003d getCheckConfig(\"AbbreviationAsWordInName\");\n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "65865d1adcf6e1579b7323d56117186db1ad96eb": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2640: Change abbreviationAsWordInName error message to contains name that violates a format\n",
      "commitDate": 1449048120000,
      "commitName": "65865d1adcf6e1579b7323d56117186db1ad96eb",
      "commitAuthor": "liscju",
      "commitDateOld": 1447384120000,
      "commitNameOld": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 19.26,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n     public void abbreviationAsWordInNameTest() throws Exception {\n \n         final int maxCapitalCount \u003d 1;\n-        final String msg \u003d getCheckMessage(clazz, MSG_KEY, maxCapitalCount);\n \n         final String[] expected \u003d {\n-            \"50: \" + msg,\n-            \"52: \" + msg,\n-            \"54: \" + msg,\n-            \"58: \" + msg,\n-            \"60: \" + msg,\n-            \"62: \" + msg,\n-            \"67: \" + msg,\n-            \"69: \" + msg,\n-            \"71: \" + msg,\n+            \"50: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n+            \"52: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n+            \"54: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n+            \"58: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n+            \"60: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n+            \"62: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n+            \"67: \" + getWarningMessage(\"newCustomerID\", maxCapitalCount),\n+            \"69: \" + getWarningMessage(\"supportsIPv6OnIOS\", maxCapitalCount),\n+            \"71: \" + getWarningMessage(\"XMLHTTPRequest\", maxCapitalCount),\n         };\n \n         final String filePath \u003d getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\");\n \n         final Configuration checkConfig \u003d getCheckConfig(\"AbbreviationAsWordInName\");\n         final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": 1447384120000,
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "commitDateOld": 1447252721000,
      "commitNameOld": "6c49a05cb65fe91c3d71ebd301f6b3a3a49f020f",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.52,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n     public void abbreviationAsWordInNameTest() throws Exception {\n \n         final int maxCapitalCount \u003d 1;\n         final String msg \u003d getCheckMessage(clazz, MSG_KEY, maxCapitalCount);\n \n         final String[] expected \u003d {\n             \"50: \" + msg,\n             \"52: \" + msg,\n             \"54: \" + msg,\n             \"58: \" + msg,\n             \"60: \" + msg,\n             \"62: \" + msg,\n             \"67: \" + msg,\n             \"69: \" + msg,\n             \"71: \" + msg,\n         };\n \n-        final String filePath \u003d builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");\n+        final String filePath \u003d getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\");\n \n-        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Configuration checkConfig \u003d getCheckConfig(\"AbbreviationAsWordInName\");\n+        final Integer[] warnList \u003d getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "344ea5c012d1814441b5758013a2b035c6e1613a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2421: enabling checking on it folder",
      "commitDate": 1445797820000,
      "commitName": "344ea5c012d1814441b5758013a2b035c6e1613a",
      "commitAuthor": "rnveach",
      "commitDateOld": 1445728646000,
      "commitNameOld": "111cbbaf2adda7ff25b1cafee99468d2adb6c6c8",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void abbreviationAsWordInNameTest() throws Exception {\n \n-        int maxCapitalCount \u003d 1;\n-        String msg \u003d getCheckMessage(clazz, MSG_KEY, maxCapitalCount);\n+        final int maxCapitalCount \u003d 1;\n+        final String msg \u003d getCheckMessage(clazz, MSG_KEY, maxCapitalCount);\n \n         final String[] expected \u003d {\n             \"50: \" + msg,\n             \"52: \" + msg,\n             \"54: \" + msg,\n             \"58: \" + msg,\n             \"60: \" + msg,\n             \"62: \" + msg,\n             \"67: \" + msg,\n             \"69: \" + msg,\n             \"71: \" + msg,\n         };\n \n-        String filePath \u003d builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");\n+        final String filePath \u003d builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");\n \n-        Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n+        final Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "8d898f7cebde3594233ab124c56d3de8ffac8b20": {
      "type": "Yexceptionschange",
      "commitMessage": "Simplify throws list in test code. #1555\n\nFixes `MultipleExceptionsDeclaredOnTestMethod` inspection violations.\n\nDescription:\n\u003eReports JUnit test methods with more than one exception declared in the throws clause. Such a throws clause can be more concisely declared as `throws Exception`.\n",
      "commitDate": 1440162407000,
      "commitName": "8d898f7cebde3594233ab124c56d3de8ffac8b20",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1440042009000,
      "commitNameOld": "697895a2056ecb1fdde0ba1f21a10cb96fc91322",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.39,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-    public void abbreviationAsWordInNameTest() throws IOException, Exception {\n+    public void abbreviationAsWordInNameTest() throws Exception {\n \n         int maxCapitalCount \u003d 1;\n         String msg \u003d getCheckMessage(clazz, MSG_KEY, maxCapitalCount);\n \n         final String[] expected \u003d {\n             \"50: \" + msg,\n             \"52: \" + msg,\n             \"54: \" + msg,\n             \"58: \" + msg,\n             \"60: \" + msg,\n             \"62: \" + msg,\n             \"67: \" + msg,\n             \"69: \" + msg,\n             \"71: \" + msg,\n         };\n \n         String filePath \u003d builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");\n         \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "1634b49d11a6edf5a4180dd6460b22f08adcb0e0": {
      "type": "Ybodychange",
      "commitMessage": "Create constants out of fields in test code. #1555\n\nFixes `FieldCanBeLocal` inspection violation in test code.\n\nDescription:\n\u003eThis inspection searches for redundant class fields that can be replaced with local variables. If all local usages of a field are preceded by assignments to that field, the field can be removed and its usages replaced with local variables.\n",
      "commitDate": 1439877066000,
      "commitName": "1634b49d11a6edf5a4180dd6460b22f08adcb0e0",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": 1434037127000,
      "commitNameOld": "13087245589b5c5ea7d732bb939c6ab2504fcd26",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 67.59,
      "commitsBetweenForRepo": 669,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void abbreviationAsWordInNameTest() throws IOException, Exception {\n \n         int maxCapitalCount \u003d 1;\n-        String msg \u003d getCheckMessage(clazz, msgKey, maxCapitalCount);\n+        String msg \u003d getCheckMessage(clazz, MSG_KEY, maxCapitalCount);\n \n         final String[] expected \u003d {\n             \"50: \" + msg,\n             \"52: \" + msg,\n             \"54: \" + msg,\n             \"58: \" + msg,\n             \"60: \" + msg,\n             \"62: \" + msg,\n             \"67: \" + msg,\n             \"69: \" + msg,\n             \"71: \" + msg,\n         };\n \n         String filePath \u003d builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");\n         \n         Integer[] warnList \u003d builder.getLinesWithWarn(filePath);\n         verify(checkConfig, filePath, expected, warnList);\n     }\n\\ No newline at end of file\n"
    },
    "437986510709d7abc64b59c72779343ac5e77599": {
      "type": "Yintroduced",
      "commitMessage": "Integrate google-style-config-test as Integration Test. #863\n",
      "commitDate": 1433731038000,
      "commitName": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthor": "Roman Ivanov"
    }
  }
}