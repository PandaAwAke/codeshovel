{
  "origin": "codeshovel",
  "repositoryName": "guava",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/guava/.git",
  "startCommitName": "34c1616279efe08089960aafd3df486cf8a04820",
  "sourceFileName": "ImmutableRangeSet.java",
  "functionName": "build",
  "functionId": "build",
  "sourceFilePath": "android/guava/src/com/google/common/collect/ImmutableRangeSet.java",
  "functionStartLine": 756,
  "functionEndLine": 787,
  "changeHistory": [
    "0c81386a239370c073572212079efc727c911d0b",
    "67cbc789e9cd523c38a75eda917fe7b6e42518f8",
    "9b94fb3965c6869b0ac47420958a4bbae0b2d54c"
  ],
  "changeHistoryShort": {
    "0c81386a239370c073572212079efc727c911d0b": "Ybodychange",
    "67cbc789e9cd523c38a75eda917fe7b6e42518f8": "Ybodychange",
    "9b94fb3965c6869b0ac47420958a4bbae0b2d54c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0c81386a239370c073572212079efc727c911d0b": {
      "type": "Ybodychange",
      "commitMessage": "Use diamond operator in collect\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID\u003d165450412\n",
      "commitDate": 1502905310000,
      "commitName": "0c81386a239370c073572212079efc727c911d0b",
      "commitAuthor": "jijiang",
      "commitDateOld": 1493154388000,
      "commitNameOld": "67cbc789e9cd523c38a75eda917fe7b6e42518f8",
      "commitAuthorOld": "ronshapiro",
      "daysBetweenCommits": 112.86,
      "commitsBetweenForRepo": 204,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public ImmutableRangeSet\u003cC\u003e build() {\n       ImmutableList.Builder\u003cRange\u003cC\u003e\u003e mergedRangesBuilder \u003d\n-          new ImmutableList.Builder\u003cRange\u003cC\u003e\u003e(ranges.size());\n+          new ImmutableList.Builder\u003c\u003e(ranges.size());\n       Collections.sort(ranges, Range.\u003cC\u003erangeLexOrdering());\n       PeekingIterator\u003cRange\u003cC\u003e\u003e peekingItr \u003d Iterators.peekingIterator(ranges.iterator());\n       while (peekingItr.hasNext()) {\n         Range\u003cC\u003e range \u003d peekingItr.next();\n         while (peekingItr.hasNext()) {\n           Range\u003cC\u003e nextRange \u003d peekingItr.peek();\n           if (range.isConnected(nextRange)) {\n             checkArgument(\n                 range.intersection(nextRange).isEmpty(),\n                 \"Overlapping ranges not permitted but found %s overlapping %s\",\n                 range,\n                 nextRange);\n             range \u003d range.span(peekingItr.next());\n           } else {\n             break;\n           }\n         }\n         mergedRangesBuilder.add(range);\n       }\n       ImmutableList\u003cRange\u003cC\u003e\u003e mergedRanges \u003d mergedRangesBuilder.build();\n       if (mergedRanges.isEmpty()) {\n         return of();\n       } else if (mergedRanges.size() \u003d\u003d 1\n           \u0026\u0026 Iterables.getOnlyElement(mergedRanges).equals(Range.all())) {\n         return all();\n       } else {\n         return new ImmutableRangeSet\u003cC\u003e(mergedRanges);\n       }\n     }\n\\ No newline at end of file\n"
    },
    "67cbc789e9cd523c38a75eda917fe7b6e42518f8": {
      "type": "Ybodychange",
      "commitMessage": "Make some changes to generics so the Android branch can compile externally with -source 7 -target 7\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID\u003d154211832\n",
      "commitDate": 1493154388000,
      "commitName": "67cbc789e9cd523c38a75eda917fe7b6e42518f8",
      "commitAuthor": "ronshapiro",
      "commitDateOld": 1492741671000,
      "commitNameOld": "9b94fb3965c6869b0ac47420958a4bbae0b2d54c",
      "commitAuthorOld": "zhenghua",
      "daysBetweenCommits": 4.78,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public ImmutableRangeSet\u003cC\u003e build() {\n       ImmutableList.Builder\u003cRange\u003cC\u003e\u003e mergedRangesBuilder \u003d\n           new ImmutableList.Builder\u003cRange\u003cC\u003e\u003e(ranges.size());\n-      Collections.sort(ranges, Range.RANGE_LEX_ORDERING);\n+      Collections.sort(ranges, Range.\u003cC\u003erangeLexOrdering());\n       PeekingIterator\u003cRange\u003cC\u003e\u003e peekingItr \u003d Iterators.peekingIterator(ranges.iterator());\n       while (peekingItr.hasNext()) {\n         Range\u003cC\u003e range \u003d peekingItr.next();\n         while (peekingItr.hasNext()) {\n           Range\u003cC\u003e nextRange \u003d peekingItr.peek();\n           if (range.isConnected(nextRange)) {\n             checkArgument(\n                 range.intersection(nextRange).isEmpty(),\n                 \"Overlapping ranges not permitted but found %s overlapping %s\",\n                 range,\n                 nextRange);\n             range \u003d range.span(peekingItr.next());\n           } else {\n             break;\n           }\n         }\n         mergedRangesBuilder.add(range);\n       }\n       ImmutableList\u003cRange\u003cC\u003e\u003e mergedRanges \u003d mergedRangesBuilder.build();\n       if (mergedRanges.isEmpty()) {\n         return of();\n       } else if (mergedRanges.size() \u003d\u003d 1\n           \u0026\u0026 Iterables.getOnlyElement(mergedRanges).equals(Range.all())) {\n         return all();\n       } else {\n         return new ImmutableRangeSet\u003cC\u003e(mergedRanges);\n       }\n     }\n\\ No newline at end of file\n"
    },
    "9b94fb3965c6869b0ac47420958a4bbae0b2d54c": {
      "type": "Yintroduced",
      "commitMessage": "Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID\u003d153757913\n",
      "commitDate": 1492741671000,
      "commitName": "9b94fb3965c6869b0ac47420958a4bbae0b2d54c",
      "commitAuthor": "zhenghua"
    }
  }
}