{
  "origin": "codeshovel",
  "repositoryName": "guava",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/guava/.git",
  "startCommitName": "34c1616279efe08089960aafd3df486cf8a04820",
  "sourceFileName": "Finalizer.java",
  "functionName": "startFinalizer",
  "functionId": "startFinalizer___finalizableReferenceClass-Class__?____queue-ReferenceQueue__Object____frqReference-PhantomReference__Object__",
  "sourceFilePath": "android/guava/src/com/google/common/base/internal/Finalizer.java",
  "functionStartLine": 62,
  "functionEndLine": 110,
  "changeHistory": [
    "2927518ac86e8ed1d09038fb2b03c86c894ea5ca",
    "9b94fb3965c6869b0ac47420958a4bbae0b2d54c"
  ],
  "changeHistoryShort": {
    "2927518ac86e8ed1d09038fb2b03c86c894ea5ca": "Ybodychange",
    "9b94fb3965c6869b0ac47420958a4bbae0b2d54c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2927518ac86e8ed1d09038fb2b03c86c894ea5ca": {
      "type": "Ybodychange",
      "commitMessage": "Handle InheritableThreadLocals correctly on Java 9.\n\nThe internal Finalizer class is used by FinalizableReferenceQueue. In order to avoid holding a reference to the ClassLoader that loaded the class, it is necessary to avoid inheriting any ThreadLocals in the thread running the Finalizer code. Previously, we did this with a nasty hack accessing a private field in Thread. Although that field still exists in Java 9, private accesses like these are not allowed by default. This particularly access is also not needed on Java 9, since there is now a Thread constructor with a boolean parameter that says whether to inherit ThreadLocals. So we use that constructor if it is present, in preference to the field access.\n\nFixes https://github.com/google/guava/issues/2723.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID\u003d171212577\n",
      "commitDate": 1507306390000,
      "commitName": "2927518ac86e8ed1d09038fb2b03c86c894ea5ca",
      "commitAuthor": "emcmanus",
      "commitDateOld": 1492741671000,
      "commitNameOld": "9b94fb3965c6869b0ac47420958a4bbae0b2d54c",
      "commitAuthorOld": "zhenghua",
      "daysBetweenCommits": 168.57,
      "commitsBetweenForRepo": 290,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,50 @@\n   public static void startFinalizer(\n       Class\u003c?\u003e finalizableReferenceClass,\n       ReferenceQueue\u003cObject\u003e queue,\n       PhantomReference\u003cObject\u003e frqReference) {\n     /*\n      * We use FinalizableReference.class for two things:\n      *\n      * 1) To invoke FinalizableReference.finalizeReferent()\n      *\n      * 2) To detect when FinalizableReference\u0027s class loader has to be garbage collected, at which\n      * point, Finalizer can stop running\n      */\n     if (!finalizableReferenceClass.getName().equals(FINALIZABLE_REFERENCE)) {\n       throw new IllegalArgumentException(\"Expected \" + FINALIZABLE_REFERENCE + \".\");\n     }\n \n     Finalizer finalizer \u003d new Finalizer(finalizableReferenceClass, queue, frqReference);\n-    Thread thread \u003d new Thread(finalizer);\n-    thread.setName(Finalizer.class.getName());\n+    String threadName \u003d Finalizer.class.getName();\n+    Thread thread \u003d null;\n+    if (bigThreadConstructor !\u003d null) {\n+      try {\n+        boolean inheritThreadLocals \u003d false;\n+        long defaultStackSize \u003d 0;\n+        thread \u003d bigThreadConstructor.newInstance(\n+            (ThreadGroup) null, finalizer, threadName, defaultStackSize, inheritThreadLocals);\n+      } catch (Throwable t) {\n+        logger.log(\n+            Level.INFO,\n+            \"Failed to create a thread without inherited thread-local values\",\n+            t);\n+      }\n+    }\n+    if (thread \u003d\u003d null) {\n+      thread \u003d new Thread((ThreadGroup) null, finalizer, threadName);\n+    }\n     thread.setDaemon(true);\n \n     try {\n       if (inheritableThreadLocals !\u003d null) {\n         inheritableThreadLocals.set(thread, null);\n       }\n     } catch (Throwable t) {\n       logger.log(\n           Level.INFO,\n           \"Failed to clear thread local values inherited by reference finalizer thread.\",\n           t);\n     }\n \n     thread.start();\n   }\n\\ No newline at end of file\n"
    },
    "9b94fb3965c6869b0ac47420958a4bbae0b2d54c": {
      "type": "Yintroduced",
      "commitMessage": "Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID\u003d153757913\n",
      "commitDate": 1492741671000,
      "commitName": "9b94fb3965c6869b0ac47420958a4bbae0b2d54c",
      "commitAuthor": "zhenghua"
    }
  }
}