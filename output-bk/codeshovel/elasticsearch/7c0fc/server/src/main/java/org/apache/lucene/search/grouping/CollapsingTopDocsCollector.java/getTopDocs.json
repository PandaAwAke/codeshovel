{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/elasticsearch/.git",
  "startCommitName": "7c0fc209bf78e4824ca1f232b84a1dab22bc2dfa",
  "sourceFileName": "CollapsingTopDocsCollector.java",
  "functionName": "getTopDocs",
  "functionId": "getTopDocs",
  "sourceFilePath": "server/src/main/java/org/apache/lucene/search/grouping/CollapsingTopDocsCollector.java",
  "functionStartLine": 66,
  "functionEndLine": 97,
  "changeHistory": [
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
    "4632661bc71bb22fc577df476e70e9dfabaaae66",
    "e48bc2eed71b1808e5d98960976ec60e6e722d78"
  ],
  "changeHistoryShort": {
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a": "Yfilerename",
    "4632661bc71bb22fc577df476e70e9dfabaaae66": "Yexceptionschange",
    "e48bc2eed71b1808e5d98960976ec60e6e722d78": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a": {
      "type": "Yfilerename",
      "commitMessage": "Rename core module to server (#28180)\n\nThis is related to #27933. It renames the core module to server. This is\r\nthe first step towards introducing an elasticsearch-core jar.",
      "commitDate": 1515695443000,
      "commitName": "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
      "commitAuthor": "Tim Brooks",
      "commitDateOld": 1515688270000,
      "commitNameOld": "7d0eb3292b8f8ba27ef50dbbf38783dc68c70728",
      "commitAuthorOld": "Martijn van Groningen",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "4632661bc71bb22fc577df476e70e9dfabaaae66": {
      "type": "Yexceptionschange",
      "commitMessage": "Upgrade to a Lucene 7 snapshot (#24089)\n\nWe want to upgrade to Lucene 7 ahead of time in order to be able to check whether it causes any trouble to Elasticsearch before Lucene 7.0 gets released. From a user perspective, the main benefit of this upgrade is the enhanced support for sparse fields, whose resource consumption is now function of the number of docs that have a value rather than the total number of docs in the index.\r\n\r\nSome notes about the change:\r\n - it includes the deprecation of the `disable_coord` parameter of the `bool` and `common_terms` queries: Lucene has removed support for coord factors\r\n - it includes the deprecation of the `index.similarity.base` expert setting, since it was only useful to configure coords and query norms, which have both been removed\r\n - two tests have been marked with `@AwaitsFix` because of #23966, which we intend to address after the merge",
      "commitDate": 1492521441000,
      "commitName": "4632661bc71bb22fc577df476e70e9dfabaaae66",
      "commitAuthor": "Adrien Grand",
      "commitDateOld": 1485185631000,
      "commitNameOld": "e48bc2eed71b1808e5d98960976ec60e6e722d78",
      "commitAuthorOld": "Jim Ferenczi",
      "daysBetweenCommits": 84.91,
      "commitsBetweenForRepo": 836,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n-    public CollapseTopFieldDocs getTopDocs() {\n+    public CollapseTopFieldDocs getTopDocs() throws IOException {\n         Collection\u003cSearchGroup\u003cT\u003e\u003e groups \u003d super.getTopGroups(0, true);\n         if (groups \u003d\u003d null) {\n             return new CollapseTopFieldDocs(collapseField, totalHitCount, new ScoreDoc[0],\n                 sort.getSort(), new Object[0], Float.NaN);\n         }\n         FieldDoc[] docs \u003d new FieldDoc[groups.size()];\n         Object[] collapseValues \u003d new Object[groups.size()];\n         int scorePos \u003d -1;\n         for (int index \u003d 0; index \u003c sort.getSort().length; index++) {\n             SortField sortField \u003d sort.getSort()[index];\n             if (sortField.getType() \u003d\u003d SCORE) {\n                 scorePos \u003d index;\n                 break;\n             }\n         }\n         int pos \u003d 0;\n         Iterator\u003cCollectedSearchGroup\u003cT\u003e\u003e it \u003d orderedGroups.iterator();\n         for (SearchGroup\u003cT\u003e group : groups) {\n             assert it.hasNext();\n             CollectedSearchGroup\u003cT\u003e col \u003d it.next();\n             float score \u003d Float.NaN;\n             if (scorePos !\u003d -1) {\n                 score \u003d (float) group.sortValues[scorePos];\n             }\n             docs[pos] \u003d new FieldDoc(col.topDoc, score, group.sortValues);\n             collapseValues[pos] \u003d group.groupValue;\n             pos++;\n         }\n         return new CollapseTopFieldDocs(collapseField, totalHitCount, docs, sort.getSort(),\n             collapseValues, maxScore);\n     }\n\\ No newline at end of file\n"
    },
    "e48bc2eed71b1808e5d98960976ec60e6e722d78": {
      "type": "Yintroduced",
      "commitMessage": "Add field collapsing for search request (#22337)\n\n* Add top hits collapsing to search request\r\n\r\nThe field collapsing is done with a custom top docs collector that \"collapse\" search hits with same field value.\r\nThe distributed aspect is resolve using the two passes that the regular search uses. The first pass \"collapse\" the top hits, then the coordinating node merge/collapse the top hits from each shard.\r\n\r\n```\r\nGET _search\r\n{\r\n   \"collapse\": {\r\n      \"field\": \"category\",\r\n   }\r\n}\r\n```\r\n\r\nThis change also adds an ExpandCollapseSearchResponseListener that intercepts the search response and expands collapsed hits using the CollapseBuilder#innerHit} options.\r\nThe retrieval of each inner_hits is done by sending a query to all shards filtered by the collapse key.\r\n\r\n```\r\nGET _search\r\n{\r\n   \"collapse\": {\r\n      \"field\": \"category\",\r\n      \"inner_hits\": {\r\n\t\"size\": 2\r\n      }\r\n   }\r\n}\r\n```\r\n",
      "commitDate": 1485185631000,
      "commitName": "e48bc2eed71b1808e5d98960976ec60e6e722d78",
      "commitAuthor": "Jim Ferenczi"
    }
  }
}