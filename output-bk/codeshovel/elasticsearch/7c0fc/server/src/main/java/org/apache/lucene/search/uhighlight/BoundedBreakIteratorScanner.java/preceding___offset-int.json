{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/elasticsearch/.git",
  "startCommitName": "7c0fc209bf78e4824ca1f232b84a1dab22bc2dfa",
  "sourceFileName": "BoundedBreakIteratorScanner.java",
  "functionName": "preceding",
  "functionId": "preceding___offset-int",
  "sourceFilePath": "server/src/main/java/org/apache/lucene/search/uhighlight/BoundedBreakIteratorScanner.java",
  "functionStartLine": 94,
  "functionEndLine": 131,
  "changeHistory": [
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
    "87c841d17875505293bb1cd5985fdfdf566c9d89",
    "b8c352fc3fa0595d074dd03766cc3313deab3d0e"
  ],
  "changeHistoryShort": {
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a": "Yfilerename",
    "87c841d17875505293bb1cd5985fdfdf566c9d89": "Ybodychange",
    "b8c352fc3fa0595d074dd03766cc3313deab3d0e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a": {
      "type": "Yfilerename",
      "commitMessage": "Rename core module to server (#28180)\n\nThis is related to #27933. It renames the core module to server. This is\r\nthe first step towards introducing an elasticsearch-core jar.",
      "commitDate": 1515695443000,
      "commitName": "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
      "commitAuthor": "Tim Brooks",
      "commitDateOld": 1515688270000,
      "commitNameOld": "7d0eb3292b8f8ba27ef50dbbf38783dc68c70728",
      "commitAuthorOld": "Martijn van Groningen",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": ""
    },
    "87c841d17875505293bb1cd5985fdfdf566c9d89": {
      "type": "Ybodychange",
      "commitMessage": "Include all sentences smaller than fragment_size in the unified highlighter (#28132)\n\nThe unified highlighter selects a single sentence per fragment from the offset of the first highlighted term.\r\nThis change modifies this selection and allows more than one sentence in a single fragment.\r\nThe expansion is done forward (on the right of the matching offset), sentences are added to the current fragment iff the overall size of the fragment is smaller than the maximum length (fragment_size).\r\nWe should also add a way to expand the left context with the surrounding sentences but this is currently avoided because the unified highlighter in Lucene uses only the first offset that matches the query to derive the start and end offset of the next fragment.\r\nIf we expand on the left we could split multiple terms that would be grouped otherwise. Breaking this limitation implies some changes in the core of the unified highlighter.\r\n\r\nCloses #28089\r\n",
      "commitDate": 1515673571000,
      "commitName": "87c841d17875505293bb1cd5985fdfdf566c9d89",
      "commitAuthor": "Jim Ferenczi",
      "commitDateOld": 1489770613000,
      "commitNameOld": "b8c352fc3fa0595d074dd03766cc3313deab3d0e",
      "commitAuthorOld": "Jim Ferenczi",
      "daysBetweenCommits": 299.8,
      "commitsBetweenForRepo": 2789,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,38 @@\n     public int preceding(int offset) {\n         if (offset \u003c lastPrecedingOffset) {\n             throw new IllegalArgumentException(\"offset \u003c lastPrecedingOffset: \" +\n                 \"usage doesn\u0027t look like UnifiedHighlighter\");\n         }\n         if (offset \u003e windowStart \u0026\u0026 offset \u003c windowEnd) {\n             innerStart \u003d innerEnd;\n             innerEnd \u003d windowEnd;\n         } else {\n             windowStart \u003d innerStart \u003d mainBreak.preceding(offset);\n-            windowEnd \u003d innerEnd \u003d mainBreak.following(offset-1);\n+            windowEnd \u003d innerEnd \u003d mainBreak.following(offset - 1);\n+            // expand to next break until we reach maxLen\n+            while (innerEnd - innerStart \u003c maxLen) {\n+                int newEnd \u003d mainBreak.following(innerEnd);\n+                if (newEnd \u003d\u003d DONE || (newEnd - innerStart) \u003e maxLen) {\n+                    break;\n+                }\n+                windowEnd \u003d innerEnd \u003d newEnd;\n+            }\n         }\n \n         if (innerEnd - innerStart \u003e maxLen) {\n             // the current split is too big,\n             // so starting from the current term we try to find boundaries on the left first\n             if (offset - maxLen \u003e innerStart) {\n                 innerStart \u003d Math.max(innerStart,\n                     innerBreak.preceding(offset - maxLen));\n             }\n             // and then we try to expand the passage to the right with the remaining size\n             int remaining \u003d Math.max(0, maxLen - (offset - innerStart));\n             if (offset + remaining \u003c windowEnd) {\n                 innerEnd \u003d Math.min(windowEnd,\n                     innerBreak.following(offset + remaining));\n             }\n         }\n         lastPrecedingOffset \u003d offset - 1;\n         return innerStart;\n     }\n\\ No newline at end of file\n"
    },
    "b8c352fc3fa0595d074dd03766cc3313deab3d0e": {
      "type": "Yintroduced",
      "commitMessage": "Add support for fragment_length in the unified highlighter (#23431)\n\n* Add support for fragment_length in the unified highlighter\r\n\r\nThis commit introduce a new break iterator (a BoundedBreakIterator) designed for the unified highlighter\r\n that is able to limit the size of fragments produced by generic break iterator like `sentence`.\r\nThe `unified` highlighter now supports `boundary_scanner` which can `words` or `sentence`.\r\nThe `sentence` mode will use the bounded break iterator in order to limit the size of the sentence to `fragment_length`.\r\nWhen sentences bigger than `fragment_length` are produced, this mode will break the sentence at the next word boundary **after**\r\n `fragment_length` is reached.\r\n",
      "commitDate": 1489770613000,
      "commitName": "b8c352fc3fa0595d074dd03766cc3313deab3d0e",
      "commitAuthor": "Jim Ferenczi"
    }
  }
}