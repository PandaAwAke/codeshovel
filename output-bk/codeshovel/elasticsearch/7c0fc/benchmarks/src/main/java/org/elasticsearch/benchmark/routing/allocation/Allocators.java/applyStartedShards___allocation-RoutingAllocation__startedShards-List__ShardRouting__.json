{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/elasticsearch/.git",
  "startCommitName": "7c0fc209bf78e4824ca1f232b84a1dab22bc2dfa",
  "sourceFileName": "Allocators.java",
  "functionName": "applyStartedShards",
  "functionId": "applyStartedShards___allocation-RoutingAllocation__startedShards-List__ShardRouting__",
  "sourceFilePath": "benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java",
  "functionStartLine": 54,
  "functionEndLine": 56,
  "changeHistory": [
    "ac1b13dde7e158d85ce6d7f314f3e823e012bec9",
    "029fc909b54bf3ed60b6de9b6309aa7d8ec58987",
    "2c467fd9c21cc2f79a58b6c1d412a87b83be94f3"
  ],
  "changeHistoryShort": {
    "ac1b13dde7e158d85ce6d7f314f3e823e012bec9": "Ymultichange(Yrename,Yparameterchange)",
    "029fc909b54bf3ed60b6de9b6309aa7d8ec58987": "Ymultichange(Yrename,Yparameterchange)",
    "2c467fd9c21cc2f79a58b6c1d412a87b83be94f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ac1b13dde7e158d85ce6d7f314f3e823e012bec9": {
      "type": "Ymultichange(Yrename,Yparameterchange)",
      "commitMessage": "Changes the API of GatewayAllocator#applyStartedShards and (#20642)\n\nChanges the API of GatewayAllocator#applyStartedShards and \r\nGatewayAllocator#applyFailedShards to take both a RoutingAllocation\r\nand a list of shards to apply. This allows better mock allocators\r\nto be created as being done in #20637.\r\n\r\nCloses #20642 ",
      "commitDate": 1474637506000,
      "commitName": "ac1b13dde7e158d85ce6d7f314f3e823e012bec9",
      "commitAuthor": "Ali Beyad",
      "subchanges": [
        "Yrename",
        "Yparameterchange"
      ]
    },
    "029fc909b54bf3ed60b6de9b6309aa7d8ec58987": {
      "type": "Ymultichange(Yrename,Yparameterchange)",
      "commitMessage": "Removes FailedRerouteAllocation and StartedRerouteAllocation\n\nRemoves the FailedRerouteAllocation class and StartedRerouteAllocation\r\nclass, as they were just wrappers for RerouteAllocation that stored\r\nstarted and failed shards, but these started and failed shards can\r\nbe passed in directly to the methods that needed them, removing the\r\nneed for this wrapper class and extra level of indirection.\r\n\r\nCloses #20626",
      "commitDate": 1474635756000,
      "commitName": "029fc909b54bf3ed60b6de9b6309aa7d8ec58987",
      "commitAuthor": "Ali Beyad",
      "subchanges": [
        "Yrename",
        "Yparameterchange"
      ]
    },
    "2c467fd9c21cc2f79a58b6c1d412a87b83be94f3": {
      "type": "Yintroduced",
      "commitMessage": "Add microbenchmarking infrastructure (#18891)\n\nWith this commit we add a benchmarks project that contains the necessary build\r\ninfrastructure and an example benchmark. It is added as a separate project to avoid\r\ninterfering with the regular build too much (especially sanity checks) and to keep\r\nthe microbenchmarks isolated.\r\n\r\nMicrobenchmarks are generated with `gradle :benchmarks:jmhJar` and can be run with\r\n` gradle :benchmarks:jmh`.\r\n\r\nWe intentionally do not use the\r\n[jmh-gradle-plugin](https://github.com/melix/jmh-gradle-plugin) as it causes all\r\nsorts of problems (dependencies are not properly excluded, not all JMH parameters\r\ncan be set) and it adds another abstraction layer that is not needed.\r\n\r\nCloses #18242",
      "commitDate": 1466002082000,
      "commitName": "2c467fd9c21cc2f79a58b6c1d412a87b83be94f3",
      "commitAuthor": "Daniel Mitterdorfer"
    }
  }
}