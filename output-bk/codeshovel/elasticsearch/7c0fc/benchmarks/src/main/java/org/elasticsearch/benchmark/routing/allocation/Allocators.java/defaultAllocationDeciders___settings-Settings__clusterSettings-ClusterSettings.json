{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/elasticsearch/.git",
  "startCommitName": "7c0fc209bf78e4824ca1f232b84a1dab22bc2dfa",
  "sourceFileName": "Allocators.java",
  "functionName": "defaultAllocationDeciders",
  "functionId": "defaultAllocationDeciders___settings-Settings__clusterSettings-ClusterSettings",
  "sourceFilePath": "benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java",
  "functionStartLine": 87,
  "functionEndLine": 93,
  "changeHistory": [
    "1ff348ed7f5bab9726765a1e60e8a43ec93bcf71",
    "2c467fd9c21cc2f79a58b6c1d412a87b83be94f3"
  ],
  "changeHistoryShort": {
    "1ff348ed7f5bab9726765a1e60e8a43ec93bcf71": "Ybodychange",
    "2c467fd9c21cc2f79a58b6c1d412a87b83be94f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ff348ed7f5bab9726765a1e60e8a43ec93bcf71": {
      "type": "Ybodychange",
      "commitMessage": "Plugins: Make custom allocation deciders use pull based extensions\n\nThis change converts AllocationDecider registration from push based on\nClusterModule to implementing with a new ClusterPlugin interface.\nAllocationDecider instances are allowed to use only Settings and\nClusterSettings.\n",
      "commitDate": 1471474531000,
      "commitName": "1ff348ed7f5bab9726765a1e60e8a43ec93bcf71",
      "commitAuthor": "Ryan Ernst",
      "commitDateOld": 1471423619000,
      "commitNameOld": "27a760f9c19fff61f7dfaf1a7d0beaae7ff326d8",
      "commitAuthorOld": "Yannick Welsch",
      "daysBetweenCommits": 0.59,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,7 @@\n     public static AllocationDeciders defaultAllocationDeciders(Settings settings, ClusterSettings clusterSettings) throws\n         IllegalAccessException, InvocationTargetException, InstantiationException, NoSuchMethodException {\n-        List\u003cAllocationDecider\u003e list \u003d new ArrayList\u003c\u003e();\n-        // Keep a deterministic order of allocation deciders for the benchmark\n-        for (Class\u003c? extends AllocationDecider\u003e deciderClass : ClusterModule.DEFAULT_ALLOCATION_DECIDERS) {\n-            try {\n-                Constructor\u003c? extends AllocationDecider\u003e constructor \u003d deciderClass.getConstructor(Settings.class, ClusterSettings\n-                    .class);\n-                list.add(constructor.newInstance(settings, clusterSettings));\n-            } catch (NoSuchMethodException e) {\n-                Constructor\u003c? extends AllocationDecider\u003e constructor \u003d deciderClass.getConstructor(Settings.class);\n-                list.add(constructor.newInstance(settings));\n-            }\n-        }\n-        return new AllocationDeciders(settings, list.toArray(new AllocationDecider[0]));\n+        Collection\u003cAllocationDecider\u003e deciders \u003d\n+            ClusterModule.createAllocationDeciders(settings, clusterSettings, Collections.emptyList());\n+        return new AllocationDeciders(settings, deciders);\n \n     }\n\\ No newline at end of file\n"
    },
    "2c467fd9c21cc2f79a58b6c1d412a87b83be94f3": {
      "type": "Yintroduced",
      "commitMessage": "Add microbenchmarking infrastructure (#18891)\n\nWith this commit we add a benchmarks project that contains the necessary build\r\ninfrastructure and an example benchmark. It is added as a separate project to avoid\r\ninterfering with the regular build too much (especially sanity checks) and to keep\r\nthe microbenchmarks isolated.\r\n\r\nMicrobenchmarks are generated with `gradle :benchmarks:jmhJar` and can be run with\r\n` gradle :benchmarks:jmh`.\r\n\r\nWe intentionally do not use the\r\n[jmh-gradle-plugin](https://github.com/melix/jmh-gradle-plugin) as it causes all\r\nsorts of problems (dependencies are not properly excluded, not all JMH parameters\r\ncan be set) and it adds another abstraction layer that is not needed.\r\n\r\nCloses #18242",
      "commitDate": 1466002082000,
      "commitName": "2c467fd9c21cc2f79a58b6c1d412a87b83be94f3",
      "commitAuthor": "Daniel Mitterdorfer"
    }
  }
}