{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/elasticsearch/.git",
  "startCommitName": "7c0fc209bf78e4824ca1f232b84a1dab22bc2dfa",
  "sourceFileName": "SearchBenchmarkTask.java",
  "functionName": "runIterations",
  "functionId": "runIterations___iterations-int__addSample-boolean",
  "sourceFilePath": "client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/search/SearchBenchmarkTask.java",
  "functionStartLine": 56,
  "functionEndLine": 72,
  "changeHistory": [
    "7b81c4ca59fb209cecc87b3a4ea482faa3c88518",
    "b99a482992ff753b10c4556b65a43301e32a8de0",
    "c33f85bc37bbfee87158738f538d380c0cc31d13"
  ],
  "changeHistoryShort": {
    "7b81c4ca59fb209cecc87b3a4ea482faa3c88518": "Ymultichange(Yrename,Yparameterchange,Yexceptionschange,Ybodychange)",
    "b99a482992ff753b10c4556b65a43301e32a8de0": "Ybodychange",
    "c33f85bc37bbfee87158738f538d380c0cc31d13": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b81c4ca59fb209cecc87b3a4ea482faa3c88518": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Add client-benchmark-noop-api-plugin to stress clients even more in benchmarks (#20103)\n\n",
      "commitDate": 1472195147000,
      "commitName": "7b81c4ca59fb209cecc87b3a4ea482faa3c88518",
      "commitAuthor": "Daniel Mitterdorfer",
      "subchanges": [
        "Yrename",
        "Yparameterchange",
        "Yexceptionschange",
        "Ybodychange"
      ]
    },
    "b99a482992ff753b10c4556b65a43301e32a8de0": {
      "type": "Ybodychange",
      "commitMessage": "Improve client benchmark (#19736)\n\n* Allow to run client benchmark as an uberjar\r\n* Busy wait to avoid accidental skew on low target throughput rates\r\n* Trigger and wait for full GC to happen between trials\r\n* Add missing SuppressForbidden to allow System.gc in client benchmark",
      "commitDate": 1470140271000,
      "commitName": "b99a482992ff753b10c4556b65a43301e32a8de0",
      "commitAuthor": "Daniel Mitterdorfer",
      "commitDateOld": 1469523682000,
      "commitNameOld": "c33f85bc37bbfee87158738f538d380c0cc31d13",
      "commitAuthorOld": "Daniel Mitterdorfer",
      "daysBetweenCommits": 7.14,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,11 @@\n     private void waitMicros(int waitTime) throws InterruptedException {\n-        int millis \u003d waitTime / 1000;\n-        int micros \u003d waitTime % 1000;\n-        if (millis \u003e 0) {\n-            Thread.sleep(millis);\n-        }\n-        // busy spin for the rest of the time\n-        if (micros \u003e 0) {\n-            long end \u003d System.nanoTime() + 1000L * micros;\n+        // Thread.sleep() time is not very accurate (it\u0027s most of the time around 1 - 2 ms off)\n+        // we busy spin all the time to avoid introducing additional measurement artifacts (noticed 100% skew on 99.9th percentile)\n+        // this approach is not suitable for low throughput rates (in the second range) though\n+        if (waitTime \u003e 0) {\n+            long end \u003d System.nanoTime() + 1000L * waitTime;\n             while (end \u003e System.nanoTime()) {\n                 // busy spin\n             }\n         }\n     }\n\\ No newline at end of file\n"
    },
    "c33f85bc37bbfee87158738f538d380c0cc31d13": {
      "type": "Yintroduced",
      "commitMessage": "Add client benchmark\n\nWith this commit we add a benchmark for the new REST client and the\nexisting transport client.\n\nCloses #19281\n",
      "commitDate": 1469523682000,
      "commitName": "c33f85bc37bbfee87158738f538d380c0cc31d13",
      "commitAuthor": "Daniel Mitterdorfer"
    }
  }
}