{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/home/ncbradley/codeshovel-repos/elasticsearch/.git",
  "startCommitName": "7c0fc209bf78e4824ca1f232b84a1dab22bc2dfa",
  "sourceFileName": "TransportClientBenchmark.java",
  "functionName": "bulkIndex",
  "functionId": "bulkIndex___bulkData-List__String__",
  "sourceFilePath": "client/benchmark/src/main/java/org/elasticsearch/client/benchmark/transport/TransportClientBenchmark.java",
  "functionStartLine": 81,
  "functionEndLine": 96,
  "changeHistory": [
    "46e8d97813addd8c57fa54d2c700d26a171f2dbb",
    "7520a107bee67099338813728147d2aee25ed240",
    "7b81c4ca59fb209cecc87b3a4ea482faa3c88518",
    "c33f85bc37bbfee87158738f538d380c0cc31d13"
  ],
  "changeHistoryShort": {
    "46e8d97813addd8c57fa54d2c700d26a171f2dbb": "Ybodychange",
    "7520a107bee67099338813728147d2aee25ed240": "Ybodychange",
    "7b81c4ca59fb209cecc87b3a4ea482faa3c88518": "Ybodychange",
    "c33f85bc37bbfee87158738f538d380c0cc31d13": "Yintroduced"
  },
  "changeHistoryDetails": {
    "46e8d97813addd8c57fa54d2c700d26a171f2dbb": {
      "type": "Ybodychange",
      "commitMessage": "Core: Remove RequestBuilder from Action (#30966)\n\nThis commit removes the RequestBuilder generic type from Action. It was\r\nneeded to be used by the newRequest method, which in turn was used by\r\nclient.prepareExecute. Both of these methods are now removed, along with\r\nthe existing users of prepareExecute constructing the appropriate\r\nbuilder directly.\r\n",
      "commitDate": 1527776100000,
      "commitName": "46e8d97813addd8c57fa54d2c700d26a171f2dbb",
      "commitAuthor": "Ryan Ernst",
      "commitDateOld": 1486133204000,
      "commitNameOld": "9a0b216c36e3debb9d48374ced1e58d6568429bd",
      "commitAuthorOld": "Jason Tedor",
      "daysBetweenCommits": 481.98,
      "commitsBetweenForRepo": 7778,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n         public boolean bulkIndex(List\u003cString\u003e bulkData) {\n-            NoopBulkRequestBuilder builder \u003d NoopBulkAction.INSTANCE.newRequestBuilder(client);\n+            NoopBulkRequestBuilder builder \u003d new NoopBulkRequestBuilder(client,NoopBulkAction.INSTANCE);\n             for (String bulkItem : bulkData) {\n                 builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8), XContentType.JSON));\n             }\n             BulkResponse bulkResponse;\n             try {\n                 bulkResponse \u003d builder.execute().get();\n             } catch (InterruptedException e) {\n                 Thread.currentThread().interrupt();\n                 return false;\n             } catch (ExecutionException e) {\n                 throw new ElasticsearchException(e);\n             }\n             return !bulkResponse.hasFailures();\n         }\n\\ No newline at end of file\n"
    },
    "7520a107bee67099338813728147d2aee25ed240": {
      "type": "Ybodychange",
      "commitMessage": "Optionally require a valid content type for all rest requests with content (#22691)\n\nThis change adds a strict mode for xcontent parsing on the rest layer. The strict mode will be off by default for 5.x and in a separate commit will be enabled by default for 6.0. The strict mode, which can be enabled by setting `http.content_type.required: true` in 5.x, will require that all incoming rest requests have a valid and supported content type header before the request is dispatched. In the non-strict mode, the Content-Type header will be inspected and if it is not present or not valid, we will continue with auto detection of content like we have done previously.\r\n\r\nThe content type header is parsed to the matching XContentType value with the only exception being for plain text requests. This value is then passed on with the content bytes so that we can reduce the number of places where we need to auto-detect the content type.\r\n\r\nAs part of this, many transport requests and builders were updated to provide methods that\r\naccepted the XContentType along with the bytes and the methods that would rely on auto-detection have been deprecated.\r\n\r\nIn the non-strict mode, deprecation warnings are issued whenever a request with body doesn\u0027t provide the Content-Type header.\r\n\r\nSee #19388 ",
      "commitDate": 1486062433000,
      "commitName": "7520a107bee67099338813728147d2aee25ed240",
      "commitAuthor": "Jay Modi",
      "commitDateOld": 1475832467000,
      "commitNameOld": "194a6b1df031a95977b6ca395a74a8b74d9af31d",
      "commitAuthorOld": "Simon Willnauer",
      "daysBetweenCommits": 118.4,
      "commitsBetweenForRepo": 1518,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n         public boolean bulkIndex(List\u003cString\u003e bulkData) {\n             NoopBulkRequestBuilder builder \u003d NoopBulkAction.INSTANCE.newRequestBuilder(client);\n             for (String bulkItem : bulkData) {\n-                builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8)));\n+                builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8), XContentType.JSON));\n             }\n             BulkResponse bulkResponse;\n             try {\n                 bulkResponse \u003d builder.execute().get();\n             } catch (InterruptedException e) {\n                 Thread.currentThread().interrupt();\n                 return false;\n             } catch (ExecutionException e) {\n                 throw new ElasticsearchException(e);\n             }\n             return !bulkResponse.hasFailures();\n         }\n\\ No newline at end of file\n"
    },
    "7b81c4ca59fb209cecc87b3a4ea482faa3c88518": {
      "type": "Ybodychange",
      "commitMessage": "Add client-benchmark-noop-api-plugin to stress clients even more in benchmarks (#20103)\n\n",
      "commitDate": 1472195147000,
      "commitName": "7b81c4ca59fb209cecc87b3a4ea482faa3c88518",
      "commitAuthor": "Daniel Mitterdorfer",
      "commitDateOld": 1469523682000,
      "commitNameOld": "c33f85bc37bbfee87158738f538d380c0cc31d13",
      "commitAuthorOld": "Daniel Mitterdorfer",
      "daysBetweenCommits": 30.92,
      "commitsBetweenForRepo": 437,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n         public boolean bulkIndex(List\u003cString\u003e bulkData) {\n-            BulkRequestBuilder builder \u003d client.prepareBulk();\n+            NoopBulkRequestBuilder builder \u003d NoopBulkAction.INSTANCE.newRequestBuilder(client);\n             for (String bulkItem : bulkData) {\n                 builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8)));\n             }\n             BulkResponse bulkResponse;\n             try {\n                 bulkResponse \u003d builder.execute().get();\n             } catch (InterruptedException e) {\n                 Thread.currentThread().interrupt();\n                 return false;\n             } catch (ExecutionException e) {\n                 throw new ElasticsearchException(e);\n             }\n             return !bulkResponse.hasFailures();\n         }\n\\ No newline at end of file\n"
    },
    "c33f85bc37bbfee87158738f538d380c0cc31d13": {
      "type": "Yintroduced",
      "commitMessage": "Add client benchmark\n\nWith this commit we add a benchmark for the new REST client and the\nexisting transport client.\n\nCloses #19281\n",
      "commitDate": 1469523682000,
      "commitName": "c33f85bc37bbfee87158738f538d380c0cc31d13",
      "commitAuthor": "Daniel Mitterdorfer"
    }
  }
}