diff --git a/android/guava/src/com/google/common/collect/EnumMultiset.java b/android/guava/src/com/google/common/collect/EnumMultiset.java
index 303ab79e6..6dedbc006 100644
--- a/android/guava/src/com/google/common/collect/EnumMultiset.java
+++ b/android/guava/src/com/google/common/collect/EnumMultiset.java
@@ -235,75 +235,80 @@ public final class EnumMultiset<E extends Enum<E>> extends AbstractMultiset<E>
     }
 
     @Override
     public void remove() {
       checkRemove(toRemove >= 0);
       if (counts[toRemove] > 0) {
         distinctElements--;
         size -= counts[toRemove];
         counts[toRemove] = 0;
       }
       toRemove = -1;
     }
   }
 
   @Override
   Set<E> createElementSet() {
     return new ElementSet() {
 
       @Override
       public Iterator<E> iterator() {
         return new Itr<E>() {
           @Override
           E output(int index) {
             return enumConstants[index];
           }
         };
       }
     };
   }
 
   @Override
   Iterator<Entry<E>> entryIterator() {
     return new Itr<Entry<E>>() {
       @Override
       Entry<E> output(final int index) {
         return new Multisets.AbstractEntry<E>() {
           @Override
           public E getElement() {
             return enumConstants[index];
           }
 
           @Override
           public int getCount() {
             return counts[index];
           }
         };
       }
     };
   }
 
+  @Override
+  public Iterator<E> iterator() {
+    return Multisets.iteratorImpl(this);
+  }
+
   @GwtIncompatible // java.io.ObjectOutputStream
   private void writeObject(ObjectOutputStream stream) throws IOException {
     stream.defaultWriteObject();
     stream.writeObject(type);
     Serialization.writeMultiset(this, stream);
   }
 
   /**
    * @serialData the {@code Class<E>} for the enum type, the number of distinct elements, the first
    *     element, its count, the second element, its count, and so on
    */
   @GwtIncompatible // java.io.ObjectInputStream
   private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {
     stream.defaultReadObject();
     @SuppressWarnings("unchecked") // reading data stored by writeObject
     Class<E> localType = (Class<E>) stream.readObject();
     type = localType;
     enumConstants = type.getEnumConstants();
     counts = new int[enumConstants.length];
     Serialization.populateMultiset(this, stream);
   }
 
   @GwtIncompatible // Not needed in emulated source
   private static final long serialVersionUID = 0;
 }
