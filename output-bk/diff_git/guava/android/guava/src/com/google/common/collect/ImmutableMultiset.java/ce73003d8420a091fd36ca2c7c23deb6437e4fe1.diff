diff --git a/android/guava/src/com/google/common/collect/ImmutableMultiset.java b/android/guava/src/com/google/common/collect/ImmutableMultiset.java
index 2dca981f0..09b042ecc 100644
--- a/android/guava/src/com/google/common/collect/ImmutableMultiset.java
+++ b/android/guava/src/com/google/common/collect/ImmutableMultiset.java
@@ -263,101 +263,101 @@ public abstract class ImmutableMultiset<E> extends ImmutableMultisetGwtSerializa
   /**
    * Guaranteed to throw an exception and leave the collection unmodified.
    *
    * @throws UnsupportedOperationException always
    * @deprecated Unsupported operation.
    */
   @CanIgnoreReturnValue
   @Deprecated
   @Override
   public final boolean setCount(E element, int oldCount, int newCount) {
     throw new UnsupportedOperationException();
   }
 
   @GwtIncompatible // not present in emulated superclass
   @Override
   int copyIntoArray(Object[] dst, int offset) {
     for (Multiset.Entry<E> entry : entrySet()) {
       Arrays.fill(dst, offset, offset + entry.getCount(), entry.getElement());
       offset += entry.getCount();
     }
     return offset;
   }
 
   @Override
   public boolean equals(@NullableDecl Object object) {
     return Multisets.equalsImpl(this, object);
   }
 
   @Override
   public int hashCode() {
     return Sets.hashCodeImpl(entrySet());
   }
 
   @Override
   public String toString() {
     return entrySet().toString();
   }
 
   /** @since 21.0 (present with return type {@code Set} since 2.0) */
   @Override
   public abstract ImmutableSet<E> elementSet();
 
   @LazyInit private transient ImmutableSet<Entry<E>> entrySet;
 
   @Override
   public ImmutableSet<Entry<E>> entrySet() {
     ImmutableSet<Entry<E>> es = entrySet;
     return (es == null) ? (entrySet = createEntrySet()) : es;
   }
 
-  private final ImmutableSet<Entry<E>> createEntrySet() {
+  private ImmutableSet<Entry<E>> createEntrySet() {
     return isEmpty() ? ImmutableSet.<Entry<E>>of() : new EntrySet();
   }
 
   abstract Entry<E> getEntry(int index);
 
   @WeakOuter
   private final class EntrySet extends ImmutableSet.Indexed<Entry<E>> {
     @Override
     boolean isPartialView() {
       return ImmutableMultiset.this.isPartialView();
     }
 
     @Override
     Entry<E> get(int index) {
       return getEntry(index);
     }
 
     @Override
     public int size() {
       return elementSet().size();
     }
 
     @Override
     public boolean contains(Object o) {
       if (o instanceof Entry) {
         Entry<?> entry = (Entry<?>) o;
         if (entry.getCount() <= 0) {
           return false;
         }
         int count = count(entry.getElement());
         return count == entry.getCount();
       }
       return false;
     }
 
     @Override
     public int hashCode() {
       return ImmutableMultiset.this.hashCode();
     }
 
     // We can't label this with @Override, because it doesn't override anything
     // in the GWT emulated version.
     // TODO(cpovirk): try making all copies of this method @GwtIncompatible instead
     Object writeReplace() {
       return new EntrySetSerializedForm<E>(ImmutableMultiset.this);
     }
 
     private static final long serialVersionUID = 0;
   }
 
