diff --git a/src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java b/src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java
index e4a9725e7..a37b52c66 100644
--- a/src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java
+++ b/src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java
@@ -55,60 +55,64 @@ public class ConfigurationBuilder extends BaseCheckTestSupport {
 			if ("TreeWalker".equals(currentConfig.getName())) {
 				for (Configuration checkConfig : currentConfig.getChildren()) {
 					if (aCheckName.equals(checkConfig.getName())) {
 						return checkConfig;
 					}
 				}
 			} else if (aCheckName.equals(currentConfig.getName())) {
 				return currentConfig;
 			}
 		}
 		return null;
 	}
 
 	public String getFilePath(String aFileName) {
 		String absoluteRootPath = ROOT.getAbsolutePath();
 		String rootPath = absoluteRootPath.substring(0,
 				absoluteRootPath.lastIndexOf("src"));
 		for (File file : files) {
 			if (file.toString().endsWith(aFileName+".java")) {
 				return rootPath + file.toString();
 			}
 		}
 		return null;
 	}
 
 	private static void listFiles(final List<File> files, final File folder,
 			final String extension) {
 		if (folder.canRead()) {
 			if (folder.isDirectory()) {
 				for (final File f : folder.listFiles()) {
 					listFiles(files, f, extension);
 				}
 			} else if (folder.toString().endsWith("." + extension)) {
 				files.add(folder);
 			}
 		}
 	}
 
 	public File getROOT() {
 		return ROOT;
 	}
 
 	public List<File> getFiles() {
             return files;
 	}
 
 	public Integer[] getLinesWithWarn(String aFileName) throws IOException {
 		int lineNumber = 1;
 	    List<Integer> result = new ArrayList<>();
 	    try(BufferedReader br = new BufferedReader(new FileReader(aFileName))) {
-	        for(String line; (line = br.readLine()) != null; ) {
+	        while (true) {
+	            String line = br.readLine();
+	            if (line == null) {
+	                break;
+	            }
 	            if (warnPattern.matcher(line).find()) {
 	            	result.add(lineNumber);
 	            }
 	            lineNumber++;
 	        }
 	    }
 	    return result.toArray(new Integer[result.size()]);
 	}
 }
