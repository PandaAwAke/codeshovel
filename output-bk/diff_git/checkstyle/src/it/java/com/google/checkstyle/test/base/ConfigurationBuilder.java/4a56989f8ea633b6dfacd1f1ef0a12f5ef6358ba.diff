diff --git a/src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java b/src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java
index 6b2bc2bdb..f3415cef7 100644
--- a/src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java
+++ b/src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java
@@ -53,67 +53,67 @@ public class ConfigurationBuilder extends BaseCheckTestSupport {
 
 	public Configuration getCheckConfig(String aCheckName) {
 		for (Configuration currentConfig : config.getChildren()) {
 			if ("TreeWalker".equals(currentConfig.getName())) {
 				for (Configuration checkConfig : currentConfig.getChildren()) {
 					if (aCheckName.equals(checkConfig.getName())) {
 						return checkConfig;
 					}
 				}
 			} else if (aCheckName.equals(currentConfig.getName())) {
 				return currentConfig;
 			}
 		}
 		return null;
 	}
 
 	public String getFilePath(String aFileName) {
 		String absoluteRootPath = root.getAbsolutePath();
 		String rootPath = absoluteRootPath.substring(0,
 				absoluteRootPath.lastIndexOf("src"));
 		for (File file : files) {
 			if (file.toString().endsWith(aFileName+".java")) {
 				return rootPath + file.toString();
 			}
 		}
 		return null;
 	}
 
 	private static void listFiles(final List<File> files, final File folder,
 			final String extension) {
 		if (folder.canRead()) {
 			if (folder.isDirectory()) {
 				for (final File f : folder.listFiles()) {
 					listFiles(files, f, extension);
 				}
 			} else if (folder.toString().endsWith("." + extension)) {
 				files.add(folder);
 			}
 		}
 	}
 
 	public File getRoot() {
 		return root;
 	}
 
 	public List<File> getFiles() {
             return Collections.unmodifiableList(files);
 	}
 
 	public Integer[] getLinesWithWarn(String aFileName) throws IOException {
-		int lineNumber = 1;
-	    List<Integer> result = new ArrayList<>();
+		List<Integer> result = new ArrayList<>();
 	    try(BufferedReader br = new BufferedReader(new FileReader(aFileName))) {
-	        while (true) {
+			int lineNumber = 1;
+			while (true) {
 	            String line = br.readLine();
 	            if (line == null) {
 	                break;
 	            }
 	            if (warnPattern.matcher(line).find()) {
 	            	result.add(lineNumber);
 	            }
 	            lineNumber++;
 	        }
 	    }
 	    return result.toArray(new Integer[result.size()]);
 	}
 }
