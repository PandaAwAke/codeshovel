diff --git a/src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/NonEmptyAtclauseDescriptionTest.java b/src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/NonEmptyAtclauseDescriptionTest.java
index 91b7c3309..69d9a385c 100644
--- a/src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/NonEmptyAtclauseDescriptionTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/NonEmptyAtclauseDescriptionTest.java
@@ -1,87 +1,88 @@
 ////////////////////////////////////////////////////////////////////////////////
 // checkstyle: Checks Java source code for adherence to a set of rules.
 // Copyright (C) 2001-2015 the original author or authors.
 //
 // This library is free software; you can redistribute it and/or
 // modify it under the terms of the GNU Lesser General Public
 // License as published by the Free Software Foundation; either
 // version 2.1 of the License, or (at your option) any later version.
 //
 // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // Lesser General Public License for more details.
 //
 // You should have received a copy of the GNU Lesser General Public
 // License along with this library; if not, write to the Free Software
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 
 package com.google.checkstyle.test.chapter7javadoc.rule713atclauses;
 
 import java.io.File;
 
 import org.junit.BeforeClass;
 import org.junit.Test;
 
 import com.google.checkstyle.test.base.BaseCheckTestSupport;
 import com.google.checkstyle.test.base.ConfigurationBuilder;
+import com.puppycrawl.tools.checkstyle.api.CheckstyleException;
 import com.puppycrawl.tools.checkstyle.api.Configuration;
 import com.puppycrawl.tools.checkstyle.checks.javadoc.NonEmptyAtclauseDescriptionCheck;
 
 public class NonEmptyAtclauseDescriptionTest extends BaseCheckTestSupport {
 
     private static ConfigurationBuilder builder;
 
     @BeforeClass
-    public static void setConfigurationBuilder() {
+    public static void setConfigurationBuilder() throws CheckstyleException {
         builder = new ConfigurationBuilder(new File("src/it/"));
     }
 
     @Test
     public void testDefaultConfiguration() throws Exception {
         final String msg = getCheckMessage(NonEmptyAtclauseDescriptionCheck.class,
             "non.empty.atclause");
 
         final String[] expected = {
             "34: " + msg,
             "35: " + msg,
             "36: " + msg,
             "37: " + msg,
             "38: " + msg,
             "39: " + msg,
             "48: " + msg,
             "49: " + msg,
             "50: " + msg,
             "51: " + msg,
             "52: " + msg,
         };
 
         final Configuration checkConfig = builder.getCheckConfig("NonEmptyAtclauseDescription");
         final String filePath = builder.getFilePath("InputNonEmptyAtclauseDescriptionCheck");
 
         final Integer[] warnList = getLineNumbersFromExpected(expected);
         verify(checkConfig, filePath, expected, warnList);
     }
 
     @Test
     public void testSpaceSequence() throws Exception {
         final String msg = getCheckMessage(NonEmptyAtclauseDescriptionCheck.class,
             "non.empty.atclause");
 
         final String[] expected = {
             "27: " + msg,
             "28: " + msg,
             "29: " + msg,
             "38: " + msg,
             "39: " + msg,
             "40: " + msg,
         };
 
         final Configuration checkConfig = builder.getCheckConfig("NonEmptyAtclauseDescription");
         final String filePath = builder
             .getFilePath("InputNonEmptyAtclauseDescriptionCheckSpaceSeq");
 
         final Integer[] warnList = getLineNumbersFromExpected(expected);
         verify(checkConfig, filePath, expected, warnList);
     }
