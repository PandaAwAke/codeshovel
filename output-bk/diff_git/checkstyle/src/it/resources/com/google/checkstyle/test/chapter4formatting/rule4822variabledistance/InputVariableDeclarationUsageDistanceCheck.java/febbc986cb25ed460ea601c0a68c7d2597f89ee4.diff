diff --git a/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/InputVariableDeclarationUsageDistanceCheck.java b/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/InputVariableDeclarationUsageDistanceCheck.java
index e33607503..873e6fea2 100644
--- a/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/InputVariableDeclarationUsageDistanceCheck.java
+++ b/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/InputVariableDeclarationUsageDistanceCheck.java
@@ -414,101 +414,101 @@ public class InputVariableDeclarationUsageDistanceCheck {
         cal.set(Calendar.MILLISECOND, 0);
         cal.set(Calendar.HOUR_OF_DAY, mm);
         cal.set(Calendar.MINUTE, mm); // distance=1
     }
     
     public void testIssue32_3(MyObject[] objects) {
         Calendar cal = Calendar.getInstance();
         for(int i=0; i<objects.length; i++) {
             objects[i].setEnabled(true);
             objects[i].setColor(0x121212);
             objects[i].setUrl("http://google.com");
             objects[i].setSize(789);
             objects[i].setCalendar(cal); // distance=1
         }
     }
     
     public String testIssue32_4(boolean flag) {
         StringBuilder builder = new StringBuilder();
         builder.append("flag is ");
         builder.append(flag);
         final String line = "";
         if(flag) {
             builder.append("line of AST is:");
             builder.append("\n");
             builder.append(String.valueOf(line)); //distance=1
             builder.append("\n");
         }
         return builder.toString();
     }
     
     public void testIssue32_5() {
         Option a = null;
         Option b = null;
         Option c = null;
         boolean isCNull = isNull(c); // distance=1
         boolean isBNull = isNull(b); // distance=1
         boolean isANull = isNull(a); // distance=1
     }
   
     public void testIssue32_6() {
         Option aOpt = null;
         Option bOpt = null;
         Option cOpt = null;
         isNull(cOpt); // distance = 1
         isNull(bOpt); // distance = 2
         isNull(aOpt); // distance = 3
     }
     
     public void testIssue32_7() {
         String line = "abc";
-        writer.write(line);
+        otherWriter.write(line);
         line.charAt(1);
         builder.append(line);
         test(line, line, line);
     }
     
     public void testIssue32_8(Writer w1, Writer w2, Writer w3) {
         String l1="1";
 
         
         w3.write(l1); //distance=3
     }
     
     public void testIssue32_9() {
         Options options = new Options();
         Option myOption = null; //warn
         options.addBindFile(null);
         options.addBindFile(null);
         options.addBindFile(null);
         options.addBindFile(null);
         options.addBindFile(null);
         System.out.println("message");
         myOption.setArgName("abc"); // distance=7
     }
     
     public void testIssue32_10() {
         Options options = new Options();
         Option myOption = null; //warn
         options.addBindFile(null);
         options.addBindFile(null);
         options.addBindFile(null);
         options.addBindFile(null);
         options.addBindFile(null);
         myOption.setArgName("q"); // distance=6
     }
     
     
     public int testIssue32_11(String toDir)
             throws Exception
     {
         int count = 0;
         String[] files = {};
 
         System.out.println("Data archivation started");
         files.notify();
         System.out.println("sss");
 
         if (files == null || files.length == 0) {
             System.out.println("No files on a remote site");
         }
         else {
@@ -730,73 +730,73 @@ public class InputVariableDeclarationUsageDistanceCheck {
 		public static void warn(String string)
 		{
 			
 		}
 
 		public static void setInternalDebugging(String confDebug, boolean b)
 		{
 			
 		}
     	
     }
     
     static class OptionBuilder {
 
 		public static Option create(String string)
 		{
 			return null;
 		}
     	
     }
     
     class MyObject {
 
 		public void setEnabled(boolean b)
 		{
 			
 		}
 
 		public void setCalendar(Calendar cal)
 		{
 			
 		}
 
 		public void setSize(int i)
 		{
 			
 		}
 
 		public void setUrl(String string)
 		{
 			
 		}
 
 		public void setColor(int i)
 		{
 			
 		}
     	
     }
     
-    static class writer {
+    static class otherWriter {
 
 		public static void write(String line)
 		{
 			
 		}
     	
     }
     
     void test(String s, String s1, String s2) {
     	
     }
     
     static class builder {
 
 		public static void append(String line)
 		{
 			
 		}
     	
     }
     
-}
\ No newline at end of file
+}
