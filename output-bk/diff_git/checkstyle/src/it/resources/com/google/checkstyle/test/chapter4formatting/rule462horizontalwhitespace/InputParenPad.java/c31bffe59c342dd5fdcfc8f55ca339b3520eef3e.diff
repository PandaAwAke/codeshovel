diff --git a/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/InputParenPad.java b/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/InputParenPad.java
index 5d7fc1fd8..77399374f 100644
--- a/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/InputParenPad.java
+++ b/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/InputParenPad.java
@@ -164,51 +164,60 @@ enum MyEnum {
     }
 
     private void launch(Integer number ) { // warning
         String myInt = ( number.toString() + '\0' ); // warning
         boolean result = false;
         if (number == 123)
             result = true;
     }
 
     private static String getterName( Exception t) { // warning
         if (t instanceof ClassNotFoundException ) { // warning
             return ( (ClassNotFoundException) t ).getMessage(); // warning
         }
         else {
             return "?";
         }
     }
 
     private Object exam;
 
     public String testing() {
         return ( this.exam != null ) // warning
                 ? ( ( Enum )this.exam ).name() // warning
                 : null;
     }
 
     Object stringReturnValue( Object result ) { // warning
         if ( result instanceof String ) { // warning
             result = ( (String) result ).length(); // warning
         }
         return result;
     }
 
 
 
     private void except() {
         java.util.ArrayList<Integer> arrlist = new java.util.ArrayList<Integer>( 5 ); // warning
         arrlist.add( 20); // warning
         arrlist.add(15 ); // warning
         arrlist.add( 30 ); // warning
         arrlist.add(45);
         try {
             ( arrlist ).remove( 2); // warning
         } catch ( IndexOutOfBoundsException x ) { // warning
             x.getMessage();
         }
         org.junit.Assert.assertThat( "123", org.hamcrest.CoreMatchers.is( "123" ) ); // warning
         org.junit.Assert.assertThat( "Help! Integers don't work", // warning
                 0, org.hamcrest.CoreMatchers.is( 1 ) ); // warning
     }
+
+    private void tryWithResources() throws Exception {
+        try (AutoCloseable a = null) {} // ok
+        try (AutoCloseable a = null; AutoCloseable b = null) {} // ok
+        try (AutoCloseable a = null; AutoCloseable b = null; ) {} // ok
+        try (AutoCloseable a = null; AutoCloseable b = null; ) {} // ok
+        try (AutoCloseable a = null ) {} // warning
+        try (AutoCloseable a = null; AutoCloseable b = null ) {} // warning
+    }
 }
