diff --git a/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/InputCommentsIndentationCommentIsAtTheEndOfBlock.java b/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/InputCommentsIndentationCommentIsAtTheEndOfBlock.java
index 5dbac5d27..8b7057a2a 100644
--- a/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/InputCommentsIndentationCommentIsAtTheEndOfBlock.java
+++ b/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/InputCommentsIndentationCommentIsAtTheEndOfBlock.java
@@ -98,159 +98,159 @@ public class InputCommentsIndentationCommentIsAtTheEndOfBlock {
         CheckUtils
             .getFirstNode(new DetailAST());
                      // warn
     }
 
     public void foo17() {
         CheckUtils
             .getFirstNode(new DetailAST())
             .getFirstChild()
             // comment
             .getNextSibling();
     }
 
     public void foo18() {
         CheckUtils
             .getFirstNode(new DetailAST())
             .getFirstChild()
                              // warn
             .getNextSibling();
     }
 
     public void foo19() {
         (new Thread(new Runnable() {
             @Override
             public void run() {
 
             }
         })).
             run();
         // comment
     }
 
     public void foo20() {
         (new Thread(new Runnable() {
             @Override
             public void run() {
 
             }
         })).
             run();
                           // warn
     }
 
     public void foo21() {
         int[] array = new int[5];
 
         java.util.List<String> expected = new java.util.ArrayList<>();
         for (int i = 0; i < 5; i++) {
         org.junit.Assert.assertEquals(expected.get(i), array[i]);
         }
-        String s = String.format("The array element "
+        String s = String.format(java.util.Locale.ENGLISH, "The array element "
                + "immediately following the end of the collection should be nulled",
             array[1]);
         // the above example was taken from hibernate-orm and was modified a bit
     }
 
     public void foo22() {
         int[] array = new int[5];
 
         java.util.List<String> expected = new java.util.ArrayList<>();
         for (int i = 0; i < 5; i++) {
             org.junit.Assert.assertEquals(expected.get(i), array[i]);
         }
-        String s = String.format("The array element "
+        String s = String.format(java.util.Locale.ENGLISH, "The array element "
                 + "immediately following the end of the collection should be nulled",
             array[1]);
                                  // warn
     }
 
     public void foo23() {
         new Object();
         // comment
     }
 
     public void foo24() {
         new Object();
                      // warn
     }
 
     public String foo25() {
-        return String.format("%d",
+        return String.format(java.util.Locale.ENGLISH, "%d",
             1);
         // comment
     }
 
     public String foo26() {
-        return String.format("%d",
+        return String.format(java.util.Locale.ENGLISH, "%d",
             1);
                                   // warn
     }
 
     public void foo27() {
         // comment
         // block
         foo17();
 
         // TODO
     }
 
     public String foo28() {
         int a = 5;
-        return String.format("%d",
+        return String.format(java.util.Locale.ENGLISH, "%d",
             1);
         // comment
     }
 
     public String foo29() {
         int a = 5;
-        return String.format("%d",
+        return String.format(java.util.Locale.ENGLISH, "%d",
             1);
                           // warn
     }
 
     public void foo30() {
         // comment
         int a = 5;
 // warn
     }
 
     public void foo31() {
         String s = new String ("A"
             + "B"
             + "C");
         // comment
     }
 
     public void foo32() {
         String s = new String ("A"
             + "B"
             + "C");
             // warn
     }
 
     public void foo33() {
         // comment
         this.foo22();
 // warn
     }
 
     public void foo34() throws Exception {
         throw new Exception("",
             new Exception()
             );
         // comment
     }
 
     public void foo35() throws Exception {
         throw new Exception("",
             new Exception()
         );
             // warn
     }
 
     public void foo36() throws Exception {
         throw new Exception("",
             new Exception()
         );
 // warn
     }
