diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java b/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java
index 2dbfc7dd8..104ac3564 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java
@@ -81,95 +81,99 @@ public class SuppressElement
 
     /**
      * Set the check class pattern.
      * @param checks regular expression for filtered check classes.
      */
     public void setChecks(final String checks) {
         checkPattern = checks;
         checkRegexp = CommonUtils.createPattern(checks);
     }
 
     /**
      * Set the module id for filtering. Cannot be null.
      * @param moduleId the id
      */
     public void setModuleId(final String moduleId) {
         this.moduleId = moduleId;
     }
 
     /**
      * Sets the CSV values and ranges for line number filtering.
      * E.g. "1,7-15,18".
      * @param lines CSV values and ranges for line number filtering.
      */
     public void setLines(String lines) {
         linesCsv = lines;
         if (lines == null) {
             lineFilter = null;
         }
         else {
             lineFilter = new CsvFilter(lines);
         }
     }
 
     /**
      * Sets the CSV values and ranges for column number filtering.
      *  E.g. "1,7-15,18".
      * @param columns CSV values and ranges for column number filtering.
      */
     public void setColumns(String columns) {
         columnsCsv = columns;
         if (columns == null) {
             columnFilter = null;
         }
         else {
             columnFilter = new CsvFilter(columns);
         }
     }
 
     @Override
     public boolean accept(AuditEvent event) {
-        // reject if file or check module mismatch?
-        if (isFileNameAndModuleNotMatching(event)) {
-            return true;
-        }
-
-        // reject if no line/column matching
-        return (lineFilter != null || columnFilter != null)
-                && (lineFilter == null || !lineFilter.accept(event.getLine()))
-                && (columnFilter == null || !columnFilter.accept(event.getColumn()));
+        return isFileNameAndModuleNotMatching(event)
+                || isLineAndColumnMatch(event);
     }
 
     /**
      * Is matching by file name and Check name.
      * @param event event
      * @return true is matching
      */
     private boolean isFileNameAndModuleNotMatching(AuditEvent event) {
         return event.getFileName() == null
                 || !fileRegexp.matcher(event.getFileName()).find()
                 || event.getLocalizedMessage() == null
                 || moduleId != null && !moduleId.equals(event.getModuleId())
                 || checkRegexp != null && !checkRegexp.matcher(event.getSourceName()).find();
     }
 
+    /**
+     * Whether line and column match.
+     * @param event event to process.
+     * @return true if line and column match.
+     */
+    private boolean isLineAndColumnMatch(AuditEvent event) {
+        return (lineFilter != null || columnFilter != null)
+                && (lineFilter == null || !lineFilter.accept(event.getLine()))
+                && (columnFilter == null || !columnFilter.accept(event.getColumn()));
+    }
+
     @Override
     public int hashCode() {
         return Objects.hash(filePattern, checkPattern, moduleId, linesCsv, columnsCsv);
     }
 
     @Override
     public boolean equals(Object other) {
         if (this == other) {
             return true;
         }
         if (other == null || getClass() != other.getClass()) {
             return false;
         }
         final SuppressElement suppressElement = (SuppressElement) other;
         return Objects.equals(filePattern, suppressElement.filePattern)
                 && Objects.equals(checkPattern, suppressElement.checkPattern)
                 && Objects.equals(moduleId, suppressElement.moduleId)
                 && Objects.equals(linesCsv, suppressElement.linesCsv)
                 && Objects.equals(columnsCsv, suppressElement.columnsCsv);
     }
 }
