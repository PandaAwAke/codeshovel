diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java
index 24f118498..6f1a672d0 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java
@@ -132,100 +132,110 @@ public abstract class Check extends AbstractViolationReporter
     /**
      * Destroy the check. It is being retired from service.
      */
     public void destroy()
     {
     }
 
     /**
      * Called before the starting to process a tree. Ideal place to initialise
      * information that is to be collected whilst processing a tree.
      * @param aRootAST the root of the tree
      */
     public void beginTree(DetailAST aRootAST)
     {
     }
 
     /**
      * Called after finished processing a tree. Ideal place to report on
      * information collected whilst processing a tree.
      * @param aRootAST the root of the tree
      */
     public void finishTree(DetailAST aRootAST)
     {
     }
 
     /**
      * Called to process a token.
      * @param aAST the token to process
      */
     public void visitToken(DetailAST aAST)
     {
     }
 
     /**
      * Called after all the child nodes have been process.
      * @param aAST the token leaving
      */
     public void leaveToken(DetailAST aAST)
     {
     }
 
     /**
      * Returns the lines associated with the tree.
      * @return the file contents
      */
     public final String[] getLines()
     {
         return getFileContents().getLines();
     }
 
+    /**
+     * Returns the line associated with the tree.
+     * @param aIndex index of the line
+     * @return the line from the file contents
+     */
+    public final String getLine(int aIndex)
+    {
+        return getFileContents().getLine(aIndex);
+    }
+
     /**
      * Set the file contents associated with the tree.
      * @param aContents the manager
      */
     public final void setFileContents(FileContents aContents)
     {
         mFileContents = aContents;
     }
 
     /**
      * Returns the file contents associated with the tree.
      * @return the file contents
      */
     public final FileContents getFileContents()
     {
         return mFileContents;
     }
 
     /**
      * Set the class loader associated with the tree.
      * @param aLoader the class loader
      */
     public final void setClassLoader(ClassLoader aLoader)
     {
         mLoader = aLoader;
     }
 
     /**
      * Returns the class loader associated with the tree.
      * @return the class loader
      */
     public final ClassLoader getClassLoader()
     {
         return mLoader;
     }
 
     /** @return the tab width to report errors with */
     protected final int getTabWidth()
     {
         return mTabWidth;
     }
 
     /**
      * Set the tab width to report errors with.
      * @param aTabWidth an <code>int</code> value
      */
     public final void setTabWidth(int aTabWidth)
     {
         mTabWidth = aTabWidth;
     }
