diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheck.java
index 03a1ff39e..1d6025bc8 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheck.java
@@ -26,56 +26,56 @@ import com.puppycrawl.tools.checkstyle.api.JavadocTokenTypes;
  * Checks that the at-clause tag is followed by description .
  * Default configuration that will check <code>@param</code>, <code>@return</code>,
  * <code>@throws</code>, <code>@deprecated</code> to:
  * <pre>
  * &lt;module name=&quot;NonEmptyAtclauseDescription&quot;/&gt;
  * </pre>
  * <p>
  * To check non-empty at-clause description for tags <code>@throws</code>,
  * <code>@deprecated</code>, use following configuration:
  * </p>
  * <pre>
  * &lt;module name=&quot;NonEmptyAtclauseDescription&quot;&gt;
  *     &lt;property name=&quot;target&quot; value=&quot;JAVADOC_TAG_THROWS_LITERAL,
  *     JAVADOC_TAG_DEPRECATED_LITERAL&quot;/&gt;
  * &lt;/module&gt;
  * </pre>
  *
  * @author maxvetrenko
  *
  */
 public class NonEmptyAtclauseDescriptionCheck extends AbstractJavadocCheck {
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String MSG_KEY = "non.empty.atclause";
 
     @Override
     public int[] getDefaultJavadocTokens() {
         return new int[] {
             JavadocTokenTypes.PARAM_LITERAL,
             JavadocTokenTypes.RETURN_LITERAL,
             JavadocTokenTypes.THROWS_LITERAL,
             JavadocTokenTypes.DEPRECATED_LITERAL,
         };
     }
 
     @Override
     public void visitJavadocToken(DetailNode ast) {
         if (isEmptyTag(ast.getParent())) {
             log(ast.getLineNumber(), MSG_KEY, ast.getText());
         }
     }
 
     /**
      * Tests if at-clause tag is empty.
      * @param tagNode at-clause tag.
      * @return true, if at-clause tag is empty.
      */
-    private boolean isEmptyTag(DetailNode tagNode) {
+    private static boolean isEmptyTag(DetailNode tagNode) {
         final DetailNode tagDescription =
                 JavadocUtils.findFirstToken(tagNode, JavadocTokenTypes.DESCRIPTION);
         return tagDescription == null;
     }
 }
