diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java b/src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java
index 89c9a4fc5..7f51ace90 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java
@@ -97,70 +97,70 @@ public class TreeTableModelAdapter extends AbstractTableModel {
     @Override
     public boolean isCellEditable(int row, int column) {
         return treeTableModel.isCellEditable(column);
     }
 
     /**
      * Finds node for a given row.
      * @param row Row for which to find a related node.
      * @return Node for a given row.
      */
     private Object nodeForRow(int row) {
         final TreePath treePath = tree.getPathForRow(row);
         return treePath.getLastPathComponent();
     }
 
     /**
      * Invokes fireTableDataChanged after all the pending events have been
      * processed. SwingUtilities.invokeLater is used to handle this.
      */
     private void delayedFireTableDataChanged() {
         SwingUtilities.invokeLater(new Runnable() {
             @Override
             public void run() {
                 fireTableDataChanged();
             }
         });
     }
 
     /**
      * TreeExpansionListener that can update the table when tree changes.
      */
     private class UpdatingTreeExpansionListener implements TreeExpansionListener {
         // Don't use fireTableRowsInserted() here; the selection model
         // would get updated twice.
         @Override
         public void treeExpanded(TreeExpansionEvent event) {
             fireTableDataChanged();
         }
 
         @Override
         public void treeCollapsed(TreeExpansionEvent event) {
             fireTableDataChanged();
         }
     }
 
     /**
      * TreeModelListener that can update the table when tree changes.
      */
     private class UpdatingTreeModelListener implements TreeModelListener {
         @Override
-        public void treeNodesChanged(TreeModelEvent e) {
+        public void treeNodesChanged(TreeModelEvent event) {
             delayedFireTableDataChanged();
         }
 
         @Override
-        public void treeNodesInserted(TreeModelEvent e) {
+        public void treeNodesInserted(TreeModelEvent event) {
             delayedFireTableDataChanged();
         }
 
         @Override
-        public void treeNodesRemoved(TreeModelEvent e) {
+        public void treeNodesRemoved(TreeModelEvent event) {
             delayedFireTableDataChanged();
         }
 
         @Override
-        public void treeStructureChanged(TreeModelEvent e) {
+        public void treeStructureChanged(TreeModelEvent event) {
             delayedFireTableDataChanged();
         }
     }
 }
