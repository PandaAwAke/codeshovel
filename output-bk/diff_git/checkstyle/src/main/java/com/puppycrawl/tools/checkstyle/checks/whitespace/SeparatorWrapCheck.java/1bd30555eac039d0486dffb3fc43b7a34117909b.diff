diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheck.java
index 5eed6b8c3..92e13d2d6 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheck.java
@@ -95,61 +95,61 @@ public class SeparatorWrapCheck
 
     /**
      * Sets the comma wrap option to end of the line.
      */
     public SeparatorWrapCheck()
     {
         super(WrapOption.EOL, WrapOption.class);
     }
 
     @Override
     public int[] getDefaultTokens()
     {
         return new int[] {
             TokenTypes.DOT,
             TokenTypes.COMMA,
         };
     }
 
     @Override
     public int[] getAcceptableTokens()
     {
         return new int[] {
             TokenTypes.DOT,
             TokenTypes.COMMA,
             TokenTypes.SEMI,
             TokenTypes.ELLIPSIS,
             TokenTypes.AT,
             TokenTypes.LPAREN,
             TokenTypes.RPAREN,
             TokenTypes.ARRAY_DECLARATOR,
             TokenTypes.RBRACK,
         };
     }
 
     @Override
     public void visitToken(DetailAST ast)
     {
         // TODO: It is a copy/paste from OperatorWrapCheck.
         //It should be fixed in another issue
         final String text = ast.getText();
         final int colNo = ast.getColumnNo();
         final int lineNo = ast.getLineNo();
         final String currentLine = getLines()[lineNo - 1];
         final String substringAfterToken =
                 currentLine.substring(colNo + text.length()).trim();
         final String substringBeforeToken =
                 currentLine.substring(0, colNo).trim();
         final WrapOption wSp = getAbstractOption();
 
         if (wSp == WrapOption.EOL
-                && (substringBeforeToken.length() == 0))
+                && substringBeforeToken.length() == 0)
         {
             log(lineNo, colNo, LINE_PREVIOUS, text);
         }
         else if (wSp == WrapOption.NL
                  && substringAfterToken.length() == 0)
         {
             log(lineNo, colNo, LINE_NEW, text);
         }
     }
 }
