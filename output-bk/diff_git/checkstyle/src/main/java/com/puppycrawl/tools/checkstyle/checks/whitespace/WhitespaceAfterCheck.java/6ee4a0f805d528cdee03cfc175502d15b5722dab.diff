diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java
index 4a53384c6..0f2e9cabb 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java
@@ -76,57 +76,57 @@ public class WhitespaceAfterCheck
 
     @Override
     public int[] getAcceptableTokens() {
         return new int[] {
             TokenTypes.COMMA,
             TokenTypes.SEMI,
             TokenTypes.TYPECAST,
         };
     }
 
     @Override
     public int[] getRequiredTokens() {
         return ArrayUtils.EMPTY_INT_ARRAY;
     }
 
     @Override
     public void visitToken(DetailAST ast) {
         final String line = getLine(ast.getLineNo() - 1);
         if (ast.getType() == TokenTypes.TYPECAST) {
             final DetailAST targetAST = ast.findFirstToken(TokenTypes.RPAREN);
             if (!isFollowedByWhitespace(targetAST, line)) {
                 log(targetAST.getLineNo(),
                     targetAST.getColumnNo() + targetAST.getText().length(),
                     WS_TYPECAST);
             }
         }
         else {
             if (!isFollowedByWhitespace(ast, line)) {
                 final Object[] message = {ast.getText()};
                 log(ast.getLineNo(),
                     ast.getColumnNo() + ast.getText().length(),
                     WS_NOT_FOLLOWED,
                     message);
             }
         }
     }
 
     /**
      * Checks whether token is followed by a whitespace.
      * @param targetAST Ast token.
      * @param line The line associated with the ast token.
      * @return true if ast token is followed by a whitespace.
      */
     private static boolean isFollowedByWhitespace(DetailAST targetAST, String line) {
         final int after =
             targetAST.getColumnNo() + targetAST.getText().length();
         boolean followedByWhitespace = true;
 
         if (after < line.length()) {
             final char charAfter = line.charAt(after);
-            followedByWhitespace = Character.isWhitespace(charAfter)
-                || targetAST.getType() == TokenTypes.SEMI
-                    && (charAfter == ';' || charAfter == ')');
+            followedByWhitespace = charAfter == ';'
+                || charAfter == ')'
+                || Character.isWhitespace(charAfter);
         }
         return followedByWhitespace;
     }
 }
