diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java
index aa12f7700..b3ee84559 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java
@@ -11,69 +11,69 @@
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // Lesser General Public License for more details.
 //
 // You should have received a copy of the GNU Lesser General Public
 // License along with this library; if not, write to the Free Software
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 package com.puppycrawl.tools.checkstyle.checks.sizes;
 
 import com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck;
 import java.io.File;
 import java.util.List;
 
 /**
  * <p>
  * Checks for long source files.
  * </p>
  * <p>
  * Rationale: If a source file becomes very long it is hard to understand.
  * Therefore long classes should usually be refactored into several
  * individual classes that focus on a specific task.
  * </p>
  * <p>
  * The default maximum file length is 2000 lines. To change the maximum
  * number of lines, set property max.
  * </p>
  * <p>
  * An example of how to configure the check is:
  * </p>
  * <pre>
  * &lt;module name="FileLength"/&gt;
  * </pre>
  * <p>
  * An example of how to configure the check so that it accepts files with at
  * most 1500 lines is:
  * </p>
  * <pre>
  * &lt;module name="FileLength"&gt;
  *    &lt;property name="max" value="1500"/&gt;
  * &lt;/module&gt;
  * </pre>
  * @author Lars KÃ¼hne
  */
 public class FileLengthCheck extends AbstractFileSetCheck
 {
     /** default maximum number of lines */
     private static final int DEFAULT_MAX_LINES = 2000;
 
     /** the maximum number of lines */
-    private int mMaxFileLength = DEFAULT_MAX_LINES;
+    private int maxFileLength = DEFAULT_MAX_LINES;
 
     @Override
-    protected void processFiltered(File aFile, List<String> aLines)
+    protected void processFiltered(File file, List<String> lines)
     {
-        if (aLines.size() > mMaxFileLength) {
-            log(1, "maxLen.file", aLines.size(), mMaxFileLength);
+        if (lines.size() > maxFileLength) {
+            log(1, "maxLen.file", lines.size(), maxFileLength);
         }
     }
 
     /**
-     * @param aLength the maximum length of a Java source file
+     * @param length the maximum length of a Java source file
      */
-    public void setMax(int aLength)
+    public void setMax(int length)
     {
-        mMaxFileLength = aLength;
+        maxFileLength = length;
     }
 
 }
