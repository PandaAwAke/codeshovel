diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationCheck.java
index 7ba420c84..87a94eb28 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationCheck.java
@@ -24,62 +24,62 @@ import com.puppycrawl.tools.checkstyle.api.DetailAST;
 import com.puppycrawl.tools.checkstyle.api.TokenTypes;
 
 /**
  * This check makes sure that all package annotations are in the
  * package-info.java file.
  *
  * <p>
  * According to the Java JLS 3rd ed.
  * </p>
  *
  * <p>
  * The JLS does not enforce the placement of package annotations.
  * This placement may vary based on implementation.  The JLS
  * does highly recommend that all package annotations are
  * placed in the package-info.java file.
  *
  * See <a
  * href="http://java.sun.com/docs/books/jls/third_edition/html/j3TOC.html">
  * Java Language specification, sections 7.4.1.1</a>.
  * </p>
  * @author Travis Schneeberger
  */
 public class PackageAnnotationCheck extends Check
 {
 
     /** {@inheritDoc} */
     @Override
     public int[] getDefaultTokens()
     {
         return this.getRequiredTokens();
     }
 
     /** {@inheritDoc} */
     @Override
     public int[] getRequiredTokens()
     {
         return new int[] {
             TokenTypes.PACKAGE_DEF,
         };
     }
 
     /** {@inheritDoc} */
     @Override
     public int[] getAcceptableTokens()
     {
         return this.getRequiredTokens();
     }
 
     /** {@inheritDoc} */
     @Override
-    public void visitToken(final DetailAST aAST)
+    public void visitToken(final DetailAST ast)
     {
         final boolean containsAnnotation =
-            AnnotationUtility.containsAnnotation(aAST);
+            AnnotationUtility.containsAnnotation(ast);
         final boolean inPackageInfo =
             this.getFileContents().inPackageInfo();
 
         if (containsAnnotation && !inPackageInfo) {
-            this.log(aAST.getLine(), "annotation.package.location");
+            this.log(ast.getLine(), "annotation.package.location");
         }
     }
 }
