diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java
index ea12228a9..8c3f00e6d 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java
@@ -75,66 +75,65 @@ public class SlistHandler extends BlockParentHandler {
         //        break;
         //     }
         //  }
         //  ... the case SLIST is followed by a user-created SLIST and
         //  preceded by a switch
 
         // if our parent is a block handler we want to be transparent
         if (getParent() instanceof BlockParentHandler
                 && !(getParent() instanceof SlistHandler)
             || child instanceof SlistHandler
                 && getParent() instanceof CaseHandler) {
             return getParent().getSuggestedChildIndent(child);
         }
         return super.getSuggestedChildIndent(child);
     }
 
     @Override
     protected DetailAST getListChild() {
         return getMainAst();
     }
 
     @Override
     protected DetailAST getLCurly() {
         return getMainAst();
     }
 
     @Override
     protected DetailAST getRCurly() {
         return getMainAst().findFirstToken(TokenTypes.RCURLY);
     }
 
     @Override
     protected DetailAST getTopLevelAst() {
         return null;
     }
 
     /**
      * Determine if the expression we are handling has a block parent.
      *
      * @return true if it does, false otherwise
      */
     private boolean hasBlockParent() {
         final int parentType = getMainAst().getParent().getType();
         return Arrays.binarySearch(PARENT_TOKEN_TYPES, parentType) >= 0;
     }
 
     @Override
     public void checkIndentation() {
         // only need to check this if parent is not
         // an if, else, while, do, ctor, method
-        if (hasBlockParent() || isSameLineCaseGroup()) {
-            return;
+        if (!hasBlockParent() && !isSameLineCaseGroup()) {
+            super.checkIndentation();
         }
-        super.checkIndentation();
     }
 
     /**
      * Checks if SLIST node is placed at the same line as CASE_GROUP node.
      * @return true, if SLIST node is places at the same line as CASE_GROUP node.
      */
     private boolean isSameLineCaseGroup() {
         final DetailAST parentNode = getMainAst().getParent();
         return parentNode.getType() == TokenTypes.CASE_GROUP
             && getMainAst().getLineNo() == parentNode.getLineNo();
     }
 }
