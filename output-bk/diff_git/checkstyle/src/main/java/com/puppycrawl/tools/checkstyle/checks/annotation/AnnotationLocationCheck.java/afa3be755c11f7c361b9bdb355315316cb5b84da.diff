diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java
index 75996aa01..2ce62f9bf 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java
@@ -108,101 +108,101 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;
  *    value=&quot;true&quot;/&gt;
  *    &lt;property name=&quot;allowSamelineParameterizedAnnotation&quot; value=&quot;false&quot;
  *    /&gt;
  * &lt;/module&gt;
  * </pre>
  *
  * @author maxvetrenko
  */
 public class AnnotationLocationCheck extends Check
 {
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String MSG_KEY_ANNOTATION_LOCATION_ALONE = "annotation.location.alone";
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String MSG_KEY_ANNOTATION_LOCATION = "annotation.location";
 
     /**
      * Some javadoc.
      */
     private boolean allowSamelineSingleParameterlessAnnotation = true;
 
     /**
      * Some javadoc.
      */
     private boolean allowSamelineParameterizedAnnotation;
 
     /**
      * Some javadoc.
      */
     private boolean allowSamelineMultipleAnnotations;
 
     /**
      * Some javadoc.
      * @param allow Some javadoc.
      */
     public final void setAllowSamelineSingleParameterlessAnnotation(boolean allow)
     {
         allowSamelineSingleParameterlessAnnotation = allow;
     }
 
     /**
      * Some javadoc.
      * @param allow Some javadoc.
      */
-    public final void setAllowSamelineParametrizedAnnotation(boolean allow)
+    public final void setAllowSamelineParameterizedAnnotation(boolean allow)
     {
         allowSamelineParameterizedAnnotation = allow;
     }
 
     /**
      * Some javadoc.
      * @param allow Some javadoc.
      */
     public final void setAllowSamelineMultipleAnnotations(boolean allow)
     {
         allowSamelineMultipleAnnotations = allow;
     }
 
     @Override
     public int[] getDefaultTokens()
     {
         return new int[] {
             TokenTypes.CLASS_DEF,
             TokenTypes.INTERFACE_DEF,
             TokenTypes.ENUM_DEF,
             TokenTypes.METHOD_DEF,
             TokenTypes.CTOR_DEF,
             TokenTypes.VARIABLE_DEF,
         };
     }
 
     @Override
     public int[] getAcceptableTokens()
     {
         return new int[] {
             TokenTypes.CLASS_DEF,
             TokenTypes.INTERFACE_DEF,
             TokenTypes.ENUM_DEF,
             TokenTypes.METHOD_DEF,
             TokenTypes.CTOR_DEF,
             TokenTypes.VARIABLE_DEF,
             TokenTypes.PARAMETER_DEF,
             TokenTypes.ANNOTATION_DEF,
             TokenTypes.TYPECAST,
             TokenTypes.LITERAL_THROWS,
             TokenTypes.IMPLEMENTS_CLAUSE,
             TokenTypes.TYPE_ARGUMENT,
             TokenTypes.LITERAL_NEW,
             TokenTypes.DOT,
             TokenTypes.ANNOTATION_FIELD_DEF,
         };
     }
 
     @Override
     public void visitToken(DetailAST ast)
