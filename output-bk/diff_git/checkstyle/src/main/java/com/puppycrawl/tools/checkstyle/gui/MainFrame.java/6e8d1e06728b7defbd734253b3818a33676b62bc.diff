diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/gui/MainFrame.java b/src/main/java/com/puppycrawl/tools/checkstyle/gui/MainFrame.java
index 509d03727..80f66aece 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/gui/MainFrame.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/gui/MainFrame.java
@@ -15,116 +15,116 @@
 // You should have received a copy of the GNU Lesser General Public
 // License along with this library; if not, write to the Free Software
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 
 package com.puppycrawl.tools.checkstyle.gui;
 
 import java.awt.BorderLayout;
 import java.awt.GridLayout;
 import java.awt.event.ActionEvent;
 import java.awt.event.KeyEvent;
 import java.io.File;
 
 import javax.swing.AbstractAction;
 import javax.swing.BorderFactory;
 import javax.swing.JButton;
 import javax.swing.JComboBox;
 import javax.swing.JFileChooser;
 import javax.swing.JFrame;
 import javax.swing.JLabel;
 import javax.swing.JOptionPane;
 import javax.swing.JPanel;
 import javax.swing.JScrollPane;
 import javax.swing.JSplitPane;
 import javax.swing.JTextArea;
 import javax.swing.SwingConstants;
 import javax.swing.filechooser.FileFilter;
 
 import com.puppycrawl.tools.checkstyle.api.CheckstyleException;
 import com.puppycrawl.tools.checkstyle.gui.MainFrameModel.ParseMode;
 
 /**
  * Displays information about a parse tree.
  * The user can change the file that is parsed and displayed
  * using a JFileChooser.
  *
  * @author Lars KÃ¼hne
  * @author Vladislav Lisetskiy
  */
 public class MainFrame extends JFrame {
 
     private static final long serialVersionUID = 7970053543351871890L;
 
     /** Checkstyle frame model. */
     private final transient MainFrameModel model = new MainFrameModel();
     /** Reload action. */
     private final ReloadAction reloadAction = new ReloadAction();
     /** Code text area. */
     private JTextArea textArea;
     /** Tree table. */
-    private JTreeTable treeTable;
+    private TreeTable treeTable;
 
     /** Create a new MainFrame. */
     public MainFrame() {
         createContent();
     }
 
     /** Create content of this MainFrame. */
     private void createContent() {
         setLayout(new BorderLayout());
 
         textArea = new JTextArea(20, 15);
         textArea.setEditable(false);
         final JScrollPane textAreaScrollPane = new JScrollPane(textArea);
 
-        treeTable = new JTreeTable(model.getParseTreeTableModel());
+        treeTable = new TreeTable(model.getParseTreeTableModel());
         treeTable.setEditor(textArea);
         treeTable.setLinePositionMap(model.getLinesToPosition());
         final JScrollPane treeTableScrollPane = new JScrollPane(treeTable);
 
         final JSplitPane splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT, treeTableScrollPane,
             textAreaScrollPane);
         add(splitPane, BorderLayout.CENTER);
         splitPane.setResizeWeight(0.7);
 
         add(createButtonsPanel(), BorderLayout.PAGE_END);
 
         pack();
     }
 
     /**
      * Create buttons panel.
      * @return buttons panel.
      */
     private JPanel createButtonsPanel() {
         final JButton openFileButton = new JButton(new FileSelectionAction());
         openFileButton.setMnemonic(KeyEvent.VK_S);
         openFileButton.setText("Open File");
 
         reloadAction.setEnabled(false);
         final JButton reloadFileButton = new JButton(reloadAction);
         reloadFileButton.setMnemonic(KeyEvent.VK_R);
         reloadFileButton.setText("Reload File");
 
         final JComboBox<ParseMode> modesCombobox = new JComboBox<>(ParseMode.values());
         modesCombobox.setSelectedIndex(0);
         modesCombobox.addActionListener(e -> {
             model.setParseMode((ParseMode) modesCombobox.getSelectedItem());
             reloadAction.actionPerformed(null);
         });
 
         final JLabel modesLabel = new JLabel("Modes:", SwingConstants.RIGHT);
         final int leftIndentation = 10;
         modesLabel.setBorder(BorderFactory.createEmptyBorder(0, leftIndentation, 0, 0));
 
         final JPanel buttonPanel = new JPanel();
         buttonPanel.setLayout(new GridLayout(1, 2));
         buttonPanel.add(openFileButton);
         buttonPanel.add(reloadFileButton);
 
         final JPanel modesPanel = new JPanel();
         modesPanel.add(modesLabel);
         modesPanel.add(modesCombobox);
 
         final JPanel mainPanel = new JPanel();
         mainPanel.setLayout(new BorderLayout());
