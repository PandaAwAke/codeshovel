diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java b/src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java
index 03a77600e..2404006f8 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java
@@ -18,60 +18,60 @@
 ////////////////////////////////////////////////////////////////////////////////
 
 package com.puppycrawl.tools.checkstyle.gui;
 
 import java.awt.Color;
 import java.util.List;
 
 import javax.swing.JTextArea;
 
 import com.google.common.collect.ImmutableList;
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
 
 /**
  * Helper class to select a code.
  */
 public class CodeSelector {
     /** DetailAST node*/
     private final DetailAST ast;
     /** editor */
     private final JTextArea editor;
     /** mapping */
     private final List<Integer> lines2position;
 
     /**
      * Constructor.
      * @param ast ast node.
      * @param editor text area editor.
      * @param lines2position list to map lines.
      */
     public CodeSelector(final DetailAST ast, final JTextArea editor,
                         final List<Integer> lines2position) {
         this.ast = ast;
         this.editor = editor;
         this.lines2position = ImmutableList.copyOf(lines2position);
     }
 
     /**
      * Set a selection position from AST line and Column.
      */
     public void select() {
         final int start = lines2position.get(ast.getLineNo()) + ast.getColumnNo();
         final int end = findLastPosition(ast);
 
         editor.setSelectedTextColor(Color.blue);
         editor.requestFocusInWindow();
         editor.setSelectionStart(start);
         editor.setSelectionEnd(end);
         editor.transferFocusBackward();
     }
 
-    private int findLastPosition(final DetailAST ast) {
-        if (ast.getChildCount() == 0) {
-            return lines2position.get(ast.getLineNo()) + ast.getColumnNo()
-                + ast.getText().length();
+    private int findLastPosition(final DetailAST astNode) {
+        if (astNode.getChildCount() == 0) {
+            return lines2position.get(astNode.getLineNo()) + astNode.getColumnNo()
+                + astNode.getText().length();
         }
         else {
-            return findLastPosition(ast.getLastChild());
+            return findLastPosition(astNode.getLastChild());
         }
     }
 }
