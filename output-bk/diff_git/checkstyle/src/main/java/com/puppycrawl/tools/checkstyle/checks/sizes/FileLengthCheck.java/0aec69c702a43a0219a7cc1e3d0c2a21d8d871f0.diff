diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java
index 2518acc30..45a9be6ec 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java
@@ -19,67 +19,67 @@
 
 package com.puppycrawl.tools.checkstyle.checks.sizes;
 
 import java.io.File;
 import java.util.List;
 
 import com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck;
 
 /**
  * <p>
  * Checks for long source files.
  * </p>
  * <p>
  * Rationale: If a source file becomes very long it is hard to understand.
  * Therefore long classes should usually be refactored into several
  * individual classes that focus on a specific task.
  * </p>
  * <p>
  * The default maximum file length is 2000 lines. To change the maximum
  * number of lines, set property max.
  * </p>
  * <p>
  * An example of how to configure the check is:
  * </p>
  * <pre>
  * &lt;module name="FileLength"/&gt;
  * </pre>
  * <p>
  * An example of how to configure the check so that it accepts files with at
  * most 1500 lines is:
  * </p>
  * <pre>
  * &lt;module name="FileLength"&gt;
  *    &lt;property name="max" value="1500"/&gt;
  * &lt;/module&gt;
  * </pre>
  * @author Lars KÃ¼hne
  */
 public class FileLengthCheck extends AbstractFileSetCheck {
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String MSG_KEY = "maxLen.file";
 
     /** Default maximum number of lines */
     private static final int DEFAULT_MAX_LINES = 2000;
 
     /** The maximum number of lines */
-    private int maxFileLength = DEFAULT_MAX_LINES;
+    private int max = DEFAULT_MAX_LINES;
 
     @Override
     protected void processFiltered(File file, List<String> lines) {
-        if (lines.size() > maxFileLength) {
-            log(1, MSG_KEY, lines.size(), maxFileLength);
+        if (lines.size() > max) {
+            log(1, MSG_KEY, lines.size(), max);
         }
     }
 
     /**
      * @param length the maximum length of a Java source file
      */
     public void setMax(int length) {
-        maxFileLength = length;
+        max = length;
     }
 
 }
