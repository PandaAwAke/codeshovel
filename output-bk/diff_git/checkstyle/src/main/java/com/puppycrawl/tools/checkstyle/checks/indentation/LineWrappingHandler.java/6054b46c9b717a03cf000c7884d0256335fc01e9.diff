diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java
index 1b891aa04..f8af0a778 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java
@@ -12,106 +12,105 @@
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // Lesser General Public License for more details.
 //
 // You should have received a copy of the GNU Lesser General Public
 // License along with this library; if not, write to the Free Software
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 
 package com.puppycrawl.tools.checkstyle.checks.indentation;
 
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.NavigableMap;
 import java.util.TreeMap;
 
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
 import com.puppycrawl.tools.checkstyle.api.TokenTypes;
 import com.puppycrawl.tools.checkstyle.utils.CommonUtils;
 
 /**
  * This class checks line-wrapping into definitions and expressions. The
  * line-wrapping indentation should be not less then value of the
  * lineWrappingIndentation parameter.
  *
  * @author maxvetrenko
  * @author <a href="mailto:piotr.listkiewicz@gmail.com">liscju</a>
  */
 public class LineWrappingHandler {
 
     /**
      * Enum to be used for test if first line's indentation should be checked or not.
      */
     public enum LineWrappingOptions {
         /**
          * First line's indentation should NOT be checked.
          */
         IGNORE_FIRST_LINE,
         /**
          * First line's indentation should be checked.
          */
         NONE;
 
         /**
          * Builds enum value from boolean.
          * @param val value.
          * @return enum instance.
          *
          * @noinspection BooleanParameter
          */
         public static LineWrappingOptions ofBoolean(boolean val) {
+            LineWrappingOptions option = NONE;
             if (val) {
-                return IGNORE_FIRST_LINE;
-            }
-            else {
-                return NONE;
+                option = IGNORE_FIRST_LINE;
             }
+            return option;
         }
     }
 
     /**
      * The current instance of {@code IndentationCheck} class using this
      * handler. This field used to get access to private fields of
      * IndentationCheck instance.
      */
     private final IndentationCheck indentCheck;
 
     /**
      * Sets values of class field, finds last node and calculates indentation level.
      *
      * @param instance
      *            instance of IndentationCheck.
      */
     public LineWrappingHandler(IndentationCheck instance) {
         indentCheck = instance;
     }
 
     /**
      * Checks line wrapping into expressions and definitions using property
      * 'lineWrappingIndentation'.
      *
      * @param firstNode First node to start examining.
      * @param lastNode Last node to examine inclusively.
      */
     public void checkIndentation(DetailAST firstNode, DetailAST lastNode) {
         checkIndentation(firstNode, lastNode, indentCheck.getLineWrappingIndentation());
     }
 
     /**
      * Checks line wrapping into expressions and definitions.
      *
      * @param firstNode First node to start examining.
      * @param lastNode Last node to examine inclusively.
      * @param indentLevel Indentation all wrapped lines should use.
      */
     private void checkIndentation(DetailAST firstNode, DetailAST lastNode, int indentLevel) {
         checkIndentation(firstNode, lastNode, indentLevel,
                 -1, LineWrappingOptions.IGNORE_FIRST_LINE);
     }
 
     /**
      * Checks line wrapping into expressions and definitions.
      *
      * @param firstNode First node to start examining.
      * @param lastNode Last node to examine inclusively.
      * @param indentLevel Indentation all wrapped lines should use.
      * @param startIndent Indentation first line before wrapped lines used.
