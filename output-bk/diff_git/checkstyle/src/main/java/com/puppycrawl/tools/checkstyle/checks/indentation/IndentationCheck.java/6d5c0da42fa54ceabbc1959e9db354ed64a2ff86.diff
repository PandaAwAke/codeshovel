diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java
index c0b57b4d0..b39647f78 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java
@@ -152,119 +152,119 @@ public class IndentationCheck extends Check {
      * Adjusts brace indentation (positive offset).
      *
      * @param adjustmentAmount   the brace offset
      */
     public void setBraceAdjustment(int adjustmentAmount) {
         braceAdjustment = adjustmentAmount;
     }
 
     /**
      * Get the brace adjustment amount.
      *
      * @return the positive offset to adjust braces
      */
     public int getBraceAdjustment() {
         return braceAdjustment;
     }
 
     /**
      * Set the case indentation level.
      *
      * @param amount   the case indentation level
      */
     public void setCaseIndent(int amount) {
         caseIndentationAmount = amount;
     }
 
     /**
      * Get the case indentation level.
      *
      * @return the case indentation level
      */
     public int getCaseIndent() {
         return caseIndentationAmount;
     }
 
     /**
      * Set the throws indentation level.
      *
      * @param throwsIndent the throws indentation level
      */
     public void setThrowsIndent(int throwsIndent) {
         throwsIndentationAmount = throwsIndent;
     }
 
     /**
      * Get the throws indentation level.
      *
      * @return the throws indentation level
      */
     public int getThrowsIndent() {
-        return this.throwsIndentationAmount;
+        return throwsIndentationAmount;
     }
 
     /**
      * Set the array initialisation indentation level.
      *
      * @param arrayInitIndent the array initialisation indentation level
      */
     public void setArrayInitIndent(int arrayInitIndent) {
         arrayInitIndentationAmount = arrayInitIndent;
     }
 
     /**
      * Get the line-wrapping indentation level.
      *
      * @return the initialisation indentation level
      */
     public int getArrayInitIndent() {
-        return this.arrayInitIndentationAmount;
+        return arrayInitIndentationAmount;
     }
 
     /**
      * Get the array line-wrapping indentation level.
      *
      * @return the line-wrapping indentation level
      */
     public int getLineWrappingIndentation() {
         return lineWrappingIndentation;
     }
 
     /**
      * Set the line-wrapping indentation level.
      *
      * @param lineWrappingIndentation the line-wrapping indentation level
      */
     public void setLineWrappingIndentation(int lineWrappingIndentation) {
         this.lineWrappingIndentation = lineWrappingIndentation;
     }
 
     /**
      * Log an error message.
      *
      * @param line the line number where the error was found
      * @param key the message that describes the error
      * @param args the details of the message
      *
      * @see java.text.MessageFormat
      */
     public void indentationLog(int line, String key, Object... args) {
         log(line, key, args);
     }
 
     /**
      * Get the width of a tab.
      *
      * @return the width of a tab
      */
     public int getIndentationTabWidth() {
         return getTabWidth();
     }
 
     @Override
     public int[] getDefaultTokens() {
         return handlerFactory.getHandledTypes();
     }
 
     @Override
     public void beginTree(DetailAST ast) {
         handlerFactory.clearCreatedHandlers();
