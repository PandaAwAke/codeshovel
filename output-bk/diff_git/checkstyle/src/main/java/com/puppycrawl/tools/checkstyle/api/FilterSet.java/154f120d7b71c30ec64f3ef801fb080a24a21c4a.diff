diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/FilterSet.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/FilterSet.java
index 4070b59d4..4ce1815c5 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/FilterSet.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/FilterSet.java
@@ -36,63 +36,65 @@ public class FilterSet
     private final Set<Filter> filters = new HashSet<>();
 
     /**
      * Adds a Filter to the set.
      * @param filter the Filter to add.
      */
     public void addFilter(Filter filter) {
         filters.add(filter);
     }
 
     /**
      * Removes filter.
      * @param filter filter to remove.
      */
     public void removeFilter(Filter filter) {
         filters.remove(filter);
     }
 
     /**
      * Returns the Filters of the filter set.
      * @return the Filters of the filter set.
      */
     public Set<Filter> getFilters() {
         return Collections.unmodifiableSet(filters);
     }
 
     @Override
     public String toString() {
         return filters.toString();
     }
 
     @Override
     public boolean equals(Object other) {
         if (this == other) {
             return true;
         }
         if (other == null || getClass() != other.getClass()) {
             return false;
         }
         final FilterSet filterSet = (FilterSet) other;
         return Objects.equals(filters, filterSet.filters);
     }
 
     @Override
     public int hashCode() {
         return Objects.hash(filters);
     }
 
     @Override
     public boolean accept(AuditEvent event) {
+        boolean result = true;
         for (Filter filter : filters) {
             if (!filter.accept(event)) {
-                return false;
+                result = false;
+                break;
             }
         }
-        return true;
+        return result;
     }
 
     /** Clears the FilterSet. */
     public void clear() {
         filters.clear();
     }
 }
