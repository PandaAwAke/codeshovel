diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java
index 65b49f7d2..e86e2b075 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java
@@ -42,62 +42,62 @@ for (Iterator foo = very.long.line.iterator();
  * </p>
  * <pre>
  * &lt;module name="EmptyForIteratorPad"/&gt;
  * </pre>
  *
  * @author Rick Giles
  */
 public class EmptyForIteratorPadCheck
     extends AbstractOptionCheck<PadOption> {
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String WS_FOLLOWED = "ws.followed";
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String WS_NOT_FOLLOWED = "ws.notFollowed";
 
     /**
      * Sets the paren pad otion to nospace.
      */
     public EmptyForIteratorPadCheck() {
         super(PadOption.NOSPACE, PadOption.class);
     }
 
     @Override
     public int[] getDefaultTokens() {
         return new int[] {TokenTypes.FOR_ITERATOR,
         };
     }
 
     @Override
     public int[] getAcceptableTokens() {
         return new int[] {TokenTypes.FOR_ITERATOR,
         };
     }
 
     @Override
     public void visitToken(DetailAST ast) {
         if (ast.getChildCount() == 0) {
             //empty for iterator. test pad after semi.
             final DetailAST semi = ast.getPreviousSibling();
             final String line = getLines()[semi.getLineNo() - 1];
             final int after = semi.getColumnNo() + 1;
             //don't check if at end of line
             if (after < line.length()) {
-                if (PadOption.NOSPACE == getAbstractOption()
+                if (getAbstractOption() == PadOption.NOSPACE
                     && Character.isWhitespace(line.charAt(after))) {
                     log(semi.getLineNo(), after, WS_FOLLOWED, ";");
                 }
-                else if (PadOption.SPACE == getAbstractOption()
+                else if (getAbstractOption() == PadOption.SPACE
                          && !Character.isWhitespace(line.charAt(after))) {
                     log(semi.getLineNo(), after, WS_NOT_FOLLOWED, ";");
                 }
             }
         }
     }
 }
