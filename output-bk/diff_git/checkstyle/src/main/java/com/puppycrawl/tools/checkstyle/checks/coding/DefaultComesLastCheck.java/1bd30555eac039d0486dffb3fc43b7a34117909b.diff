diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheck.java
index 1e9702e1b..6b50e378b 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheck.java
@@ -35,59 +35,59 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;
  * <p>
  * An example of how to configure the check is:
  * </p>
  * <pre>
  * &lt;module name="DefaultComesLast"/&gt;
  * </pre>
  * @author o_sukhodolsky
  */
 public class DefaultComesLastCheck extends Check
 {
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String MSG_KEY = "default.comes.last";
 
     /** Creates new instance of the check. */
     public DefaultComesLastCheck()
     {
         // do nothing
     }
 
     @Override
     public int[] getDefaultTokens()
     {
         return new int[] {
             TokenTypes.LITERAL_DEFAULT,
         };
     }
 
     @Override
     public int[] getAcceptableTokens()
     {
         return getDefaultTokens();
     }
 
     @Override
     public void visitToken(DetailAST ast)
     {
         final DetailAST defaultGroupAST = ast.getParent();
         //default keywords used in annotations too - not what we're
         //interested in
         if (defaultGroupAST.getType() != TokenTypes.ANNOTATION_FIELD_DEF
                 && defaultGroupAST.getType() != TokenTypes.MODIFIERS)
         {
             final DetailAST switchAST = defaultGroupAST.getParent();
             final DetailAST lastGroupAST =
                 switchAST.getLastChild().getPreviousSibling();
 
-            if ((defaultGroupAST.getLineNo() != lastGroupAST.getLineNo())
-                || (defaultGroupAST.getColumnNo()
-                    != lastGroupAST.getColumnNo()))
+            if (defaultGroupAST.getLineNo() != lastGroupAST.getLineNo()
+                || defaultGroupAST.getColumnNo()
+                    != lastGroupAST.getColumnNo())
             {
                 log(ast, MSG_KEY);
             }
         }
     }
 }
