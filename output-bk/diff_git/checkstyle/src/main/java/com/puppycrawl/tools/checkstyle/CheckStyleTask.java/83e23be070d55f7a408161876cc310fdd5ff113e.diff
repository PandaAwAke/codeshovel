diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java b/src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java
index d0f019578..28edb7597 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java
@@ -125,101 +125,101 @@ public class CheckStyleTask extends Task
      * @param maxErrors the maximum number of errors allowed.
      */
     public void setMaxErrors(int maxErrors)
     {
         this.maxErrors = maxErrors;
     }
 
     /**
      * Sets the maximum number of warings allowed. Default is
      * {@link Integer#MAX_VALUE}.
      * @param maxWarnings the maximum number of warnings allowed.
      */
     public void setMaxWarnings(int maxWarnings)
     {
         this.maxWarnings = maxWarnings;
     }
 
     /**
      * Adds uset of files (nested fileset attribute).
      * @param fS the file set to add
      */
     public void addFileset(FileSet fS)
     {
         fileSets.add(fS);
     }
 
     /**
      * Add a formatter.
      * @param formatter the formatter to add for logging.
      */
     public void addFormatter(Formatter formatter)
     {
         formatters.add(formatter);
     }
 
     /**
      * Add an override property.
      * @param property the property to add
      */
     public void addProperty(Property property)
     {
         overrideProps.add(property);
     }
 
     /**
      * Set the class path.
      * @param classpath the path to locate cluses
      */
     public void setClasspath(Path classpath)
     {
-        if (classpath == null) {
+        if (this.classpath == null) {
             this.classpath = classpath;
         }
         else {
             this.classpath.append(classpath);
         }
     }
 
     /**
      * Set the class path from a reference defined elsewhere.
      * @param classpathRef the reference to an instance defining the classpath
      */
     public void setClasspathRef(Reference classpathRef)
     {
         createClasspath().setRefid(classpathRef);
     }
 
     /** @return a created path for locating cluses */
     public Path createClasspath()
     {
         if (classpath == null) {
             classpath = new Path(getProject());
         }
         return classpath.createPath();
     }
 
     /** @param file the file to be checked */
     public void setFile(File file)
     {
         fileName = file.getAbsolutePath();
     }
 
     /** @param file the configuration file to use */
     public void setConfig(File file)
     {
         setConfigLocation(file.getAbsolutePath());
     }
 
     /** @param url the URL of the configuration to use */
     public void setConfigURL(URL url)
     {
         setConfigLocation(url.toExternalForm());
     }
 
     /**
      * Sets the location of the configuration.
      * @param location the location, which is either a
      */
     private void setConfigLocation(String location)
     {
         if (configLocation != null) {
