diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableCellRenderer.java b/src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableCellRenderer.java
index c4b45cdae..687ac7398 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableCellRenderer.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableCellRenderer.java
@@ -59,76 +59,76 @@ class TreeTableCellRenderer extends JTree implements
 
     /**
      * UpdateUI is overridden to set the colors of the Tree's renderer
      * to match that of the table.
      */
     @Override
     public void updateUI() {
         super.updateUI();
         // Make the tree's cell renderer use the table's cell selection
         // colors.
         final TreeCellRenderer tcr = getCellRenderer();
         if (tcr instanceof DefaultTreeCellRenderer) {
             final DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) tcr;
             // For 1.1 uncomment this, 1.2 has a bug that will cause an
             // exception to be thrown if the border selection color is
             // null.
             // renderer.setBorderSelectionColor(null);
             renderer.setTextSelectionColor(UIManager.getColor("Table.selectionForeground"));
             renderer.setBackgroundSelectionColor(UIManager.getColor("Table.selectionBackground"));
         }
     }
 
     /**
      * Sets the row height of the tree, and forwards the row height to
      * the table.
      */
     @Override
     public void setRowHeight(int newRowHeight) {
         if (newRowHeight > 0) {
             super.setRowHeight(newRowHeight);
             if (treeTable != null
                     && treeTable.getRowHeight() != newRowHeight) {
                 treeTable.setRowHeight(getRowHeight());
             }
         }
     }
 
     /**
      * This is overridden to set the height to match that of the JTable.
      */
     @Override
     public void setBounds(int x, int y, int w, int h) {
         super.setBounds(x, 0, w, treeTable.getHeight());
     }
 
     /**
      * Subclassed to translate the graphics such that the last visible
      * row will be drawn at 0,0.
      */
     @Override
-    public void paint(Graphics g) {
-        g.translate(0, -visibleRow * getRowHeight());
-        super.paint(g);
+    public void paint(Graphics graph) {
+        graph.translate(0, -visibleRow * getRowHeight());
+        super.paint(graph);
     }
 
     /**
      * TreeCellRenderer method. Overridden to update the visible row.
      * @see TableCellRenderer
      */
     @Override
     public Component getTableCellRendererComponent(JTable table,
             Object value,
             boolean isSelected,
             boolean hasFocus,
             int row, int column) {
         if (isSelected) {
             setBackground(table.getSelectionBackground());
         }
         else {
             setBackground(table.getBackground());
         }
 
         visibleRow = row;
         return this;
     }
 }
