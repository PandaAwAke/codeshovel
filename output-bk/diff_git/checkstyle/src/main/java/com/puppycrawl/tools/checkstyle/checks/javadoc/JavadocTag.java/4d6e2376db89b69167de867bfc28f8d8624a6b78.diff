diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
index c9594d2c6..cb40c761c 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
@@ -40,83 +40,83 @@ public class JavadocTag {
      * @param line the line number of the tag
      * @param column the column number of the tag
      * @param tag the tag string
      * @param arg1 the tag argument
      **/
     public JavadocTag(int line, int column, String tag, String arg1) {
         lineNo = line;
         columnNo = column;
         this.arg1 = arg1;
         tagInfo = JavadocTagInfo.fromName(tag);
     }
 
     /**
      * Constructs the object.
      * @param line the line number of the tag
      * @param column the column number of the tag
      * @param tag the tag string
      **/
     public JavadocTag(int line, int column, String tag) {
         this(line, column, tag, null);
     }
 
     /** @return the tag string **/
     public String getTagName() {
         return tagInfo.getName();
     }
 
     /** @return the first argument. null if not set. **/
     public String getArg1() {
         return arg1;
     }
 
     /** @return the line number **/
     public int getLineNo() {
         return lineNo;
     }
 
     /** @return the column number */
     public int getColumnNo() {
         return columnNo;
     }
 
     @Override
     public String toString() {
         return "JavadocTag{tag='" + getTagName() + "' lineNo=" + lineNo + ", columnNo=" + columnNo
                 + ", arg1='" + arg1 + "'}";
     }
 
     /** @return whether the tag is an 'return' tag **/
     public boolean isReturnTag() {
-        return JavadocTagInfo.RETURN == tagInfo;
+        return tagInfo == JavadocTagInfo.RETURN;
     }
 
     /** @return whether the tag is an 'param' tag **/
     public boolean isParamTag() {
-        return JavadocTagInfo.PARAM == tagInfo;
+        return tagInfo == JavadocTagInfo.PARAM;
     }
 
     /** @return whether the tag is an 'throws' or 'exception' tag **/
     public boolean isThrowsTag() {
-        return JavadocTagInfo.THROWS == tagInfo
-            || JavadocTagInfo.EXCEPTION == tagInfo;
+        return tagInfo == JavadocTagInfo.THROWS
+            || tagInfo == JavadocTagInfo.EXCEPTION;
     }
 
     /** @return whether the tag is a 'see' or 'inheritDoc' tag **/
     public boolean isSeeOrInheritDocTag() {
-        return JavadocTagInfo.SEE == tagInfo || isInheritDocTag();
+        return tagInfo == JavadocTagInfo.SEE || isInheritDocTag();
     }
 
     /** @return whether the tag is a 'inheritDoc' tag **/
     public boolean isInheritDocTag() {
-        return JavadocTagInfo.INHERIT_DOC == tagInfo;
+        return tagInfo == JavadocTagInfo.INHERIT_DOC;
     }
 
     /** @return whether the tag can contain references to imported classes **/
     public boolean canReferenceImports() {
-        return JavadocTagInfo.SEE == tagInfo
-                || JavadocTagInfo.LINK == tagInfo
-                || JavadocTagInfo.LINKPLAIN == tagInfo
-                || JavadocTagInfo.THROWS == tagInfo
-                || JavadocTagInfo.EXCEPTION == tagInfo;
+        return tagInfo == JavadocTagInfo.SEE
+                || tagInfo == JavadocTagInfo.LINK
+                || tagInfo == JavadocTagInfo.LINKPLAIN
+                || tagInfo == JavadocTagInfo.THROWS
+                || tagInfo == JavadocTagInfo.EXCEPTION;
     }
 }
