diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java
index 739782ecc..ae72b418d 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java
@@ -70,101 +70,101 @@ import java.util.Deque;
  *     tabs are converted to spaces
  *   - block parents with parens -- for, while, if, etc... -- are checked that
  *     they match the level of the parent
  * </pre>
  *
  * @author jrichard
  * @author o_sukhodolsky
  * @author Maikel Steneker
  * @author maxvetrenko
  */
 public class IndentationCheck extends Check
 {
     /** Default indentation amount - based on Sun */
     private static final int DEFAULT_INDENTATION = 4;
 
     /** how many tabs or spaces to use */
     private int basicOffset = DEFAULT_INDENTATION;
 
     /** how much to indent a case label */
     private int caseIndentationAmount = DEFAULT_INDENTATION;
 
     /** how far brace should be indented when on next line */
     private int braceAdjustment;
 
     /** how far throws should be indented when on next line */
     private int throwsIndentationAmount = DEFAULT_INDENTATION;
 
     /** how much to indent an array initialization when on next line */
     private int arrayInitIndentationAmount = DEFAULT_INDENTATION;
 
     /** how far continuation line should be indented when line-wrapping is present */
     private int lineWrappingIndentation = DEFAULT_INDENTATION;
 
     /**
      * Force strict condition in line wrapping case. If value is true, line wrap indent
      * have to be same as lineWrappingIndentation parameter, if value is false, line wrap indent
      * have to be not less than lineWrappingIndentation parameter.
      */
     private boolean forceStrictCondition;
 
     /** handlers currently in use */
     private final Deque<ExpressionHandler> handlers = new ArrayDeque<>();
 
     /** factory from which handlers are distributed */
     private final HandlerFactory handlerFactory = new HandlerFactory();
 
     /**
      * Get forcing strict condition.
      * @return forceStrictCondition value.
      */
-    public boolean getForceStrictCondition()
+    public boolean isForceStrictCondition()
     {
         return forceStrictCondition;
     }
 
     /**
      * Set forcing strict condition.
      * @param value user's value of forceStrictCondition.
      */
     public void setForceStrictCondition(boolean value)
     {
         forceStrictCondition = value;
     }
 
     /**
      * Set the basic offset.
      *
      * @param basicOffset   the number of tabs or spaces to indent
      */
     public void setBasicOffset(int basicOffset)
     {
         this.basicOffset = basicOffset;
     }
 
     /**
      * Get the basic offset.
      *
      * @return the number of tabs or spaces to indent
      */
     public int getBasicOffset()
     {
         return basicOffset;
     }
 
     /**
      * Adjusts brace indentation (positive offset).
      *
      * @param adjustmentAmount   the brace offset
      */
     public void setBraceAdjustment(int adjustmentAmount)
     {
         braceAdjustment = adjustmentAmount;
     }
 
     /**
      * Get the brace adjustment amount.
      *
      * @return the positive offset to adjust braces
      */
     public int getBraceAdjustement()
     {
