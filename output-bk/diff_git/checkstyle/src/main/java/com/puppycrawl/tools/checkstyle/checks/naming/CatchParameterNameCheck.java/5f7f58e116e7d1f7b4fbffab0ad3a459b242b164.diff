diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
index 3204019c0..c96ae0fd2 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
@@ -24,68 +24,68 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;
 
 /**
  * <p>
  * Checks that {@code catch} parameter names conform to a format specified by the format property.
  * The format is a {@link java.util.regex.Pattern regular expression} and defaults to
  * <strong>^(e|t|ex|[a-z][a-z][a-zA-Z]+)$</strong>.
  * </p>
  * <p>
  * Default pattern has the following characteristic:
  * </p>
  * <ul>
  * <li>allows names beginning with two lowercase letters followed by at least one uppercase or
  * lowercase letter</li>
  * <li>allows {@code e} abbreviation (suitable for exceptions end errors)</li>
  * <li>allows {@code ex} abbreviation (suitable for exceptions)</li>
  * <li>allows {@code t} abbreviation (suitable for throwables)</li>
  * <li>prohibits numbered abbreviations like {@code e1} or {@code t2}</li>
  * <li>prohibits one letter prefixes like {@code pException}</li>
  * <li>prohibits two letter abbreviations like {@code ie} or {@code ee}</li>
  * <li>prohibits any other characters than letters</li>
  * </ul>
  * <p>
  * An example of how to configure the check is:
  * </p>
  * <pre>
  * &lt;module name="CatchParameterName"/&gt;
  * </pre>
  * <p>
  * An example of how to configure the check for names that begin with a lower case letter,
  * followed by any letters or digits is:
  * </p>
  * <pre>
  * &lt;module name="CatchParameterName"&gt;
  *    &lt;property name="format" value="^[a-z][a-zA-Z0-9]+$"/&gt;
  * &lt;/module&gt;
  * </pre>
  *
  * @author Michal Kordas
  */
 public class CatchParameterNameCheck extends AbstractNameCheck {
 
     /**
      * Creates a new {@code CatchParameterNameCheck} instance.
      */
     public CatchParameterNameCheck() {
         super("^(e|t|ex|[a-z][a-z][a-zA-Z]+)$");
     }
 
     @Override
     public int[] getDefaultTokens() {
-        return getAcceptableTokens();
+        return getRequiredTokens();
     }
 
     @Override
     public int[] getAcceptableTokens() {
-        return new int[] {TokenTypes.PARAMETER_DEF};
+        return getRequiredTokens();
     }
 
     @Override
     public int[] getRequiredTokens() {
-        return getAcceptableTokens();
+        return new int[] {TokenTypes.PARAMETER_DEF};
     }
 
     @Override
     protected boolean mustCheckName(DetailAST ast) {
         return ast.getParent().getType() == TokenTypes.LITERAL_CATCH;
     }
 }
