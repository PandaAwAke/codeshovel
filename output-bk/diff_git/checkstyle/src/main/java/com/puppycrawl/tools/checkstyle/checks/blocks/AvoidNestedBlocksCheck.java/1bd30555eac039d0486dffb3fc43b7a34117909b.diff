diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java
index d0ed64154..c439e8418 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java
@@ -69,69 +69,69 @@ import com.puppycrawl.tools.checkstyle.api.DetailAST;
  *         // Never OK, statement outside block
  *         System.out.println("Hello");
  *         {
  *             x = 2;
  *             break;
  *         }
  *     case 1:
  *         // OK if allowInSwitchCase is true
  *         {
  *             System.out.println("Hello");
  *             x = 2;
  *             break;
  *         }
  * }
  * </pre>
  *
  * @author lkuehne
  */
 public class AvoidNestedBlocksCheck extends Check
 {
     /**
      * Whether nested blocks are allowed if they are the
      * only child of a switch case.
      */
     private boolean allowInSwitchCase;
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String MSG_KEY_BLOCK_NESTED = "block.nested";
 
     @Override
     public int[] getDefaultTokens()
     {
         return new int[] {TokenTypes.SLIST};
     }
 
     @Override
     public int[] getAcceptableTokens()
     {
         return new int[] {TokenTypes.SLIST};
     }
 
     @Override
     public void visitToken(DetailAST ast)
     {
         final DetailAST parent = ast.getParent();
         if (parent.getType() == TokenTypes.SLIST) {
             if (allowInSwitchCase
-                    && (parent.getParent().getType() == TokenTypes.CASE_GROUP)
-                    && (parent.getNumberOfChildren() == 1))
+                    && parent.getParent().getType() == TokenTypes.CASE_GROUP
+                    && parent.getNumberOfChildren() == 1)
             {
                 return;
             }
             log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY_BLOCK_NESTED);
         }
     }
 
     /**
      * Setter for allowInSwitchCase property.
      * @param allowInSwitchCase whether nested blocks are allowed
      *                 if they are the only child of a switch case.
      */
     public void setAllowInSwitchCase(boolean allowInSwitchCase)
     {
         this.allowInSwitchCase = allowInSwitchCase;
     }
 }
