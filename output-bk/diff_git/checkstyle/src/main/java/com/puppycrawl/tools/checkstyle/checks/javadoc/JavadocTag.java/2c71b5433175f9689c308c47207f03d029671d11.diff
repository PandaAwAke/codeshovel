diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
index df5131925..505a3ca9b 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
@@ -44,102 +44,104 @@ public class JavadocTag {
         lineNo = line;
         columnNo = column;
         this.firstArg = firstArg;
         tagInfo = JavadocTagInfo.fromName(tag);
     }
 
     /**
      * Constructs the object.
      * @param line the line number of the tag
      * @param column the column number of the tag
      * @param tag the tag string
      **/
     public JavadocTag(int line, int column, String tag) {
         this(line, column, tag, null);
     }
 
     /**
      * Gets tag name.
      * @return the tag string
      */
     public String getTagName() {
         return tagInfo.getName();
     }
 
     /**
      * Returns first argument.
      * @return the first argument. null if not set.
      */
     public String getFirstArg() {
         return firstArg;
     }
 
     /**
      * Gets the line number.
      * @return the line number
      */
     public int getLineNo() {
         return lineNo;
     }
 
     /**
      * Gets column number.
      * @return the column number
      */
     public int getColumnNo() {
         return columnNo;
     }
 
     @Override
     public String toString() {
-        return "JavadocTag{tag='" + getTagName() + "' lineNo=" + lineNo + ", columnNo=" + columnNo
-                + ", firstArg='" + firstArg + "'}";
+        return "JavadocTag[tag='" + tagInfo.getName()
+                + "' lineNo=" + lineNo
+                + ", columnNo=" + columnNo
+                + ", firstArg='" + firstArg + "']";
     }
 
     /**
      * Checks that the tag is an 'return' tag.
      * @return whether the tag is an 'return' tag
      */
     public boolean isReturnTag() {
         return tagInfo == JavadocTagInfo.RETURN;
     }
 
     /**
      * Checks that the tag is an 'param' tag.
      * @return whether the tag is an 'param' tag
      */
     public boolean isParamTag() {
         return tagInfo == JavadocTagInfo.PARAM;
     }
 
     /**
      * Checks that the tag is an 'throws' or 'exception' tag.
      * @return whether the tag is an 'throws' or 'exception' tag
      */
     public boolean isThrowsTag() {
         return tagInfo == JavadocTagInfo.THROWS
             || tagInfo == JavadocTagInfo.EXCEPTION;
     }
 
     /**
      * Checks that the tag is a 'see' or 'inheritDoc' tag.
      * @return whether the tag is a 'see' or 'inheritDoc' tag
      */
     public boolean isSeeOrInheritDocTag() {
         return tagInfo == JavadocTagInfo.SEE || isInheritDocTag();
     }
 
     /**
      * Checks that the tag is a 'inheritDoc' tag.
      * @return whether the tag is a 'inheritDoc' tag
      */
     public boolean isInheritDocTag() {
         return tagInfo == JavadocTagInfo.INHERIT_DOC;
     }
 
     /**
      * Checks that the tag can contain references to imported classes.
      * @return whether the tag can contain references to imported classes
      */
     public boolean canReferenceImports() {
         return tagInfo == JavadocTagInfo.SEE
                 || tagInfo == JavadocTagInfo.LINK
