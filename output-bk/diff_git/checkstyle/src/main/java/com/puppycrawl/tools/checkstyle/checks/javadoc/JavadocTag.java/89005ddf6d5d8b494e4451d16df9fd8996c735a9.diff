diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
index e9e3ebacb..7456a0cea 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java
@@ -48,95 +48,95 @@ public class JavadocTag
         columnNo = column;
         this.arg1 = arg1;
         tagInfo = JavadocTagInfo.fromName(tag);
     }
 
     /**
      * Constructs the object.
      * @param line the line number of the tag
      * @param column the column number of the tag
      * @param tag the tag string
      **/
     public JavadocTag(int line, int column, String tag)
     {
         this(line, column, tag, null);
     }
 
     /** @return the tag string **/
     public String getTagName()
     {
         return tagInfo.getName();
     }
 
     /** @return the first argument. null if not set. **/
     public String getArg1()
     {
         return arg1;
     }
 
     /** @return the line number **/
     public int getLineNo()
     {
         return lineNo;
     }
 
     /** @return the column number */
     public int getColumnNo()
     {
         return columnNo;
     }
 
     @Override
     public String toString()
     {
         return "{Tag = '" + getTagName() + "', lineNo = " + getLineNo()
             + ", columnNo=" + columnNo + ", Arg1 = '" + getArg1() + "'}";
     }
 
     /** @return whether the tag is an 'author' tag **/
     public boolean isAuthorTag()
     {
-        return JavadocTagInfo.AUTHOR.equals(tagInfo);
+        return JavadocTagInfo.AUTHOR == tagInfo;
     }
 
     /** @return whether the tag is an 'return' tag **/
     public boolean isReturnTag()
     {
-        return JavadocTagInfo.RETURN.equals(tagInfo);
+        return JavadocTagInfo.RETURN == tagInfo;
     }
 
     /** @return whether the tag is an 'param' tag **/
     public boolean isParamTag()
     {
-        return JavadocTagInfo.PARAM.equals(tagInfo);
+        return JavadocTagInfo.PARAM == tagInfo;
     }
 
     /** @return whether the tag is an 'throws' or 'exception' tag **/
     public boolean isThrowsTag()
     {
-        return (JavadocTagInfo.THROWS.equals(tagInfo)
-            || JavadocTagInfo.EXCEPTION.equals(tagInfo));
+        return (JavadocTagInfo.THROWS == tagInfo
+            || JavadocTagInfo.EXCEPTION == tagInfo);
     }
 
     /** @return whether the tag is a 'see' or 'inheritDoc' tag **/
     public boolean isSeeOrInheritDocTag()
     {
-        return (JavadocTagInfo.SEE.equals(tagInfo) || isInheritDocTag());
+        return (JavadocTagInfo.SEE == tagInfo || isInheritDocTag());
     }
 
     /** @return whether the tag is a 'inheritDoc' tag **/
     public boolean isInheritDocTag()
     {
-        return JavadocTagInfo.INHERIT_DOC.equals(tagInfo);
+        return JavadocTagInfo.INHERIT_DOC == tagInfo;
     }
 
     /** @return whether the tag can contain references to imported classes **/
     public boolean canReferenceImports()
     {
-        return (JavadocTagInfo.SEE.equals(tagInfo)
-                || JavadocTagInfo.LINK.equals(tagInfo)
-                || JavadocTagInfo.LINKPLAIN.equals(tagInfo)
-                || JavadocTagInfo.THROWS.equals(tagInfo)
-                || JavadocTagInfo.EXCEPTION.equals(tagInfo));
+        return (JavadocTagInfo.SEE == tagInfo
+                || JavadocTagInfo.LINK == tagInfo
+                || JavadocTagInfo.LINKPLAIN == tagInfo
+                || JavadocTagInfo.THROWS == tagInfo
+                || JavadocTagInfo.EXCEPTION == tagInfo);
     }
 }
 
