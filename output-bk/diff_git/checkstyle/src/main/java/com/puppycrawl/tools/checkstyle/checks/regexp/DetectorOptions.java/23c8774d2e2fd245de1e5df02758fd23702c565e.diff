diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java
index 9d651724a..4077d9f7d 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java
@@ -136,55 +136,58 @@ class DetectorOptions {
      */
     public AbstractViolationReporter getReporter() {
         return reporter;
     }
 
     /**
      * The message to report errors with.
      * @return the message to report errors with.
      */
     public String getMessage() {
         return message;
     }
 
     /**
      * The minimum number of allowed detections.
      * @return the minimum number of allowed detections.
      */
     public int getMinimum() {
         return minimum;
     }
 
     /**
      * The maximum number of allowed detections.
      * @return the maximum number of allowed detections.
      */
     public int getMaximum() {
         return maximum;
     }
 
     /**
      * The suppressor to use.
      * @return the suppressor to use.
      */
     public MatchSuppressor getSuppressor() {
         return suppressor;
     }
 
     /**
      * Whether to ignore case when matching.
      * @return whether to ignore case when matching.
      */
     public boolean isIgnoreCase() {
         return ignoreCase;
     }
 
     /**
      * The pattern to use when matching.
      * @return the pattern to use when matching.
      */
     public Pattern getPattern() {
-        final int options = isIgnoreCase() ? compileFlags
-                | Pattern.CASE_INSENSITIVE : compileFlags;
+        int options = compileFlags;
+
+        if (isIgnoreCase()) {
+            options |= Pattern.CASE_INSENSITIVE;
+        }
         return Pattern.compile(format, options);
     }
 }
