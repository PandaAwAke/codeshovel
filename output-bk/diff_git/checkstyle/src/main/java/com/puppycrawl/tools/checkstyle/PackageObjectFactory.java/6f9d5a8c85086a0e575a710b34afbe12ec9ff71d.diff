diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java b/src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java
index 87c288d5f..644b3e0fb 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java
@@ -659,102 +659,100 @@ public class PackageObjectFactory implements ModuleFactory {
     }
 
     /**
      * Fill short-to-full module names map with Checks from whitespace package.
      */
     private static void fillChecksFromWhitespacePackage() {
         NAME_TO_FULL_MODULE_NAME.put("EmptyForInitializerPadCheck",
                 BASE_PACKAGE + ".checks.whitespace.EmptyForInitializerPadCheck");
         NAME_TO_FULL_MODULE_NAME.put("EmptyForIteratorPadCheck",
                 BASE_PACKAGE + ".checks.whitespace.EmptyForIteratorPadCheck");
         NAME_TO_FULL_MODULE_NAME.put("EmptyLineSeparatorCheck",
                 BASE_PACKAGE + ".checks.whitespace.EmptyLineSeparatorCheck");
         NAME_TO_FULL_MODULE_NAME.put("FileTabCharacterCheck",
                 BASE_PACKAGE + ".checks.whitespace.FileTabCharacterCheck");
         NAME_TO_FULL_MODULE_NAME.put("GenericWhitespaceCheck",
                 BASE_PACKAGE + ".checks.whitespace.GenericWhitespaceCheck");
         NAME_TO_FULL_MODULE_NAME.put("MethodParamPadCheck",
                 BASE_PACKAGE + ".checks.whitespace.MethodParamPadCheck");
         NAME_TO_FULL_MODULE_NAME.put("NoLineWrapCheck",
                 BASE_PACKAGE + ".checks.whitespace.NoLineWrapCheck");
         NAME_TO_FULL_MODULE_NAME.put("NoWhitespaceAfterCheck",
                 BASE_PACKAGE + ".checks.whitespace.NoWhitespaceAfterCheck");
         NAME_TO_FULL_MODULE_NAME.put("NoWhitespaceBeforeCheck",
                 BASE_PACKAGE + ".checks.whitespace.NoWhitespaceBeforeCheck");
         NAME_TO_FULL_MODULE_NAME.put("OperatorWrapCheck",
                 BASE_PACKAGE + ".checks.whitespace.OperatorWrapCheck");
         NAME_TO_FULL_MODULE_NAME.put("ParenPadCheck",
                 BASE_PACKAGE + ".checks.whitespace.ParenPadCheck");
         NAME_TO_FULL_MODULE_NAME.put("SeparatorWrapCheck",
                 BASE_PACKAGE + ".checks.whitespace.SeparatorWrapCheck");
         NAME_TO_FULL_MODULE_NAME.put("SingleSpaceSeparatorCheck",
                 BASE_PACKAGE + ".checks.whitespace.SingleSpaceSeparatorCheck");
         NAME_TO_FULL_MODULE_NAME.put("TypecastParenPadCheck",
                 BASE_PACKAGE + ".checks.whitespace.TypecastParenPadCheck");
         NAME_TO_FULL_MODULE_NAME.put("WhitespaceAfterCheck",
                 BASE_PACKAGE + ".checks.whitespace.WhitespaceAfterCheck");
         NAME_TO_FULL_MODULE_NAME.put("WhitespaceAroundCheck",
                 BASE_PACKAGE + ".checks.whitespace.WhitespaceAroundCheck");
     }
 
     /**
      * Fill short-to-full module names map with modules from checks package.
      */
     private static void fillModulesFromChecksPackage() {
         NAME_TO_FULL_MODULE_NAME.put("ArrayTypeStyleCheck",
                 BASE_PACKAGE + ".checks.ArrayTypeStyleCheck");
         NAME_TO_FULL_MODULE_NAME.put("AvoidEscapedUnicodeCharactersCheck",
                 BASE_PACKAGE + ".checks.AvoidEscapedUnicodeCharactersCheck");
         NAME_TO_FULL_MODULE_NAME.put("DescendantTokenCheck",
                 BASE_PACKAGE + ".checks.DescendantTokenCheck");
-        NAME_TO_FULL_MODULE_NAME.put("FileContentsHolder",
-                BASE_PACKAGE + ".checks.FileContentsHolder");
         NAME_TO_FULL_MODULE_NAME.put("FinalParametersCheck",
                 BASE_PACKAGE + ".checks.FinalParametersCheck");
         NAME_TO_FULL_MODULE_NAME.put("NewlineAtEndOfFileCheck",
                 BASE_PACKAGE + ".checks.NewlineAtEndOfFileCheck");
         NAME_TO_FULL_MODULE_NAME.put("OuterTypeFilenameCheck",
                 BASE_PACKAGE + ".checks.OuterTypeFilenameCheck");
         NAME_TO_FULL_MODULE_NAME.put("SuppressWarningsHolder",
                 BASE_PACKAGE + ".checks.SuppressWarningsHolder");
         NAME_TO_FULL_MODULE_NAME.put("TodoCommentCheck",
                 BASE_PACKAGE + ".checks.TodoCommentCheck");
         NAME_TO_FULL_MODULE_NAME.put("TrailingCommentCheck",
                 BASE_PACKAGE + ".checks.TrailingCommentCheck");
         NAME_TO_FULL_MODULE_NAME.put("TranslationCheck",
                 BASE_PACKAGE + ".checks.TranslationCheck");
         NAME_TO_FULL_MODULE_NAME.put("UncommentedMainCheck",
                 BASE_PACKAGE + ".checks.UncommentedMainCheck");
         NAME_TO_FULL_MODULE_NAME.put("UniquePropertiesCheck",
                 BASE_PACKAGE + ".checks.UniquePropertiesCheck");
         NAME_TO_FULL_MODULE_NAME.put("UpperEllCheck",
                 BASE_PACKAGE + ".checks.UpperEllCheck");
     }
 
     /**
      * Fill short-to-full module names map with modules from filefilters package.
      */
     private static void fillModulesFromFilefiltersPackage() {
         NAME_TO_FULL_MODULE_NAME.put("BeforeExecutionExclusionFileFilter",
                 BASE_PACKAGE + ".filefilters.BeforeExecutionExclusionFileFilter");
     }
 
     /**
      * Fill short-to-full module names map with modules from filters package.
      */
     private static void fillModulesFromFiltersPackage() {
         NAME_TO_FULL_MODULE_NAME.put("CsvFilter",
                 BASE_PACKAGE + ".filters.CsvFilter");
         NAME_TO_FULL_MODULE_NAME.put("IntMatchFilter",
                 BASE_PACKAGE + ".filters.IntMatchFilter");
         NAME_TO_FULL_MODULE_NAME.put("IntRangeFilter",
                 BASE_PACKAGE + ".filters.IntRangeFilter");
         NAME_TO_FULL_MODULE_NAME.put("SeverityMatchFilter",
                 BASE_PACKAGE + ".filters.SeverityMatchFilter");
         NAME_TO_FULL_MODULE_NAME.put("SuppressionCommentFilter",
                 BASE_PACKAGE + ".filters.SuppressionCommentFilter");
         NAME_TO_FULL_MODULE_NAME.put("SuppressionFilter",
                 BASE_PACKAGE + ".filters.SuppressionFilter");
         NAME_TO_FULL_MODULE_NAME.put("SuppressWarningsFilter",
                 BASE_PACKAGE + ".filters.SuppressWarningsFilter");
         NAME_TO_FULL_MODULE_NAME.put("SuppressWithNearbyCommentFilter",
                 BASE_PACKAGE + ".filters.SuppressWithNearbyCommentFilter");
