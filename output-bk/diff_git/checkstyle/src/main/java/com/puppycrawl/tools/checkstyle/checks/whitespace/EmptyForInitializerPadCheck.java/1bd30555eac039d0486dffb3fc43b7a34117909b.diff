diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java
index ad6cb194b..50b0c7529 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java
@@ -49,64 +49,64 @@ for (
 public class EmptyForInitializerPadCheck
     extends AbstractOptionCheck<PadOption>
 {
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String MSG_PRECEDED = "ws.preceded";
 
     /**
      * A key is pointing to the warning message text in "messages.properties"
      * file.
      */
     public static final String MSG_NOT_PRECEDED = "ws.notPreceded";
 
     /**
      * Sets the paren pad otion to nospace.
      */
     public EmptyForInitializerPadCheck()
     {
         super(PadOption.NOSPACE, PadOption.class);
     }
 
     @Override
     public int[] getDefaultTokens()
     {
         return new int[] {TokenTypes.FOR_INIT,
         };
     }
 
     @Override
     public int[] getAcceptableTokens()
     {
         return new int[] {TokenTypes.FOR_INIT,
         };
     }
 
     @Override
     public void visitToken(DetailAST ast)
     {
         if (ast.getChildCount() == 0) {
             //empty for initializer. test pad before semi.
             final DetailAST semi = ast.getNextSibling();
             final int semiLineIdx = semi.getLineNo() - 1;
             final String line = getLines()[semiLineIdx];
             final int before = semi.getColumnNo() - 1;
             //don't check if semi at beginning of line
             if (!Utils.whitespaceBefore(before, line)) {
                 final PadOption option = getAbstractOption();
-                if ((PadOption.NOSPACE == option)
-                    && (Character.isWhitespace(line.charAt(before))))
+                if (PadOption.NOSPACE == option
+                    && Character.isWhitespace(line.charAt(before)))
                 {
                     log(semi.getLineNo(), before, MSG_PRECEDED, ";");
                 }
-                else if ((PadOption.SPACE == option)
+                else if (PadOption.SPACE == option
                          && !Character.isWhitespace(line.charAt(before)))
                 {
                     log(semi.getLineNo(), before, MSG_NOT_PRECEDED, ";");
                 }
             }
         }
     }
 }
