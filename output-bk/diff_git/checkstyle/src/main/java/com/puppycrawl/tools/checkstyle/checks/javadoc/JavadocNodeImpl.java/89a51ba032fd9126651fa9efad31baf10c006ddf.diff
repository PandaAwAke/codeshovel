diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java
index 00a4dc54f..fc56cc77e 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java
@@ -1,151 +1,151 @@
 ////////////////////////////////////////////////////////////////////////////////
 // checkstyle: Checks Java source code for adherence to a set of rules.
 // Copyright (C) 2001-2014  Oliver Burn
 //
 // This library is free software; you can redistribute it and/or
 // modify it under the terms of the GNU Lesser General Public
 // License as published by the Free Software Foundation; either
 // version 2.1 of the License, or (at your option) any later version.
 //
 // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // Lesser General Public License for more details.
 //
 // You should have received a copy of the GNU Lesser General Public
 // License along with this library; if not, write to the Free Software
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 package com.puppycrawl.tools.checkstyle.checks.javadoc;
 
 import com.puppycrawl.tools.checkstyle.api.DetailNode;
 
 /**
  *
  * Implementation of DetailNode interface that is mutable.
  *
  * @author Baratali Izmailov
  *
  */
 public class JavadocNodeImpl implements DetailNode
 {
     /**
      * Node index among parent's children
      */
-    private int mIndex;
+    private int index;
 
     /**
      * Node type
      */
-    private int mType;
+    private int type;
 
     /**
      * Node's text content
      */
-    private String mText;
+    private String text;
 
     /**
      * Line number
      */
-    private int mLineNumber;
+    private int lineNumber;
 
     /**
      * Column number
      */
-    private int mColumnNumber;
+    private int columnNumber;
 
     /**
      * Array of child nodes
      */
-    private DetailNode[] mChildren;
+    private DetailNode[] children;
 
     /**
      * Parent node
      */
-    private DetailNode mParent;
+    private DetailNode parent;
 
     @Override
     public int getType()
     {
-        return mType;
+        return type;
     }
 
     @Override
     public String getText()
     {
-        return mText;
+        return text;
     }
 
     @Override
     public int getLineNumber()
     {
-        return mLineNumber;
+        return lineNumber;
     }
 
     @Override
     public int getColumnNumber()
     {
-        return mColumnNumber;
+        return columnNumber;
     }
 
     @Override
     public DetailNode[] getChildren()
     {
-        return mChildren;
+        return children;
     }
 
     @Override
     public DetailNode getParent()
     {
-        return mParent;
+        return parent;
     }
 
     @Override
     public int getIndex()
     {
-        return mIndex;
+        return index;
     }
 
-    public void setType(int aType)
+    public void setType(int type)
     {
-        this.mType = aType;
+        this.type = type;
     }
 
-    public void setText(String aText)
+    public void setText(String text)
     {
-        this.mText = aText;
+        this.text = text;
     }
 
-    public void setLineNumber(int aLineNumber)
+    public void setLineNumber(int lineNumber)
     {
-        this.mLineNumber = aLineNumber;
+        this.lineNumber = lineNumber;
     }
 
-    public void setColumnNumber(int aColumnNumber)
+    public void setColumnNumber(int columnNumber)
     {
-        this.mColumnNumber = aColumnNumber;
+        this.columnNumber = columnNumber;
     }
 
-    public void setChildren(DetailNode[] aChildren)
+    public void setChildren(DetailNode[] children)
     {
-        this.mChildren = aChildren;
+        this.children = children;
     }
 
-    public void setParent(DetailNode aParent)
+    public void setParent(DetailNode parent)
     {
-        this.mParent = aParent;
+        this.parent = parent;
     }
 
-    public void setIndex(int aIndex)
+    public void setIndex(int index)
     {
-        this.mIndex = aIndex;
+        this.index = index;
     }
 
     @Override
     public String toString()
     {
         return JavadocUtils.getTokenName(getType())
                 + "[" + getLineNumber() + "x" + getColumnNumber() + "]";
     }
 
 }
