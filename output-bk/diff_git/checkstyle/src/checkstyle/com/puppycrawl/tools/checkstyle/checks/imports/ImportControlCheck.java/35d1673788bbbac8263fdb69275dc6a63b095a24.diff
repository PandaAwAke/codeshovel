diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java
index f47a68f25..12f196213 100755
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java
@@ -66,55 +66,55 @@ public class ImportControlCheck extends Check
     public void visitToken(final DetailAST aAST)
     {
         if (aAST.getType() == TokenTypes.PACKAGE_DEF) {
             final DetailAST nameAST = aAST.getLastChild().getPreviousSibling();
             final FullIdent full = FullIdent.createFullIdent(nameAST);
             if (mRoot == null) {
                 log(nameAST, "import.control.missing.file");
             }
             else {
                 mInPkg = full.getText();
                 mCurrentLeaf = mRoot.locateFinest(mInPkg);
                 if (mCurrentLeaf == null) {
                     log(nameAST, "import.control.unknown.pkg");
                 }
             }
         }
         else if (mCurrentLeaf != null) {
             final FullIdent imp;
             if (aAST.getType() == TokenTypes.IMPORT) {
                 imp = FullIdent.createFullIdentBelow(aAST);
             }
             else {
                 // know it is a static import
                 imp = FullIdent.createFullIdent((DetailAST) aAST
                         .getFirstChild().getNextSibling());
             }
             final AccessResult access = mCurrentLeaf.checkAccess(imp.getText(),
                     mInPkg);
             if (!AccessResult.ALLOWED.equals(access)) {
                 log(aAST, "import.control.disallowed", imp.getText());
             }
         }
     }
 
     /**
      * Set the parameter for the file containing the import control
      * configuration. It will cause the file to be loaded.
      * @param aName the name of the file to load.
      * @throws ConversionException on error loading the file.
      */
     public void setFile(final String aName)
     {
         // Handle empty param
         if ((aName == null) || (aName.trim().length() == 0)) {
             return;
         }
 
         try {
             mRoot = ImportControlLoader.load(aName);
         }
-        catch (CheckstyleException ex) {
+        catch (final CheckstyleException ex) {
             throw new ConversionException("Unable to load " + aName, ex);
         }
     }
 }
