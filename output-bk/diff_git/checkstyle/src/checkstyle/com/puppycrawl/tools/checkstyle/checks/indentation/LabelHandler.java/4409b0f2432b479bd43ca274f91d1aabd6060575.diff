diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
index 523c0d47a..613ca4e92 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
@@ -19,68 +19,69 @@
 package com.puppycrawl.tools.checkstyle.checks.indentation;
 
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
 import com.puppycrawl.tools.checkstyle.api.TokenTypes;
 import com.puppycrawl.tools.checkstyle.checks.IndentationCheck;
 
 /**
  * Handler for labels.
  *
  * @author jrichard
  */
 public class LabelHandler extends ExpressionHandler
 {
     /**
      * The types of expressions that are children of a label.
      */
     private final int[] mLabelChildren = new int[] {
         TokenTypes.IDENT,
     };
 
     /**
      * Construct an instance of this handler with the given indentation check,
      * abstract syntax tree, and parent handler.
      *
      * @param aIndentCheck   the indentation check
      * @param aExpr          the abstract syntax tree
      * @param aParent        the parent handler
      */
     public LabelHandler(IndentationCheck aIndentCheck,
         DetailAST aExpr, ExpressionHandler aParent)
     {
         super(aIndentCheck, "label", aExpr, aParent);
     }
 
     /**
      * Compute the indentation amount for this handler.
      *
      * @return the expected indentation amount
      */
     public int getLevelImpl()
     {
         return super.getLevelImpl()
             - getIndentCheck().getBasicOffset();
     }
 
     /**
      * Check the indentation of the label.
      */
     private void checkLabel()
     {
-        checkChildren(getMainAst(), mLabelChildren, getLevel(), true, false);
+        checkChildren(getMainAst(), mLabelChildren,
+                      new IndentLevel(getLevel()), true, false);
     }
 
     /**
      * Check the indentation of the expression we are handling.
      */
     public void checkIndentation()
     {
         checkLabel();
         // need to check children (like 'block' parents do)
         DetailAST parent = (DetailAST)
             getMainAst().getFirstChild().getNextSibling();
         checkExpressionSubtree(parent,
                                getLevel() + getIndentCheck().getBasicOffset(),
                                true,
                                false);
     }
 }
