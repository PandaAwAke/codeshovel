diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java
index a78bd2636..6befb609f 100755
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java
@@ -55,51 +55,76 @@ class Comment implements TextBlock
             mText[i] = aText[i];
         }
         mFirstLine = aLastLine - mText.length + 1;
         mLastLine = aLastLine;
         mFirstCol = aFirstCol;
         mLastCol = aLastCol;
     }
 
     /**
      * Returns line that make up the comment.
      * @return comment text.
      */
     public final String[] getText()
     {
         return (String[]) mText.clone();
     }
 
     /**
      * Returns number of fist line of the comment.
      * @return number of fist line of the comment
      */
     public final int getStartLineNo()
     {
         return mFirstLine;
     }
 
     /**
      * Returns number of last line of the comment.
      * @return number of last line of the comment
      */
     public final int getEndLineNo()
     {
         return mLastLine;
     }
 
     /**
      * @see TextBlock
      */
     public int getStartColNo()
     {
         return mFirstCol;
     }
 
     /**
      * @see TextBlock
      */
     public int getEndColNo()
     {
         return mLastCol;
     }
+
+    /**
+     * Checks if this comment intersects with a specified
+     * part of the file.
+     *
+     * @param aStartLineNo the starting line number in the file
+     * @param aStartColNo the starting column number in the file
+     * @param aEndLineNo the ending line number in the file
+     * @param aEndColNo the ending column number in the file
+     * @return true if the positions intersects with this comment.
+     **/
+    public boolean intersects(int aStartLineNo, int aStartColNo,
+                              int aEndLineNo, int aEndColNo)
+    {
+        // compute a single number for start and end
+        // to simpify conditional logic
+        final long multiplier = Integer.MAX_VALUE;
+        final long thisStart = ((long) mFirstLine) * multiplier + mFirstCol;
+        final long thisEnd = ((long) mLastLine) * multiplier + mLastCol;
+        final long inStart = ((long) aStartLineNo) * multiplier + aStartColNo;
+        final long inEnd = ((long) aEndLineNo) * multiplier + aEndColNo;
+
+        return ((thisStart < inStart) && (inStart < thisEnd))
+            || ((thisStart < inEnd) && (inEnd < thisEnd));
+    }
 }
