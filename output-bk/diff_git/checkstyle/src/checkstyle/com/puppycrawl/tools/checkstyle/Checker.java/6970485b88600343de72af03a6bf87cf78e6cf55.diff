diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java
index d9b5f41fc..0629eb971 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java
@@ -319,60 +319,62 @@ public class Checker
     }
 
     /** notify all listeners about the audit end */
     protected void fireAuditFinished()
     {
         final AuditEvent evt = new AuditEvent(this);
         final Iterator it = mListeners.iterator();
         while (it.hasNext()) {
             final AuditListener listener = (AuditListener) it.next();
             listener.auditFinished(evt);
         }
     }
 
     /**
      * notify all listeners about the beginning of a file audit
      * @param aFileName the file to be audited
      */
     protected void fireFileStarted(String aFileName)
     {
         final AuditEvent evt = new AuditEvent(this, aFileName);
         final Iterator it = mListeners.iterator();
         while (it.hasNext()) {
             final AuditListener listener = (AuditListener) it.next();
             listener.fileStarted(evt);
         }
     }
 
     /**
      * notify all listeners about the end of a file audit
      * @param aFileName the audited file
      */
     protected void fireFileFinished(String aFileName)
     {
         final AuditEvent evt = new AuditEvent(this, aFileName);
         final Iterator it = mListeners.iterator();
         while (it.hasNext()) {
             final AuditListener listener = (AuditListener) it.next();
             listener.fileFinished(evt);
         }
     }
 
     /**
      * notify all listeners about the errors in a file.
      * @param aFileName the audited file
      * @param aErrors the audit errors from the file
      */
     protected void fireErrors(String aFileName, LineText[] aErrors)
     {
         for (int i = 0; i < aErrors.length; i++) {
             final AuditEvent evt =
-                new AuditEvent(this, aFileName, aErrors[i].getLineNo(),
+                new AuditEvent(this, aFileName,
+                               aErrors[i].getLineNo(),
+                               aErrors[i].getColumnNo(),
                                aErrors[i].getText());
             final Iterator it = mListeners.iterator();
             while (it.hasNext()) {
                 final AuditListener listener = (AuditListener) it.next();
                 listener.addError(evt);
             }
         }
     }
 }
