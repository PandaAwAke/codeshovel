diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java
index 1a06c0a89..ed3273cba 100755
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java
@@ -50,59 +50,59 @@ class Comment implements TextBlock
     public Comment(final String[] aText, final int aFirstCol,
             final int aLastLine, final int aLastCol)
     {
         mText = new String[aText.length];
         for (int i = 0; i < mText.length; i++) {
             mText[i] = aText[i];
         }
         mFirstLine = aLastLine - mText.length + 1;
         mLastLine = aLastLine;
         mFirstCol = aFirstCol;
         mLastCol = aLastCol;
     }
 
     /** {@inheritDoc} */
     public final String[] getText()
     {
         return (String[]) mText.clone();
     }
 
     /** {@inheritDoc} */
     public final int getStartLineNo()
     {
         return mFirstLine;
     }
 
     /** {@inheritDoc} */
     public final int getEndLineNo()
     {
         return mLastLine;
     }
 
     /** {@inheritDoc} */
     public int getStartColNo()
     {
         return mFirstCol;
     }
 
     /** {@inheritDoc} */
     public int getEndColNo()
     {
         return mLastCol;
     }
 
     /** {@inheritDoc} */
     public boolean intersects(int aStartLineNo, int aStartColNo,
                               int aEndLineNo, int aEndColNo)
     {
         // compute a single number for start and end
         // to simpify conditional logic
         final long multiplier = Integer.MAX_VALUE;
-        final long thisStart = ((long) mFirstLine) * multiplier + mFirstCol;
-        final long thisEnd = ((long) mLastLine) * multiplier + mLastCol;
-        final long inStart = ((long) aStartLineNo) * multiplier + aStartColNo;
-        final long inEnd = ((long) aEndLineNo) * multiplier + aEndColNo;
+        final long thisStart = mFirstLine * multiplier + mFirstCol;
+        final long thisEnd = mLastLine * multiplier + mLastCol;
+        final long inStart = aStartLineNo * multiplier + aStartColNo;
+        final long inEnd = aEndLineNo * multiplier + aEndColNo;
 
         return ((thisStart < inStart) && (inStart < thisEnd))
             || ((thisStart < inEnd) && (inEnd < thisEnd));
     }
 }
