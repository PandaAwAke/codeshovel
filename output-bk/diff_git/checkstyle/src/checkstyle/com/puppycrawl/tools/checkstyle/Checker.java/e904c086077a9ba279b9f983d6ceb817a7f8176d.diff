diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java
index 34a515b83..30e01bc5f 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java
@@ -321,51 +321,63 @@ public class Checker extends AutomaticBean
      * @param aFileName the audited file
      * @param aErrors the audit errors from the file
      */
     public void fireErrors(String aFileName, LocalizedMessage[] aErrors)
     {
         final String stripped = getStrippedFileName(aFileName);
         for (int i = 0; i < aErrors.length; i++) {
             final AuditEvent evt = new AuditEvent(this, stripped, aErrors[i]);
             final Iterator it = mListeners.iterator();
             while (it.hasNext()) {
                 final AuditListener listener = (AuditListener) it.next();
                 listener.addError(evt);
             }
         }
     }
 
     /**
      * Sets the factory for creating submodules.
      *
      * @param aModuleFactory the factory for creating FileSetChecks
      */
     public void setModuleFactory(ModuleFactory aModuleFactory)
     {
         mModuleFactory = aModuleFactory;
     }
 
     /** @param aLocaleCountry the country to report messages  **/
     public void setLocaleCountry(String aLocaleCountry)
     {
         mLocaleCountry = aLocaleCountry;
     }
 
     /** @param aLocaleLanguage the language to report messages  **/
     public void setLocaleLanguage(String aLocaleLanguage)
     {
         mLocaleLanguage = aLocaleLanguage;
     }
 
     /**
      * Sets the severity level.  The string should be one of the names
      * defined in the <code>SeverityLevel</code> class.
      *
      * @param aSeverity  The new severity level
      * @see SeverityLevel
      */
     public final void setSeverity(String aSeverity)
     {
         mSeverityLevel = SeverityLevel.getInstance(aSeverity);
     }
 
+    /**
+     * Sets the classloader that is used to contextualize filesetchecks.
+     * Some Check implementations will use that classloader to improve the
+     * quality of their reports, e.g. to load a class and then analyze it via
+     * reflection.
+     * @param aLoader the new classloader
+     */
+    public final void setClassLoader(ClassLoader aLoader)
+    {
+        mLoader = aLoader;
+    }
+
 }
