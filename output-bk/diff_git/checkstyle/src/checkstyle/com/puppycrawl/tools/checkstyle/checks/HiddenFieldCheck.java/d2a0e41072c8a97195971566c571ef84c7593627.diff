diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java
index ebfc1a17d..671853554 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java
@@ -60,68 +60,70 @@ public class HiddenFieldCheck
             TokenTypes.VARIABLE_DEF,
             TokenTypes.PARAMETER_DEF,
             TokenTypes.CLASS_DEF,
         };
     }
     
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public void beginTree()
     {
         mFieldsStack = new LinkedList();
     }
 
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public void visitToken(DetailAST aAST)
     {
         switch (aAST.getType()) {
             case TokenTypes.VARIABLE_DEF:               
                 processVariable(aAST);
                 break;
             case TokenTypes.PARAMETER_DEF:
                 if (mCheckParameters) {               
                     processVariable(aAST);
                 }
                 break;
             case TokenTypes.CLASS_DEF:
                 //push
                 mFieldsStack.addLast(new HashSet());
                 break;
             default:
                 break;
         }
     }
 
     /** @see com.puppycrawl.tools.checkstyle.api.Check */    
     public void leaveToken(DetailAST aAST)
     {
         if (aAST.getType() == TokenTypes.CLASS_DEF) {
             //pop
             mFieldsStack.removeLast();         
         }
     }
 
     /**
      * Process a variable token.
      * Check whether a local variable or parameter shadows a field.
      * Store a field for later comparison with local variables and parameters.
      * @param aAST the variable token.
      */
     private void processVariable(DetailAST aAST)
     {
-        if (ScopeUtils.inCodeBlock(aAST)) {
-            //local variable or parameter. Does it shadow a field?
-            final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);
-            final String name = nameAST.getText();
-            final HashSet currentFieldsSet = (HashSet)mFieldsStack.getLast();
-            if (currentFieldsSet.contains(name)) {
-                log(nameAST.getLineNo(), nameAST.getColumnNo(),
-                    "hidden.field", name);
+        if (!ScopeUtils.inInterfaceBlock(aAST)) {
+            if (ScopeUtils.inCodeBlock(aAST)) {
+                //local variable or parameter. Does it shadow a field?
+                final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);
+                final String name = nameAST.getText();
+                final HashSet currentFieldsSet = (HashSet)mFieldsStack.getLast();
+                if (currentFieldsSet.contains(name)) {
+                    log(nameAST.getLineNo(), nameAST.getColumnNo(),
+                        "hidden.field", name);
+                }
+            }
+            else {
+                //field. Add its name to the top stack element
+                final String name
+                    = aAST.findFirstToken(TokenTypes.IDENT).getText();
+                ((HashSet)mFieldsStack.getLast()).add(name);
             }
-        }
-        else if (!ScopeUtils.inInterfaceBlock(aAST)){
-            //field. Add its name to the top stack element
-            final String name
-                = aAST.findFirstToken(TokenTypes.IDENT).getText();
-            ((HashSet)mFieldsStack.getLast()).add(name);
         }
     }
  }
