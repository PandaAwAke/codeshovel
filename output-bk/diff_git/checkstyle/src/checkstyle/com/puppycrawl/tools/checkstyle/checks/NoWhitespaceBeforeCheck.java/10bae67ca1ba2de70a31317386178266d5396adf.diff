diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NoWhitespaceBeforeCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NoWhitespaceBeforeCheck.java
index fcc946699..7fa382013 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NoWhitespaceBeforeCheck.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NoWhitespaceBeforeCheck.java
@@ -17,76 +17,75 @@
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 
 package com.puppycrawl.tools.checkstyle.checks;
 
 import com.puppycrawl.tools.checkstyle.api.Check;
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
 import com.puppycrawl.tools.checkstyle.api.TokenTypes;
 
 /**
  * Checks that there is no whitespace after a token.
  * More specifically, it checks that it is not preceeded with whitespace,
  * or (if linebreaks are allowed) all characters on the line before are
  * whitespace.
  *
  * @author Rick Giles
  * @author lkuehne
  * @version 1.0
  */
 public class NoWhitespaceBeforeCheck
     extends Check
 {
     /** Whether whitespace is allowed if the AST is at a linebreak */
     private boolean mAllowLineBreaks = false;
 
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public int[] getDefaultTokens()
     {
         return new int[] {
             TokenTypes.POST_INC,
             TokenTypes.POST_DEC,
         };
     }
     
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public int[] getAcceptableTokens()
     {
         return new int[] {
             TokenTypes.POST_INC,
             TokenTypes.POST_DEC,
             TokenTypes.DOT,
         };
     }
 
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public void visitToken(DetailAST aAST)
     {
                final String[] lines = getLines();
         final String line = lines[aAST.getLineNo() - 1];
         final int before = aAST.getColumnNo() - 1;
-        final int after = aAST.getColumnNo() + aAST.getText().length();
 
         if ((before < 0) || Character.isWhitespace(line.charAt(before))) {
             boolean flag = !mAllowLineBreaks;
             // verify all characters before '.' are whitespace
             for (int i = 0; !flag && i < before; i++) {
                 if (!Character.isWhitespace(line.charAt(i))) {
                     flag = true;
                 }
             }
             if (flag) {
                 log(aAST.getLineNo(), before, "ws.preceeded", aAST.getText());
             }
         }
     }
 
     /**
      * Control whether whitespace is flagged at linebreaks.
      * @param aAllowLineBreaks whether whitespace should be
      * flagged at linebreaks.
      */
     public void setAllowLineBreaks(boolean aAllowLineBreaks)
     {
         mAllowLineBreaks = aAllowLineBreaks;
     }
 }
