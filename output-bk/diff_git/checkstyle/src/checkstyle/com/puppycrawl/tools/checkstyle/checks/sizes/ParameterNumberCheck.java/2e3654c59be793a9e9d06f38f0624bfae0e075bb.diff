diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java
index 49d600b5b..39c1e2188 100755
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java
@@ -31,54 +31,54 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;
  * </p>
  * <p>
  * An example of how to configure the check is:
  * </p>
  * <pre>
  * &lt;module name="ParameterNumber"/&gt;
  * </pre>
  * <p>
  * An example of how to configure the check to allow 10 parameters is:
  * </p>
  * <pre>
  * &lt;module name="ParameterNumber"&gt;
  *    &lt;property name="max" value="10"/&gt;
  * &lt;/module&gt;
  * </pre>
 
  * @author Oliver Burn
  * @version 1.0
  */
 public class ParameterNumberCheck
     extends Check
 {
     /** default maximum number of allowed parameters */
     private static final int DEFAULT_MAX_PARAMETERS = 7;
 
     /** the maximum number of allowed parameters */
     private int mMax = DEFAULT_MAX_PARAMETERS;
 
     /**
      * Sets the maximum number of allowed parameters.
      * @param aMax the max allowed parameters
      */
     public void setMax(int aMax)
     {
         mMax = aMax;
     }
 
     @Override
     public int[] getDefaultTokens()
     {
         return new int[] {TokenTypes.METHOD_DEF, TokenTypes.CTOR_DEF};
     }
 
     @Override
     public void visitToken(DetailAST aAST)
     {
         final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);
         final int count = params.getChildCount(TokenTypes.PARAMETER_DEF);
         if (count > mMax) {
             final DetailAST name = aAST.findFirstToken(TokenTypes.IDENT);
-            log(name.getLineNo(), name.getColumnNo(), "maxParam", mMax);
+            log(name.getLineNo(), name.getColumnNo(), "maxParam", mMax, count);
         }
     }
 }
