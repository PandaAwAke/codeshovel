diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
index 29e94ef31..cb5e6c223 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
@@ -27,58 +27,59 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;
  * @author jrichard
  */
 public class LabelHandler extends ExpressionHandler
 {
     /**
      * The types of expressions that are children of a label.
      */
     private final int[] mLabelChildren = new int[] {
         TokenTypes.IDENT,
     };
 
     /**
      * Construct an instance of this handler with the given indentation check,
      * abstract syntax tree, and parent handler.
      *
      * @param aIndentCheck   the indentation check
      * @param aExpr          the abstract syntax tree
      * @param aParent        the parent handler
      */
     public LabelHandler(IndentationCheck aIndentCheck,
         DetailAST aExpr, ExpressionHandler aParent)
     {
         super(aIndentCheck, "label", aExpr, aParent);
     }
 
     /**
      * Compute the indentation amount for this handler.
      *
      * @return the expected indentation amount
      */
     protected IndentLevel getLevelImpl()
     {
         return new IndentLevel(super.getLevelImpl(), -getBasicOffset());
     }
 
     /**
      * Check the indentation of the label.
      */
     private void checkLabel()
     {
         checkChildren(getMainAst(), mLabelChildren, getLevel(), true, false);
     }
 
     /**
      * Check the indentation of the expression we are handling.
      */
     public void checkIndentation()
     {
         checkLabel();
         // need to check children (like 'block' parents do)
-        DetailAST parent = (DetailAST)
+        final DetailAST parent = (DetailAST)
             getMainAst().getFirstChild().getNextSibling();
 
-        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());
+        final IndentLevel expected =
+            new IndentLevel(getLevel(), getBasicOffset());
 
         checkExpressionSubtree(parent, expected, true, false);
     }
 }
