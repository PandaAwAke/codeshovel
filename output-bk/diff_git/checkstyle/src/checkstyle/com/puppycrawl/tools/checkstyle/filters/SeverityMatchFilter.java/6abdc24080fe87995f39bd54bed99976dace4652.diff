diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java
index 465860964..d2cb4203e 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java
@@ -17,57 +17,57 @@
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 package com.puppycrawl.tools.checkstyle.filters;
 
 import com.puppycrawl.tools.checkstyle.api.AuditEvent;
 import com.puppycrawl.tools.checkstyle.api.AutomaticBean;
 import com.puppycrawl.tools.checkstyle.api.Filter;
 import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
 
 /**
  * This is a very simple filter based on severity matching.
  * The filter admits option severity and accepts an AuditEvent
  * if its severity equals the filter's severity.
  * @author Rick Giles
  */
 public class SeverityMatchFilter
     extends AutomaticBean
     implements Filter
 {
     /** the severity level to accept */
     private SeverityLevel mSeverityLevel = SeverityLevel.ERROR;
 
     /** whether to accept or reject on severity matches */
     private boolean mAcceptOnMatch = true;
 
     /**
      * Sets the severity level.  The string should be one of the names
      * defined in the <code>SeverityLevel</code> class.
      *
      * @param aSeverity  The new severity level
      * @see SeverityLevel
      */
     public final void setSeverity(String aSeverity)
     {
         mSeverityLevel = SeverityLevel.getInstance(aSeverity);
     }
 
     /**
      * Sets whether to accept or reject on matching severity level.
      * @param aAcceptOnMatch if true, accept on matches; if
      * false, reject on matches.
      */
     public final void setAcceptOnMatch(boolean aAcceptOnMatch)
     {
         mAcceptOnMatch = aAcceptOnMatch;
     }
 
     /** {@inheritDoc} */
     public boolean accept(AuditEvent aEvent)
     {
-        boolean result = mSeverityLevel.equals(aEvent.getSeverityLevel());
+        final boolean result = mSeverityLevel.equals(aEvent.getSeverityLevel());
         if (mAcceptOnMatch) {
             return result;
         }
         return !result;
     }
 }
