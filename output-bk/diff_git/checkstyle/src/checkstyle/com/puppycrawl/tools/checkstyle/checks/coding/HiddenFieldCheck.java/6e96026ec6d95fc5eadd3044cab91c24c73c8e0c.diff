diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java
index 1512014aa..2f645e704 100755
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java
@@ -394,81 +394,81 @@ public class HiddenFieldCheck
 
         /** set of static field names */
         private final Set<String> mStaticFields = Sets.newHashSet();
 
         /** Creates new frame.
          * @param aStaticType is this a static inner type (class or enum).
          * @param aParent parent frame.
          */
         public FieldFrame(FieldFrame aParent, boolean aStaticType)
         {
             mParent = aParent;
             mStaticType = aStaticType;
         }
 
         /** Is this frame for static inner type.
          * @return is this field frame for static inner type.
          */
         boolean isStaticType()
         {
             return mStaticType;
         }
 
         /**
          * Adds an instance field to this FieldFrame.
          * @param aField  the name of the instance field.
          */
         public void addInstanceField(String aField)
         {
             mInstanceFields.add(aField);
         }
 
         /**
          * Adds a static field to this FieldFrame.
          * @param aField  the name of the instance field.
          */
         public void addStaticField(String aField)
         {
             mStaticFields.add(aField);
         }
 
         /**
          * Determines whether this FieldFrame contains an instance field.
          * @param aField the field to check.
          * @return true if this FieldFrame contains instance field aField.
          */
         public boolean containsInstanceField(String aField)
         {
             if (mInstanceFields.contains(aField)) {
                 return true;
             }
-            if (mStaticType) {
+            if (isStaticType()) {
                 return false;
             }
 
             return (mParent != null) && mParent.containsInstanceField(aField);
         }
 
         /**
          * Determines whether this FieldFrame contains a static field.
          * @param aField the field to check.
          * @return true if this FieldFrame contains static field aField.
          */
         public boolean containsStaticField(String aField)
         {
             if (mStaticFields.contains(aField)) {
                 return true;
             }
 
             return (mParent != null) && mParent.containsStaticField(aField);
         }
 
         /**
          * Getter for parent frame.
          * @return parent frame.
          */
         public FieldFrame getParent()
         {
             return mParent;
         }
     }
 }
