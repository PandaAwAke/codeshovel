diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java
index 662f29cb6..04c64bd49 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java
@@ -19,75 +19,76 @@
 package com.puppycrawl.tools.checkstyle.checks.indentation;
 
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
 import com.puppycrawl.tools.checkstyle.api.TokenTypes;
 import com.puppycrawl.tools.checkstyle.checks.IndentationCheck;
 
 /**
  * Handler for case statements.
  *
  * @author jrichard
  */
 public class CaseHandler extends ExpressionHandler
 {
     /**
      * The child elements of a case expression.
      */
     private final int[] mCaseChildren = new int[] {
         TokenTypes.LITERAL_CASE,
         TokenTypes.LITERAL_DEFAULT,
     };
 
     /**
      * Construct an instance of this handler with the given indentation check,
      * abstract syntax tree, and parent handler.
      *
      * @param aIndentCheck   the indentation check
      * @param aExpr          the abstract syntax tree
      * @param aParent        the parent handler
      */
     public CaseHandler(IndentationCheck aIndentCheck,
         DetailAST aExpr, ExpressionHandler aParent)
     {
         super(aIndentCheck, "case", aExpr, aParent);
     }
 
     /**
      * Compute the indentation amount for this handler.
      *
      * @return the expected indentation amount
      */
     public int getLevelImpl()
     {
         return getParent().getLevel() + getIndentCheck().getCaseIndent();
     }
 
     /**
      * Check the indentation of the case statement.
      */
     private void checkCase()
     {
-        checkChildren(getMainAst(), mCaseChildren, getLevel(), true, false);
+        checkChildren(getMainAst(), mCaseChildren, new IndentLevel(getLevel()),
+                      true, false);
     }
 
     /**
      * Indentation level suggested for a child element. Children don't have
      * to respect this, but most do.
      *
      * @param aChild  child AST (so suggestion level can differ based on child
      *                  type)
      *
      * @return suggested indentation for child
      */
     public int suggestedChildLevel(ExpressionHandler aChild)
     {
         return getLevel();
     }
 
     /**
      * Check the indentation of the expression we are handling.
      */
     public void checkIndentation()
     {
         checkCase();
     }
 }
