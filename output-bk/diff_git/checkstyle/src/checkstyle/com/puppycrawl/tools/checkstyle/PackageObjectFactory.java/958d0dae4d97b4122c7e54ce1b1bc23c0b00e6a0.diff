diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java
index 223f985db..3eca17d9e 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java
@@ -55,68 +55,82 @@ public class PackageObjectFactory
         try {
             return createObject(aLoader, aName);
         }
         catch (CheckstyleException ex) {
             ; // keep looking
         }
 
         //now try packages
         for (int i = 0; i < aPackages.length; i++) {
             final String className = aPackages[i] + aName;
             try {
                 return createObject(aLoader, className);
             }
             catch (CheckstyleException ex) {
                 ; // keep looking
             }
         }
 
         throw new CheckstyleException("Unable to instantiate " + aName);
     }
 
     /**
      * Creates a new instance of a named class.
      * @param aLoader the <code>ClassLoader</code> to create the instance with.
      * @param aClassName the name of the class to instantiate.
      * @return the <code>Object</code> created by aLoader.
      * @throws CheckstyleException if an error occurs.
      */
     private Object createObject(ClassLoader aLoader, String aClassName)
         throws CheckstyleException
     {
         try {
             final Class clazz = Class.forName(aClassName, true, aLoader);
             return clazz.newInstance();
         }
         catch (ClassNotFoundException e) {
             throw new CheckstyleException(
                 "Unable to find class for " + aClassName);
         }
         catch (InstantiationException e) {
             throw new CheckstyleException(
                 "Unable to instantiate " + aClassName);
         }
         catch (IllegalAccessException e) {
             throw new CheckstyleException(
                 "Unable to instantiate " + aClassName);
         }
     }
 
     /**
-     * Creates a new instance of a class from a given name. If the name is
+     * Creates a new instance of a class from a given name, or that name
+     * concatenated with &quot;Check&quot;. If the name is
      * a classname, creates an instance of the named class. Otherwise, creates
-     * an instance of a classname obtained by concatenating the given
+     * an instance of a classname obtained by concatenating the given name
      * to a package name from a given list of package names.
      * @param aPackages list of package names.
      * @param aLoader the <code>ClassLoader</code> to create the instance with.
      * @param aName the name of a class.
      * @return the <code>Object</code> created by aLoader.
      * @throws CheckstyleException if an error occurs.
      */
     public static Object makeObject(String[] aPackages, ClassLoader aLoader,
         String aName)
         throws CheckstyleException
     {
         final PackageObjectFactory factory = new PackageObjectFactory();
-        return factory.doMakeObject(aPackages, aLoader, aName);
+        try {
+            return factory.doMakeObject(aPackages, aLoader, aName);
+        }
+        catch (CheckstyleException ex) {
+            //try again with suffix "Check"
+            try {
+                return factory.
+                    doMakeObject(aPackages, aLoader, aName + "Check");
+            }
+            catch (CheckstyleException ex2) {
+                throw new CheckstyleException(
+                    "Unable to instantiate " + aName);
+            }
+        }
     }
 }
