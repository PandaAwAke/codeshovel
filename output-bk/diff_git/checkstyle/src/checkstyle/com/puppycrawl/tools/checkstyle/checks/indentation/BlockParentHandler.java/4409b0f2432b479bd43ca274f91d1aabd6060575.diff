diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java
index a92262cec..3f6b8a6fb 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java
@@ -298,55 +298,55 @@ public class BlockParentHandler extends ExpressionHandler
 
     /**
      * Check the indentation of the left parenthesis.
      */
     protected void checkLParen()
     {
         // the rcurly can either be at the correct indentation, or on the
         // same line as the lcurly
         DetailAST lparen = getLParen();
         if (lparen == null
             || expandedTabsColumnNo(lparen) == getLevel()
             || !startsLine(lparen))
         {
             return;
         }
         logError(lparen, "lparen", expandedTabsColumnNo(lparen));
     }
 
     /**
      * Check the indentation of the expression we are handling.
      */
     public void checkIndentation()
     {
         checkToplevelToken();
         // seperate to allow for eventual configuration
         checkLParen();
         checkRParen();
         if (hasCurlys()) {
             checkLCurly();
             checkRCurly();
         }
         DetailAST listChild = getListChild();
         if (listChild != null) {
             // NOTE: switch statements usually don't have curlys
             if (!hasCurlys() || !areOnSameLine(getLCurly(), getRCurly())) {
                 checkChildren(listChild,
                               CHECKED_CHILDREN,
                               getChildrenExpectedLevel(),
                               true,
                               childrenMayNest());
             }
         }
         else {
             checkNonlistChild();
         }
     }
 
     /**
      * @return indentation level expected for children
      */
-    protected int getChildrenExpectedLevel()
+    protected IndentLevel getChildrenExpectedLevel()
     {
-        return getLevel() + getIndentCheck().getBasicOffset();
+        return new IndentLevel(getLevel() + getIndentCheck().getBasicOffset());
     }
 }
