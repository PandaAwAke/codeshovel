diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java
index d71fbb006..e3275e7b0 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java
@@ -28,105 +28,113 @@ import com.puppycrawl.tools.checkstyle.api.DetailAST;
  * @author <a href="mailto:checkstyle@puppycrawl.com">Oliver Burn</a>
  * @version 1.0
  */
 public class WhitespaceAroundCheck
     extends Check
 {
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public int[] getDefaultTokens()
     {
         return new int[] {
             TokenTypes.ASSIGN,
             TokenTypes.BAND,
             TokenTypes.BAND_ASSIGN,
             TokenTypes.BOR,
             TokenTypes.BOR_ASSIGN,
             TokenTypes.BSR,
             TokenTypes.BSR_ASSIGN,
             TokenTypes.BXOR,
             TokenTypes.BXOR_ASSIGN,
             TokenTypes.COLON, // TODO: dont flag after "case"
             TokenTypes.DIV,
             TokenTypes.DIV_ASSIGN,
             TokenTypes.EQUAL,
             TokenTypes.GE,
             TokenTypes.GT,
             TokenTypes.LAND,
             TokenTypes.LCURLY,
             TokenTypes.LE,
             TokenTypes.LITERAL_CATCH,
             TokenTypes.LITERAL_DO,
             TokenTypes.LITERAL_ELSE,
             TokenTypes.LITERAL_FINALLY,
             TokenTypes.LITERAL_FOR,
             TokenTypes.LITERAL_IF,
             TokenTypes.LITERAL_RETURN,
             TokenTypes.LITERAL_SYNCHRONIZED,
             TokenTypes.LITERAL_TRY,
             TokenTypes.LITERAL_WHILE,
             TokenTypes.LOR,
             TokenTypes.LT,
             TokenTypes.MINUS,
             TokenTypes.MINUS_ASSIGN,
             TokenTypes.MOD,
             TokenTypes.MOD_ASSIGN,
             TokenTypes.NOT_EQUAL,
             TokenTypes.PLUS,
             TokenTypes.PLUS_ASSIGN,
             TokenTypes.QUESTION,
             TokenTypes.RCURLY,
             TokenTypes.SL,
+            TokenTypes.SLIST,
             TokenTypes.SL_ASSIGN,
             TokenTypes.SR,
             TokenTypes.SR_ASSIGN,
             TokenTypes.STAR,
             TokenTypes.STAR_ASSIGN,
             TokenTypes.ASSERT     // TODO: why is it not LITERAL_assert?
                                   // maybe it's a bug in the grammar?
         };
     }
 
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public void visitToken(DetailAST aAST)
     {
         // Check for RCURLY in array initializer
         if ((aAST.getType() == TokenTypes.RCURLY)
             && (aAST.getParent().getType() == TokenTypes.ARRAY_INIT))
         {
             return;
         }
 
         // Check for import pkg.name.*;
         if ((aAST.getType() == TokenTypes.STAR)
             && (aAST.getParent().getType() == TokenTypes.DOT))
         {
             return;
         }
 
+        // Check for an SLIST that has a parent CASE_GROUP. It is not a '{'.
+        if ((aAST.getType() == TokenTypes.SLIST)
+            && (aAST.getParent().getType() == TokenTypes.CASE_GROUP))
+        {
+            return;
+        }
+        
         final String[] lines = getLines();
         final String line = lines[aAST.getLineNo() - 1];
         final int before = aAST.getColumnNo() - 1;
         final int after = aAST.getColumnNo() + aAST.getText().length();
 
         if ((before >= 0) && !Character.isWhitespace(line.charAt(before))) {
             log(aAST.getLineNo(), aAST.getColumnNo(),
                     "ws.notPreceeded", new Object[]{aAST.getText()});
         }
 
         if ((after < line.length())
             && !Character.isWhitespace(
                 line.charAt(after)) // Check for "return;"
             && !((aAST.getType() == TokenTypes.LITERAL_RETURN)
                 && (aAST.getFirstChild().getType() == TokenTypes.SEMI))
             // Check for "})" or "};". Happens with anon-inners
             && !((aAST.getType() == TokenTypes.RCURLY)
                 && ((line.charAt(after) == ')')
                     || (line.charAt(after) == ';'))))
         {
             log(
                 aAST.getLineNo(),
                 aAST.getColumnNo() + aAST.getText().length(),
                 "ws.notFollowed",
                 new Object[] {aAST.getText()});
         }
     }
 }
