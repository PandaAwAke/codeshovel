diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EmptyBlockCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EmptyBlockCheck.java
index 31f5a8d9e..bec8e8c3f 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EmptyBlockCheck.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EmptyBlockCheck.java
@@ -16,61 +16,62 @@
 // License along with this library; if not, write to the Free Software
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 
 package com.puppycrawl.tools.checkstyle.checks;
 
 import java.util.Set;
 import java.util.HashSet;
 
 import com.puppycrawl.tools.checkstyle.api.Check;
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
 import com.puppycrawl.tools.checkstyle.JavaTokenTypes;
 
 /**
  * Check that reports empty if/try/catch/finally blocks.
  *
  * @author Lars Kï¿½hne
  */
 public class EmptyBlockCheck extends Check
 {
     private final Set mCheckFor = new HashSet();
 
     public EmptyBlockCheck()
     {
         mCheckFor.add("if");
         mCheckFor.add("try");
         mCheckFor.add("catch");
         mCheckFor.add("finally");
         // TODO: currently there is no way to differenciate between if and
         // else is not available as a parent token, instead if has two
         // statement children needs grammar change or workaround here to make
         // config simple
     }
 
     // TODO: overwrite mCheckFor based on user settings in config file
 
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public int[] getDefaultTokens()
     {
         return new int[] {JavaTokenTypes.SLIST};
     }
 
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public void visitToken(DetailAST aAST)
     {
         // defend against users that change the token set in the config file.
         if (aAST.getType() != JavaTokenTypes.SLIST) {
             return;
         }
 
+        // TODO: port BlockOption.TEXT
         if (aAST.getChildCount() == 0) {
             DetailAST parent = aAST.getParent();
             String parentText = parent.getText();
             if (mCheckFor.contains(parentText)) {
                 // TODO: i18n
                 log(aAST.getLineNo(), "empty " + parentText + " block");
             }
         }
 
     }
 }
