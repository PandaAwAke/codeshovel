diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/LocalFinalVariableNameCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/LocalFinalVariableNameCheck.java
index 6c41fd137..442def3fa 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/LocalFinalVariableNameCheck.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/LocalFinalVariableNameCheck.java
@@ -1,56 +1,56 @@
 ////////////////////////////////////////////////////////////////////////////////
 // checkstyle: Checks Java source code for adherence to a set of rules.
 // Copyright (C) 2001-2002  Oliver Burn
 //
 // This library is free software; you can redistribute it and/or
 // modify it under the terms of the GNU Lesser General Public
 // License as published by the Free Software Foundation; either
 // version 2.1 of the License, or (at your option) any later version.
 //
 // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // Lesser General Public License for more details.
 //
 // You should have received a copy of the GNU Lesser General Public
 // License along with this library; if not, write to the Free Software
 // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ////////////////////////////////////////////////////////////////////////////////
 package com.puppycrawl.tools.checkstyle.checks;
 
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
 import com.puppycrawl.tools.checkstyle.api.ScopeUtils;
 import com.puppycrawl.tools.checkstyle.api.TokenTypes;
 
 /**
  * Checks that local, final variable names conform to a specified format.
  *
  * @author Rick Giles
  * @version 1.0
  */
 public class LocalFinalVariableNameCheck
     extends AbstractNameCheck
 {
     /** Creates a new <code>LocalFinalVariableNameCheck</code> instance. */
     public LocalFinalVariableNameCheck()
     {
         super("^[a-z][a-zA-Z0-9]*$");
     }
 
     /** @see com.puppycrawl.tools.checkstyle.api.Check */
     public int[] getDefaultTokens()
     {
         return new int[] {TokenTypes.VARIABLE_DEF};
     }
 
     /** @see com.puppycrawl.tools.checkstyle.check.AbstractNameCheck */
     protected final boolean mustCheckName(DetailAST aAST)
     {
         final DetailAST modifiersAST
             = aAST.findFirstToken(TokenTypes.MODIFIERS);
-        final boolean isFinal = modifiersAST != null
+        final boolean isFinal = (modifiersAST != null)
             && modifiersAST.branchContains(TokenTypes.FINAL);
 
         return (isFinal && ScopeUtils.inCodeBlock(aAST));
     }
 }
