diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java
index 132949289..56830f82e 100644
--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java
+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java
@@ -210,51 +210,61 @@ public class MethodCallHandler extends ExpressionHandler
                 if (getParent() instanceof MethodCallHandler) {
                     return ((MethodCallHandler) getParent())
                         .findContainingMethodCall(this);
                 }
                 else {
                     return null;
                 }
             }
             else if (climber == secondChild) {
                 // part of method arguments, this the method the child
                 // is contained in
                 return this;
             }
             climber = climber.getParent();
         }
         return null;
     }
 
     /**
      * Check the indentation of the expression we are handling.
      */
     public void checkIndentation()
     {
         DetailAST methodName = (DetailAST) getMainAst().getFirstChild();
         checkExpressionSubtree(methodName, getLevel(), false, false);
 
         checkLParen();
         DetailAST rparen = getMainAst().findFirstToken(TokenTypes.RPAREN);
         DetailAST lparen = getMainAst();
 
         if (rparen.getLineNo() != lparen.getLineNo()) {
 
             // if this method name is on the same line as a containing
             // method, don't indent, this allows expressions like:
             //    method("my str" + method2(
             //        "my str2"));
             // as well as
             //    method("my str" +
             //        method2(
             //            "my str2"));
             //
 
             checkExpressionSubtree(
                 getMainAst().findFirstToken(TokenTypes.ELIST),
                 getLevel() + getIndentCheck().getBasicOffset(),
                 false, true);
 
             checkRParen();
         }
     }
+
+    /**
+     * @return true if indentation should be increased after
+     *              fisrt line in checkLinesIndent()
+     *         false otherwise
+     */
+    protected boolean shouldIncraeseIndent()
+    {
+        return false;
+    }
 }
