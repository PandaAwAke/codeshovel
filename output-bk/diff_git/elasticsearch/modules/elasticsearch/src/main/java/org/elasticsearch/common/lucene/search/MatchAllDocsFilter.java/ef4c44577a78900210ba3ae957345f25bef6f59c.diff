diff --git a/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/search/MatchAllDocsFilter.java b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/search/MatchAllDocsFilter.java
index 263d16ea966..7ab401c78b2 100644
--- a/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/search/MatchAllDocsFilter.java
+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/search/MatchAllDocsFilter.java
@@ -8,51 +8,55 @@
  * with the License.  You may obtain a copy of the License at
  *
  *    http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing,
  * software distributed under the License is distributed on an
  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  * KIND, either express or implied.  See the License for the
  * specific language governing permissions and limitations
  * under the License.
  */
 
 package org.elasticsearch.common.lucene.search;
 
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.search.DocIdSet;
 import org.apache.lucene.search.Filter;
 import org.elasticsearch.common.lucene.docset.AllDocSet;
 
 import java.io.IOException;
 
 /**
  * A filter that matches on all docs.
  *
  * @author kimchy (shay.banon)
  */
 public class MatchAllDocsFilter extends Filter {
 
     @Override public DocIdSet getDocIdSet(IndexReader reader) throws IOException {
         return new AllDocSet(reader.maxDoc());
     }
 
     @Override public int hashCode() {
         return this.getClass().hashCode();
     }
 
     @Override public boolean equals(Object obj) {
         if (this == obj)
             return true;
 
         if (obj == null) {
             return false;
         }
 
         if (obj.getClass() == this.getClass()) {
             return true;
         }
 
         return false;
     }
+
+    @Override public String toString() {
+        return "*:*";
+    }
 }
